/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";
import * as coreRestPipeline from "@azure/core-rest-pipeline";

export type Components8Iu7RuSchemasApplecredentialsmultifactorsecretrequestAllof0Union =
  | Components8Iu7RuSchemasApplecredentialsmultifactorsecretrequestAllof0
  | Components3Sb7Y4SchemasApplecredentialsmultifactorsecretrequestAllof0Union;
export type Components5A5L2ESchemasApplecredentialssecretrequestAllof0Union =
  | Components5A5L2ESchemasApplecredentialssecretrequestAllof0
  | Components5Dyv8CSchemasApplecredentialssecretrequestAllof0Union;
export type Components13S9A4RSchemasApplecertificatesecretrequestAllof0Union =
  | Components13S9A4RSchemasApplecertificatesecretrequestAllof0
  | ComponentsKnowtpSchemasApplecertificatesecretrequestAllof0Union;
export type ComponentsS0Rbt7SchemasPrivateapplecredentialssecretresponseAllof0Union =
  | ComponentsS0Rbt7SchemasPrivateapplecredentialssecretresponseAllof0
  | ComponentsEay2HoSchemasPrivateapplecredentialssecretresponseAllof0Union;
export type ComponentsHw7AncSchemasPrivateapplecertificatesecretresponseAllof0Union =
  | ComponentsHw7AncSchemasPrivateapplecertificatesecretresponseAllof0
  | ComponentsZqm0VqSchemasPrivateapplecertificatesecretresponseAllof0Union;
export type Components1Yflo3CSchemasAppleconnectionsecretresponseAllof0Union =
  | Components1Yflo3CSchemasAppleconnectionsecretresponseAllof0
  | AppleConnectionSecretResponse;
export type Components8D2JkjSchemasApplecredentialnonsecretdetailsresponseAllof0Union =
  | Components8D2JkjSchemasApplecredentialnonsecretdetailsresponseAllof0
  | Components1BxvcioSchemasApplecredentialnonsecretdetailsresponseAllof0Union;
export type ComponentsUk3N19SchemasApplecertificatenonsecretdetailsresponseAllof0Union =
  | ComponentsUk3N19SchemasApplecertificatenonsecretdetailsresponseAllof0
  | Components18Y2Ef6SchemasApplecertificatenonsecretdetailsresponseAllof0Union;
export type Components1Hfba82SchemasApplecertificatesecretdetailsresponseAllof0Union =
  | Components1Hfba82SchemasApplecertificatesecretdetailsresponseAllof0
  | AppleCertificateSecretDetailsResponse;
export type Components1VirfwpSchemasJiraconnectionsecretrequestAllof0Union =
  | Components1VirfwpSchemasJiraconnectionsecretrequestAllof0
  | JiraConnectionSecretRequest;
export type Components1TsjhacSchemasJiraconnectionsecretresponseAllof0Union =
  | Components1TsjhacSchemasJiraconnectionsecretresponseAllof0
  | JiraConnectionSecretResponse;
export type Components1Rn2982SchemasPrivatejiraconnectionsecretresponseAllof0Union =
  | Components1Rn2982SchemasPrivatejiraconnectionsecretresponseAllof0
  | PrivateJiraConnectionSecretResponse;
export type ComponentsDtnm3YSchemasGoogleplayconnectionsecretrequestAllof0Union =
  | ComponentsDtnm3YSchemasGoogleplayconnectionsecretrequestAllof0
  | GooglePlayConnectionSecretRequest;
export type Components1T4OuyrSchemasGoogleplayconnectionsecretresponseAllof0Union =
  | Components1T4OuyrSchemasGoogleplayconnectionsecretresponseAllof0
  | GooglePlayConnectionSecretResponse;
export type Components8R88R5SchemasPrivategoogleplayconnectionsecretresponseAllof0Union =
  | Components8R88R5SchemasPrivategoogleplayconnectionsecretresponseAllof0
  | PrivateGooglePlayConnectionSecretResponse;
export type ComponentsH0D4WySchemasGoogleplaycredentialnonsecretdetailsresponseAllof0Union =
  | ComponentsH0D4WySchemasGoogleplaycredentialnonsecretdetailsresponseAllof0
  | Components1Qvpk8VSchemasGoogleplaycredentialnonsecretdetailsresponseAllof0Union;
export type ComponentsOj73MvSchemasJiracredentialnonsecretdetailsresponseAllof0Union =
  | ComponentsOj73MvSchemasJiracredentialnonsecretdetailsresponseAllof0
  | ComponentsBrcgsgSchemasJiracredentialnonsecretdetailsresponseAllof0Union;
export type Components1Eosn49SchemasLogwithpropertiesAllof0Union =
  | Components1Eosn49SchemasLogwithpropertiesAllof0
  | LogWithProperties;
export type Components264NqgSchemasStartsessionlogAllof0Union =
  | Components264NqgSchemasStartsessionlogAllof0
  | StartSessionLog;
export type ComponentsO0SzfoSchemasDistributionstartsessionlogAllof0Union =
  | ComponentsO0SzfoSchemasDistributionstartsessionlogAllof0
  | DistributionStartSessionLog;
export type Components84YphlSchemasHandlederrorlogAllof0Union =
  | Components84YphlSchemasHandlederrorlogAllof0
  | HandledErrorLog;
export type Components1Vpcf5FSchemasUnhandlederrorlogAllof0Union =
  | Components1Vpcf5FSchemasUnhandlederrorlogAllof0
  | UnhandledErrorLog;
export type Components1Rh9N66SchemasStartservicelogAllof0Union =
  | Components1Rh9N66SchemasStartservicelogAllof0
  | StartServiceLog;
export type ComponentsCzhkplSchemasCustompropertylogAllof0Union =
  | ComponentsCzhkplSchemasCustompropertylogAllof0
  | CustomPropertyLog;
export type Components1HtupicSchemasStringpropertyAllof0Union =
  | Components1HtupicSchemasStringpropertyAllof0
  | StringProperty;
export type Components3Is1CjSchemasNumberpropertyAllof0Union =
  | Components3Is1CjSchemasNumberpropertyAllof0
  | NumberProperty;
export type ComponentsIduba0SchemasBooleanpropertyAllof0Union =
  | ComponentsIduba0SchemasBooleanpropertyAllof0
  | BooleanProperty;
export type ComponentsLyvfq5SchemasDatetimepropertyAllof0Union =
  | ComponentsLyvfq5SchemasDatetimepropertyAllof0
  | DateTimeProperty;
export type Components1Wno2Z2SchemasPagelogAllof0Union =
  | Components1Wno2Z2SchemasPagelogAllof0
  | Components4Kro3MSchemasPagelogAllof0Union;
export type ComponentsMa5HoxSchemasEventlogAllof0Union =
  | ComponentsMa5HoxSchemasEventlogAllof0
  | Components498ZbbSchemasEventlogAllof0Union;
export type ComponentsNch8AzSchemasPushinstallationlogAllof0Union =
  | ComponentsNch8AzSchemasPushinstallationlogAllof0
  | PushInstallationLog;
export type Components1Aigpj3SchemasErrorlogAllof0Union =
  | Components1Aigpj3SchemasErrorlogAllof0
  | ErrorLog;
export type ComponentsAdvxd9SchemasLogflowlogwithpropertiesAllof0Union =
  | ComponentsAdvxd9SchemasLogflowlogwithpropertiesAllof0
  | LogFlowLogWithProperties;
export type Components1F0KdpnSchemasLogflowstartsessionlogAllof0Union =
  | Components1F0KdpnSchemasLogflowstartsessionlogAllof0
  | LogFlowStartSessionLog;
export type Components11CfsbmSchemasLogflowstartservicelogAllof0Union =
  | Components11CfsbmSchemasLogflowstartservicelogAllof0
  | LogFlowStartServiceLog;
export type ComponentsXnezrhSchemasLogflowcustompropertylogAllof0Union =
  | ComponentsXnezrhSchemasLogflowcustompropertylogAllof0
  | LogFlowCustomPropertyLog;
export type Components1G242RdSchemasLogflowstringpropertyAllof0Union =
  | Components1G242RdSchemasLogflowstringpropertyAllof0
  | LogFlowStringProperty;
export type ComponentsTkf1YnSchemasLogflownumberpropertyAllof0Union =
  | ComponentsTkf1YnSchemasLogflownumberpropertyAllof0
  | LogFlowNumberProperty;
export type ComponentsCwosetSchemasLogflowbooleanpropertyAllof0Union =
  | ComponentsCwosetSchemasLogflowbooleanpropertyAllof0
  | LogFlowBooleanProperty;
export type Components127VkznSchemasLogflowdatetimepropertyAllof0Union =
  | Components127VkznSchemasLogflowdatetimepropertyAllof0
  | LogFlowDateTimeProperty;
export type Components10Oj24WSchemasLogflowpagelogAllof0Union =
  | Components10Oj24WSchemasLogflowpagelogAllof0
  | Components11Mk7TbSchemasLogflowpagelogAllof0Union;
export type Components1Ctri9VSchemasLogfloweventlogAllof0Union =
  | Components1Ctri9VSchemasLogfloweventlogAllof0
  | ComponentsBzcad5SchemasLogfloweventlogAllof0Union;
export type Components1Yqphd0SchemasLogflowpushinstallationlogAllof0Union =
  | Components1Yqphd0SchemasLogflowpushinstallationlogAllof0
  | LogFlowPushInstallationLog;
export type ComponentsPcles3SchemasLogflowerrorlogAllof0Union =
  | ComponentsPcles3SchemasLogflowerrorlogAllof0
  | LogFlowErrorLog;
export type Components45LjntSchemasLogwithpropertiesDiagnosticsAllof0Union =
  | Components45LjntSchemasLogwithpropertiesDiagnosticsAllof0
  | LogWithPropertiesDiagnostics;
export type ComponentsZ650E9SchemasStartsessionlogDiagnosticsAllof0Union =
  | ComponentsZ650E9SchemasStartsessionlogDiagnosticsAllof0
  | StartSessionLogDiagnostics;
export type ComponentsNa1EysSchemasHanlederrorlogDiagnosticsAllof0Union =
  | ComponentsNa1EysSchemasHanlederrorlogDiagnosticsAllof0
  | HanledErrorLogDiagnostics;
export type ComponentsL1Kfc1SchemasStartservicelogDiagnosticsAllof0Union =
  | ComponentsL1Kfc1SchemasStartservicelogDiagnosticsAllof0
  | StartServiceLogDiagnostics;
export type Components1XuemrlSchemasCustompropertylogDiagnosticsAllof0Union =
  | Components1XuemrlSchemasCustompropertylogDiagnosticsAllof0
  | CustomPropertyLogDiagnostics;
export type Components1MplcxdSchemasStringpropertyDiagnosticsAllof0Union =
  | Components1MplcxdSchemasStringpropertyDiagnosticsAllof0
  | StringPropertyDiagnostics;
export type Components15Tz3ErSchemasNumberpropertyDiagnosticsAllof0Union =
  | Components15Tz3ErSchemasNumberpropertyDiagnosticsAllof0
  | NumberPropertyDiagnostics;
export type Components1H9UedtSchemasBooleanpropertyDiagnosticsAllof0Union =
  | Components1H9UedtSchemasBooleanpropertyDiagnosticsAllof0
  | BooleanPropertyDiagnostics;
export type ComponentsYx2AaeSchemasDatetimepropertyDiagnosticsAllof0Union =
  | ComponentsYx2AaeSchemasDatetimepropertyDiagnosticsAllof0
  | DateTimePropertyDiagnostics;
export type ComponentsEffwicSchemasPagelogDiagnosticsAllof0Union =
  | ComponentsEffwicSchemasPagelogDiagnosticsAllof0
  | Components1121EsfSchemasPagelogDiagnosticsAllof0Union;
export type Components1Vmj2OdSchemasEventlogDiagnosticsAllof0Union =
  | Components1Vmj2OdSchemasEventlogDiagnosticsAllof0
  | ComponentsWa2CwfSchemasEventlogDiagnosticsAllof0Union;
export type Components1Pvlx64SchemasPushinstallationlogDiagnosticsAllof0Union =
  | Components1Pvlx64SchemasPushinstallationlogDiagnosticsAllof0
  | PushInstallationLogDiagnostics;
export type Components1Nf3DuuSchemasErrorlogDiagnosticsAllof0Union =
  | Components1Nf3DuuSchemasErrorlogDiagnosticsAllof0
  | ErrorLogDiagnostics;
export type Components130AlsfSchemasExportblobconfigurationAllof0Union =
  | Components130AlsfSchemasExportblobconfigurationAllof0
  | ExportBlobConfiguration;
export type ComponentsQ5DjesSchemasExportconfigurationblobstorageconnectionstringAllof0Union =
  | ComponentsQ5DjesSchemasExportconfigurationblobstorageconnectionstringAllof0
  | Components16J40DuSchemasExportconfigurationblobstorageconnectionstringAllof0Union;
export type Components125ZssSchemasExportconfigurationappinsightskeyAllof0Union =
  | Components125ZssSchemasExportconfigurationappinsightskeyAllof0
  | ExportConfigurationAppInsightsKey;
export type Components4JcwkhSchemasExportconfigurationblobstoragelinkedsubscriptionAllof0Union =
  | Components4JcwkhSchemasExportconfigurationblobstoragelinkedsubscriptionAllof0
  | Components14Lttg8SchemasExportconfigurationblobstoragelinkedsubscriptionAllof0Union;
export type Components1Jvk04KSchemasExportconfigurationappinsightslinkedsubscriptionAllof0Union =
  | Components1Jvk04KSchemasExportconfigurationappinsightslinkedsubscriptionAllof0
  | ExportConfigurationAppInsightsLinkedSubscription;
export type Components1KhyfnaSchemasNotificationtargetuseridsAllof0Union =
  | Components1KhyfnaSchemasNotificationtargetuseridsAllof0
  | NotificationTargetUserIds;
export type Components19Nr381SchemasNotificationtargetaccountidsAllof0Union =
  | Components19Nr381SchemasNotificationtargetaccountidsAllof0
  | NotificationTargetAccountIds;
export type Components17Ef5OgSchemasNotificationtargetaudiencesAllof0Union =
  | Components17Ef5OgSchemasNotificationtargetaudiencesAllof0
  | NotificationTargetAudiences;
export type Components2Yio13SchemasNotificationtargetdevicesAllof0Union =
  | Components2Yio13SchemasNotificationtargetdevicesAllof0
  | NotificationTargetDevices;
export type Components1Ozxbv2SchemasNotificationconfigappleAllof0Union =
  | Components1Ozxbv2SchemasNotificationconfigappleAllof0
  | NotificationConfigApple;
export type Components1PpfareSchemasNotificationconfigappletokenAllof0Union =
  | Components1PpfareSchemasNotificationconfigappletokenAllof0
  | NotificationConfigAppleToken;
export type ComponentsQ2Qee2SchemasNotificationconfiggoogleAllof0Union =
  | ComponentsQ2Qee2SchemasNotificationconfiggoogleAllof0
  | NotificationConfigGoogle;
export type ComponentsA3A5NfSchemasNotificationconfigwindowsAllof0Union =
  | ComponentsA3A5NfSchemasNotificationconfigwindowsAllof0
  | NotificationConfigWindows;
export type ComponentsF4F1P6SchemasNotificationconfigappleresultAllof0Union =
  | ComponentsF4F1P6SchemasNotificationconfigappleresultAllof0
  | NotificationConfigAppleResult;
export type Components1Cl3FgbSchemasNotificationconfigappletokenresultAllof0Union =
  | Components1Cl3FgbSchemasNotificationconfigappletokenresultAllof0
  | NotificationConfigAppleTokenResult;
export type Components1L6Ua1RSchemasNotificationconfiggoogleresultAllof0Union =
  | Components1L6Ua1RSchemasNotificationconfiggoogleresultAllof0
  | NotificationConfigGoogleResult;
export type Components1Rkqr84SchemasNotificationconfigwindowsresultAllof0Union =
  | Components1Rkqr84SchemasNotificationconfigwindowsresultAllof0
  | NotificationConfigWindowsResult;
export type ComponentsU99EdzSchemasAlertingvstsbugtrackersettingsAllof0Union =
  | ComponentsU99EdzSchemasAlertingvstsbugtrackersettingsAllof0
  | AlertingVstsBugtrackerSettings;
export type ComponentsG0MwtxSchemasAlertinggithubbugtrackersettingsAllof0Union =
  | ComponentsG0MwtxSchemasAlertinggithubbugtrackersettingsAllof0
  | AlertingGithubBugtrackerSettings;
export type ComponentsL2Xf6RSchemasAlertingjirabugtrackersettingsAllof0Union =
  | ComponentsL2Xf6RSchemasAlertingjirabugtrackersettingsAllof0
  | AlertingJiraBugtrackerSettings;
export type Components3Sb7Y4SchemasApplecredentialsmultifactorsecretrequestAllof0Union =
  | Components3Sb7Y4SchemasApplecredentialsmultifactorsecretrequestAllof0
  | AppleCredentialsMultifactorSecretRequest;
export type Components5Dyv8CSchemasApplecredentialssecretrequestAllof0Union =
  | Components5Dyv8CSchemasApplecredentialssecretrequestAllof0
  | AppleCredentialsSecretRequest;
export type ComponentsKnowtpSchemasApplecertificatesecretrequestAllof0Union =
  | ComponentsKnowtpSchemasApplecertificatesecretrequestAllof0
  | AppleCertificateSecretRequest;
export type ComponentsEay2HoSchemasPrivateapplecredentialssecretresponseAllof0Union =
  | ComponentsEay2HoSchemasPrivateapplecredentialssecretresponseAllof0
  | PrivateAppleCredentialsSecretResponse;
export type ComponentsZqm0VqSchemasPrivateapplecertificatesecretresponseAllof0Union =
  | ComponentsZqm0VqSchemasPrivateapplecertificatesecretresponseAllof0
  | PrivateAppleCertificateSecretResponse;
export type Components1BxvcioSchemasApplecredentialnonsecretdetailsresponseAllof0Union =
  | Components1BxvcioSchemasApplecredentialnonsecretdetailsresponseAllof0
  | AppleCredentialNonSecretDetailsResponse;
export type Components18Y2Ef6SchemasApplecertificatenonsecretdetailsresponseAllof0Union =
  | Components18Y2Ef6SchemasApplecertificatenonsecretdetailsresponseAllof0
  | AppleCertificateNonSecretDetailsResponse;
export type Components1Qvpk8VSchemasGoogleplaycredentialnonsecretdetailsresponseAllof0Union =
  | Components1Qvpk8VSchemasGoogleplaycredentialnonsecretdetailsresponseAllof0
  | GooglePlayCredentialNonSecretDetailsResponse;
export type ComponentsBrcgsgSchemasJiracredentialnonsecretdetailsresponseAllof0Union =
  | ComponentsBrcgsgSchemasJiracredentialnonsecretdetailsresponseAllof0
  | JiraCredentialNonSecretDetailsResponse;
export type Components4Kro3MSchemasPagelogAllof0Union =
  | Components4Kro3MSchemasPagelogAllof0
  | PageLog;
export type Components498ZbbSchemasEventlogAllof0Union =
  | Components498ZbbSchemasEventlogAllof0
  | EventLog;
export type Components11Mk7TbSchemasLogflowpagelogAllof0Union =
  | Components11Mk7TbSchemasLogflowpagelogAllof0
  | LogFlowPageLog;
export type ComponentsBzcad5SchemasLogfloweventlogAllof0Union =
  | ComponentsBzcad5SchemasLogfloweventlogAllof0
  | LogFlowEventLog;
export type Components1121EsfSchemasPagelogDiagnosticsAllof0Union =
  | Components1121EsfSchemasPagelogDiagnosticsAllof0
  | PageLogDiagnostics;
export type ComponentsWa2CwfSchemasEventlogDiagnosticsAllof0Union =
  | ComponentsWa2CwfSchemasEventlogDiagnosticsAllof0
  | EventLogDiagnostics;
export type Components16J40DuSchemasExportconfigurationblobstorageconnectionstringAllof0Union =
  | Components16J40DuSchemasExportconfigurationblobstorageconnectionstringAllof0
  | ExportConfigurationBlobStorageConnectionString;
export type Components14Lttg8SchemasExportconfigurationblobstoragelinkedsubscriptionAllof0Union =
  | Components14Lttg8SchemasExportconfigurationblobstoragelinkedsubscriptionAllof0
  | ExportConfigurationBlobStorageLinkedSubscription;

/** The information for a single iOS device */
export interface Paths1Jpgih6V01UsersUserIdDevicesRegisterPostRequestbodyContentApplicationJsonSchema {
  /** The Unique Device IDentifier of the device */
  udid: string;
  /** The model identifier of the device, in the format iDeviceM,N */
  model: string;
  /** The build number of the last known OS version running on the device */
  osBuild?: string;
  /** The last known OS version running on the device */
  osVersion?: string;
  /** The device's serial number. Always empty or undefined at present. */
  serial?: string;
  /** The device's International Mobile Equipment Identity number. Always empty or undefined at present. */
  imei?: string;
  /** The user ID of the device owner. */
  ownerId?: string;
}

/** The information for a single iOS device */
export interface Paths8WlmngV01UsersUserIdDevicesRegisterPostResponses200ContentApplicationJsonSchema {
  /** The Unique Device IDentifier of the device */
  udid: string;
  /** The model identifier of the device, in the format iDeviceM,N */
  model: string;
  /** The device description, in the format "iPhone 7 Plus (A1784)" */
  deviceName: string;
  /** A combination of the device model name and the owner name. */
  fullDeviceName?: string;
  /** The last known OS version running on the device */
  osBuild: string;
  /** The last known OS version running on the device */
  osVersion: string;
  /** The device's serial number. Always empty or undefined at present. */
  serial?: string;
  /** The device's International Mobile Equipment Identity number. Always empty or undefined at present. */
  imei?: string;
  /** The user ID of the device owner. */
  ownerId?: string;
  /** The provisioning status of the device. */
  status: string;
  /** Timestamp of when the device was registered in ISO format. */
  registeredAt?: string;
}

export interface PathsCls8YvV01UsersUserIdDevicesRegisterPostResponses404ContentApplicationJsonSchema {
  code: Post404ApplicationJsonProperties;
  message: string;
}

/** Generic result for any alerting API operation */
export interface Paths182SsxvV01UserNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchemaAllof0 {
  /** Unique request identifier for tracking */
  requestId: string;
}

export interface PathsKu8GnbV01UserNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchemaAllof1 {
  /** The ETag of the entity */
  eTag?: string;
  /** Allows to forcefully disable emails on app or user level */
  enabled: boolean;
  /** The unique id (UUID) of the user */
  userId?: string;
  /** The settings the user has for the app */
  settings: Get200ApplicationJsonAllOfPropertiesItemsItem[];
}

/** Event Setting */
export interface Get200ApplicationJsonAllOfPropertiesItemsItem {
  /** Event Name */
  eventType: "crash_newCrashGroupCreated";
  /** Frequency of event */
  value: GetResponses200ContentApplicationJsonSchemaAllOf1SettingsItemValue;
  /** Default frequency of event */
  defaultValue?: GetResponses200ContentApplicationJsonSchemaAllOf1SettingsItemDefaultValue;
}

/** Generic result for any alerting API operation */
export interface Paths1O95A70V01UserNotificationsEmailsettingsGetResponsesDefaultContentApplicationJsonSchemaAllof0 {
  /** Unique request identifier for tracking */
  requestId: string;
}

export interface Paths1E5Yhn2V01UserNotificationsEmailsettingsGetResponsesDefaultContentApplicationJsonSchemaAllof1 {
  /** The status code return by the API. It can be 400 or 404 or 409 or 500. */
  code: Enum3;
  /** The reason for the request failed */
  message?: string;
}

export interface Paths1Bjp26QV01UserMetadataOptimizelyGetResponses200ContentApplicationJsonSchema {
  userId?: string;
  /** Any object */
  metadata?: Record<string, unknown>;
}

export interface Paths15Bir6ZV01UserMetadataOptimizelyGetResponsesDefaultContentApplicationJsonSchema {
  error: GetDefaultApplicationJsonProperties;
}

export interface GetDefaultApplicationJsonProperties {
  code: GetDefaultApplicationJsonPropertiesProperties;
  message: string;
}

export interface Paths1Me00QfV01UserInvitationsOrgsInvitationTokenRejectPostResponsesDefaultContentApplicationJsonSchema {
  error: PostDefaultApplicationJsonProperties;
}

export interface PostDefaultApplicationJsonProperties {
  code: PostDefaultApplicationJsonPropertiesProperties;
  message: string;
}

export interface PathsWyg1WoV01UserInvitationsOrgsInvitationTokenAcceptPostResponsesDefaultContentApplicationJsonSchema {
  error: Paths1My56UdV01UserInvitationsOrgsInvitationTokenAcceptPostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1My56UdV01UserInvitationsOrgsInvitationTokenAcceptPostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum6;
  message: string;
}

export interface Paths8ZdnzsV01UserInvitationsDistributionGroupsAcceptPostResponsesDefaultContentApplicationJsonSchema {
  error: Paths1RmaeqqV01UserInvitationsDistributionGroupsAcceptPostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1RmaeqqV01UserInvitationsDistributionGroupsAcceptPostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum7;
  message: string;
}

export interface Paths1De5Y4YV01UserInvitationsAppsInvitationTokenRejectPostResponsesDefaultContentApplicationJsonSchema {
  error: Paths1Qc6BfeV01UserInvitationsAppsInvitationTokenRejectPostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Qc6BfeV01UserInvitationsAppsInvitationTokenRejectPostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum8;
  message: string;
}

export interface Paths14WkhazV01UserInvitationsAppsInvitationTokenAcceptPostResponsesDefaultContentApplicationJsonSchema {
  error: PathsKt6Uk0V01UserInvitationsAppsInvitationTokenAcceptPostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsKt6Uk0V01UserInvitationsAppsInvitationTokenAcceptPostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum9;
  message: string;
}

/** SharedConnectionResponse */
export interface Get200ApplicationJsonItemsItem {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "Get200ApplicationJsonItemsItem";
  /** id of the shared connection */
  id: string;
  /** display name of shared connection */
  displayName?: string;
  /** the type of the credential */
  credentialType: GetResponses200ContentApplicationJsonSchemaItemCredentialType;
  /** whether the credentials are valid or not */
  isValid?: boolean;
  /** if the account is a 2FA account or not */
  is2FA?: boolean;
}

export interface PathsIs7Fv3V01UserExportServiceconnectionsGetResponsesDefaultContentApplicationJsonSchema {
  code: Enum12;
  message: string;
}

export interface Paths18Qfkd0V01UserDsrExportTokenCancelPostResponses202ContentApplicationJsonSchema {
  /** Unique request identifier */
  token: string;
  /** ISO 8601 format timestamp of when request was created. */
  createdAt: Date;
}

export interface Paths1Tf7AbnV01UserDsrExportTokenCancelPostResponses503ContentApplicationJsonSchema {
  error: Post503ApplicationJsonProperties;
}

export interface Post503ApplicationJsonProperties {
  code: Post503ApplicationJsonPropertiesProperties;
  message: string;
}

export interface PathsYldp5RV01UserDsrExportTokenCancelPostResponsesDefaultContentApplicationJsonSchema {
  error: Paths5Cc09TV01UserDsrExportTokenCancelPostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths5Cc09TV01UserDsrExportTokenCancelPostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum14;
  message: string;
}

export interface Paths1Krqtk7V01UserDsrExportTokenGetResponses200ContentApplicationJsonSchema {
  /** Azure Storage shared access signature (SAS) URL for exported user data. */
  sasUrl?: string;
  /** Whether Azure Storage shared access signature (SAS) URL has expired or not. */
  sasUrlExpired?: boolean;
  /** Status of data subject right request */
  status: Enum15;
  /** explanation message of the status */
  message: string;
}

export interface PathsKhkcspV01UserDsrExportTokenGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths1RoghbpV01UserDsrExportTokenGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1RoghbpV01UserDsrExportTokenGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum16;
  message: string;
}

export interface Paths1NpsrnaV01UserDsrExportPostResponses202ContentApplicationJsonSchema {
  /** Unique request identifier */
  token: string;
  /** ISO 8601 format timestamp of when request was created. */
  createdAt: Date;
}

export interface Paths14JqlllV01UserDsrExportPostResponsesDefaultContentApplicationJsonSchema {
  error: Paths1FayettV01UserDsrExportPostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1FayettV01UserDsrExportPostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum17;
  message: string;
}

export interface PathsQga5LlV01UserDsrDeleteTokenCancelPostRequestbodyContentApplicationJsonSchema {
  /** Email used for cancel delete with x-authz-bypass headers */
  email: string;
}

export interface PathsJv03TbV01UserDsrDeleteTokenCancelPostResponses202ContentApplicationJsonSchema {
  /** Unique request identifier */
  token: string;
  /** ISO 8601 format timestamp of when request was created. */
  createdAt: Date;
}

export interface Paths1Ysi41QV01UserDsrDeleteTokenCancelPostResponses503ContentApplicationJsonSchema {
  error: Paths1Ed0Ig5V01UserDsrDeleteTokenCancelPostResponses503ContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Ed0Ig5V01UserDsrDeleteTokenCancelPostResponses503ContentApplicationJsonSchemaPropertiesError {
  code: Enum18;
  message: string;
}

export interface PathsE7Evb8V01UserDsrDeleteTokenCancelPostResponsesDefaultContentApplicationJsonSchema {
  error: Paths435X0EV01UserDsrDeleteTokenCancelPostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths435X0EV01UserDsrDeleteTokenCancelPostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum19;
  message: string;
}

export interface PathsWwssknV01UserDsrDeleteTokenGetResponses200ContentApplicationJsonSchema {
  /** Azure Storage shared access signature (SAS) URL for exported user data. */
  sasUrl?: string;
  /** Whether Azure Storage shared access signature (SAS) URL has expired or not. */
  sasUrlExpired?: boolean;
  /** Status of data subject right request */
  status: Enum20;
  /** explanation message of the status */
  message: string;
}

export interface PathsSepmdaV01UserDsrDeleteTokenGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths11982EzV01UserDsrDeleteTokenGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths11982EzV01UserDsrDeleteTokenGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum21;
  message: string;
}

export interface Paths1Shlm9KV01UserDsrDeletePostResponses202ContentApplicationJsonSchema {
  /** Unique request identifier */
  token: string;
  /** ISO 8601 format timestamp of when request was created. */
  createdAt: Date;
}

export interface Paths105AankV01UserDsrDeletePostResponsesDefaultContentApplicationJsonSchema {
  error: Paths14Ijt9PV01UserDsrDeletePostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths14Ijt9PV01UserDsrDeletePostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum22;
  message: string;
}

/** The information for a single iOS device */
export interface Paths1Cmt7BV01UserDevicesDeviceUdidGetResponses200ContentApplicationJsonSchema {
  /** The Unique Device IDentifier of the device */
  udid: string;
  /** The model identifier of the device, in the format iDeviceM,N */
  model: string;
  /** The device description, in the format "iPhone 7 Plus (A1784)" */
  deviceName: string;
  /** A combination of the device model name and the owner name. */
  fullDeviceName?: string;
  /** The last known OS version running on the device */
  osBuild: string;
  /** The last known OS version running on the device */
  osVersion: string;
  /** The device's serial number. Always empty or undefined at present. */
  serial?: string;
  /** The device's International Mobile Equipment Identity number. Always empty or undefined at present. */
  imei?: string;
  /** The user ID of the device owner. */
  ownerId?: string;
  /** The provisioning status of the device. */
  status: string;
  /** Timestamp of when the device was registered in ISO format. */
  registeredAt?: string;
}

export interface PathsZ51JvlV01UserDevicesDeviceUdidGetResponses400ContentApplicationJsonSchema {
  code: Get400ApplicationJsonProperties;
  message: string;
}

export interface Paths1Bbrb90V01UserDevicesDeviceUdidGetResponses403ContentApplicationJsonSchema {
  code: Get403ApplicationJsonProperties;
  message: string;
}

export interface Paths1T6Akw2V01UserDevicesDeviceUdidGetResponses404ContentApplicationJsonSchema {
  code: Get404ApplicationJsonProperties;
  message: string;
}

export interface PathsHdlzv9V01UserDevicesDeviceUdidDeleteResponses403ContentApplicationJsonSchema {
  code: Delete403ApplicationJsonProperties;
  message: string;
}

export interface Paths8DvmvfV01UserDevicesDeviceUdidDeleteResponses404ContentApplicationJsonSchema {
  code: Delete404ApplicationJsonProperties;
  message: string;
}

/** The information for a single iOS device */
export interface PathsSu173DV01UserDevicesGetResponses200ContentApplicationJsonSchemaItems {
  /** The Unique Device IDentifier of the device */
  udid: string;
  /** The model identifier of the device, in the format iDeviceM,N */
  model: string;
  /** The device description, in the format "iPhone 7 Plus (A1784)" */
  deviceName: string;
  /** A combination of the device model name and the owner name. */
  fullDeviceName?: string;
  /** The last known OS version running on the device */
  osBuild: string;
  /** The last known OS version running on the device */
  osVersion: string;
  /** The device's serial number. Always empty or undefined at present. */
  serial?: string;
  /** The device's International Mobile Equipment Identity number. Always empty or undefined at present. */
  imei?: string;
  /** The user ID of the device owner. */
  ownerId?: string;
  /** The provisioning status of the device. */
  status: string;
  /** Timestamp of when the device was registered in ISO format. */
  registeredAt?: string;
}

export interface PathsUflabiV01UserDevicesGetResponses400ContentApplicationJsonSchema {
  code: Enum28;
  message: string;
}

export interface PathsY65BgyV01UserDevicesGetResponses403ContentApplicationJsonSchema {
  code: Enum29;
  message: string;
}

export interface Paths12V17NbV01UserGetResponses200ContentApplicationJsonSchema {
  /** The unique id (UUID) of the user */
  id: string;
  /** The avatar URL of the user */
  avatarUrl?: string;
  /** User is required to send an old password in order to change the password. */
  canChangePassword?: boolean;
  /** The full name of the user. Might for example be first and last name */
  displayName: string;
  /** The email address of the user */
  email: string;
  /** The unique name that is used to identify the user. */
  name: string;
  /** The permissions the user has for the app */
  permissions?: Get200ApplicationJsonPropertiesItemsItem[];
  /** The creation origin of this user */
  origin: Enum31;
}

export interface Paths484N4EV01UserGetResponsesDefaultContentApplicationJsonSchema {
  error: PathsAaeoylV01UserGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsAaeoylV01UserGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum32;
  message: string;
}

export interface Paths2EstpdV01UserPatchRequestbodyContentApplicationJsonSchema {
  /** The full name of the user. Might for example be first and last name */
  displayName?: string;
}

export interface Paths1Stph4IV01UserPatchResponses200ContentApplicationJsonSchema {
  /** The unique id (UUID) of the user */
  id: string;
  /** The avatar URL of the user */
  avatarUrl?: string;
  /** User is required to send an old password in order to change the password. */
  canChangePassword?: boolean;
  /** The full name of the user. Might for example be first and last name */
  displayName: string;
  /** The email address of the user */
  email: string;
  /** The unique name that is used to identify the user. */
  name: string;
  /** The permissions the user has for the app */
  permissions?: Patch200ApplicationJsonPropertiesItemsItem[];
  /** The creation origin of this user */
  origin: Enum34;
}

export interface Paths4ScaxfV01UserPatchResponsesDefaultContentApplicationJsonSchema {
  error: PatchDefaultApplicationJsonProperties;
}

export interface PatchDefaultApplicationJsonProperties {
  code: PatchDefaultApplicationJsonPropertiesProperties;
  message: string;
}

export interface PathsFvdb99V01TesterAppsGetResponses200ContentApplicationJsonSchemaItems {
  /** The unique ID (UUID) of the app */
  id?: string;
  release?: GetResponses200ContentApplicationJsonSchemaItemRelease;
  /** The app's name. */
  name?: string;
  /** The app's display name. */
  displayName?: string;
  /** The description of the app */
  description?: string;
  /** A URL to the app's icon. */
  iconUrl?: string;
  /** The app's os. */
  os?: string;
  /** The information about the app's owner */
  owner?: GetResponses200ContentApplicationJsonSchemaItemOwner;
}

/** Response for getting a list of releases in a distribution group */
export interface Paths1R53U2ZV01TesterAppsGetResponses200ContentApplicationJsonSchemaItemsPropertiesReleaseAllof0 {
  /** ID identifying this unique release. */
  id: number;
  /**
   * The release's version.<br>
   * For iOS: CFBundleVersion from info.plist.<br>
   * For Android: android:versionCode from AppManifest.xml.
   *
   */
  version: string;
  /** The release's origin */
  origin?: Get200ApplicationJsonItemsRelease0Origin;
  /**
   * The release's short version.<br>
   * For iOS: CFBundleShortVersionString from info.plist.<br>
   * For Android: android:versionName from AppManifest.xml.
   *
   */
  shortVersion: string;
  /** A boolean which determines whether the release is a mandatory update or not. */
  mandatoryUpdate: boolean;
  /** UTC time in ISO 8601 format of the uploaded time. */
  uploadedAt: string;
  /** This value determines the whether a release currently is enabled or disabled. */
  enabled: boolean;
  /** This value determines if a release is external or not. */
  isExternalBuild?: boolean;
}

export interface Paths4Gr131V01TesterAppsGetResponses200ContentApplicationJsonSchemaItemsPropertiesReleaseAllof1 {
  /** The release's size in bytes. */
  size: number;
  /** The href required to install a release on a mobile device. On iOS devices will be prefixed with `itms-services://?action=download-manifest&url=` */
  installUrl?: string;
  /** The release's release notes. */
  releaseNotes?: string;
}

/** The information about the app's owner */
export interface GetResponses200ContentApplicationJsonSchemaItemOwner {
  /** The unique id (UUID) of the owner */
  id?: string;
  /** The avatar URL of the owner */
  avatarUrl?: string;
  /** The owner's display name */
  displayName?: string;
  /** The owner's email address */
  email?: string;
  /** The unique name that used to identify the owner */
  name?: string;
  /** The owner type. Can either be 'org' or 'user' */
  type?: Get200ApplicationJsonItemsOwnerType;
}

/** Details of an uploaded release */
export interface Paths3NwxqsV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchema {
  /** ID identifying this unique release. */
  id: number;
  /** The app's name (extracted from the uploaded release). */
  appName: string;
  /** The app's display name. */
  appDisplayName: string;
  /** The app's OS. */
  appOs?: string;
  /**
   * The release's version.<br>
   * For iOS: CFBundleVersion from info.plist.
   * For Android: android:versionCode from AppManifest.xml.
   *
   */
  version: string;
  /** The release's origin */
  origin?: Enum38;
  /**
   * The release's short version.<br>
   * For iOS: CFBundleShortVersionString from info.plist.
   * For Android: android:versionName from AppManifest.xml.
   *
   */
  shortVersion: string;
  /** The release's release notes. */
  releaseNotes?: string;
  /** The release's provisioning profile name. */
  provisioningProfileName?: string;
  /** The type of the provisioning profile for the requested app version. */
  provisioningProfileType?: Enum39;
  /** expiration date of provisioning profile in UTC format. */
  provisioningProfileExpiryDate?: string;
  /** A flag that determines whether the release's provisioning profile is still extracted or not. */
  isProvisioningProfileSyncing?: boolean;
  /** The release's size in bytes. */
  size?: number;
  /** The release's minimum required operating system. */
  minOs?: string;
  /** The release's device family. */
  deviceFamily?: string;
  /** The release's minimum required Android API level. */
  androidMinApiLevel?: string;
  /** The identifier of the apps bundle. */
  bundleIdentifier?: string;
  /** Hashes for the packages. */
  packageHashes?: string[];
  /** MD5 checksum of the release binary. */
  fingerprint?: string;
  /** UTC time in ISO 8601 format of the uploaded time. */
  uploadedAt: string;
  /** The URL that hosts the binary for this release. */
  downloadUrl?: string;
  /** A URL to the app's icon. */
  appIconUrl: string;
  /** The href required to install a release on a mobile device. On iOS devices will be prefixed with `itms-services://?action=download-manifest&url=` */
  installUrl?: string;
  /**
   * OBSOLETE. Will be removed in next version. The destination type.<br>
   * <b>group</b>: The release distributed to internal groups and distribution_groups details will be returned.<br>
   * <b>store</b>: The release distributed to external stores and distribution_stores details will be returned.<br>
   * <b>tester</b>: The release distributed testers details will be returned.<br>
   *
   */
  destinationType?: Enum40;
  /** OBSOLETE. Will be removed in next version. A list of distribution groups that are associated with this release. */
  distributionGroups?: Paths1ImihjiV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDistributionGroupsItems[];
  /** OBSOLETE. Will be removed in next version. A list of distribution stores that are associated with this release. */
  distributionStores?: PathsH1Qu1NV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDistributionStoresItems[];
  /** A list of distribution groups or stores. */
  destinations?: PathsSelih9V01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItems[];
  /** In calls that allow passing `udid` in the query string, this value will hold the provisioning status of that UDID in this release. Will be ignored for non-iOS platforms. */
  isUdidProvisioned?: boolean;
  /** In calls that allow passing `udid` in the query string, this value determines if a release can be re-signed. When true, after a re-sign, the tester will be able to install the release from his registered devices. Will not be returned for non-iOS platforms. */
  canResign?: boolean;
  /** Contains metadata about the build that produced the release being uploaded */
  build?: Paths6IncqxV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesBuild;
  /** This value determines the whether a release currently is enabled or disabled. */
  enabled: boolean;
  /** Status of the release. */
  status?: string;
  /** This value determines if a release is external or not. */
  isExternalBuild?: boolean;
}

export interface Paths1ImihjiV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDistributionGroupsItems {
  /** ID identifying a unique distribution group. */
  id: string;
  /** A name identifying a unique distribution group. */
  name?: string;
}

export interface PathsH1Qu1NV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDistributionStoresItems {
  /** ID identifying a unique distribution store. */
  id: string;
  /** A name identifying a unique distribution store. */
  name?: string;
  /** type of the distribution store currently stores type can be intune, googleplay or windows. */
  type?: GetResponses200ContentApplicationJsonSchemaDistributionStoresItemType;
  /** publishing status of the release in the store. */
  publishingStatus?: string;
}

export interface Paths1PavtpvV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0 {
  /** type of the distribution store currently stores type can be intune, googleplay or windows. */
  type?: Get200ApplicationJsonPropertiesItems0Type;
  /** publishing status of the release in the store. */
  publishingStatus?: string;
}

export interface Paths8M1UckV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0Allof1 {
  /** Is the containing release the latest one in this distribution store. */
  isLatest?: boolean;
}

/** A unique identifier for a destination. A destination can be identified by an ID (guid) or by a name. DestinationId encapsulates both options. A destination can be either a distribution group or a store. */
export interface PathsJ4K1S8V01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof1 {
  /** Name of a distribution group / distribution store. The release will be associated with this distribution group or store. If the distribution group / store doesn't exist a 400 is returned. If both distribution group / store name and id are passed, the id is taking precedence. */
  name?: string;
  /** Id of a distribution group / store. The release will be associated with this distribution group / store. If the distribution group / store doesn't exist a 400 is returned. If both distribution group / store name and id are passed, the id is taking precedence. */
  id: string;
}

export interface PathsR7Mx7PV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof2 {
  /** Destination can be either store or group. */
  destinationType?: Get200ApplicationJsonPropertiesItems2DestinationType;
  /** Display name for the group or tester */
  displayName?: string;
}

/** Contains metadata about the build that produced the release being uploaded */
export interface Paths6IncqxV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesBuild {
  /** The branch name of the build producing the release */
  branchName?: string;
  /** The commit hash of the build producing the release */
  commitHash?: string;
  /** The commit message of the build producing the release */
  commitMessage?: string;
}

export interface Paths5W4BybV01SdkAppsAppSecretReleasesReleaseHashGetResponses404ContentApplicationJsonSchema {
  code: Enum44;
  message: string;
}

/** Details of an uploaded release */
export interface Paths1Wkh2MwV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchema {
  /** ID identifying this unique release. */
  id: number;
  /** The app's name (extracted from the uploaded release). */
  appName: string;
  /** The app's display name. */
  appDisplayName: string;
  /** The app's OS. */
  appOs?: string;
  /**
   * The release's version.<br>
   * For iOS: CFBundleVersion from info.plist.
   * For Android: android:versionCode from AppManifest.xml.
   *
   */
  version: string;
  /** The release's origin */
  origin?: Enum45;
  /**
   * The release's short version.<br>
   * For iOS: CFBundleShortVersionString from info.plist.
   * For Android: android:versionName from AppManifest.xml.
   *
   */
  shortVersion: string;
  /** The release's release notes. */
  releaseNotes?: string;
  /** The release's provisioning profile name. */
  provisioningProfileName?: string;
  /** The type of the provisioning profile for the requested app version. */
  provisioningProfileType?: Enum46;
  /** expiration date of provisioning profile in UTC format. */
  provisioningProfileExpiryDate?: string;
  /** A flag that determines whether the release's provisioning profile is still extracted or not. */
  isProvisioningProfileSyncing?: boolean;
  /** The release's size in bytes. */
  size?: number;
  /** The release's minimum required operating system. */
  minOs?: string;
  /** The release's device family. */
  deviceFamily?: string;
  /** The release's minimum required Android API level. */
  androidMinApiLevel?: string;
  /** The identifier of the apps bundle. */
  bundleIdentifier?: string;
  /** Hashes for the packages. */
  packageHashes?: string[];
  /** MD5 checksum of the release binary. */
  fingerprint?: string;
  /** UTC time in ISO 8601 format of the uploaded time. */
  uploadedAt: string;
  /** The URL that hosts the binary for this release. */
  downloadUrl?: string;
  /** A URL to the app's icon. */
  appIconUrl: string;
  /** The href required to install a release on a mobile device. On iOS devices will be prefixed with `itms-services://?action=download-manifest&url=` */
  installUrl?: string;
  /**
   * OBSOLETE. Will be removed in next version. The destination type.<br>
   * <b>group</b>: The release distributed to internal groups and distribution_groups details will be returned.<br>
   * <b>store</b>: The release distributed to external stores and distribution_stores details will be returned.<br>
   * <b>tester</b>: The release distributed testers details will be returned.<br>
   *
   */
  destinationType?: Enum47;
  /** OBSOLETE. Will be removed in next version. A list of distribution groups that are associated with this release. */
  distributionGroups?: Paths4Hp5QtV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDistributionGroupsItems[];
  /** OBSOLETE. Will be removed in next version. A list of distribution stores that are associated with this release. */
  distributionStores?: Paths10Is1M2V01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDistributionStoresItems[];
  /** A list of distribution groups or stores. */
  destinations?: Paths2H2GfhV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItems[];
  /** In calls that allow passing `udid` in the query string, this value will hold the provisioning status of that UDID in this release. Will be ignored for non-iOS platforms. */
  isUdidProvisioned?: boolean;
  /** In calls that allow passing `udid` in the query string, this value determines if a release can be re-signed. When true, after a re-sign, the tester will be able to install the release from his registered devices. Will not be returned for non-iOS platforms. */
  canResign?: boolean;
  /** Contains metadata about the build that produced the release being uploaded */
  build?: Paths1Mxpr5HV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesBuild;
  /** This value determines the whether a release currently is enabled or disabled. */
  enabled: boolean;
  /** Status of the release. */
  status?: string;
  /** This value determines if a release is external or not. */
  isExternalBuild?: boolean;
}

export interface Paths4Hp5QtV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDistributionGroupsItems {
  /** ID identifying a unique distribution group. */
  id: string;
  /** A name identifying a unique distribution group. */
  name?: string;
}

export interface Paths10Is1M2V01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDistributionStoresItems {
  /** ID identifying a unique distribution store. */
  id: string;
  /** A name identifying a unique distribution store. */
  name?: string;
  /** type of the distribution store currently stores type can be intune, googleplay or windows. */
  type?: Enum48;
  /** publishing status of the release in the store. */
  publishingStatus?: string;
}

export interface Paths90FqqhV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0 {
  /** type of the distribution store currently stores type can be intune, googleplay or windows. */
  type?: Enum49;
  /** publishing status of the release in the store. */
  publishingStatus?: string;
}

export interface PathsBq45MpV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0Allof1 {
  /** Is the containing release the latest one in this distribution store. */
  isLatest?: boolean;
}

/** A unique identifier for a destination. A destination can be identified by an ID (guid) or by a name. DestinationId encapsulates both options. A destination can be either a distribution group or a store. */
export interface Paths17Mq2NrV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof1 {
  /** Name of a distribution group / distribution store. The release will be associated with this distribution group or store. If the distribution group / store doesn't exist a 400 is returned. If both distribution group / store name and id are passed, the id is taking precedence. */
  name?: string;
  /** Id of a distribution group / store. The release will be associated with this distribution group / store. If the distribution group / store doesn't exist a 400 is returned. If both distribution group / store name and id are passed, the id is taking precedence. */
  id: string;
}

export interface Paths7UlnvnV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof2 {
  /** Destination can be either store or group. */
  destinationType?: Enum50;
  /** Display name for the group or tester */
  displayName?: string;
}

/** Contains metadata about the build that produced the release being uploaded */
export interface Paths1Mxpr5HV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesBuild {
  /** The branch name of the build producing the release */
  branchName?: string;
  /** The commit hash of the build producing the release */
  commitHash?: string;
  /** The commit message of the build producing the release */
  commitMessage?: string;
}

export interface Paths1WkrcwmV01SdkAppsAppSecretReleasesPrivateLatestGetResponses404ContentApplicationJsonSchema {
  code: Enum51;
  message: string;
}

export interface Paths1Cvct4XV01OrgsOrgNameUsersUserNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0 {
  /** The unique ID (UUID) of the app */
  id: string;
  /** The description of the app */
  description?: string;
  /** The display name of the app */
  displayName: string;
  /** A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase */
  releaseType?: string;
  /** The string representation of the URL pointing to the app's icon */
  iconUrl?: string;
  /** The string representation of the source of the app's icon */
  iconSource?: string;
  /** The name of the app used in URLs */
  name: string;
  /** The OS the app will be running on */
  os: Get200ApplicationJsonItems0Os;
  /** The information about the app's owner */
  owner: Get200ApplicationJsonItems0Owner;
}

/** The information about the app's owner */
export interface Get200ApplicationJsonItems0Owner {
  /** The unique id (UUID) of the owner */
  id: string;
  /** The avatar URL of the owner */
  avatarUrl?: string;
  /** The owner's display name */
  displayName: string;
  /** The owner's email address */
  email?: string;
  /** The unique name that used to identify the owner */
  name: string;
  /** The owner type. Can either be 'org' or 'user' */
  type: Get200ApplicationJsonItems0OwnerType;
}

export interface Paths4IoilmV01OrgsOrgNameUsersUserNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof1 {
  /** A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics */
  appSecret?: string;
  azureSubscription?: Get200ApplicationJsonItems1AzureSubscription;
  /** The platform of the app */
  platform?: Get200ApplicationJsonItems1Platform;
  /** The creation origin of this app */
  origin?: Get200ApplicationJsonItems1Origin;
  /** The created date of this app */
  createdAt?: string;
  /** The last updated date of this app */
  updatedAt?: string;
  /** The permissions of the calling user */
  memberPermissions?: Get200ApplicationJsonItems1MemberPermissionsItem[];
}

export interface Get200ApplicationJsonItems1AzureSubscription {
  /** The azure subscription id */
  subscriptionId: string;
  /** The tenant id of the azure subscription belongs to */
  tenantId: string;
  /** The name of the azure subscription */
  subscriptionName: string;
  /** If the subscription is used for billing */
  isBilling?: boolean;
  /** If the subscription can be used for billing */
  isBillable?: boolean;
  /** If the subscription is internal Microsoft subscription */
  isMicrosoftInternal?: boolean;
}

export interface PathsBzcytsV01OrgsOrgNameUsersUserNameAppsGetResponsesDefaultContentApplicationJsonSchema {
  error: PathsT544DeV01OrgsOrgNameUsersUserNameAppsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsT544DeV01OrgsOrgNameUsersUserNameAppsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum57;
  message: string;
}

export interface PathsP1N751V01OrgsOrgNameUsersUserNamePatchRequestbodyContentApplicationJsonSchema {
  /** The user's role in the organizatiion */
  role?: PatchContentSchemaRole;
}

export interface PathsPp9E5UV01OrgsOrgNameUsersUserNamePatchResponses200ContentApplicationJsonSchema {
  /** The email address of the user */
  email: string;
  /** The full name of the user. Might for example be first and last name */
  displayName: string;
  /** The date when the user joined the organization */
  joinedAt: string;
  /** The unique name that is used to identify the user. */
  name: string;
  /** The role the user has within the organization */
  role: string;
}

export interface PathsAmri8GV01OrgsOrgNameUsersUserNamePatchResponsesDefaultContentApplicationJsonSchema {
  error: Paths1Bjfxu6V01OrgsOrgNameUsersUserNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Bjfxu6V01OrgsOrgNameUsersUserNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum59;
  message: string;
}

export interface Paths13YqyzyV01OrgsOrgNameUsersUserNameDeleteResponsesDefaultContentApplicationJsonSchema {
  error: DeleteDefaultApplicationJsonProperties;
}

export interface DeleteDefaultApplicationJsonProperties {
  code: DeleteDefaultApplicationJsonPropertiesProperties;
  message: string;
}

export interface PathsJys8A7V01OrgsOrgNameUsersUserNameGetResponses200ContentApplicationJsonSchema {
  /** The email address of the user */
  email: string;
  /** The full name of the user. Might for example be first and last name */
  displayName: string;
  /** The date when the user joined the organization */
  joinedAt: string;
  /** The unique name that is used to identify the user. */
  name: string;
  /** The role the user has within the organization */
  role: string;
}

export interface Paths1H2Meo6V01OrgsOrgNameUsersUserNameGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths156Do09V01OrgsOrgNameUsersUserNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths156Do09V01OrgsOrgNameUsersUserNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum61;
  message: string;
}

export interface PathsCwimmqV01OrgsOrgNameUsersGetResponses200ContentApplicationJsonSchemaItems {
  /** The email address of the user */
  email: string;
  /** The full name of the user. Might for example be first and last name */
  displayName: string;
  /** The date when the user joined the organization */
  joinedAt: string;
  /** The unique name that is used to identify the user. */
  name: string;
  /** The role the user has within the organization */
  role: string;
}

export interface Paths1Repp9WV01OrgsOrgNameUsersGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths11Lj1XjV01OrgsOrgNameUsersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths11Lj1XjV01OrgsOrgNameUsersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum62;
  message: string;
}

export interface PathsZcvkocV01OrgsOrgNameTestersGetResponses200ContentApplicationJsonSchemaItems {
  /** The full name of the tester. Might for example be first and last name */
  displayName?: string;
  /** The unique name that is used to identify the tester. */
  name: string;
  /** The email address of the tester */
  email: string;
}

export interface Paths10C9NtgV01OrgsOrgNameTestersGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths3R06R9V01OrgsOrgNameTestersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths3R06R9V01OrgsOrgNameTestersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum63;
  message: string;
}

export interface PathsL86WmaV01OrgsOrgNameTeamsTeamNameUsersUserNameDeleteResponsesDefaultContentApplicationJsonSchema {
  error: Paths19SzypbV01OrgsOrgNameTeamsTeamNameUsersUserNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths19SzypbV01OrgsOrgNameTeamsTeamNameUsersUserNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum64;
  message: string;
}

export interface PathsQ6Nk57V01OrgsOrgNameTeamsTeamNameUsersGetResponses200ContentApplicationJsonSchema {
  /** The email address of the user */
  email: string;
  /** The full name of the user. Might for example be first and last name */
  displayName: string;
  /** The unique name that is used to identify the user. */
  name: string;
  /** The role of the user has within the team */
  role: Enum65;
}

export interface Paths10Bx1MpV01OrgsOrgNameTeamsTeamNameUsersGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths1A4Kwu5V01OrgsOrgNameTeamsTeamNameUsersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1A4Kwu5V01OrgsOrgNameTeamsTeamNameUsersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum66;
  message: string;
}

export interface Paths1Cc9FkbV01OrgsOrgNameTeamsTeamNameUsersPostRequestbodyContentApplicationJsonSchema {
  /** The user's email address */
  userEmail: string;
}

export interface PathsY6FsqxV01OrgsOrgNameTeamsTeamNameUsersPostResponses201ContentApplicationJsonSchema {
  /** The email address of the user */
  email: string;
  /** The full name of the user. Might for example be first and last name */
  displayName: string;
  /** The unique name that is used to identify the user. */
  name: string;
  /** The role of the user has within the team */
  role: Enum67;
}

export interface Paths41XckqV01OrgsOrgNameTeamsTeamNameUsersPostResponsesDefaultContentApplicationJsonSchema {
  error: Paths1Fht6McV01OrgsOrgNameTeamsTeamNameUsersPostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Fht6McV01OrgsOrgNameTeamsTeamNameUsersPostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum68;
  message: string;
}

export interface Paths1HiscesV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchRequestbodyContentApplicationJsonSchema {
  /** The permissions all members of the team have on the app */
  permissions: PatchContentSchemaPermissionsItem[];
}

export interface PathsX6KtmiV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchemaAllof0 {
  /** The unique ID (UUID) of the app */
  id: string;
  /** The description of the app */
  description?: string;
  /** The display name of the app */
  displayName: string;
  /** A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase */
  releaseType?: string;
  /** The string representation of the URL pointing to the app's icon */
  iconUrl?: string;
  /** The string representation of the source of the app's icon */
  iconSource?: string;
  /** The name of the app used in URLs */
  name: string;
  /** The OS the app will be running on */
  os: Enum70;
  /** The information about the app's owner */
  owner: Paths1MnbyynV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner;
}

/** The information about the app's owner */
export interface Paths1MnbyynV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner {
  /** The unique id (UUID) of the owner */
  id: string;
  /** The avatar URL of the owner */
  avatarUrl?: string;
  /** The owner's display name */
  displayName: string;
  /** The owner's email address */
  email?: string;
  /** The unique name that used to identify the owner */
  name: string;
  /** The owner type. Can either be 'org' or 'user' */
  type: Enum71;
}

export interface Paths1G7Kvy1V01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchemaAllof0Allof1 {
  /** A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics */
  appSecret?: string;
  azureSubscription?: Paths1Qtq1OiV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchemaAllof0Allof1PropertiesAzureSubscription;
  /** The platform of the app */
  platform?: Enum72;
  /** The creation origin of this app */
  origin?: Enum73;
  /** The created date of this app */
  createdAt?: string;
  /** The last updated date of this app */
  updatedAt?: string;
  /** The permissions of the calling user */
  memberPermissions?: Patch200ApplicationJsonAllOfPropertiesItemsItem[];
}

export interface Paths1Qtq1OiV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchemaAllof0Allof1PropertiesAzureSubscription {
  /** The azure subscription id */
  subscriptionId: string;
  /** The tenant id of the azure subscription belongs to */
  tenantId: string;
  /** The name of the azure subscription */
  subscriptionName: string;
  /** If the subscription is used for billing */
  isBilling?: boolean;
  /** If the subscription can be used for billing */
  isBillable?: boolean;
  /** If the subscription is internal Microsoft subscription */
  isMicrosoftInternal?: boolean;
}

export interface PathsF63NbmV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchemaAllof1 {
  /** The permissions the team has for the app */
  teamPermissions?: Patch200ApplicationJsonAllOfPropertiesItemsItem[];
}

export interface Paths1Beedi7V01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponsesDefaultContentApplicationJsonSchema {
  error: Paths14V8GczV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths14V8GczV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum75;
  message: string;
}

export interface Paths1Pofxg3V01OrgsOrgNameTeamsTeamNameAppsAppNameDeleteResponsesDefaultContentApplicationJsonSchema {
  error: Paths1Wnqj3QV01OrgsOrgNameTeamsTeamNameAppsAppNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Wnqj3QV01OrgsOrgNameTeamsTeamNameAppsAppNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum76;
  message: string;
}

export interface Paths3K4Kv5V01OrgsOrgNameTeamsTeamNameAppsPostRequestbodyContentApplicationJsonSchema {
  /** The name of the app to be added to the distribution group */
  name: string;
}

export interface PathsT7Lg34V01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchemaAllof0 {
  /** The unique ID (UUID) of the app */
  id: string;
  /** The description of the app */
  description?: string;
  /** The display name of the app */
  displayName: string;
  /** A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase */
  releaseType?: string;
  /** The string representation of the URL pointing to the app's icon */
  iconUrl?: string;
  /** The string representation of the source of the app's icon */
  iconSource?: string;
  /** The name of the app used in URLs */
  name: string;
  /** The OS the app will be running on */
  os: Enum77;
  /** The information about the app's owner */
  owner: PathsTh7L6RV01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchemaAllof0PropertiesOwner;
}

/** The information about the app's owner */
export interface PathsTh7L6RV01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchemaAllof0PropertiesOwner {
  /** The unique id (UUID) of the owner */
  id: string;
  /** The avatar URL of the owner */
  avatarUrl?: string;
  /** The owner's display name */
  displayName: string;
  /** The owner's email address */
  email?: string;
  /** The unique name that used to identify the owner */
  name: string;
  /** The owner type. Can either be 'org' or 'user' */
  type: Enum78;
}

export interface PathsJ34NfmV01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchemaAllof0Allof1 {
  /** A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics */
  appSecret?: string;
  azureSubscription?: Paths1UaovdtV01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchemaAllof0Allof1PropertiesAzureSubscription;
  /** The platform of the app */
  platform?: Enum79;
  /** The creation origin of this app */
  origin?: Enum80;
  /** The created date of this app */
  createdAt?: string;
  /** The last updated date of this app */
  updatedAt?: string;
  /** The permissions of the calling user */
  memberPermissions?: Post201ApplicationJsonAllOfPropertiesItemsItem[];
}

export interface Paths1UaovdtV01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchemaAllof0Allof1PropertiesAzureSubscription {
  /** The azure subscription id */
  subscriptionId: string;
  /** The tenant id of the azure subscription belongs to */
  tenantId: string;
  /** The name of the azure subscription */
  subscriptionName: string;
  /** If the subscription is used for billing */
  isBilling?: boolean;
  /** If the subscription can be used for billing */
  isBillable?: boolean;
  /** If the subscription is internal Microsoft subscription */
  isMicrosoftInternal?: boolean;
}

export interface Paths1H4Oj8KV01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchemaAllof1 {
  /** The permissions the team has for the app */
  teamPermissions?: Post201ApplicationJsonAllOfPropertiesItemsItem[];
}

export interface Paths1YpvsyyV01OrgsOrgNameTeamsTeamNameAppsPostResponsesDefaultContentApplicationJsonSchema {
  error: Paths167LfzyV01OrgsOrgNameTeamsTeamNameAppsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths167LfzyV01OrgsOrgNameTeamsTeamNameAppsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum82;
  message: string;
}

export interface PathsV1407RV01OrgsOrgNameTeamsTeamNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0 {
  /** The unique ID (UUID) of the app */
  id: string;
  /** The description of the app */
  description?: string;
  /** The display name of the app */
  displayName: string;
  /** A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase */
  releaseType?: string;
  /** The string representation of the URL pointing to the app's icon */
  iconUrl?: string;
  /** The string representation of the source of the app's icon */
  iconSource?: string;
  /** The name of the app used in URLs */
  name: string;
  /** The OS the app will be running on */
  os: Get200ApplicationJsonItems0Os;
  /** The information about the app's owner */
  owner: Get200ApplicationJsonItems00Owner;
}

/** The information about the app's owner */
export interface Get200ApplicationJsonItems00Owner {
  /** The unique id (UUID) of the owner */
  id: string;
  /** The avatar URL of the owner */
  avatarUrl?: string;
  /** The owner's display name */
  displayName: string;
  /** The owner's email address */
  email?: string;
  /** The unique name that used to identify the owner */
  name: string;
  /** The owner type. Can either be 'org' or 'user' */
  type: Get200ApplicationJsonItems0OwnerType;
}

export interface PathsO3Iv87V01OrgsOrgNameTeamsTeamNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0Allof1 {
  /** A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics */
  appSecret?: string;
  azureSubscription?: Get200ApplicationJsonItems01AzureSubscription;
  /** The platform of the app */
  platform?: Get200ApplicationJsonItems01Platform;
  /** The creation origin of this app */
  origin?: Get200ApplicationJsonItems01Origin;
  /** The created date of this app */
  createdAt?: string;
  /** The last updated date of this app */
  updatedAt?: string;
  /** The permissions of the calling user */
  memberPermissions?: Get200ApplicationJsonItems01MemberPermissionsItem[];
}

export interface Get200ApplicationJsonItems01AzureSubscription {
  /** The azure subscription id */
  subscriptionId: string;
  /** The tenant id of the azure subscription belongs to */
  tenantId: string;
  /** The name of the azure subscription */
  subscriptionName: string;
  /** If the subscription is used for billing */
  isBilling?: boolean;
  /** If the subscription can be used for billing */
  isBillable?: boolean;
  /** If the subscription is internal Microsoft subscription */
  isMicrosoftInternal?: boolean;
}

export interface Paths73QlfV01OrgsOrgNameTeamsTeamNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof1 {
  /** The permissions the team has for the app */
  teamPermissions?: Get200ApplicationJsonItems1TeamPermissionsItem[];
}

export interface PathsH0Ns4HV01OrgsOrgNameTeamsTeamNameAppsGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths1SjjytyV01OrgsOrgNameTeamsTeamNameAppsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1SjjytyV01OrgsOrgNameTeamsTeamNameAppsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum87;
  message: string;
}

export interface PathsUii78RV01OrgsOrgNameTeamsTeamNameGetResponses200ContentApplicationJsonSchema {
  /** The internal unique id (UUID) of the team. */
  id: string;
  /** The name of the team */
  name: string;
  /** The display name of the team */
  displayName: string;
  /** The description of the team */
  description?: string;
}

export interface Paths16B1TziV01OrgsOrgNameTeamsTeamNameGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths17Oxoi1V01OrgsOrgNameTeamsTeamNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths17Oxoi1V01OrgsOrgNameTeamsTeamNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum88;
  message: string;
}

export interface Paths1HybnvwV01OrgsOrgNameTeamsTeamNameDeleteResponsesDefaultContentApplicationJsonSchema {
  error: PathsI8IuhdV01OrgsOrgNameTeamsTeamNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsI8IuhdV01OrgsOrgNameTeamsTeamNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum89;
  message: string;
}

export interface Paths1414Qm7V01OrgsOrgNameTeamsTeamNamePatchRequestbodyContentApplicationJsonSchema {
  /** The new display name of the team */
  displayName: string;
}

export interface Paths1L1EevaV01OrgsOrgNameTeamsTeamNamePatchResponses200ContentApplicationJsonSchema {
  /** The internal unique id (UUID) of the team. */
  id: string;
  /** The name of the team */
  name: string;
  /** The display name of the team */
  displayName: string;
  /** The description of the team */
  description?: string;
}

export interface Paths1Ga78SuV01OrgsOrgNameTeamsTeamNamePatchResponsesDefaultContentApplicationJsonSchema {
  error: Paths1JegctxV01OrgsOrgNameTeamsTeamNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1JegctxV01OrgsOrgNameTeamsTeamNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum90;
  message: string;
}

export interface Paths63Ea35V01OrgsOrgNameTeamsGetResponses200ContentApplicationJsonSchemaItems {
  /** The internal unique id (UUID) of the team. */
  id: string;
  /** The name of the team */
  name: string;
  /** The display name of the team */
  displayName: string;
  /** The description of the team */
  description?: string;
}

export interface Paths1WbpnrnV01OrgsOrgNameTeamsGetResponsesDefaultContentApplicationJsonSchema {
  error: PathsNb5Vb6V01OrgsOrgNameTeamsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsNb5Vb6V01OrgsOrgNameTeamsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum91;
  message: string;
}

export interface Paths1Iu7UzV01OrgsOrgNameTeamsPostRequestbodyContentApplicationJsonSchema {
  /** The display name of the team */
  displayName: string;
  /** The name of the team */
  name?: string;
  /** The description of the team */
  description?: string;
}

export interface Post201ApplicationJsonItemsItem {
  /** The internal unique id (UUID) of the team. */
  id: string;
  /** The name of the team */
  name: string;
  /** The display name of the team */
  displayName: string;
  /** The description of the team */
  description?: string;
}

export interface Paths1P5700PV01OrgsOrgNameTeamsPostResponsesDefaultContentApplicationJsonSchema {
  error: Paths1J65GdgV01OrgsOrgNameTeamsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1J65GdgV01OrgsOrgNameTeamsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum92;
  message: string;
}

export interface Paths1Qkfv3PV01OrgsOrgNameInvitationsEmailRevokePostResponsesDefaultContentApplicationJsonSchema {
  error: PathsLacoltV01OrgsOrgNameInvitationsEmailRevokePostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsLacoltV01OrgsOrgNameInvitationsEmailRevokePostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum93;
  message: string;
}

export interface PathsMtzmgwV01OrgsOrgNameInvitationsEmailResendPostRequestbodyContentApplicationJsonSchema {
  /** The role of the user to be added */
  role?: PostContentSchemaRole;
}

export interface Paths1W4JklnV01OrgsOrgNameInvitationsEmailResendPostResponsesDefaultContentApplicationJsonSchema {
  error: PathsYm7S9LV01OrgsOrgNameInvitationsEmailResendPostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsYm7S9LV01OrgsOrgNameInvitationsEmailResendPostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum95;
  message: string;
}

export interface Paths8S96O5V01OrgsOrgNameInvitationsEmailPatchRequestbodyContentApplicationJsonSchema {
  /** The user's role in the organizatiion */
  role?: Enum96;
}

export interface Paths1B4403V01OrgsOrgNameInvitationsEmailPatchResponsesDefaultContentApplicationJsonSchema {
  error: PathsRowjxqV01OrgsOrgNameInvitationsEmailPatchResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsRowjxqV01OrgsOrgNameInvitationsEmailPatchResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum97;
  message: string;
}

export interface PathsVoxne2V01OrgsOrgNameInvitationsPostRequestbodyContentApplicationJsonSchema {
  /** The user's email address */
  userEmail: string;
  /** The user's role */
  role?: Enum98;
}

export interface PathsIlk0YtV01OrgsOrgNameInvitationsPostResponsesDefaultContentApplicationJsonSchema {
  error: Paths1Q76Y6ZV01OrgsOrgNameInvitationsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Q76Y6ZV01OrgsOrgNameInvitationsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum99;
  message: string;
}

export interface Paths2KqsncV01OrgsOrgNameInvitationsDeleteRequestbodyContentApplicationJsonSchema {
  /** The user's email address */
  userEmail: string;
}

export interface Paths1PjqhddV01OrgsOrgNameInvitationsDeleteResponsesDefaultContentApplicationJsonSchema {
  error: Paths60ZdzrV01OrgsOrgNameInvitationsDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths60ZdzrV01OrgsOrgNameInvitationsDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum100;
  message: string;
}

export interface Paths1Hzhjt9V01OrgsOrgNameInvitationsGetResponses200ContentApplicationJsonSchemaItems {
  /** The unique ID (UUID) of the invitation */
  id: string;
  /** The email address of the invited user */
  email: string;
  /** The role assigned to the invited user */
  role: string;
}

export interface PathsFqvnp1V01OrgsOrgNameInvitationsGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths1Nc00J0V01OrgsOrgNameInvitationsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Nc00J0V01OrgsOrgNameInvitationsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum101;
  message: string;
}

export interface Paths1AbdgaoV01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItemsAllof0 {
  /** The unique ID of the distribution group */
  id: string;
  /** The name of the distribution group used in URLs */
  name: string;
  /** The name of the distribution group */
  displayName?: string;
  /** The creation origin of this distribution group */
  origin: Get200ApplicationJsonItems0Origin;
  /** Whether the distribution group is public */
  isPublic: boolean;
}

export interface Paths128BpnsV01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItemsAllof1 {
  /** The count of apps associated with this distribution group */
  totalAppsCount?: number;
  /** The count of users in the distribution group */
  totalUsersCount?: number;
  /** The apps associated with the distribution group */
  apps?: Get200ApplicationJsonItems1AppsItem[];
}

export interface Paths1Mb8UcrV01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesAppsItemsAllof0 {
  /** The unique ID (UUID) of the app */
  id: string;
  /** The description of the app */
  description?: string;
  /** The display name of the app */
  displayName: string;
  /** A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase */
  releaseType?: string;
  /** The string representation of the URL pointing to the app's icon */
  iconUrl?: string;
  /** The string representation of the source of the app's icon */
  iconSource?: string;
  /** The name of the app used in URLs */
  name: string;
  /** The OS the app will be running on */
  os: Enum103;
  /** The information about the app's owner */
  owner: Paths1H5PolwV01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesAppsItemsAllof0PropertiesOwner;
}

/** The information about the app's owner */
export interface Paths1H5PolwV01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesAppsItemsAllof0PropertiesOwner {
  /** The unique id (UUID) of the owner */
  id: string;
  /** The avatar URL of the owner */
  avatarUrl?: string;
  /** The owner's display name */
  displayName: string;
  /** The owner's email address */
  email?: string;
  /** The unique name that used to identify the owner */
  name: string;
  /** The owner type. Can either be 'org' or 'user' */
  type: Enum104;
}

export interface Paths1E6JkmgV01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesAppsItemsAllof1 {
  /** A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics */
  appSecret?: string;
  azureSubscription?: Paths16Kve4V01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesAppsItemsAllof1PropertiesAzureSubscription;
  /** The platform of the app */
  platform?: Enum105;
  /** The creation origin of this app */
  origin?: Enum106;
  /** The created date of this app */
  createdAt?: string;
  /** The last updated date of this app */
  updatedAt?: string;
  /** The permissions of the calling user */
  memberPermissions?: Get200ApplicationJsonItems1AppsAllOfPropertiesItemsItem[];
}

export interface Paths16Kve4V01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesAppsItemsAllof1PropertiesAzureSubscription {
  /** The azure subscription id */
  subscriptionId: string;
  /** The tenant id of the azure subscription belongs to */
  tenantId: string;
  /** The name of the azure subscription */
  subscriptionName: string;
  /** If the subscription is used for billing */
  isBilling?: boolean;
  /** If the subscription can be used for billing */
  isBillable?: boolean;
  /** If the subscription is internal Microsoft subscription */
  isMicrosoftInternal?: boolean;
}

export interface Paths1Qqyun6V01OrgsOrgNameDistributionGroupsDetailsGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths1Ftwj8V01OrgsOrgNameDistributionGroupsDetailsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Ftwj8V01OrgsOrgNameDistributionGroupsDetailsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum108;
  message: string;
}

export interface Paths3EixoV01OrgsOrgNameDistributionGroupsDistributionGroupNameResendInvitePostRequestbodyContentApplicationJsonSchema {
  /** The list of emails of the users */
  userEmails?: string[];
}

export interface Paths1Mw5PtqV01OrgsOrgNameDistributionGroupsDistributionGroupNameResendInvitePostResponsesDefaultContentApplicationJsonSchema {
  error: Paths23Jg1TV01OrgsOrgNameDistributionGroupsDistributionGroupNameResendInvitePostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths23Jg1TV01OrgsOrgNameDistributionGroupsDistributionGroupNameResendInvitePostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum109;
  message: string;
}

export interface Paths10EomnwV01OrgsOrgNameDistributionGroupsDistributionGroupNameMembersBulkDeletePostRequestbodyContentApplicationJsonSchema {
  /** The list of emails of the users */
  userEmails?: string[];
}

export interface Paths1Emeq4QV01OrgsOrgNameDistributionGroupsDistributionGroupNameMembersGetResponses200ContentApplicationJsonSchemaItems {
  /** The unique id (UUID) of the user */
  id?: string;
  /** The avatar URL of the user */
  avatarUrl?: string;
  /** User is required to send an old password in order to change the password. */
  canChangePassword?: boolean;
  /** The full name of the user. Might for example be first and last name */
  displayName?: string;
  /** The email address of the user */
  email: string;
  /** Whether the has accepted the invite. Available when an invite is pending, and the value will be "true". */
  invitePending?: boolean;
  /** The unique name that is used to identify the user. */
  name?: string;
}

export interface Paths1Xv7MxwV01OrgsOrgNameDistributionGroupsDistributionGroupNameMembersGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths13Op7UdV01OrgsOrgNameDistributionGroupsDistributionGroupNameMembersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths13Op7UdV01OrgsOrgNameDistributionGroupsDistributionGroupNameMembersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum110;
  message: string;
}

export interface PathsSmhj37V01OrgsOrgNameDistributionGroupsDistributionGroupNameMembersPostRequestbodyContentApplicationJsonSchema {
  /** The list of emails of the users */
  userEmails?: string[];
}

export interface Post200ApplicationJsonItemsItem {
  /** The code of the result */
  code?: string;
  /** Whether the has accepted the invite. Available when an invite is pending, and the value will be "true". */
  invitePending?: boolean;
  /** The message of the result */
  message?: string;
  /** The status code of the result */
  status: number;
  /** The email of the user */
  userEmail?: string;
}

export interface Paths1Bvy48CV01OrgsOrgNameDistributionGroupsDistributionGroupNameMembersPostResponsesDefaultContentApplicationJsonSchema {
  error: PathsXqfotbV01OrgsOrgNameDistributionGroupsDistributionGroupNameMembersPostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsXqfotbV01OrgsOrgNameDistributionGroupsDistributionGroupNameMembersPostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum111;
  message: string;
}

export interface PathsMs4QhdV01OrgsOrgNameDistributionGroupsDistributionGroupNameAppsBulkDeletePostRequestbodyContentApplicationJsonSchema {
  /** The list of apps to delete from the distribution group */
  apps?: PostContentSchemaAppsItem[];
}

export interface PostContentSchemaAppsItem {
  /** The name of the app to be deleted from the distribution group */
  name: string;
}

export interface PathsK6Tv9V01OrgsOrgNameDistributionGroupsDistributionGroupNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0 {
  /** The unique ID (UUID) of the app */
  id: string;
  /** The description of the app */
  description?: string;
  /** The display name of the app */
  displayName: string;
  /** A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase */
  releaseType?: string;
  /** The string representation of the URL pointing to the app's icon */
  iconUrl?: string;
  /** The string representation of the source of the app's icon */
  iconSource?: string;
  /** The name of the app used in URLs */
  name: string;
  /** The OS the app will be running on */
  os: Enum112;
  /** The information about the app's owner */
  owner: Paths10IsvgrV01OrgsOrgNameDistributionGroupsDistributionGroupNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0PropertiesOwner;
}

/** The information about the app's owner */
export interface Paths10IsvgrV01OrgsOrgNameDistributionGroupsDistributionGroupNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0PropertiesOwner {
  /** The unique id (UUID) of the owner */
  id: string;
  /** The avatar URL of the owner */
  avatarUrl?: string;
  /** The owner's display name */
  displayName: string;
  /** The owner's email address */
  email?: string;
  /** The unique name that used to identify the owner */
  name: string;
  /** The owner type. Can either be 'org' or 'user' */
  type: Enum113;
}

export interface PathsVbaitqV01OrgsOrgNameDistributionGroupsDistributionGroupNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof1 {
  /** The platform of the app */
  platform?: string;
  /** The creation origin of this app */
  origin?: string;
}

export interface PathsIy66N7V01OrgsOrgNameDistributionGroupsDistributionGroupNameAppsPostRequestbodyContentApplicationJsonSchema {
  /** The list of apps to add to distribution group */
  apps?: PathsJ09Ix2V01OrgsOrgNameDistributionGroupsDistributionGroupNameAppsPostRequestbodyContentApplicationJsonSchemaPropertiesAppsItems[];
}

export interface PathsJ09Ix2V01OrgsOrgNameDistributionGroupsDistributionGroupNameAppsPostRequestbodyContentApplicationJsonSchemaPropertiesAppsItems {
  /** The name of the app to be added to the distribution group */
  name: string;
}

export interface Paths1O9EmfnV01OrgsOrgNameDistributionGroupsDistributionGroupNameGetResponses200ContentApplicationJsonSchema {
  /** The unique ID of the distribution group */
  id: string;
  /** The name of the distribution group used in URLs */
  name: string;
  /** The name of the distribution group */
  displayName?: string;
  /** The creation origin of this distribution group */
  origin: Enum114;
  /** Whether the distribution group is public */
  isPublic: boolean;
}

export interface Paths18ObgfsV01OrgsOrgNameDistributionGroupsDistributionGroupNameGetResponsesDefaultContentApplicationJsonSchema {
  error: PathsB6KwtdV01OrgsOrgNameDistributionGroupsDistributionGroupNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsB6KwtdV01OrgsOrgNameDistributionGroupsDistributionGroupNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum115;
  message: string;
}

export interface Paths6RaacuV01OrgsOrgNameDistributionGroupsDistributionGroupNamePatchRequestbodyContentApplicationJsonSchema {
  /** The name of the distribution group */
  name?: string;
  /** Whether the distribution group is public */
  isPublic?: boolean;
}

export interface Paths8Ig5HaV01OrgsOrgNameDistributionGroupsDistributionGroupNamePatchResponses200ContentApplicationJsonSchema {
  /** The unique ID of the distribution group */
  id: string;
  /** The name of the distribution group used in URLs */
  name: string;
  /** The name of the distribution group */
  displayName?: string;
  /** The creation origin of this distribution group */
  origin: Enum116;
  /** Whether the distribution group is public */
  isPublic: boolean;
}

export interface PathsFf3Vb5V01OrgsOrgNameDistributionGroupsDistributionGroupNamePatchResponsesDefaultContentApplicationJsonSchema {
  error: Paths1Dp4D1FV01OrgsOrgNameDistributionGroupsDistributionGroupNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Dp4D1FV01OrgsOrgNameDistributionGroupsDistributionGroupNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum117;
  message: string;
}

export interface PathsG4K3OdV01OrgsOrgNameDistributionGroupsDistributionGroupNameDeleteResponsesDefaultContentApplicationJsonSchema {
  error: Paths1Cdwp85V01OrgsOrgNameDistributionGroupsDistributionGroupNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Cdwp85V01OrgsOrgNameDistributionGroupsDistributionGroupNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum118;
  message: string;
}

export interface Paths150Qpz7V01OrgsOrgNameDistributionGroupsPostRequestbodyContentApplicationJsonSchema {
  /** The name of the distribution group */
  name: string;
  /** The display name of the distribution group. If not specified, the name will be used. */
  displayName?: string;
}

export interface Paths19Pq8TpV01OrgsOrgNameDistributionGroupsPostResponses201ContentApplicationJsonSchema {
  /** The unique ID of the distribution group */
  id: string;
  /** The name of the distribution group used in URLs */
  name: string;
  /** The name of the distribution group */
  displayName?: string;
  /** The creation origin of this distribution group */
  origin: Enum119;
  /** Whether the distribution group is public */
  isPublic: boolean;
}

export interface Paths210VmzV01OrgsOrgNameDistributionGroupsPostResponsesDefaultContentApplicationJsonSchema {
  error: PathsI0GiccV01OrgsOrgNameDistributionGroupsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsI0GiccV01OrgsOrgNameDistributionGroupsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum120;
  message: string;
}

export interface Get201ApplicationJsonItemsItem {
  /** The unique ID of the distribution group */
  id: string;
  /** The name of the distribution group used in URLs */
  name: string;
  /** The name of the distribution group */
  displayName?: string;
  /** The creation origin of this distribution group */
  origin: GetResponses201ContentApplicationJsonSchemaItemOrigin;
  /** Whether the distribution group is public */
  isPublic: boolean;
}

export interface Paths5T6Uy5V01OrgsOrgNameDistributionGroupsGetResponsesDefaultContentApplicationJsonSchema {
  error: PathsVimdtoV01OrgsOrgNameDistributionGroupsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsVimdtoV01OrgsOrgNameDistributionGroupsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum122;
  message: string;
}

export interface Paths1R8N8WnV01OrgsOrgNameAzureSubscriptionsGetResponses200ContentApplicationJsonSchemaItems {
  /** The azure subscription id */
  subscriptionId: string;
  /** The tenant id of the azure subscription belongs to */
  tenantId: string;
  /** The name of the azure subscription */
  subscriptionName: string;
  /** If the subscription is used for billing */
  isBilling?: boolean;
  /** If the subscription can be used for billing */
  isBillable?: boolean;
  /** If the subscription is internal Microsoft subscription */
  isMicrosoftInternal?: boolean;
}

export interface Paths1Ocwvn4V01OrgsOrgNameAzureSubscriptionsGetResponsesDefaultContentApplicationJsonSchema {
  error: PathsQnnblgV01OrgsOrgNameAzureSubscriptionsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsQnnblgV01OrgsOrgNameAzureSubscriptionsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum123;
  message: string;
}

export interface Paths7Mbu6OV01OrgsOrgNameAvatarPostResponses200ContentApplicationJsonSchema {
  /** The internal unique id (UUID) of the organization. */
  id: string;
  /** The display name of the organization */
  displayName: string;
  /** The slug name of the organization */
  name: string;
  /** The URL to a user-uploaded Avatar image */
  avatarUrl?: string;
  /** The creation origin of this organization */
  origin: Enum124;
  /** The creation date of this organization */
  createdAt: string;
  /** The date the organization was last updated at */
  updatedAt: string;
}

export interface Paths2Bw88TV01OrgsOrgNameAvatarPostResponsesDefaultContentApplicationJsonSchema {
  error: Paths1L124V6V01OrgsOrgNameAvatarPostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1L124V6V01OrgsOrgNameAvatarPostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum125;
  message: string;
}

export interface PathsQe14CxV01OrgsOrgNameAvatarDeleteResponses200ContentApplicationJsonSchema {
  /** The internal unique id (UUID) of the organization. */
  id: string;
  /** The display name of the organization */
  displayName: string;
  /** The slug name of the organization */
  name: string;
  /** The URL to a user-uploaded Avatar image */
  avatarUrl?: string;
  /** The creation origin of this organization */
  origin: Enum126;
  /** The creation date of this organization */
  createdAt: string;
  /** The date the organization was last updated at */
  updatedAt: string;
}

export interface Paths1Ytl347V01OrgsOrgNameAvatarDeleteResponsesDefaultContentApplicationJsonSchema {
  error: PathsUgy2OsV01OrgsOrgNameAvatarDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsUgy2OsV01OrgsOrgNameAvatarDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum127;
  message: string;
}

export interface PathsDf5UdfV01OrgsOrgNameAppsPostRequestbodyContentApplicationJsonSchema {
  /** A short text describing the app */
  description?: string;
  /** A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase */
  releaseType?: string;
  /** The descriptive name of the app. This can contain any characters */
  displayName: string;
  /** The name of the app used in URLs */
  name?: string;
  /** The OS the app will be running on */
  os: PostContentSchemaOs;
  /** The platform of the app */
  platform: PostContentSchemaPlatform;
}

export interface Paths1Dw0Mx6V01OrgsOrgNameAppsPostResponses200ContentApplicationJsonSchemaAllof0 {
  /** The unique ID (UUID) of the app */
  id: string;
  /** The description of the app */
  description?: string;
  /** The display name of the app */
  displayName: string;
  /** A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase */
  releaseType?: string;
  /** The string representation of the URL pointing to the app's icon */
  iconUrl?: string;
  /** The string representation of the source of the app's icon */
  iconSource?: string;
  /** The name of the app used in URLs */
  name: string;
  /** The OS the app will be running on */
  os: Enum130;
  /** The information about the app's owner */
  owner: PathsQujxthV01OrgsOrgNameAppsPostResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner;
}

/** The information about the app's owner */
export interface PathsQujxthV01OrgsOrgNameAppsPostResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner {
  /** The unique id (UUID) of the owner */
  id: string;
  /** The avatar URL of the owner */
  avatarUrl?: string;
  /** The owner's display name */
  displayName: string;
  /** The owner's email address */
  email?: string;
  /** The unique name that used to identify the owner */
  name: string;
  /** The owner type. Can either be 'org' or 'user' */
  type: Enum131;
}

export interface Paths1S1MjxkV01OrgsOrgNameAppsPostResponses200ContentApplicationJsonSchemaAllof1 {
  /** A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics */
  appSecret?: string;
  azureSubscription?: PathsVt2NerV01OrgsOrgNameAppsPostResponses200ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription;
  /** The platform of the app */
  platform?: Enum132;
  /** The creation origin of this app */
  origin?: Enum133;
  /** The created date of this app */
  createdAt?: string;
  /** The last updated date of this app */
  updatedAt?: string;
  /** The permissions of the calling user */
  memberPermissions?: Post200ApplicationJsonAllOfPropertiesItemsItem[];
}

export interface PathsVt2NerV01OrgsOrgNameAppsPostResponses200ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription {
  /** The azure subscription id */
  subscriptionId: string;
  /** The tenant id of the azure subscription belongs to */
  tenantId: string;
  /** The name of the azure subscription */
  subscriptionName: string;
  /** If the subscription is used for billing */
  isBilling?: boolean;
  /** If the subscription can be used for billing */
  isBillable?: boolean;
  /** If the subscription is internal Microsoft subscription */
  isMicrosoftInternal?: boolean;
}

export interface Paths1Khm1L1V01OrgsOrgNameAppsPostResponses201ContentApplicationJsonSchemaAllof0 {
  /** The unique ID (UUID) of the app */
  id: string;
  /** The description of the app */
  description?: string;
  /** The display name of the app */
  displayName: string;
  /** A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase */
  releaseType?: string;
  /** The string representation of the URL pointing to the app's icon */
  iconUrl?: string;
  /** The string representation of the source of the app's icon */
  iconSource?: string;
  /** The name of the app used in URLs */
  name: string;
  /** The OS the app will be running on */
  os: Enum135;
  /** The information about the app's owner */
  owner: PathsP00B3IV01OrgsOrgNameAppsPostResponses201ContentApplicationJsonSchemaAllof0PropertiesOwner;
}

/** The information about the app's owner */
export interface PathsP00B3IV01OrgsOrgNameAppsPostResponses201ContentApplicationJsonSchemaAllof0PropertiesOwner {
  /** The unique id (UUID) of the owner */
  id: string;
  /** The avatar URL of the owner */
  avatarUrl?: string;
  /** The owner's display name */
  displayName: string;
  /** The owner's email address */
  email?: string;
  /** The unique name that used to identify the owner */
  name: string;
  /** The owner type. Can either be 'org' or 'user' */
  type: Enum136;
}

export interface Paths1RmugtV01OrgsOrgNameAppsPostResponses201ContentApplicationJsonSchemaAllof1 {
  /** A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics */
  appSecret?: string;
  azureSubscription?: PathsNqnbz4V01OrgsOrgNameAppsPostResponses201ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription;
  /** The platform of the app */
  platform?: Enum137;
  /** The creation origin of this app */
  origin?: Enum138;
  /** The created date of this app */
  createdAt?: string;
  /** The last updated date of this app */
  updatedAt?: string;
  /** The permissions of the calling user */
  memberPermissions?: Enum139[];
}

export interface PathsNqnbz4V01OrgsOrgNameAppsPostResponses201ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription {
  /** The azure subscription id */
  subscriptionId: string;
  /** The tenant id of the azure subscription belongs to */
  tenantId: string;
  /** The name of the azure subscription */
  subscriptionName: string;
  /** If the subscription is used for billing */
  isBilling?: boolean;
  /** If the subscription can be used for billing */
  isBillable?: boolean;
  /** If the subscription is internal Microsoft subscription */
  isMicrosoftInternal?: boolean;
}

export interface Paths7Ywy9V01OrgsOrgNameAppsPostResponsesDefaultContentApplicationJsonSchema {
  error: Paths1T7YgduV01OrgsOrgNameAppsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1T7YgduV01OrgsOrgNameAppsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum140;
  message: string;
}

export interface Paths1H84Up2V01OrgsOrgNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0 {
  /** The unique ID (UUID) of the app */
  id: string;
  /** The description of the app */
  description?: string;
  /** The display name of the app */
  displayName: string;
  /** A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase */
  releaseType?: string;
  /** The string representation of the URL pointing to the app's icon */
  iconUrl?: string;
  /** The string representation of the source of the app's icon */
  iconSource?: string;
  /** The name of the app used in URLs */
  name: string;
  /** The OS the app will be running on */
  os: Enum141;
  /** The information about the app's owner */
  owner: PathsLi7Z1TV01OrgsOrgNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0PropertiesOwner;
}

/** The information about the app's owner */
export interface PathsLi7Z1TV01OrgsOrgNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0PropertiesOwner {
  /** The unique id (UUID) of the owner */
  id: string;
  /** The avatar URL of the owner */
  avatarUrl?: string;
  /** The owner's display name */
  displayName: string;
  /** The owner's email address */
  email?: string;
  /** The unique name that used to identify the owner */
  name: string;
  /** The owner type. Can either be 'org' or 'user' */
  type: Enum142;
}

export interface Paths9U0PvjV01OrgsOrgNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof1 {
  /** A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics */
  appSecret?: string;
  azureSubscription?: Paths1Spw5TqV01OrgsOrgNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesAzureSubscription;
  /** The platform of the app */
  platform?: Enum143;
  /** The creation origin of this app */
  origin?: Enum144;
  /** The created date of this app */
  createdAt?: string;
  /** The last updated date of this app */
  updatedAt?: string;
  /** The permissions of the calling user */
  memberPermissions?: Enum145[];
}

export interface Paths1Spw5TqV01OrgsOrgNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesAzureSubscription {
  /** The azure subscription id */
  subscriptionId: string;
  /** The tenant id of the azure subscription belongs to */
  tenantId: string;
  /** The name of the azure subscription */
  subscriptionName: string;
  /** If the subscription is used for billing */
  isBilling?: boolean;
  /** If the subscription can be used for billing */
  isBillable?: boolean;
  /** If the subscription is internal Microsoft subscription */
  isMicrosoftInternal?: boolean;
}

export interface Paths14Atv4RV01OrgsOrgNameAppsGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths1Khl0O8V01OrgsOrgNameAppsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Khl0O8V01OrgsOrgNameAppsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum146;
  message: string;
}

export interface Paths1Sl6Qy7V01OrgsOrgNameGetResponses200ContentApplicationJsonSchema {
  /** The internal unique id (UUID) of the organization. */
  id: string;
  /** The display name of the organization */
  displayName: string;
  /** The slug name of the organization */
  name: string;
  /** The URL to a user-uploaded Avatar image */
  avatarUrl?: string;
  /** The creation origin of this organization */
  origin: Enum147;
  /** The creation date of this organization */
  createdAt: string;
  /** The date the organization was last updated at */
  updatedAt: string;
}

export interface Paths16NvgokV01OrgsOrgNameGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths1TpqyqlV01OrgsOrgNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1TpqyqlV01OrgsOrgNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum148;
  message: string;
}

export interface Paths600DxeV01OrgsOrgNamePatchRequestbodyContentApplicationJsonSchema {
  /** The full (friendly) name of the organization. */
  displayName?: string;
  /** The name of the organization used in URLs */
  name?: string;
}

export interface Paths1Vgfr6WV01OrgsOrgNamePatchResponses200ContentApplicationJsonSchema {
  /** The internal unique id (UUID) of the organization. */
  id: string;
  /** The display name of the organization */
  displayName: string;
  /** The slug name of the organization */
  name: string;
  /** The URL to a user-uploaded Avatar image */
  avatarUrl?: string;
  /** The creation origin of this organization */
  origin: Enum149;
  /** The creation date of this organization */
  createdAt: string;
  /** The date the organization was last updated at */
  updatedAt: string;
}

export interface Paths11Pjgn9V01OrgsOrgNamePatchResponsesDefaultContentApplicationJsonSchema {
  error: PathsLr1XxaV01OrgsOrgNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsLr1XxaV01OrgsOrgNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum150;
  message: string;
}

export interface Paths9Ngr72V01OrgsOrgNameDeleteResponsesDefaultContentApplicationJsonSchema {
  error: PathsRkg2V3V01OrgsOrgNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsRkg2V3V01OrgsOrgNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum151;
  message: string;
}

/** Aggregated Billing Information for a user or an organization */
export interface PathsI4V0ItV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchema {
  /** Version of the Billing Information schema */
  version?: string;
  /** The ISO 8601 datetime of last modification */
  timestamp?: string;
  /** ID of the user or organization */
  id?: string;
  /** Billing Plans section in the Billing Information */
  billingPlans?: PathsDrx757V01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplans;
  /** Usage section in the Billing Information */
  usage?: Paths1O6G28HV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsage;
  /** Unique identifier for the Azure subscription used for billing */
  azureSubscriptionId?: string;
  /** State of the Azure subscription used for billing */
  azureSubscriptionState?: Enum158;
}

/** Billing Plans section in the Billing Information */
export interface PathsDrx757V01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplans {
  /** Billing Plans for a single service */
  buildService?: Paths1Xtfer8V01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservice;
  /** Billing Plans for a single service */
  testService?: Paths10G44BrV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservice;
}

/** Billing Plans for a single service */
export interface Paths1Xtfer8V01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservice {
  /** Can customer select trial plan for that service (if it exists)? */
  canSelectTrialPlan?: boolean;
  /** Expiration time of the last selected trial plan. Will be null if trial plan was not used. */
  lastTrialPlanExpirationTime?: string;
  /** Billing plans for a given period */
  currentBillingPeriod?: Paths1Osgu8EV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiod;
}

/** Billing plans for a given period */
export interface Paths1Osgu8EV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiod {
  /** Inclusive start of the period */
  startTime?: string;
  /** Exclusive end of the period. */
  endTime?: string;
  /** Selection of a billing plan */
  byAccount?: PathsFs55AdV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiodPropertiesByaccount;
}

/** Selection of a billing plan */
export interface PathsFs55AdV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiodPropertiesByaccount {
  /** Number of instances of the billing plan. */
  count?: number;
  /** Billing Plan */
  plan?: Paths16U1N2HV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiodPropertiesByaccountPropertiesPlan;
}

/** Billing Plan */
export interface Paths16U1N2HV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiodPropertiesByaccountPropertiesPlan {
  /** The Billing Plan ID */
  id?: string;
  /** Version of the Billing Plan schema */
  version?: string;
  /** Price of the Billing Plan */
  price?: number;
  /** Service that receives payments for this billing plan. */
  paymentSource?: Enum154;
  /** Name of the service that the plan applies to. */
  service?: Enum155;
  /** A collection of named numeric values */
  limits?: { [propertyName: string]: number };
  /** Collection of attribute values. */
  attributes?: { [propertyName: string]: Record<string, unknown> };
  parentId?: string;
}

/** Billing Plans for a single service */
export interface Paths10G44BrV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservice {
  /** Can customer select trial plan for that service (if it exists)? */
  canSelectTrialPlan?: boolean;
  /** Expiration time of the last selected trial plan. Will be null if trial plan was not used. */
  lastTrialPlanExpirationTime?: string;
  /** Billing plans for a given period */
  currentBillingPeriod?: Paths4VceciV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiod;
}

/** Billing plans for a given period */
export interface Paths4VceciV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiod {
  /** Inclusive start of the period */
  startTime?: string;
  /** Exclusive end of the period. */
  endTime?: string;
  /** Selection of a billing plan */
  byAccount?: Paths8B89MlV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiodPropertiesByaccount;
}

/** Selection of a billing plan */
export interface Paths8B89MlV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiodPropertiesByaccount {
  /** Number of instances of the billing plan. */
  count?: number;
  /** Billing Plan */
  plan?: PathsHfo40PV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiodPropertiesByaccountPropertiesPlan;
}

/** Billing Plan */
export interface PathsHfo40PV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiodPropertiesByaccountPropertiesPlan {
  /** The Billing Plan ID */
  id?: string;
  /** Version of the Billing Plan schema */
  version?: string;
  /** Price of the Billing Plan */
  price?: number;
  /** Service that receives payments for this billing plan. */
  paymentSource?: Enum156;
  /** Name of the service that the plan applies to. */
  service?: Enum157;
  /** A collection of named numeric values */
  limits?: { [propertyName: string]: number };
  /** Collection of attribute values. */
  attributes?: { [propertyName: string]: Record<string, unknown> };
  parentId?: string;
}

/** Usage section in the Billing Information */
export interface Paths1O6G28HV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsage {
  /** Resource usage for a single Mobile Center service */
  buildService?: Paths6BqcpcV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesBuildservice;
  /** Resource usage for a single Mobile Center service */
  testService?: Paths169LdneV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesTestservice;
}

/** Resource usage for a single Mobile Center service */
export interface Paths6BqcpcV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesBuildservice {
  /** Usage for a single period */
  currentUsagePeriod?: PathsO0Ik8RV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesBuildservicePropertiesCurrentusageperiod;
}

/** Usage for a single period */
export interface PathsO0Ik8RV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesBuildservicePropertiesCurrentusageperiod {
  /** Inclusive start time of the usage period */
  startTime?: string;
  /** Exclusive end time of the usage period. */
  endTime?: string;
  /** A collection of named numeric values */
  byAccount?: { [propertyName: string]: number };
  /** A collection of  named numeric values grouped by app */
  byApp?: { [propertyName: string]: { [propertyName: string]: number } };
}

/** Resource usage for a single Mobile Center service */
export interface Paths169LdneV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesTestservice {
  /** Usage for a single period */
  currentUsagePeriod?: Paths3P5EulV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesTestservicePropertiesCurrentusageperiod;
}

/** Usage for a single period */
export interface Paths3P5EulV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesTestservicePropertiesCurrentusageperiod {
  /** Inclusive start time of the usage period */
  startTime?: string;
  /** Exclusive end time of the usage period. */
  endTime?: string;
  /** A collection of named numeric values */
  byAccount?: { [propertyName: string]: number };
  /** A collection of  named numeric values grouped by app */
  byApp?: { [propertyName: string]: { [propertyName: string]: number } };
}

/** Error */
export interface Paths17En3P7V01OrgsOrgnameBillingAggregatedGetResponsesDefaultContentApplicationJsonSchema {
  error?: Paths1Qu2E0V01OrgsOrgnameBillingAggregatedGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Qu2E0V01OrgsOrgnameBillingAggregatedGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  /** The status code return by the API. It can be 400 or 403 or 500. */
  code?: Enum159;
  /** The reason for the request failed */
  message?: string;
}

export interface Paths184FzfwV01OrgsPostRequestbodyContentApplicationJsonSchema {
  /** The display name of the organization */
  displayName?: string;
  /** The name of the organization used in URLs */
  name?: string;
}

export interface Paths5Gk61LV01OrgsPostResponses201ContentApplicationJsonSchema {
  /** The internal unique id (UUID) of the organization. */
  id: string;
  /** The display name of the organization */
  displayName: string;
  /** The slug name of the organization */
  name: string;
  /** The URL to a user-uploaded Avatar image */
  avatarUrl?: string;
  /** The creation origin of this organization */
  origin: Enum160;
  /** The creation date of this organization */
  createdAt: string;
  /** The date the organization was last updated at */
  updatedAt: string;
}

export interface Paths92RvyjV01OrgsPostResponsesDefaultContentApplicationJsonSchema {
  error: PathsQ9PeznV01OrgsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsQ9PeznV01OrgsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum161;
  message: string;
}

export interface Paths1Ft71BmV01OrgsGetResponses200ContentApplicationJsonSchemaItems {
  /** The display name of the organization */
  displayName: string;
  /** The slug name of the organization */
  name: string;
  /** The creation origin of this organization */
  origin: GetResponses200ContentApplicationJsonSchemaItemOrigin;
}

export interface PathsZre2DkV01OrgsGetResponsesDefaultContentApplicationJsonSchema {
  error: PathsMfe2OzV01OrgsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsMfe2OzV01OrgsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum163;
  message: string;
}

export interface PathsJ7Rnt8V01LegacyUpdatecheckGetResponses200ContentApplicationJsonSchema {
  updateInfo: Paths1Y9EjsmV01LegacyUpdatecheckGetResponses200ContentApplicationJsonSchemaPropertiesUpdateinfo;
}

export interface Paths13Ux7UhV01LegacyUpdatecheckGetResponses200ContentApplicationJsonSchemaPropertiesUpdateinfoAllof0 {
  appVersion?: string;
  description?: string;
  isDisabled?: boolean;
  isMandatory?: boolean;
  rollout?: number;
}

export interface Paths1Gf0E4FV01LegacyUpdatecheckGetResponses200ContentApplicationJsonSchemaPropertiesUpdateinfoAllof1 {
  downloadURL?: string;
  isAvailable?: boolean;
  packageSize?: number;
  shouldRunBinaryVersion?: boolean;
  updateAppVersion?: boolean;
  packageHash?: string;
  label?: string;
}

export interface PathsNsgzhkV01LegacyUpdatecheckGetResponsesDefaultContentApplicationJsonSchema {
  message: string;
}

export interface PathsPkpkpaV01LegacyReportstatusDownloadPostRequestbodyContentApplicationJsonSchema {
  deploymentKey?: string;
  label?: string;
  appVersion?: string;
  previousDeploymentKey?: string;
  previousLabelOrAppVersion?: string;
  status?: string;
  clientUniqueId?: string;
}

export interface Paths6DbuoaV01LegacyReportstatusDownloadPostResponsesDefaultContentApplicationJsonSchema {
  message: string;
}

export interface PathsIy9KlqV01LegacyReportstatusDeployPostRequestbodyContentApplicationJsonSchema {
  deploymentKey?: string;
  label?: string;
  appVersion?: string;
  previousDeploymentKey?: string;
  previousLabelOrAppVersion?: string;
  status?: string;
  clientUniqueId?: string;
}

export interface Paths1Ho5Wt0V01LegacyReportstatusDeployPostResponsesDefaultContentApplicationJsonSchema {
  message: string;
}

export interface Paths1O7H121V01InvitationsSentGetResponses200ContentApplicationJsonSchemaItems {
  /** The id of the invitation */
  invitationId: string;
  organization?: GetResponses200ContentApplicationJsonSchemaItemOrganization;
  app?: GetResponses200ContentApplicationJsonSchemaItemApp;
}

export interface GetResponses200ContentApplicationJsonSchemaItemOrganization {
  /** The internal unique id (UUID) of the organization. */
  id: string;
  /** The display name of the organization */
  displayName: string;
  /** The slug name of the organization */
  name: string;
  /** The URL to a user-uploaded Avatar image */
  avatarUrl?: string;
  /** The creation origin of this organization */
  origin: Get200ApplicationJsonItemsOrganizationOrigin;
  /** The creation date of this organization */
  createdAt: string;
  /** The date the organization was last updated at */
  updatedAt: string;
}

export interface PathsC6NjndV01InvitationsSentGetResponses200ContentApplicationJsonSchemaItemsPropertiesAppAllof0 {
  /** The unique ID (UUID) of the app */
  id: string;
  /** The description of the app */
  description?: string;
  /** The display name of the app */
  displayName: string;
  /** A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase */
  releaseType?: string;
  /** The string representation of the URL pointing to the app's icon */
  iconUrl?: string;
  /** The string representation of the source of the app's icon */
  iconSource?: string;
  /** The name of the app used in URLs */
  name: string;
  /** The OS the app will be running on */
  os: Get200ApplicationJsonItemsApp0Os;
  /** The information about the app's owner */
  owner: Get200ApplicationJsonItemsApp0Owner;
}

/** The information about the app's owner */
export interface Get200ApplicationJsonItemsApp0Owner {
  /** The unique id (UUID) of the owner */
  id: string;
  /** The avatar URL of the owner */
  avatarUrl?: string;
  /** The owner's display name */
  displayName: string;
  /** The owner's email address */
  email?: string;
  /** The unique name that used to identify the owner */
  name: string;
  /** The owner type. Can either be 'org' or 'user' */
  type: Get200ApplicationJsonItemsApp0OwnerType;
}

export interface PathsGjcam3V01InvitationsSentGetResponses200ContentApplicationJsonSchemaItemsPropertiesAppAllof1 {
  /** A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics */
  appSecret?: string;
  azureSubscription?: Get200ApplicationJsonItemsApp1AzureSubscription;
  /** The platform of the app */
  platform?: Get200ApplicationJsonItemsApp1Platform;
  /** The creation origin of this app */
  origin?: Get200ApplicationJsonItemsApp1Origin;
  /** The created date of this app */
  createdAt?: string;
  /** The last updated date of this app */
  updatedAt?: string;
  /** The permissions of the calling user */
  memberPermissions?: Get200ApplicationJsonItemsApp1MemberPermissionsItem[];
}

export interface Get200ApplicationJsonItemsApp1AzureSubscription {
  /** The azure subscription id */
  subscriptionId: string;
  /** The tenant id of the azure subscription belongs to */
  tenantId: string;
  /** The name of the azure subscription */
  subscriptionName: string;
  /** If the subscription is used for billing */
  isBilling?: boolean;
  /** If the subscription can be used for billing */
  isBillable?: boolean;
  /** If the subscription is internal Microsoft subscription */
  isMicrosoftInternal?: boolean;
}

export interface Paths1CtdoowV01InvitationsSentGetResponsesDefaultContentApplicationJsonSchema {
  error: PathsJwo4TqV01InvitationsSentGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsJwo4TqV01InvitationsSentGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum170;
  message: string;
}

/** Aggregated Billing Information for a user an the organizations in which the user is an admin. */
export interface Paths19Yz4JgV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchema {
  /** Aggregated Billing Information for a user or an organization */
  aggregatedBillings?: Paths1Y6O21GV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillings;
}

/** Aggregated Billing Information for a user or an organization */
export interface Paths1Y6O21GV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillings {
  /** Version of the Billing Information schema */
  version?: string;
  /** The ISO 8601 datetime of last modification */
  timestamp?: string;
  /** ID of the user or organization */
  id?: string;
  /** Billing Plans section in the Billing Information */
  billingPlans?: Paths1I0CfbaV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplans;
  /** Usage section in the Billing Information */
  usage?: PathsPsarsvV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesUsage;
  /** Unique identifier for the Azure subscription used for billing */
  azureSubscriptionId?: string;
  /** State of the Azure subscription used for billing */
  azureSubscriptionState?: Enum177;
}

/** Billing Plans section in the Billing Information */
export interface Paths1I0CfbaV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplans {
  /** Billing Plans for a single service */
  buildService?: PathsQkckhxV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesBuildservice;
  /** Billing Plans for a single service */
  testService?: Paths10ZoldqV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesTestservice;
}

/** Billing Plans for a single service */
export interface PathsQkckhxV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesBuildservice {
  /** Can customer select trial plan for that service (if it exists)? */
  canSelectTrialPlan?: boolean;
  /** Expiration time of the last selected trial plan. Will be null if trial plan was not used. */
  lastTrialPlanExpirationTime?: string;
  /** Billing plans for a given period */
  currentBillingPeriod?: Paths14R3BxnV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiod;
}

/** Billing plans for a given period */
export interface Paths14R3BxnV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiod {
  /** Inclusive start of the period */
  startTime?: string;
  /** Exclusive end of the period. */
  endTime?: string;
  /** Selection of a billing plan */
  byAccount?: PathsTuilg8V01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiodPropertiesByaccount;
}

/** Selection of a billing plan */
export interface PathsTuilg8V01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiodPropertiesByaccount {
  /** Number of instances of the billing plan. */
  count?: number;
  /** Billing Plan */
  plan?: Paths1Irmvh2V01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiodPropertiesByaccountPropertiesPlan;
}

/** Billing Plan */
export interface Paths1Irmvh2V01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiodPropertiesByaccountPropertiesPlan {
  /** The Billing Plan ID */
  id?: string;
  /** Version of the Billing Plan schema */
  version?: string;
  /** Price of the Billing Plan */
  price?: number;
  /** Service that receives payments for this billing plan. */
  paymentSource?: Enum173;
  /** Name of the service that the plan applies to. */
  service?: Enum174;
  /** A collection of named numeric values */
  limits?: { [propertyName: string]: number };
  /** Collection of attribute values. */
  attributes?: { [propertyName: string]: Record<string, unknown> };
  parentId?: string;
}

/** Billing Plans for a single service */
export interface Paths10ZoldqV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesTestservice {
  /** Can customer select trial plan for that service (if it exists)? */
  canSelectTrialPlan?: boolean;
  /** Expiration time of the last selected trial plan. Will be null if trial plan was not used. */
  lastTrialPlanExpirationTime?: string;
  /** Billing plans for a given period */
  currentBillingPeriod?: Paths1Vmwtx1V01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiod;
}

/** Billing plans for a given period */
export interface Paths1Vmwtx1V01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiod {
  /** Inclusive start of the period */
  startTime?: string;
  /** Exclusive end of the period. */
  endTime?: string;
  /** Selection of a billing plan */
  byAccount?: Paths11UfwyrV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiodPropertiesByaccount;
}

/** Selection of a billing plan */
export interface Paths11UfwyrV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiodPropertiesByaccount {
  /** Number of instances of the billing plan. */
  count?: number;
  /** Billing Plan */
  plan?: Paths1Fvt1F7V01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiodPropertiesByaccountPropertiesPlan;
}

/** Billing Plan */
export interface Paths1Fvt1F7V01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiodPropertiesByaccountPropertiesPlan {
  /** The Billing Plan ID */
  id?: string;
  /** Version of the Billing Plan schema */
  version?: string;
  /** Price of the Billing Plan */
  price?: number;
  /** Service that receives payments for this billing plan. */
  paymentSource?: Enum175;
  /** Name of the service that the plan applies to. */
  service?: Enum176;
  /** A collection of named numeric values */
  limits?: { [propertyName: string]: number };
  /** Collection of attribute values. */
  attributes?: { [propertyName: string]: Record<string, unknown> };
  parentId?: string;
}

/** Usage section in the Billing Information */
export interface PathsPsarsvV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesUsage {
  /** Resource usage for a single Mobile Center service */
  buildService?: PathsBdhx2OV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesUsagePropertiesBuildservice;
  /** Resource usage for a single Mobile Center service */
  testService?: Paths1XkzlciV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesUsagePropertiesTestservice;
}

/** Resource usage for a single Mobile Center service */
export interface PathsBdhx2OV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesUsagePropertiesBuildservice {
  /** Usage for a single period */
  currentUsagePeriod?: PathsO8QgrgV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesUsagePropertiesBuildservicePropertiesCurrentusageperiod;
}

/** Usage for a single period */
export interface PathsO8QgrgV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesUsagePropertiesBuildservicePropertiesCurrentusageperiod {
  /** Inclusive start time of the usage period */
  startTime?: string;
  /** Exclusive end time of the usage period. */
  endTime?: string;
  /** A collection of named numeric values */
  byAccount?: { [propertyName: string]: number };
  /** A collection of  named numeric values grouped by app */
  byApp?: { [propertyName: string]: { [propertyName: string]: number } };
}

/** Resource usage for a single Mobile Center service */
export interface Paths1XkzlciV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesUsagePropertiesTestservice {
  /** Usage for a single period */
  currentUsagePeriod?: Paths1Ko6BdfV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesUsagePropertiesTestservicePropertiesCurrentusageperiod;
}

/** Usage for a single period */
export interface Paths1Ko6BdfV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesUsagePropertiesTestservicePropertiesCurrentusageperiod {
  /** Inclusive start time of the usage period */
  startTime?: string;
  /** Exclusive end time of the usage period. */
  endTime?: string;
  /** A collection of named numeric values */
  byAccount?: { [propertyName: string]: number };
  /** A collection of  named numeric values grouped by app */
  byApp?: { [propertyName: string]: { [propertyName: string]: number } };
}

/** Error */
export interface Paths1Pm9ZzuV01BillingAllaccountsaggregatedGetResponsesDefaultContentApplicationJsonSchema {
  error?: PathsF8VgtfV01BillingAllaccountsaggregatedGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsF8VgtfV01BillingAllaccountsaggregatedGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  /** The status code return by the API. It can be 400 or 403 or 500. */
  code?: Enum178;
  /** The reason for the request failed */
  message?: string;
}

export interface Paths1Wv9DecV01AzureSubscriptionsGetResponses200ContentApplicationJsonSchemaItems {
  /** The azure subscription id */
  subscriptionId: string;
  /** The tenant id of the azure subscription belongs to */
  tenantId: string;
  /** The name of the azure subscription */
  subscriptionName: string;
  /** If the subscription is used for billing */
  isBilling?: boolean;
  /** If the subscription can be used for billing */
  isBillable?: boolean;
  /** If the subscription is internal Microsoft subscription */
  isMicrosoftInternal?: boolean;
}

export interface PathsSing2IV01AzureSubscriptionsGetResponsesDefaultContentApplicationJsonSchema {
  error: PathsBd41LiV01AzureSubscriptionsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsBd41LiV01AzureSubscriptionsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum179;
  message: string;
}

/** The Xcode version */
export interface PathsSnbseaV01AppsOwnerNameAppNameXcodeVersionsGetResponses200ContentApplicationJsonSchemaItems {
  /** The version name */
  name?: string;
  /** If the Xcode is latest stable */
  current?: boolean;
}

export interface Paths9Yy0MkV01AppsOwnerNameAppNameXcodeVersionsGetResponsesDefaultContentApplicationJsonSchema {
  id: string;
  code: string;
  message: string;
}

/** The Xamarin SDK bundle */
export interface Paths1Nv9E3SV01AppsOwnerNameAppNameXamarinSdkBundlesGetResponses200ContentApplicationJsonSchemaItems {
  /** The Mono version */
  monoVersion?: string;
  /** The Xamarin SDK version */
  sdkBundle?: string;
  /** If the SDK is latest stable */
  current?: boolean;
  /** If the SDK is stable */
  stable?: boolean;
  /** Specific for iOS SDK. A list of Xcode versions supported by current SDK version */
  xcodeVersions?: string[];
}

export interface Paths1G32ByzV01AppsOwnerNameAppNameXamarinSdkBundlesGetResponsesDefaultContentApplicationJsonSchema {
  id: string;
  code: string;
  message: string;
}

/** List of alerting webhooks wrapped as operation result */
export interface PathsQn2DimV01AppsOwnerNameAppNameWebhooksGetResponses200ContentApplicationJsonSchema {
  values: Paths15Qq4FaV01AppsOwnerNameAppNameWebhooksGetResponses200ContentApplicationJsonSchemaPropertiesValuesItems[];
}

/** Alerting webhook */
export interface Paths15Qq4FaV01AppsOwnerNameAppNameWebhooksGetResponses200ContentApplicationJsonSchemaPropertiesValuesItems {
  /** The unique id (UUID) of the webhook */
  id?: string;
  /** display name of the webhook */
  name: string;
  /** target url of the webhook */
  url: string;
  /** Allows eanble/disable webhook */
  enabled?: boolean;
  /** Event types enabled for webhook */
  eventTypes: Get200ApplicationJsonPropertiesItemsEventTypesItem[];
}

/** Generic result for any alerting API operation */
export interface Paths16Kfo10V01AppsOwnerNameAppNameWebhooksGetResponsesDefaultContentApplicationJsonSchemaAllof0 {
  /** Unique request identifier for tracking */
  requestId: string;
}

export interface PathsIss5SmV01AppsOwnerNameAppNameWebhooksGetResponsesDefaultContentApplicationJsonSchemaAllof1 {
  /** The status code return by the API. It can be 400 or 404 or 409 or 500. */
  code: Enum181;
  /** The reason for the request failed */
  message?: string;
}

export interface Paths1MuofruV01AppsOwnerNameAppNameVersionsGetResponses200ContentApplicationJsonSchemaItems {
  appVersionId: string;
  appId: string;
  displayName: string;
  appVersion: string;
  buildNumber?: string;
}

export interface PathsDgnk0AV01AppsOwnerNameAppNameVersionsGetResponsesDefaultContentApplicationJsonSchema {
  message: string;
}

export interface Paths7XqutjV01AppsOwnerNameAppNameUsersUserEmailDeleteResponsesDefaultContentApplicationJsonSchema {
  error: PathsE4C475V01AppsOwnerNameAppNameUsersUserEmailDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsE4C475V01AppsOwnerNameAppNameUsersUserEmailDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum182;
  message: string;
}

export interface PathsG6C5PhV01AppsOwnerNameAppNameUsersUserEmailPatchRequestbodyContentApplicationJsonSchema {
  /** The permissions the user has for the app */
  permissions: Enum183[];
}

export interface Paths19GxrayV01AppsOwnerNameAppNameUsersUserEmailPatchResponsesDefaultContentApplicationJsonSchema {
  error: Paths1MuamfyV01AppsOwnerNameAppNameUsersUserEmailPatchResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1MuamfyV01AppsOwnerNameAppNameUsersUserEmailPatchResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum184;
  message: string;
}

export interface PathsMm38I5V01AppsOwnerNameAppNameUsersGetResponses200ContentApplicationJsonSchemaItems {
  /** The unique id (UUID) of the user */
  id: string;
  /** The avatar URL of the user */
  avatarUrl?: string;
  /** User is required to send an old password in order to change the password. */
  canChangePassword?: boolean;
  /** The full name of the user. Might for example be first and last name */
  displayName: string;
  /** The email address of the user */
  email: string;
  /** The unique name that is used to identify the user. */
  name: string;
  /** The permissions the user has for the app */
  permissions?: Get200ApplicationJsonItemsPermissionsItem[];
  /** The creation origin of this user */
  origin: Enum186;
}

export interface PathsBpjejcV01AppsOwnerNameAppNameUsersGetResponsesDefaultContentApplicationJsonSchema {
  error: PathsEbiijaV01AppsOwnerNameAppNameUsersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsEbiijaV01AppsOwnerNameAppNameUsersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum187;
  message: string;
}

/** The name and devices of the device set */
export interface DeviceSet {
  /** Identifier of the device set */
  id: string;
  /** The number of manufacturers in the device set's device selection */
  manufacturerCount?: number;
  /** Name of the device set */
  name: string;
  /** Slug of the device set */
  slug?: string;
  /** The owner of a device set */
  owner: PathsF7KfonV01AppsOwnerNameAppNameUserDeviceSetsIdGetResponses200ContentApplicationJsonSchemaPropertiesOwner;
  /** The number of os versions in the device set's device selection */
  osVersionCount?: number;
  deviceConfigurations: Paths5K5GzmV01AppsOwnerNameAppNameUserDeviceSetsIdGetResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItems[];
}

/** The owner of a device set */
export interface PathsF7KfonV01AppsOwnerNameAppNameUserDeviceSetsIdGetResponses200ContentApplicationJsonSchemaPropertiesOwner {
  /** Type of account */
  type: string;
  /** Account ID */
  id: string;
  /** Display name of the account */
  displayName?: string;
  /** Name of the account */
  name: string;
}

export interface Paths5K5GzmV01AppsOwnerNameAppNameUserDeviceSetsIdGetResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItems {
  /** The unique id of the device configuration */
  id?: string;
  image?: GetResponses200ContentApplicationJsonSchemaDeviceConfigurationsItemImage;
  model?: GetResponses200ContentApplicationJsonSchemaDeviceConfigurationsItemModel;
  os?: string;
  osName?: string;
}

export interface GetResponses200ContentApplicationJsonSchemaDeviceConfigurationsItemImage {
  thumb?: string;
}

export interface GetResponses200ContentApplicationJsonSchemaDeviceConfigurationsItemModel {
  name?: string;
  manufacturer?: string;
  releaseDate?: string;
  formFactor?: string;
}

/** The name of the device set and the list of device IDs */
export interface DeviceSetUpdateInformation {
  /** List of device IDs */
  devices: string[];
  /** The name of the device set */
  name: string;
}

/** The name and devices of the device set */
export interface DeviceSet0 {
  /** Identifier of the device set */
  id: string;
  /** The number of manufacturers in the device set's device selection */
  manufacturerCount?: number;
  /** Name of the device set */
  name: string;
  /** Slug of the device set */
  slug?: string;
  /** The owner of a device set */
  owner: Paths1PxbebeV01AppsOwnerNameAppNameUserDeviceSetsIdPutResponses200ContentApplicationJsonSchemaPropertiesOwner;
  /** The number of os versions in the device set's device selection */
  osVersionCount?: number;
  deviceConfigurations: Put200ApplicationJsonPropertiesItemsItem[];
}

/** The owner of a device set */
export interface Paths1PxbebeV01AppsOwnerNameAppNameUserDeviceSetsIdPutResponses200ContentApplicationJsonSchemaPropertiesOwner {
  /** Type of account */
  type: string;
  /** Account ID */
  id: string;
  /** Display name of the account */
  displayName?: string;
  /** Name of the account */
  name: string;
}

export interface Put200ApplicationJsonPropertiesItemsItem {
  /** The unique id of the device configuration */
  id?: string;
  image?: PutResponses200ContentApplicationJsonSchemaDeviceConfigurationsItemImage;
  model?: PutResponses200ContentApplicationJsonSchemaDeviceConfigurationsItemModel;
  os?: string;
  osName?: string;
}

export interface PutResponses200ContentApplicationJsonSchemaDeviceConfigurationsItemImage {
  thumb?: string;
}

export interface PutResponses200ContentApplicationJsonSchemaDeviceConfigurationsItemModel {
  name?: string;
  manufacturer?: string;
  releaseDate?: string;
  formFactor?: string;
}

/** Details of a failed operation */
export interface TestCloudErrorDetails {
  /** Status of the operation */
  status: string;
  /** Human-readable message that describes the error */
  message: string;
}

/** The name and devices of the device set */
export interface Paths17Qazt1V01AppsOwnerNameAppNameUserDeviceSetsGetResponses200ContentApplicationJsonSchemaItems {
  /** Identifier of the device set */
  id: string;
  /** The number of manufacturers in the device set's device selection */
  manufacturerCount?: number;
  /** Name of the device set */
  name: string;
  /** Slug of the device set */
  slug?: string;
  /** The owner of a device set */
  owner: Paths19Kpw4DV01AppsOwnerNameAppNameUserDeviceSetsGetResponses200ContentApplicationJsonSchemaItemsPropertiesOwner;
  /** The number of os versions in the device set's device selection */
  osVersionCount?: number;
  deviceConfigurations: Get200ApplicationJsonItemsDeviceConfigurationsItem[];
}

/** The owner of a device set */
export interface Paths19Kpw4DV01AppsOwnerNameAppNameUserDeviceSetsGetResponses200ContentApplicationJsonSchemaItemsPropertiesOwner {
  /** Type of account */
  type: string;
  /** Account ID */
  id: string;
  /** Display name of the account */
  displayName?: string;
  /** Name of the account */
  name: string;
}

export interface Get200ApplicationJsonItemsDeviceConfigurationsItem {
  /** The unique id of the device configuration */
  id?: string;
  image?: GetResponses200ContentApplicationJsonSchemaItemDeviceConfigurationsItemImage;
  model?: GetResponses200ContentApplicationJsonSchemaItemDeviceConfigurationsItemModel;
  os?: string;
  osName?: string;
}

export interface GetResponses200ContentApplicationJsonSchemaItemDeviceConfigurationsItemImage {
  thumb?: string;
}

export interface GetResponses200ContentApplicationJsonSchemaItemDeviceConfigurationsItemModel {
  name?: string;
  manufacturer?: string;
  releaseDate?: string;
  formFactor?: string;
}

/** The name of the device set and the list of device IDs */
export interface DeviceSetUpdateInformation0 {
  /** List of device IDs */
  devices: string[];
  /** The name of the device set */
  name: string;
}

/** The name and devices of the device set */
export interface DeviceSet1 {
  /** Identifier of the device set */
  id: string;
  /** The number of manufacturers in the device set's device selection */
  manufacturerCount?: number;
  /** Name of the device set */
  name: string;
  /** Slug of the device set */
  slug?: string;
  /** The owner of a device set */
  owner: Paths1Sbi3DV01AppsOwnerNameAppNameUserDeviceSetsPostResponses201ContentApplicationJsonSchemaPropertiesOwner;
  /** The number of os versions in the device set's device selection */
  osVersionCount?: number;
  deviceConfigurations: Post201ApplicationJsonPropertiesItemsItem[];
}

/** The owner of a device set */
export interface Paths1Sbi3DV01AppsOwnerNameAppNameUserDeviceSetsPostResponses201ContentApplicationJsonSchemaPropertiesOwner {
  /** Type of account */
  type: string;
  /** Account ID */
  id: string;
  /** Display name of the account */
  displayName?: string;
  /** Name of the account */
  name: string;
}

export interface Post201ApplicationJsonPropertiesItemsItem {
  /** The unique id of the device configuration */
  id?: string;
  image?: PostResponses201ContentApplicationJsonSchemaDeviceConfigurationsItemImage;
  model?: PostResponses201ContentApplicationJsonSchemaDeviceConfigurationsItemModel;
  os?: string;
  osName?: string;
}

export interface PostResponses201ContentApplicationJsonSchemaDeviceConfigurationsItemImage {
  thumb?: string;
}

export interface PostResponses201ContentApplicationJsonSchemaDeviceConfigurationsItemModel {
  name?: string;
  manufacturer?: string;
  releaseDate?: string;
  formFactor?: string;
}

/** Details of a failed operation */
export interface TestCloudErrorDetails0 {
  /** Status of the operation */
  status: string;
  /** Human-readable message that describes the error */
  message: string;
}

export interface Paths1LnjnxdV01AppsOwnerNameAppNameTransferToOrgPostResponses200ContentApplicationJsonSchema {
  /** The internal unique id (UUID) of the organization. */
  id: string;
  /** The display name of the organization */
  displayName: string;
  /** The slug name of the organization */
  name: string;
  /** The URL to a user-uploaded Avatar image */
  avatarUrl?: string;
  /** The creation origin of this organization */
  origin: Enum188;
  /** The creation date of this organization */
  createdAt: string;
  /** The date the organization was last updated at */
  updatedAt: string;
}

export interface PathsE169PrV01AppsOwnerNameAppNameTransferToOrgPostResponsesDefaultContentApplicationJsonSchema {
  error: Paths1311Ub5V01AppsOwnerNameAppNameTransferToOrgPostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1311Ub5V01AppsOwnerNameAppNameTransferToOrgPostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum189;
  message: string;
}

export interface Paths1V9Hz9HV01AppsOwnerNameAppNameTransferDestinationOwnerNamePostResponses200ContentApplicationJsonSchemaAllof0 {
  /** The unique ID (UUID) of the app */
  id: string;
  /** The description of the app */
  description?: string;
  /** The display name of the app */
  displayName: string;
  /** A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase */
  releaseType?: string;
  /** The string representation of the URL pointing to the app's icon */
  iconUrl?: string;
  /** The string representation of the source of the app's icon */
  iconSource?: string;
  /** The name of the app used in URLs */
  name: string;
  /** The OS the app will be running on */
  os: Enum190;
  /** The information about the app's owner */
  owner: Paths1Ojs084V01AppsOwnerNameAppNameTransferDestinationOwnerNamePostResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner;
}

/** The information about the app's owner */
export interface Paths1Ojs084V01AppsOwnerNameAppNameTransferDestinationOwnerNamePostResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner {
  /** The unique id (UUID) of the owner */
  id: string;
  /** The avatar URL of the owner */
  avatarUrl?: string;
  /** The owner's display name */
  displayName: string;
  /** The owner's email address */
  email?: string;
  /** The unique name that used to identify the owner */
  name: string;
  /** The owner type. Can either be 'org' or 'user' */
  type: Enum191;
}

export interface Paths1Uuv6QgV01AppsOwnerNameAppNameTransferDestinationOwnerNamePostResponses200ContentApplicationJsonSchemaAllof1 {
  /** A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics */
  appSecret?: string;
  azureSubscription?: PathsPgoeniV01AppsOwnerNameAppNameTransferDestinationOwnerNamePostResponses200ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription;
  /** The platform of the app */
  platform?: Enum192;
  /** The creation origin of this app */
  origin?: Enum193;
  /** The created date of this app */
  createdAt?: string;
  /** The last updated date of this app */
  updatedAt?: string;
  /** The permissions of the calling user */
  memberPermissions?: Enum194[];
}

export interface PathsPgoeniV01AppsOwnerNameAppNameTransferDestinationOwnerNamePostResponses200ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription {
  /** The azure subscription id */
  subscriptionId: string;
  /** The tenant id of the azure subscription belongs to */
  tenantId: string;
  /** The name of the azure subscription */
  subscriptionName: string;
  /** If the subscription is used for billing */
  isBilling?: boolean;
  /** If the subscription can be used for billing */
  isBillable?: boolean;
  /** If the subscription is internal Microsoft subscription */
  isMicrosoftInternal?: boolean;
}

export interface Paths15Hmn0IV01AppsOwnerNameAppNameTransferDestinationOwnerNamePostResponsesDefaultContentApplicationJsonSchema {
  error: PathsRje6L6V01AppsOwnerNameAppNameTransferDestinationOwnerNamePostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsRje6L6V01AppsOwnerNameAppNameTransferDestinationOwnerNamePostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum195;
  message: string;
}

/** Set of toolsets available for app */
export interface PathsJw4J38V01AppsOwnerNameAppNameToolsetsGetResponses200ContentApplicationJsonSchema {
  /** A list of Xamarin SDK bundles */
  xamarin?: PathsXjpov1V01AppsOwnerNameAppNameToolsetsGetResponses200ContentApplicationJsonSchemaPropertiesXamarinItems[];
  /** A list of Xcode versions */
  xcode?: PathsNo2OfiV01AppsOwnerNameAppNameToolsetsGetResponses200ContentApplicationJsonSchemaPropertiesXcodeItems[];
  /** A list of Node versions */
  node?: Paths11P8SztV01AppsOwnerNameAppNameToolsetsGetResponses200ContentApplicationJsonSchemaPropertiesNodeItems[];
}

/** The Xamarin SDK bundle */
export interface PathsXjpov1V01AppsOwnerNameAppNameToolsetsGetResponses200ContentApplicationJsonSchemaPropertiesXamarinItems {
  /** The Mono version */
  monoVersion?: string;
  /** The Xamarin SDK version */
  sdkBundle?: string;
  /** If the SDK is latest stable */
  current?: boolean;
  /** If the SDK is stable */
  stable?: boolean;
  /** Specific for iOS SDK. A list of Xcode versions supported by current SDK version */
  xcodeVersions?: string[];
}

/** The Xcode version */
export interface PathsNo2OfiV01AppsOwnerNameAppNameToolsetsGetResponses200ContentApplicationJsonSchemaPropertiesXcodeItems {
  /** The version name */
  name?: string;
  /** If the Xcode is latest stable */
  current?: boolean;
}

/** The Node version */
export interface Paths11P8SztV01AppsOwnerNameAppNameToolsetsGetResponses200ContentApplicationJsonSchemaPropertiesNodeItems {
  /** The version name */
  name?: string;
  /** If the Node version is default for AppCenter */
  current?: boolean;
}

export interface Paths1Dh1CmbV01AppsOwnerNameAppNameToolsetsGetResponsesDefaultContentApplicationJsonSchema {
  id: string;
  code: string;
  message: string;
}

export interface Paths16X7GfoV01AppsOwnerNameAppNameTestersTesterIdDeleteResponses404ContentApplicationJsonSchema {
  code: Enum197;
  message: string;
}

export interface Paths9J1VrgV01AppsOwnerNameAppNameTestersGetResponses200ContentApplicationJsonSchemaItems {
  /** The unique id (UUID) of the user */
  id: string;
  /** The avatar URL of the user */
  avatarUrl?: string;
  /** User is required to send an old password in order to change the password. */
  canChangePassword?: boolean;
  /** The full name of the user. Might for example be first and last name */
  displayName: string;
  /** The email address of the user */
  email: string;
  /** The unique name that is used to identify the user. */
  name: string;
  /** The permissions the user has for the app */
  permissions?: Enum198[];
  /** The creation origin of this user */
  origin: Enum199;
}

export interface Paths2WblseV01AppsOwnerNameAppNameTestersGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths19I0Up4V01AppsOwnerNameAppNameTestersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths19I0Up4V01AppsOwnerNameAppNameTestersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum200;
  message: string;
}

/** Summary single test run on Xamarin Test Cloud */
export interface PathsShbmt3V01AppsOwnerNameAppNameTestSeriesSlugTestRunsGetResponses200ContentApplicationJsonSchemaItems {
  /** The unique id of the test upload */
  id?: string;
  /** The date and time the test was uploaded */
  date?: string;
  /** The compiled version of the app binary */
  appVersion?: string;
  /** The name of the test series with which this test upload is associated */
  testSeries?: string;
  /** The device platform targeted by the test. Possible values are 'ios' or 'android' */
  platform?: string;
  /** The current status of the test run, in relation to the various phases */
  runStatus?: string;
  /** The passed/failed state */
  resultStatus?: string;
  /** Deprecated. Use runStatus instead. */
  state?: string;
  /** Deprecated. Use resultStatus instead. */
  status?: string;
  /** Human readable explanation of the current test status */
  description?: string;
  /** Summary single test run on Xamarin Test Cloud */
  stats?: GetResponses200ContentApplicationJsonSchemaItemStats;
  /** The name of the test framework used to run this test */
  testType?: string;
}

/** Summary single test run on Xamarin Test Cloud */
export interface GetResponses200ContentApplicationJsonSchemaItemStats {
  /** Number of devices running the test */
  devices?: number;
  /** Number of finished devices */
  devicesFinished?: number;
  /** Number of failed devices */
  devicesFailed?: number;
  /** Number of tests in total */
  total?: number;
  /** Number of passed tests */
  passed?: number;
  /** Number of failed tests */
  failed?: number;
  /** Number of skipped tests */
  skipped?: number;
  /** The max amount of MB used during the test run */
  peakMemory?: number;
  /** The number of minutes of device time the test has been runnign */
  totalDeviceMinutes?: number;
}

/** Name of the test series */
export interface NameOfTheTestSeries {
  /** Name of the new test series */
  name: string;
}

/** Summary of a single test series */
export interface TestSeries {
  /** Unique, human-readable identifier of the test series */
  slug: string;
  /** Name of the test series */
  name: string;
  /** Date of the latest test run that used this test series */
  mostRecentActivity?: string;
  /** Most recent test runs */
  testRuns?: Paths1HhtfuuV01AppsOwnerNameAppNameTestSeriesSlugPatchResponses200ContentApplicationJsonSchemaPropertiesTestrunsItems[];
}

/** Most important information about a test run. */
export interface Paths1HhtfuuV01AppsOwnerNameAppNameTestSeriesSlugPatchResponses200ContentApplicationJsonSchemaPropertiesTestrunsItems {
  /** Date of the test run. */
  date?: string;
  /** Human-readable status of the test run. */
  statusDescription?: string;
  /** Number of failed tests */
  failed?: number;
  /** Number of passed tests */
  passed?: number;
  /** Tells whether the test run has completed */
  completed?: boolean;
}

/** Summary of a single test series */
export interface PathsAd8C7FV01AppsOwnerNameAppNameTestSeriesGetResponses200ContentApplicationJsonSchemaItems {
  /** Unique, human-readable identifier of the test series */
  slug: string;
  /** Name of the test series */
  name: string;
  /** Date of the latest test run that used this test series */
  mostRecentActivity?: string;
  /** Most recent test runs */
  testRuns?: Get200ApplicationJsonItemsTestRunsItem[];
}

/** Most important information about a test run. */
export interface Get200ApplicationJsonItemsTestRunsItem {
  /** Date of the test run. */
  date?: string;
  /** Human-readable status of the test run. */
  statusDescription?: string;
  /** Number of failed tests */
  failed?: number;
  /** Number of passed tests */
  passed?: number;
  /** Tells whether the test run has completed */
  completed?: boolean;
}

/** Name of the test series */
export interface NameOfTheTestSeries0 {
  /** Name of the new test series */
  name: string;
}

/** Summary of a single test series */
export interface TestSeries0 {
  /** Unique, human-readable identifier of the test series */
  slug: string;
  /** Name of the test series */
  name: string;
  /** Date of the latest test run that used this test series */
  mostRecentActivity?: string;
  /** Most recent test runs */
  testRuns?: Post200ApplicationJsonPropertiesItemsItem[];
}

/** Most important information about a test run. */
export interface Post200ApplicationJsonPropertiesItemsItem {
  /** Date of the test run. */
  date?: string;
  /** Human-readable status of the test run. */
  statusDescription?: string;
  /** Number of failed tests */
  failed?: number;
  /** Number of passed tests */
  passed?: number;
  /** Tells whether the test run has completed */
  completed?: boolean;
}

/** Details of a failed operation */
export interface TestCloudErrorDetails1 {
  /** Status of the operation */
  status: string;
  /** Human-readable message that describes the error */
  message: string;
}

/** Summary single test run on Xamarin Test Cloud */
export interface TestRun {
  /** The unique id of the test upload */
  id?: string;
  /** The date and time the test was uploaded */
  date?: string;
  /** The compiled version of the app binary */
  appVersion?: string;
  /** The name of the test series with which this test upload is associated */
  testSeries?: string;
  /** The device platform targeted by the test. Possible values are 'ios' or 'android' */
  platform?: string;
  /** The current status of the test run, in relation to the various phases */
  runStatus?: string;
  /** The passed/failed state */
  resultStatus?: string;
  /** Deprecated. Use runStatus instead. */
  state?: string;
  /** Deprecated. Use resultStatus instead. */
  status?: string;
  /** Human readable explanation of the current test status */
  description?: string;
  /** Summary single test run on Xamarin Test Cloud */
  stats?: Paths1Mn12JaV01AppsOwnerNameAppNameTestRunsTestRunIdStopPutResponses200ContentApplicationJsonSchemaPropertiesStats;
  /** The name of the test framework used to run this test */
  testType?: string;
}

/** Summary single test run on Xamarin Test Cloud */
export interface Paths1Mn12JaV01AppsOwnerNameAppNameTestRunsTestRunIdStopPutResponses200ContentApplicationJsonSchemaPropertiesStats {
  /** Number of devices running the test */
  devices?: number;
  /** Number of finished devices */
  devicesFinished?: number;
  /** Number of failed devices */
  devicesFailed?: number;
  /** Number of tests in total */
  total?: number;
  /** Number of passed tests */
  passed?: number;
  /** Number of failed tests */
  failed?: number;
  /** Number of skipped tests */
  skipped?: number;
  /** The max amount of MB used during the test run */
  peakMemory?: number;
  /** The number of minutes of device time the test has been runnign */
  totalDeviceMinutes?: number;
}

/** Current status of a test run */
export interface TestRunState {
  /** Multi-line message that describes the status */
  message?: string[];
  /** Time (in seconds) that the client should wait for before checking the status again */
  waitTime?: number;
  /**
   * The exit code that the client should use when exiting. Used for indicating status to the caller of the client.
   * 0: test run completes with no failing tests
   * 1: test run completes with at least one failing test
   * 2: test run failed to complete. Status for test run is unknown
   *
   */
  exitCode?: number;
}

/** Options required to start the test run */
export interface TestCloudStartTestRunOptions {
  /** Test framework used by tests. */
  testFramework: string;
  /** Device selection string. */
  deviceSelection: string;
  /** Language that should be used to run tests. */
  language?: string;
  /** Locale that should be used to run tests. */
  locale?: string;
  /** Name of the test series. */
  testSeries?: string;
  /** A JSON dictionary with additional test parameters */
  testParameters?: Record<string, unknown>;
}

/** Result of starting a test run */
export interface TestCloudTestRunStartResult {
  /** List with names of accepted devices */
  acceptedDevices?: string[];
  /** List with names and descriptions of rejected devices */
  rejectedDevices?: string[];
}

export interface PathsRj1AeoV01AppsOwnerNameAppNameTestRunsTestRunIdReportGetResponses200ContentApplicationJsonSchema {
  appUploadId: string;
  date: string;
  testType: string;
  platform: string;
  stats: Paths1Lc0D3RV01AppsOwnerNameAppNameTestRunsTestRunIdReportGetResponses200ContentApplicationJsonSchemaPropertiesStats;
  id: string;
  schemaVersion: number;
  revision: number;
  features: Paths1NktjoiV01AppsOwnerNameAppNameTestRunsTestRunIdReportGetResponses200ContentApplicationJsonSchemaPropertiesFeaturesItems[];
  finishedDeviceSnapshots: string[];
  deviceLogs: PathsT325WyV01AppsOwnerNameAppNameTestRunsTestRunIdReportGetResponses200ContentApplicationJsonSchemaPropertiesDeviceLogsItems[];
  dateFinished: string;
  errorMessage?: string;
  snapshotFatalErrors?: Paths62M0KyV01AppsOwnerNameAppNameTestRunsTestRunIdReportGetResponses200ContentApplicationJsonSchemaPropertiesSnapshotFatalErrorsItems[];
}

export interface Paths1Lc0D3RV01AppsOwnerNameAppNameTestRunsTestRunIdReportGetResponses200ContentApplicationJsonSchemaPropertiesStats {
  os: number;
  devices: number;
  filesize: number;
  totalDeviceMinutes: number;
  devicesNotRunned: number;
  failed: number;
  skipped: number;
  passed: number;
  total: number;
  devicesFinished: number;
  devicesFailed: number;
  devicesSkipped: number;
  stepCount: number;
  /** Dictionary of <string> */
  artifacts?: { [propertyName: string]: string };
}

export interface Paths1NktjoiV01AppsOwnerNameAppNameTestRunsTestRunIdReportGetResponses200ContentApplicationJsonSchemaPropertiesFeaturesItems {
  name?: string;
  tests?: Get200ApplicationJsonPropertiesItemsTestsItem[];
  failed?: number;
  skipped?: number;
  peakMemory?: number;
  peakDuration?: number;
}

export interface Get200ApplicationJsonPropertiesItemsTestsItem {
  testName?: string;
  runs?: Get200ApplicationJsonPropertiesItemsTestsPropertiesItemsItem[];
  peakMemory?: number;
  peakDuration?: number;
}

export interface Get200ApplicationJsonPropertiesItemsTestsPropertiesItemsItem {
  number?: number;
  steps?: Get200ApplicationJsonPropertiesItemsTestsPropertiesItemsStepsItem[];
  failed?: number;
  skipped?: number;
  reportUrl?: string;
  id?: string;
}

export interface Get200ApplicationJsonPropertiesItemsTestsPropertiesItemsStepsItem {
  stepName?: string;
  id?: string;
  stepExecutions?: Get200ApplicationJsonPropertiesItemsTestsPropertiesItemsStepsPropertiesItemsItem[];
  failed?: number;
  skipped?: number;
  stepReportUrl?: string;
}

export interface Get200ApplicationJsonPropertiesItemsTestsPropertiesItemsStepsPropertiesItemsItem {
  deviceSnapshotId?: string;
  status?: string;
  timestamp?: number;
}

export interface PathsT325WyV01AppsOwnerNameAppNameTestRunsTestRunIdReportGetResponses200ContentApplicationJsonSchemaPropertiesDeviceLogsItems {
  deviceSnapshotId?: string;
  deviceLog?: string;
  testLog?: string;
  appiumLog?: string;
}

export interface Paths62M0KyV01AppsOwnerNameAppNameTestRunsTestRunIdReportGetResponses200ContentApplicationJsonSchemaPropertiesSnapshotFatalErrorsItems {
  deviceSnapshotId?: string;
  errorMessage?: string;
  errorTitle?: string;
}

/** Hash, type, path and byte range of a file that is required in test run */
export interface PostContentSchemaItem {
  /** Type of the file */
  fileType: PostRequestBodyContentApplicationJsonSchemaItemFileType;
  /** SHA256 hash of the file */
  checksum: string;
  /** Relative path of the file */
  relativePath: string;
}

/** Response message for single uploaded file hash */
export interface PathsH1EvszV01AppsOwnerNameAppNameTestRunsTestRunIdHashesBatchPostResponses200ContentApplicationJsonSchemaItems {
  /** Type of the file */
  fileType: PostResponses200ContentApplicationJsonSchemaItemFileType;
  /** SHA256 hash of the file */
  checksum: string;
  /** Relative path of the file */
  relativePath?: string;
  /** Status of the upload */
  uploadStatus: PostResponses200ContentApplicationJsonSchemaItemUploadStatus;
}

/** Status of the upload */
export interface PostResponses200ContentApplicationJsonSchemaItemUploadStatus {
  /** HTTP status code that represent result of upload */
  statusCode: number;
  /** URI that should be used to make POST request if file with given hash doesn't exist. This is set when status_code is equal to 412 */
  location?: string;
}

/** Hash, type, path and byte range of a file that is required in test run */
export interface TestCloudFileHash {
  /** Type of the file */
  fileType: PostContentSchemaFileType;
  /** SHA256 hash of the file */
  checksum: string;
  /** Relative path of the file */
  relativePath: string;
  /** Range of bytes required to verify ownership of the file */
  byteRange?: string;
}

/** Summary single test run on Xamarin Test Cloud */
export interface TestRun0 {
  /** The unique id of the test upload */
  id?: string;
  /** The date and time the test was uploaded */
  date?: string;
  /** The compiled version of the app binary */
  appVersion?: string;
  /** The name of the test series with which this test upload is associated */
  testSeries?: string;
  /** The device platform targeted by the test. Possible values are 'ios' or 'android' */
  platform?: string;
  /** The current status of the test run, in relation to the various phases */
  runStatus?: string;
  /** The passed/failed state */
  resultStatus?: string;
  /** Deprecated. Use runStatus instead. */
  state?: string;
  /** Deprecated. Use resultStatus instead. */
  status?: string;
  /** Human readable explanation of the current test status */
  description?: string;
  /** Summary single test run on Xamarin Test Cloud */
  stats?: PathsCck0GmV01AppsOwnerNameAppNameTestRunsTestRunIdGetResponses200ContentApplicationJsonSchemaPropertiesStats;
  /** The name of the test framework used to run this test */
  testType?: string;
}

/** Summary single test run on Xamarin Test Cloud */
export interface PathsCck0GmV01AppsOwnerNameAppNameTestRunsTestRunIdGetResponses200ContentApplicationJsonSchemaPropertiesStats {
  /** Number of devices running the test */
  devices?: number;
  /** Number of finished devices */
  devicesFinished?: number;
  /** Number of failed devices */
  devicesFailed?: number;
  /** Number of tests in total */
  total?: number;
  /** Number of passed tests */
  passed?: number;
  /** Number of failed tests */
  failed?: number;
  /** Number of skipped tests */
  skipped?: number;
  /** The max amount of MB used during the test run */
  peakMemory?: number;
  /** The number of minutes of device time the test has been runnign */
  totalDeviceMinutes?: number;
}

/** Summary single test run on Xamarin Test Cloud */
export interface TestRun1 {
  /** The unique id of the test upload */
  id?: string;
  /** The date and time the test was uploaded */
  date?: string;
  /** The compiled version of the app binary */
  appVersion?: string;
  /** The name of the test series with which this test upload is associated */
  testSeries?: string;
  /** The device platform targeted by the test. Possible values are 'ios' or 'android' */
  platform?: string;
  /** The current status of the test run, in relation to the various phases */
  runStatus?: string;
  /** The passed/failed state */
  resultStatus?: string;
  /** Deprecated. Use runStatus instead. */
  state?: string;
  /** Deprecated. Use resultStatus instead. */
  status?: string;
  /** Human readable explanation of the current test status */
  description?: string;
  /** Summary single test run on Xamarin Test Cloud */
  stats?: Paths1G2XcloV01AppsOwnerNameAppNameTestRunsTestRunIdDeleteResponses200ContentApplicationJsonSchemaPropertiesStats;
  /** The name of the test framework used to run this test */
  testType?: string;
}

/** Summary single test run on Xamarin Test Cloud */
export interface Paths1G2XcloV01AppsOwnerNameAppNameTestRunsTestRunIdDeleteResponses200ContentApplicationJsonSchemaPropertiesStats {
  /** Number of devices running the test */
  devices?: number;
  /** Number of finished devices */
  devicesFinished?: number;
  /** Number of failed devices */
  devicesFailed?: number;
  /** Number of tests in total */
  total?: number;
  /** Number of passed tests */
  passed?: number;
  /** Number of failed tests */
  failed?: number;
  /** Number of skipped tests */
  skipped?: number;
  /** The max amount of MB used during the test run */
  peakMemory?: number;
  /** The number of minutes of device time the test has been runnign */
  totalDeviceMinutes?: number;
}

/** Summary single test run on Xamarin Test Cloud */
export interface Paths1CxzjsgV01AppsOwnerNameAppNameTestRunsGetResponses200ContentApplicationJsonSchemaItems {
  /** The unique id of the test upload */
  id?: string;
  /** The date and time the test was uploaded */
  date?: string;
  /** The compiled version of the app binary */
  appVersion?: string;
  /** The name of the test series with which this test upload is associated */
  testSeries?: string;
  /** The device platform targeted by the test. Possible values are 'ios' or 'android' */
  platform?: string;
  /** The current status of the test run, in relation to the various phases */
  runStatus?: string;
  /** The passed/failed state */
  resultStatus?: string;
  /** Deprecated. Use runStatus instead. */
  state?: string;
  /** Deprecated. Use resultStatus instead. */
  status?: string;
  /** Human readable explanation of the current test status */
  description?: string;
  /** Summary single test run on Xamarin Test Cloud */
  stats?: Paths1772YzwV01AppsOwnerNameAppNameTestRunsGetResponses200ContentApplicationJsonSchemaItemsPropertiesStats;
  /** The name of the test framework used to run this test */
  testType?: string;
}

/** Summary single test run on Xamarin Test Cloud */
export interface Paths1772YzwV01AppsOwnerNameAppNameTestRunsGetResponses200ContentApplicationJsonSchemaItemsPropertiesStats {
  /** Number of devices running the test */
  devices?: number;
  /** Number of finished devices */
  devicesFinished?: number;
  /** Number of failed devices */
  devicesFailed?: number;
  /** Number of tests in total */
  total?: number;
  /** Number of passed tests */
  passed?: number;
  /** Number of failed tests */
  failed?: number;
  /** Number of skipped tests */
  skipped?: number;
  /** The max amount of MB used during the test run */
  peakMemory?: number;
  /** The number of minutes of device time the test has been runnign */
  totalDeviceMinutes?: number;
}

export interface Paths1UxedxfV01AppsOwnerNameAppNameTestExportTestrunsGetResponses200ContentApplicationJsonSchema {
  id?: string;
  appHashFileId?: string;
  locale?: string;
  dsymHashFileId?: string;
  appHashFileUrl?: string;
  dsymHashFileUrl?: string;
  appIconUrl?: string;
}

export interface Paths17A5P9IV01AppsOwnerNameAppNameTestExportPipelinetestsGetResponses200ContentApplicationJsonSchema {
  appUploadId?: string;
  /** Any object */
  testParameters?: Record<string, unknown>;
}

export interface PathsQpbfbqV01AppsOwnerNameAppNameTestExportHashfilesGetResponses200ContentApplicationJsonSchema {
  id?: string;
  filename?: string;
}

export interface Paths18Bwc0DV01AppsOwnerNameAppNameTestExportFilesetfilesGetResponses200ContentApplicationJsonSchema {
  path?: string;
  hashFileId?: string;
  appUploadId?: string;
  hashFileUrl?: string;
}

export interface Paths1D5PwtqV01AppsOwnerNameAppNameTestExportAppsGetResponses200ContentApplicationJsonSchema {
  hashFilesUrl?: string;
}

export interface PathsTbqb7JV01AppsOwnerNameAppNameTestExportGetResponses200ContentApplicationJsonSchema {
  resources?: Paths1Hvxwn3V01AppsOwnerNameAppNameTestExportGetResponses200ContentApplicationJsonSchemaPropertiesResourcesItems[];
}

export interface Paths1Hvxwn3V01AppsOwnerNameAppNameTestExportGetResponses200ContentApplicationJsonSchemaPropertiesResourcesItems {
  rel?: string;
  path?: string;
}

export interface Paths1Sla7TvV01AppsOwnerNameAppNameTeamsGetResponses200ContentApplicationJsonSchemaItemsAllof0 {
  /** The internal unique id (UUID) of the team. */
  id: string;
  /** The name of the team */
  name: string;
  /** The display name of the team */
  displayName: string;
  /** The description of the team */
  description?: string;
}

export interface Paths1Qevyq4V01AppsOwnerNameAppNameTeamsGetResponses200ContentApplicationJsonSchemaItemsAllof1 {
  /** The permissions the team has for the app */
  permissions?: Get200ApplicationJsonItems1PermissionsItem[];
}

export interface Paths1YwiryhV01AppsOwnerNameAppNameTeamsGetResponsesDefaultContentApplicationJsonSchema {
  error: PathsFzb4KzV01AppsOwnerNameAppNameTeamsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsFzb4KzV01AppsOwnerNameAppNameTeamsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum205;
  message: string;
}

/** A response containing information pertaining to a symbol status */
export interface PathsZwg80MV01AppsOwnerNameAppNameSymbolsSymbolIdStatusGetResponses200ContentApplicationJsonSchema {
  /** The unique id for this symbol (uuid) */
  symbolId: string;
  /** The application that this symbol belongs to */
  appId: string;
  /** Whether the symbol is ignored. */
  status: Enum206;
}

export interface PathsRm34DsV01AppsOwnerNameAppNameSymbolsSymbolIdStatusGetResponses403ContentApplicationJsonSchema {
  message: string;
}

export interface Paths3NgdjqV01AppsOwnerNameAppNameSymbolsSymbolIdStatusGetResponses404ContentApplicationJsonSchema {
  message: string;
}

export interface PathsZyl9UsV01AppsOwnerNameAppNameSymbolsSymbolIdStatusGetResponses500ContentApplicationJsonSchema {
  message: string;
}

/** Location for downloading symbol */
export interface Paths1PukseV01AppsOwnerNameAppNameSymbolsSymbolIdLocationGetResponses200ContentApplicationJsonSchema {
  uri: string;
}

export interface Paths10EfwkV01AppsOwnerNameAppNameSymbolsSymbolIdLocationGetResponses403ContentApplicationJsonSchema {
  message: string;
}

export interface PathsAi9SksV01AppsOwnerNameAppNameSymbolsSymbolIdLocationGetResponses404ContentApplicationJsonSchema {
  message: string;
}

export interface Paths1OloyvoV01AppsOwnerNameAppNameSymbolsSymbolIdLocationGetResponses500ContentApplicationJsonSchema {
  message: string;
}

export interface Paths1K4YzazV01AppsOwnerNameAppNameSymbolsSymbolIdIgnorePostResponses200ContentApplicationJsonSchema {
  /** The unique id for this symbol (uuid) */
  symbolId: string;
  /** The type of the symbol for the current symbol upload */
  type: Enum207;
  /** The application that this symbol belongs to */
  appId: string;
  /** The platform that this symbol is associated with */
  platform: string;
  /** The path name of the symbol file in blob storage */
  url: string;
  /** The origin of the symbol file */
  origin: Enum208;
  /** The other symbols in the same file */
  alternateSymbolIds: string[];
  /** Whether the symbol is ignored. */
  status: Enum209;
  /** The version number. Optional for Apple. Required for Android. */
  version?: string;
  /** The build number. Optional for Apple. Required for Android. */
  build?: string;
  /** The id of the symbol upload this symbol belongs to. */
  symbolUploadId: string;
}

export interface Paths1YawolbV01AppsOwnerNameAppNameSymbolsSymbolIdIgnorePostResponses403ContentApplicationJsonSchema {
  message: string;
}

export interface Paths1RxhxhnV01AppsOwnerNameAppNameSymbolsSymbolIdIgnorePostResponses404ContentApplicationJsonSchema {
  message: string;
}

export interface PathsX0B659V01AppsOwnerNameAppNameSymbolsSymbolIdIgnorePostResponses500ContentApplicationJsonSchema {
  message: string;
}

export interface PathsK9XnpbV01AppsOwnerNameAppNameSymbolsSymbolIdGetResponses200ContentApplicationJsonSchema {
  /** The unique id for this symbol (uuid) */
  symbolId: string;
  /** The type of the symbol for the current symbol upload */
  type: Enum210;
  /** The application that this symbol belongs to */
  appId: string;
  /** The platform that this symbol is associated with */
  platform: string;
  /** The path name of the symbol file in blob storage */
  url: string;
  /** The origin of the symbol file */
  origin: Enum211;
  /** The other symbols in the same file */
  alternateSymbolIds: string[];
  /** Whether the symbol is ignored. */
  status: Enum212;
  /** The version number. Optional for Apple. Required for Android. */
  version?: string;
  /** The build number. Optional for Apple. Required for Android. */
  build?: string;
  /** The id of the symbol upload this symbol belongs to. */
  symbolUploadId: string;
}

export interface Paths1Vhz9IlV01AppsOwnerNameAppNameSymbolsSymbolIdGetResponses403ContentApplicationJsonSchema {
  message: string;
}

export interface Paths1DykrkvV01AppsOwnerNameAppNameSymbolsSymbolIdGetResponses404ContentApplicationJsonSchema {
  message: string;
}

export interface PathsVqx0ExV01AppsOwnerNameAppNameSymbolsSymbolIdGetResponses500ContentApplicationJsonSchema {
  message: string;
}

export interface PathsRp7XckV01AppsOwnerNameAppNameSymbolsGetResponses200ContentApplicationJsonSchemaItems {
  /** The unique id for this symbol (uuid) */
  symbolId: string;
  /** The type of the symbol for the current symbol upload */
  type: GetResponses200ContentApplicationJsonSchemaItemType;
  /** The application that this symbol belongs to */
  appId: string;
  /** The platform that this symbol is associated with */
  platform: string;
  /** The path name of the symbol file in blob storage */
  url: string;
  /** The origin of the symbol file */
  origin: Enum214;
  /** The other symbols in the same file */
  alternateSymbolIds: string[];
  /** Whether the symbol is ignored. */
  status: Enum215;
  /** The version number. Optional for Apple. Required for Android. */
  version?: string;
  /** The build number. Optional for Apple. Required for Android. */
  build?: string;
  /** The id of the symbol upload this symbol belongs to. */
  symbolUploadId: string;
}

export interface PathsZha4ZiV01AppsOwnerNameAppNameSymbolsGetResponses403ContentApplicationJsonSchema {
  message: string;
}

export interface Paths1CjrzdcV01AppsOwnerNameAppNameSymbolsGetResponses500ContentApplicationJsonSchema {
  message: string;
}

/** Location for downloading symbol upload */
export interface Paths18Q3NddV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdLocationGetResponses200ContentApplicationJsonSchema {
  uri: string;
}

export interface Paths3IyV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdLocationGetResponses403ContentApplicationJsonSchema {
  message: string;
}

export interface PathsL7Clp0V01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdLocationGetResponses404ContentApplicationJsonSchema {
  message: string;
}

export interface Paths1N7F3U2V01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdLocationGetResponses500ContentApplicationJsonSchema {
  message: string;
}

/** A single symbol upload entity */
export interface Paths1Eu1ZwcV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdGetResponses200ContentApplicationJsonSchema {
  /** The id for the current symbol upload */
  symbolUploadId: string;
  /** The application that this symbol upload belongs to */
  appId: string;
  /** User information of the one who intitiated the symbol upload */
  user?: PathsLchkcoV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdGetResponses200ContentApplicationJsonSchemaPropertiesUser;
  /** The current status for the symbol upload */
  status: Enum216;
  /** The type of the symbol for the current symbol upload */
  symbolType: Enum217;
  /** The symbols found in the upload. This may be empty until the status is indexed */
  symbolsUploaded?: Paths69DrrbV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdGetResponses200ContentApplicationJsonSchemaPropertiesSymbolsUploadedItems[];
  /** The origin of the symbol upload */
  origin?: Enum218;
  /** The file name for the symbol upload */
  fileName?: string;
  /** The size of the file in Mebibytes. This may be 0 until the status is indexed */
  fileSize?: number;
  /** When the symbol upload was committed, or last transaction time if not committed */
  timestamp?: Date;
}

/** User information of the one who intitiated the symbol upload */
export interface PathsLchkcoV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdGetResponses200ContentApplicationJsonSchemaPropertiesUser {
  /** The email of the user */
  email?: string;
  /** The full name of the user. Might for example be first and last name */
  displayName?: string;
}

export interface Paths69DrrbV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdGetResponses200ContentApplicationJsonSchemaPropertiesSymbolsUploadedItems {
  /** The symbol id of the symbol binary */
  symbolId: string;
  /** The platform the symbol is associated with */
  platform: string;
}

export interface Paths13BxjsnV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdGetResponses403ContentApplicationJsonSchema {
  message: string;
}

export interface Paths1Tfz2NwV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdGetResponses404ContentApplicationJsonSchema {
  message: string;
}

export interface Paths12AtszV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdGetResponses500ContentApplicationJsonSchema {
  message: string;
}

/** A request containing information pertaining to completing a symbol upload process */
export interface PathsQse2V9V01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdPatchRequestbodyContentApplicationJsonSchema {
  /** The desired operation for the symbol upload */
  status: PatchContentSchemaStatus;
}

/** A single symbol upload entity */
export interface Paths2Sc2IcV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdPatchResponses200ContentApplicationJsonSchema {
  /** The id for the current symbol upload */
  symbolUploadId: string;
  /** The application that this symbol upload belongs to */
  appId: string;
  /** User information of the one who intitiated the symbol upload */
  user?: Paths1NwdyxkV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdPatchResponses200ContentApplicationJsonSchemaPropertiesUser;
  /** The current status for the symbol upload */
  status: Enum220;
  /** The type of the symbol for the current symbol upload */
  symbolType: Enum221;
  /** The symbols found in the upload. This may be empty until the status is indexed */
  symbolsUploaded?: Paths1EdvctrV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdPatchResponses200ContentApplicationJsonSchemaPropertiesSymbolsUploadedItems[];
  /** The origin of the symbol upload */
  origin?: Enum222;
  /** The file name for the symbol upload */
  fileName?: string;
  /** The size of the file in Mebibytes. This may be 0 until the status is indexed */
  fileSize?: number;
  /** When the symbol upload was committed, or last transaction time if not committed */
  timestamp?: Date;
}

/** User information of the one who intitiated the symbol upload */
export interface Paths1NwdyxkV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdPatchResponses200ContentApplicationJsonSchemaPropertiesUser {
  /** The email of the user */
  email?: string;
  /** The full name of the user. Might for example be first and last name */
  displayName?: string;
}

export interface Paths1EdvctrV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdPatchResponses200ContentApplicationJsonSchemaPropertiesSymbolsUploadedItems {
  /** The symbol id of the symbol binary */
  symbolId: string;
  /** The platform the symbol is associated with */
  platform: string;
}

export interface PathsS5X5VpV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdPatchResponses400ContentApplicationJsonSchema {
  message: string;
}

export interface Paths1Ccf2OgV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdPatchResponses403ContentApplicationJsonSchema {
  message: string;
}

export interface Paths124Q9H8V01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdPatchResponses500ContentApplicationJsonSchema {
  message: string;
}

/** A single symbol upload entity */
export interface PathsH20WogV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdDeleteResponses200ContentApplicationJsonSchema {
  /** The id for the current symbol upload */
  symbolUploadId: string;
  /** The application that this symbol upload belongs to */
  appId: string;
  /** User information of the one who intitiated the symbol upload */
  user?: Paths14Dc1KbV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdDeleteResponses200ContentApplicationJsonSchemaPropertiesUser;
  /** The current status for the symbol upload */
  status: Enum223;
  /** The type of the symbol for the current symbol upload */
  symbolType: Enum224;
  /** The symbols found in the upload. This may be empty until the status is indexed */
  symbolsUploaded?: Delete200ApplicationJsonPropertiesItemsItem[];
  /** The origin of the symbol upload */
  origin?: Enum225;
  /** The file name for the symbol upload */
  fileName?: string;
  /** The size of the file in Mebibytes. This may be 0 until the status is indexed */
  fileSize?: number;
  /** When the symbol upload was committed, or last transaction time if not committed */
  timestamp?: Date;
}

/** User information of the one who intitiated the symbol upload */
export interface Paths14Dc1KbV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdDeleteResponses200ContentApplicationJsonSchemaPropertiesUser {
  /** The email of the user */
  email?: string;
  /** The full name of the user. Might for example be first and last name */
  displayName?: string;
}

export interface Delete200ApplicationJsonPropertiesItemsItem {
  /** The symbol id of the symbol binary */
  symbolId: string;
  /** The platform the symbol is associated with */
  platform: string;
}

export interface Paths16F8Fw3V01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdDeleteResponses403ContentApplicationJsonSchema {
  message: string;
}

export interface PathsIabzs6V01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdDeleteResponses404ContentApplicationJsonSchema {
  message: string;
}

export interface Paths1AenlgkV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdDeleteResponses500ContentApplicationJsonSchema {
  message: string;
}

/** A single symbol upload entity */
export interface Paths5Jmb0FV01AppsOwnerNameAppNameSymbolUploadsGetResponses200ContentApplicationJsonSchemaItems {
  /** The id for the current symbol upload */
  symbolUploadId: string;
  /** The application that this symbol upload belongs to */
  appId: string;
  /** User information of the one who intitiated the symbol upload */
  user?: GetResponses200ContentApplicationJsonSchemaItemUser;
  /** The current status for the symbol upload */
  status: Enum228;
  /** The type of the symbol for the current symbol upload */
  symbolType: GetResponses200ContentApplicationJsonSchemaItemSymbolType;
  /** The symbols found in the upload. This may be empty until the status is indexed */
  symbolsUploaded?: Get200ApplicationJsonItemsSymbolsUploadedItem[];
  /** The origin of the symbol upload */
  origin?: Enum230;
  /** The file name for the symbol upload */
  fileName?: string;
  /** The size of the file in Mebibytes. This may be 0 until the status is indexed */
  fileSize?: number;
  /** When the symbol upload was committed, or last transaction time if not committed */
  timestamp?: Date;
}

/** User information of the one who intitiated the symbol upload */
export interface GetResponses200ContentApplicationJsonSchemaItemUser {
  /** The email of the user */
  email?: string;
  /** The full name of the user. Might for example be first and last name */
  displayName?: string;
}

export interface Get200ApplicationJsonItemsSymbolsUploadedItem {
  /** The symbol id of the symbol binary */
  symbolId: string;
  /** The platform the symbol is associated with */
  platform: string;
}

export interface Paths15Ox23KV01AppsOwnerNameAppNameSymbolUploadsGetResponses403ContentApplicationJsonSchema {
  message: string;
}

export interface Paths11Twl9GV01AppsOwnerNameAppNameSymbolUploadsGetResponses500ContentApplicationJsonSchema {
  message: string;
}

/** A request containing information pertaining to starting a symbol upload process */
export interface Paths18RbyikV01AppsOwnerNameAppNameSymbolUploadsPostRequestbodyContentApplicationJsonSchema {
  /** The type of the symbol for the current symbol upload */
  symbolType: PostContentSchemaSymbolType;
  /** The callback URL that the client can optionally provide to get status updates for the current symbol upload */
  clientCallback?: string;
  /** The file name for the symbol upload */
  fileName?: string;
  /** The build number. Optional for Apple. Required for Android. */
  build?: string;
  /** The version number. Optional for Apple. Required for Android. */
  version?: string;
}

/** A response containing information pertaining to starting a symbol upload process */
export interface Paths1B3N0BtV01AppsOwnerNameAppNameSymbolUploadsPostResponses200ContentApplicationJsonSchema {
  /** The id for the current upload */
  symbolUploadId: string;
  /** The URL where the client needs to upload the symbol blob to */
  uploadUrl: string;
  /** Describes how long the upload_url is valid */
  expirationDate: Date;
}

export interface PathsGu8CaoV01AppsOwnerNameAppNameSymbolUploadsPostResponses400ContentApplicationJsonSchema {
  message: string;
}

export interface Paths11OusrnV01AppsOwnerNameAppNameSymbolUploadsPostResponses403ContentApplicationJsonSchema {
  message: string;
}

export interface PathsGsz3YxV01AppsOwnerNameAppNameSymbolUploadsPostResponses500ContentApplicationJsonSchema {
  message: string;
}

/** Subscription information */
export interface Subscription0 {
  /** The date the subscription began */
  startsAt?: string;
  /** The date the subscription will end or ended */
  endsAt?: string;
  /** The number of days left in the subscription */
  daysLeft?: number;
  /** Subscription Tier */
  tier?: Paths13Qyp9PV01AppsOwnerNameAppNameSubscriptionsGetResponses200ContentApplicationJsonSchemaPropertiesTier;
  /** Is the subscription currently active? */
  active?: boolean;
  /** Id of the subscription */
  id?: string;
}

/** Subscription Tier */
export interface Paths13Qyp9PV01AppsOwnerNameAppNameSubscriptionsGetResponses200ContentApplicationJsonSchemaPropertiesTier {
  /** The name of the tier */
  name?: string;
}

/** Subscription information */
export interface Subscription1 {
  /** The date the subscription began */
  startsAt?: string;
  /** The date the subscription will end or ended */
  endsAt?: string;
  /** The number of days left in the subscription */
  daysLeft?: number;
  /** Subscription Tier */
  tier?: Paths1D6F1LqV01AppsOwnerNameAppNameSubscriptionsPostResponses201ContentApplicationJsonSchemaPropertiesTier;
  /** Is the subscription currently active? */
  active?: boolean;
  /** Id of the subscription */
  id?: string;
}

/** Subscription Tier */
export interface Paths1D6F1LqV01AppsOwnerNameAppNameSubscriptionsPostResponses201ContentApplicationJsonSchemaPropertiesTier {
  /** The name of the tier */
  name?: string;
}

export interface Paths18FdbxcV01AppsOwnerNameAppNameStoreServiceStatusGetResponses200ContentApplicationJsonSchema {
  service?: string;
  status?: string;
  validUntil?: number;
}

export interface Paths1Yn7B37V01AppsOwnerNameAppNameStoreServiceStatusGetResponsesDefaultContentApplicationJsonSchema {
  code: Enum232;
  message: string;
}

/** The source repository */
export interface PathsFt7OwuV01AppsOwnerNameAppNameSourceHostsSourceHostRepositoriesGetResponses200ContentApplicationJsonSchemaItems {
  /** The repository name */
  name?: string;
  /** URL used to clone the repository */
  cloneUrl?: string;
}

export interface Paths19B6FnrV01AppsOwnerNameAppNameSourceHostsSourceHostRepositoriesGetResponsesDefaultContentApplicationJsonSchema {
  id: string;
  code: string;
  message: string;
}

export interface PathsT02O1YV01AppsOwnerNameAppNameRepoConfigGetResponses200ContentApplicationJsonSchemaItemsAllof0 {
  /** The repository's git url, must be a HTTPS URL */
  repoUrl?: string;
  /** The repository id from the repository provider. Required for repositories connected from GitHub App and GitLab.com */
  repoId?: string;
  /** The external user id from the repository provider. Required for GitLab.com repositories */
  externalUserId?: string;
  /** The id of the service connection (private). Required for GitLab self-hosted repositories */
  serviceConnectionId?: string;
}

export interface PathsPitaxjV01AppsOwnerNameAppNameRepoConfigGetResponsesDefaultContentApplicationJsonSchema {
  id: string;
  code: string;
  message: string;
}

export interface PathsAqvv1UV01AppsOwnerNameAppNameRepoConfigPostRequestbodyContentApplicationJsonSchemaAllof0 {
  /** The repository's git url, must be a HTTPS URL */
  repoUrl?: string;
  /** The repository id from the repository provider. Required for repositories connected from GitHub App and GitLab.com */
  repoId?: string;
  /** The external user id from the repository provider. Required for GitLab.com repositories */
  externalUserId?: string;
  /** The id of the service connection (private). Required for GitLab self-hosted repositories */
  serviceConnectionId?: string;
}

export interface Paths1I47WvgV01AppsOwnerNameAppNameRepoConfigPostResponses200ContentApplicationJsonSchema {
  message: string;
}

export interface PathsP7E5UzV01AppsOwnerNameAppNameRepoConfigPostResponsesDefaultContentApplicationJsonSchema {
  id: string;
  code: string;
  message: string;
}

export interface PathsX38Gw3V01AppsOwnerNameAppNameRepoConfigDeleteResponses200ContentApplicationJsonSchema {
  message: string;
}

export interface Paths1Lqz171V01AppsOwnerNameAppNameRepoConfigDeleteResponsesDefaultContentApplicationJsonSchema {
  id: string;
  code: string;
  message: string;
}

/** The status of the resign operation. */
export interface Paths13R6WlgV01AppsOwnerNameAppNameReleasesReleaseIdUpdateDevicesResignIdGetResponses200ContentApplicationJsonSchema {
  /** The status of the resign */
  status: string;
  /** Error code for any error that occured during the resigning operation. */
  errorCode?: string;
  /** Error message for any error that occured during the resigning operation. */
  errorMessage?: string;
}

export interface Paths1O1G9I2V01AppsOwnerNameAppNameReleasesReleaseIdUpdateDevicesResignIdGetResponses400ContentApplicationJsonSchema {
  code: Enum236;
  message: string;
}

export interface PathsRigtgjV01AppsOwnerNameAppNameReleasesReleaseIdUpdateDevicesResignIdGetResponses404ContentApplicationJsonSchema {
  code: Enum237;
  message: string;
}

export interface PathsOjvewzV01AppsOwnerNameAppNameReleasesReleaseIdTestersTesterIdPutRequestbodyContentApplicationJsonSchema {
  /** Whether a release is mandatory for the given destination */
  mandatoryUpdate: boolean;
}

export interface Paths7J8CcmV01AppsOwnerNameAppNameReleasesReleaseIdTestersTesterIdPutResponses404ContentApplicationJsonSchema {
  code: Put404ApplicationJsonProperties;
  message: string;
}

export interface Paths1RmbaiiV01AppsOwnerNameAppNameReleasesReleaseIdTestersTesterIdDeleteResponses404ContentApplicationJsonSchema {
  code: Enum239;
  message: string;
}

export interface PathsF6Ye6UV01AppsOwnerNameAppNameReleasesReleaseIdTestersPostRequestbodyContentApplicationJsonSchema {
  /** Flag to mark the release for the provided destinations as mandatory */
  mandatoryUpdate?: boolean;
  /** Tester's email address */
  email: string;
  /** Flag to enable or disable notifications to testers */
  notifyTesters?: boolean;
}

export interface PathsKdtsm0V01AppsOwnerNameAppNameReleasesReleaseIdTestersPostResponses201ContentApplicationJsonSchemaAllof0 {
  /** Unique id for the release destination */
  id: string;
}

export interface Paths12D41JpV01AppsOwnerNameAppNameReleasesReleaseIdTestersPostResponses201ContentApplicationJsonSchemaAllof1 {
  /** Flag to mark the release for the provided destinations as mandatory */
  mandatoryUpdate: boolean;
  /** The url to check provisioning status. */
  provisioningStatusUrl?: string;
}

export interface PathsVb1DjeV01AppsOwnerNameAppNameReleasesReleaseIdTestersPostResponses400ContentApplicationJsonSchema {
  code: Enum240;
  message: string;
}

export interface Paths1P68AoeV01AppsOwnerNameAppNameReleasesReleaseIdTestersPostResponses404ContentApplicationJsonSchema {
  code: Enum241;
  message: string;
}

export interface Paths1BbvdowV01AppsOwnerNameAppNameReleasesReleaseIdStoresStoreIdDeleteResponses404ContentApplicationJsonSchema {
  code: Enum242;
  message: string;
}

export interface Paths19I3T9ZV01AppsOwnerNameAppNameReleasesReleaseIdStoresPostRequestbodyContentApplicationJsonSchema {
  /** Unique id of the release destination */
  id: string;
}

export interface Paths1Tn9O5V01AppsOwnerNameAppNameReleasesReleaseIdStoresPostResponses201ContentApplicationJsonSchema {
  /** Unique id for the release destination */
  id: string;
}

export interface Paths1Kf4BpnV01AppsOwnerNameAppNameReleasesReleaseIdStoresPostResponses400ContentApplicationJsonSchema {
  code: Enum243;
  message: string;
}

export interface Paths1T5QljtV01AppsOwnerNameAppNameReleasesReleaseIdStoresPostResponses404ContentApplicationJsonSchema {
  code: Enum244;
  message: string;
}

/** A response containing information about an iOS provisioning profile. */
export interface ProvisioningProfileResponse {
  provisioningProfileType: ProvisioningProfileResponseProvisioningProfileType;
  udids?: string[];
  /** The name of the provisioning profile. */
  provisioningProfileName?: string;
  /** The team identifier. */
  teamIdentifier?: string;
  /** The bundle identifier associated with the profile. */
  provisioningBundleId?: string;
}

export interface PathsI43JzkV01AppsOwnerNameAppNameReleasesReleaseIdProvisioningProfileGetResponses400ContentApplicationJsonSchema {
  code: Enum246;
  message: string;
}

export interface Paths1Y3U3TvV01AppsOwnerNameAppNameReleasesReleaseIdGroupsGroupIdPutRequestbodyContentApplicationJsonSchema {
  /** Whether a release is mandatory for the given destination */
  mandatoryUpdate: boolean;
}

export interface Paths11Dzu4BV01AppsOwnerNameAppNameReleasesReleaseIdGroupsGroupIdPutResponses404ContentApplicationJsonSchema {
  code: Enum247;
  message: string;
}

export interface Paths1Nrzr5YV01AppsOwnerNameAppNameReleasesReleaseIdGroupsGroupIdDeleteResponses404ContentApplicationJsonSchema {
  code: Enum248;
  message: string;
}

export interface Paths17Lp2JiV01AppsOwnerNameAppNameReleasesReleaseIdGroupsPostRequestbodyContentApplicationJsonSchemaAllof0 {
  /** Unique id of the release destination */
  id: string;
}

export interface Paths17MosqV01AppsOwnerNameAppNameReleasesReleaseIdGroupsPostRequestbodyContentApplicationJsonSchemaAllof1 {
  /** Flag to mark the release for the provided destinations as mandatory */
  mandatoryUpdate?: boolean;
  /** Flag to enable or disable notifications to testers */
  notifyTesters?: boolean;
}

export interface Paths14K4HpV01AppsOwnerNameAppNameReleasesReleaseIdGroupsPostResponses201ContentApplicationJsonSchemaAllof0 {
  /** Unique id for the release destination */
  id: string;
}

export interface Paths1489G45V01AppsOwnerNameAppNameReleasesReleaseIdGroupsPostResponses201ContentApplicationJsonSchemaAllof1 {
  /** Flag to mark the release for the provided destinations as mandatory */
  mandatoryUpdate: boolean;
  /** The url to check provisioning status. */
  provisioningStatusUrl?: string;
}

export interface PathsPtrb07V01AppsOwnerNameAppNameReleasesReleaseIdGroupsPostResponses400ContentApplicationJsonSchema {
  code: Enum249;
  message: string;
}

export interface Paths19Ueda8V01AppsOwnerNameAppNameReleasesReleaseIdGroupsPostResponses404ContentApplicationJsonSchema {
  code: Enum250;
  message: string;
}

/** Details of an uploaded release */
export interface Paths1Wtl5HpV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchema {
  /** ID identifying this unique release. */
  id: number;
  /** The app's name (extracted from the uploaded release). */
  appName: string;
  /** The app's display name. */
  appDisplayName: string;
  /** The app's OS. */
  appOs?: string;
  /**
   * The release's version.<br>
   * For iOS: CFBundleVersion from info.plist.
   * For Android: android:versionCode from AppManifest.xml.
   *
   */
  version: string;
  /** The release's origin */
  origin?: Enum251;
  /**
   * The release's short version.<br>
   * For iOS: CFBundleShortVersionString from info.plist.
   * For Android: android:versionName from AppManifest.xml.
   *
   */
  shortVersion: string;
  /** The release's release notes. */
  releaseNotes?: string;
  /** The release's provisioning profile name. */
  provisioningProfileName?: string;
  /** The type of the provisioning profile for the requested app version. */
  provisioningProfileType?: Enum252;
  /** expiration date of provisioning profile in UTC format. */
  provisioningProfileExpiryDate?: string;
  /** A flag that determines whether the release's provisioning profile is still extracted or not. */
  isProvisioningProfileSyncing?: boolean;
  /** The release's size in bytes. */
  size?: number;
  /** The release's minimum required operating system. */
  minOs?: string;
  /** The release's device family. */
  deviceFamily?: string;
  /** The release's minimum required Android API level. */
  androidMinApiLevel?: string;
  /** The identifier of the apps bundle. */
  bundleIdentifier?: string;
  /** Hashes for the packages. */
  packageHashes?: string[];
  /** MD5 checksum of the release binary. */
  fingerprint?: string;
  /** UTC time in ISO 8601 format of the uploaded time. */
  uploadedAt: string;
  /** The URL that hosts the binary for this release. */
  downloadUrl?: string;
  /** A URL to the app's icon. */
  appIconUrl: string;
  /** The href required to install a release on a mobile device. On iOS devices will be prefixed with `itms-services://?action=download-manifest&url=` */
  installUrl?: string;
  /**
   * OBSOLETE. Will be removed in next version. The destination type.<br>
   * <b>group</b>: The release distributed to internal groups and distribution_groups details will be returned.<br>
   * <b>store</b>: The release distributed to external stores and distribution_stores details will be returned.<br>
   * <b>tester</b>: The release distributed testers details will be returned.<br>
   *
   */
  destinationType?: Enum253;
  /** OBSOLETE. Will be removed in next version. A list of distribution groups that are associated with this release. */
  distributionGroups?: PathsNf9DrV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDistributionGroupsItems[];
  /** OBSOLETE. Will be removed in next version. A list of distribution stores that are associated with this release. */
  distributionStores?: Paths11M0CpxV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDistributionStoresItems[];
  /** A list of distribution groups or stores. */
  destinations?: PathsEgsmktV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItems[];
  /** In calls that allow passing `udid` in the query string, this value will hold the provisioning status of that UDID in this release. Will be ignored for non-iOS platforms. */
  isUdidProvisioned?: boolean;
  /** In calls that allow passing `udid` in the query string, this value determines if a release can be re-signed. When true, after a re-sign, the tester will be able to install the release from his registered devices. Will not be returned for non-iOS platforms. */
  canResign?: boolean;
  /** Contains metadata about the build that produced the release being uploaded */
  build?: Paths1993OjcV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesBuild;
  /** This value determines the whether a release currently is enabled or disabled. */
  enabled: boolean;
  /** Status of the release. */
  status?: string;
  /** This value determines if a release is external or not. */
  isExternalBuild?: boolean;
}

export interface PathsNf9DrV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDistributionGroupsItems {
  /** ID identifying a unique distribution group. */
  id: string;
  /** A name identifying a unique distribution group. */
  name?: string;
}

export interface Paths11M0CpxV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDistributionStoresItems {
  /** ID identifying a unique distribution store. */
  id: string;
  /** A name identifying a unique distribution store. */
  name?: string;
  /** type of the distribution store currently stores type can be intune, googleplay or windows. */
  type?: Enum254;
  /** publishing status of the release in the store. */
  publishingStatus?: string;
}

export interface Paths13SftyjV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0 {
  /** type of the distribution store currently stores type can be intune, googleplay or windows. */
  type?: Enum255;
  /** publishing status of the release in the store. */
  publishingStatus?: string;
}

export interface PathsWkq29YV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0Allof1 {
  /** Is the containing release the latest one in this distribution store. */
  isLatest?: boolean;
}

/** A unique identifier for a destination. A destination can be identified by an ID (guid) or by a name. DestinationId encapsulates both options. A destination can be either a distribution group or a store. */
export interface Paths13J8DbyV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof1 {
  /** Name of a distribution group / distribution store. The release will be associated with this distribution group or store. If the distribution group / store doesn't exist a 400 is returned. If both distribution group / store name and id are passed, the id is taking precedence. */
  name?: string;
  /** Id of a distribution group / store. The release will be associated with this distribution group / store. If the distribution group / store doesn't exist a 400 is returned. If both distribution group / store name and id are passed, the id is taking precedence. */
  id: string;
}

export interface Paths1Pu9X8V01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof2 {
  /** Destination can be either store or group. */
  destinationType?: Enum256;
  /** Display name for the group or tester */
  displayName?: string;
}

/** Contains metadata about the build that produced the release being uploaded */
export interface Paths1993OjcV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesBuild {
  /** The branch name of the build producing the release */
  branchName?: string;
  /** The commit hash of the build producing the release */
  commitHash?: string;
  /** The commit message of the build producing the release */
  commitMessage?: string;
}

export interface Paths1LeydabV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses400ContentApplicationJsonSchema {
  code: Enum257;
  message: string;
}

export interface Paths6Hivb0V01AppsOwnerNameAppNameReleasesReleaseIdGetResponses404ContentApplicationJsonSchema {
  code: Enum258;
  message: string;
}

/** A request containing information for updating details of a release */
export interface PathsQ3NwdwV01AppsOwnerNameAppNameReleasesReleaseIdPutRequestbodyContentApplicationJsonSchema {
  /** Toggle this release to be enable distribute/download or not. */
  enabled?: boolean;
  /** Release notes for this release. */
  releaseNotes?: string;
  /** Contains metadata about the build that produced the release being uploaded */
  build?: PutContentSchemaBuild;
}

/** Contains metadata about the build that produced the release being uploaded */
export interface PutContentSchemaBuild {
  /** The branch name of the build producing the release */
  branchName?: string;
  /** The commit hash of the build producing the release */
  commitHash?: string;
  /** The commit message of the build producing the release */
  commitMessage?: string;
}

/** Response for updating a release */
export interface PathsMeoh5V01AppsOwnerNameAppNameReleasesReleaseIdPutResponses200ContentApplicationJsonSchema {
  enabled?: boolean;
  mandatoryUpdate?: boolean;
  releaseNotes?: string;
  provisioningStatusUrl?: string;
  destinations?: Paths1RxivxnV01AppsOwnerNameAppNameReleasesReleaseIdPutResponses200ContentApplicationJsonSchemaPropertiesDestinationsItems[];
}

export interface Paths1RxivxnV01AppsOwnerNameAppNameReleasesReleaseIdPutResponses200ContentApplicationJsonSchemaPropertiesDestinationsItems {
  id?: string;
  name?: string;
}

export interface Paths17Qi9DpV01AppsOwnerNameAppNameReleasesReleaseIdPutResponses400ContentApplicationJsonSchemaAllof0 {
  code: Put400ApplicationJsonAllOfProperties;
  message: string;
}

export interface Paths1Y3IqbjV01AppsOwnerNameAppNameReleasesReleaseIdPutResponses400ContentApplicationJsonSchemaAllof1 {
  releaseNotes?: string;
  mandatoryUpdate?: boolean;
  destinations?: Put400ApplicationJsonAllOfPropertiesItemsItem[];
}

export interface Put400ApplicationJsonAllOfPropertiesItemsItem {
  /**
   * Error Codes:<br>
   * <b>invalid_store_secrets</b>: While distributing to store, secrets provided for store are not valid.<br>
   * <b>store_release_bad_request</b>: Proper package release details for the store is not provided.<br>
   * <b>store_release_unauthorized</b>: User is not authorized to publish to store due to invalid developer credentials.<br>
   * <b>store_release_forbidden</b>: Publish to store is forbidden due to conflicts/errors in the release version and already existing version in the store.<br>
   * <b>store_release_promotion</b>: Release already distributed, promoting a release is not supported.<br>
   * <b>store_track_deactivated</b>: One or more tracks would be deactivated with this release. This is not supported yet.<br>
   * <b>store_release_not_found</b>: App with the given package name is not found in the store.<br>
   * <b>store_release_not_available</b>: The release is not available.<br>
   * <b>internal_server_error</b>: Failed to distribute to a destination due to an internal server error.
   *
   */
  code?: string;
  message?: string;
  id?: string;
  name?: string;
}

export interface PathsAuajt0V01AppsOwnerNameAppNameReleasesReleaseIdPutResponses404ContentApplicationJsonSchema {
  code: Enum260;
  message: string;
}

/** A request containing information for updating a release. */
export interface Paths1Veut4NV01AppsOwnerNameAppNameReleasesReleaseIdPatchRequestbodyContentApplicationJsonSchema {
  /**
   * OBSOLETE. Will be removed in future releases - use destinations instead. Name of a distribution group. The release will be associated with this distribution group. If the distribution group doesn't exist a 400 is returned. If both distribution group name and id are passed, the id is taking precedence.
   *
   */
  distributionGroupName?: string;
  /**
   * OBSOLETE. Will be removed in future releases - use destinations instead. Id of a distribution group. The release will be associated with this distribution group. If the distribution group doesn't exist a 400 is returned. If both distribution group name and id are passed, the id is taking precedence.
   *
   */
  distributionGroupId?: string;
  /**
   * OBSOLETE. Will be removed in future releases - use destinations instead. Name of a destination. The release will be associated with this destination. If the destination doesn't exist a 400 is returned. If both distribution group name and id are passed, the id is taking precedence.
   *
   */
  destinationName?: string;
  /**
   * OBSOLETE. Will be removed in future releases - use destinations instead. Id of a destination. The release will be associated with this destination. If the destination doesn't exist a 400 is returned. If both destination name and id are passed, the id is taking precedence.
   *
   */
  destinationId?: string;
  /** Not used anymore. */
  destinationType?: string;
  /** Release notes for this release. */
  releaseNotes?: string;
  /** A boolean which determines whether this version should be a mandatory update or not. */
  mandatoryUpdate?: boolean;
  /** Distribute this release under the following list of destinations (store groups or distribution groups). */
  destinations?: PatchContentSchemaDestinationsItem[];
  /** Contains metadata about the build that produced the release being uploaded */
  build?: PatchContentSchemaBuild;
  /** A boolean which determines whether to notify testers of a new release, default to true. */
  notifyTesters?: boolean;
  /** An object containing all the release metadata. */
  metadata?: PatchContentSchemaMetadata;
}

/** A unique identifier for a destination. A destination can be identified by an ID (guid) or by a name. DestinationId encapsulates both options. A destination can be either a distribution group or a store. */
export interface PatchContentSchemaDestinationsItem {
  /** Name of a distribution group / distribution store. The release will be associated with this distribution group or store. If the distribution group / store doesn't exist a 400 is returned. If both distribution group / store name and id are passed, the id is taking precedence. */
  name?: string;
  /** Id of a distribution group / store. The release will be associated with this distribution group / store. If the distribution group / store doesn't exist a 400 is returned. If both distribution group / store name and id are passed, the id is taking precedence. */
  id?: string;
}

/** Contains metadata about the build that produced the release being uploaded */
export interface PatchContentSchemaBuild {
  /** The branch name of the build producing the release */
  branchName?: string;
  /** The commit hash of the build producing the release */
  commitHash?: string;
  /** The commit message of the build producing the release */
  commitMessage?: string;
}

/** An object containing all the release metadata. */
export interface PatchContentSchemaMetadata {
  /** dsa signature of the release for the sparkle feed. */
  dsaSignature?: string;
  /** edDSA signature of the release for the sparkle feed. */
  edSignature?: string;
}

/** Response for updating release details */
export interface Paths1FopftvV01AppsOwnerNameAppNameReleasesReleaseIdPatchResponses200ContentApplicationJsonSchema {
  releaseNotes?: string;
}

export interface PathsRtr6U2V01AppsOwnerNameAppNameReleasesReleaseIdPatchResponses400ContentApplicationJsonSchemaAllof0 {
  code: Patch400ApplicationJsonAllOfProperties;
  message: string;
}

export interface PathsP5E57AV01AppsOwnerNameAppNameReleasesReleaseIdPatchResponses400ContentApplicationJsonSchemaAllof1 {
  releaseNotes?: string;
  mandatoryUpdate?: boolean;
  destinations?: Patch400ApplicationJsonAllOfPropertiesItemsItem[];
}

export interface Patch400ApplicationJsonAllOfPropertiesItemsItem {
  /**
   * Error Codes:<br>
   * <b>invalid_store_secrets</b>: While distributing to store, secrets provided for store are not valid.<br>
   * <b>store_release_bad_request</b>: Proper package release details for the store is not provided.<br>
   * <b>store_release_unauthorized</b>: User is not authorized to publish to store due to invalid developer credentials.<br>
   * <b>store_release_forbidden</b>: Publish to store is forbidden due to conflicts/errors in the release version and already existing version in the store.<br>
   * <b>store_release_promotion</b>: Release already distributed, promoting a release is not supported.<br>
   * <b>store_track_deactivated</b>: One or more tracks would be deactivated with this release. This is not supported yet.<br>
   * <b>store_release_not_found</b>: App with the given package name is not found in the store.<br>
   * <b>store_release_not_available</b>: The release is not available.<br>
   * <b>internal_server_error</b>: Failed to distribute to a destination due to an internal server error.
   *
   */
  code?: string;
  message?: string;
  id?: string;
  name?: string;
}

export interface PathsW9K4UlV01AppsOwnerNameAppNameReleasesReleaseIdPatchResponses404ContentApplicationJsonSchema {
  code: Patch404ApplicationJsonProperties;
  message: string;
}

export interface PathsQra1HiV01AppsOwnerNameAppNameReleasesReleaseIdDeleteResponses404ContentApplicationJsonSchema {
  code: Enum263;
  message: string;
}

export interface Paths1Lqk8FbV01AppsOwnerNameAppNameReleasesReleaseIdDeleteResponses500ContentApplicationJsonSchema {
  code: Enum264;
  message: string;
}

/** Basic information on a release */
export interface Paths146V2RtV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItems {
  /** ID identifying this unique release. */
  id: number;
  /**
   * The release's version.<br>
   * For iOS: CFBundleVersion from info.plist.<br>
   * For Android: android:versionCode from AppManifest.xml.
   *
   */
  version: string;
  /** The release's origin */
  origin?: Enum265;
  /**
   * The release's short version.<br>
   * For iOS: CFBundleShortVersionString from info.plist.<br>
   * For Android: android:versionName from AppManifest.xml.
   *
   */
  shortVersion: string;
  /** This value determines the whether a release currently is enabled or disabled. */
  enabled: boolean;
  /** UTC time in ISO 8601 format of the uploaded time. */
  uploadedAt: string;
  /**
   * OBSOLETE. Will be removed in next version. The destination type.<br>
   * <b>group</b>: The release distributed to internal groups and distribution_groups details will be returned.<br>
   * <b>store</b>: The release distributed to external stores and distribution_stores details will be returned. <br>
   *
   */
  destinationType?: GetResponses200ContentApplicationJsonSchemaItemDestinationType;
  /** OBSOLETE. Will be removed in next version. A list of distribution groups that are associated with this release. */
  distributionGroups?: Get200ApplicationJsonItemsDistributionGroupsItem[];
  /** OBSOLETE. Will be removed in next version. A list of distribution stores that are associated with this release. */
  distributionStores?: Get200ApplicationJsonItemsDistributionStoresItem[];
  /** A list of distribution groups or stores. */
  destinations?: Get200ApplicationJsonItemsDestinationsItem[];
  /**
   * Build information for the release
   *
   */
  build?: PathsBk4EdhV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesBuild;
  /** This value determines if a release is external or not. */
  isExternalBuild?: boolean;
}

export interface Paths10J5Pj9V01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItemsAllof0 {
  /** ID identifying a unique distribution group. */
  id: string;
  /** A name identifying a unique distribution group. */
  name?: string;
}

export interface PathsW3XrsbV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItemsAllof1 {
  /** Is the containing release the latest one in this distribution group. */
  isLatest?: boolean;
}

export interface PathsP9RqxrV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItemsAllof0 {
  /** ID identifying a unique distribution store. */
  id: string;
  /** A name identifying a unique distribution store. */
  name?: string;
  /** type of the distribution store currently stores type can be intune, googleplay or windows. */
  type?: Enum267;
  /** publishing status of the release in the store. */
  publishingStatus?: string;
}

export interface Paths7Pkkp8V01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItemsAllof1 {
  /** Is the containing release the latest one in this distribution store. */
  isLatest?: boolean;
}

export interface Paths18Irl7JV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0 {
  /** type of the distribution store currently stores type can be intune, googleplay or windows. */
  type?: Get200ApplicationJsonItemsDestinationsAllOfProperties;
  /** publishing status of the release in the store. */
  publishingStatus?: string;
}

export interface PathsJ60E2EV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0Allof1 {
  /** Is the containing release the latest one in this distribution store. */
  isLatest?: boolean;
}

/** A unique identifier for a destination. A destination can be identified by an ID (guid) or by a name. DestinationId encapsulates both options. A destination can be either a distribution group or a store. */
export interface PathsLdmfwzV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof1 {
  /** Name of a distribution group / distribution store. The release will be associated with this distribution group or store. If the distribution group / store doesn't exist a 400 is returned. If both distribution group / store name and id are passed, the id is taking precedence. */
  name?: string;
  /** Id of a distribution group / store. The release will be associated with this distribution group / store. If the distribution group / store doesn't exist a 400 is returned. If both distribution group / store name and id are passed, the id is taking precedence. */
  id: string;
}

export interface Paths1F6N8B4V01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof2 {
  /** Destination can be either store or group. */
  destinationType?: Enum269;
  /** Display name for the group or tester */
  displayName?: string;
}

/**
 * Build information for the release
 *
 */
export interface PathsBk4EdhV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesBuild {
  /** The branch name of the build producing the release */
  branchName?: string;
  /** The commit hash of the build producing the release */
  commitHash?: string;
  /** The commit message of the build producing the release */
  commitMessage?: string;
}

/** Basic information on a release */
export interface Paths13M4B1YV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItems {
  /** ID identifying this unique release. */
  id: number;
  /**
   * The release's version.<br>
   * For iOS: CFBundleVersion from info.plist.<br>
   * For Android: android:versionCode from AppManifest.xml.
   *
   */
  version: string;
  /** The release's origin */
  origin?: Enum270;
  /**
   * The release's short version.<br>
   * For iOS: CFBundleShortVersionString from info.plist.<br>
   * For Android: android:versionName from AppManifest.xml.
   *
   */
  shortVersion: string;
  /** This value determines the whether a release currently is enabled or disabled. */
  enabled: boolean;
  /** UTC time in ISO 8601 format of the uploaded time. */
  uploadedAt: string;
  /**
   * OBSOLETE. Will be removed in next version. The destination type.<br>
   * <b>group</b>: The release distributed to internal groups and distribution_groups details will be returned.<br>
   * <b>store</b>: The release distributed to external stores and distribution_stores details will be returned. <br>
   *
   */
  destinationType?: Enum271;
  /** OBSOLETE. Will be removed in next version. A list of distribution groups that are associated with this release. */
  distributionGroups?: PathsQc9WyxV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItems[];
  /** OBSOLETE. Will be removed in next version. A list of distribution stores that are associated with this release. */
  distributionStores?: Paths15Ddi2KV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItems[];
  /** A list of distribution groups or stores. */
  destinations?: Paths2S32RgV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItems[];
  /**
   * Build information for the release
   *
   */
  build?: PathsC8XxqtV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesBuild;
  /** This value determines if a release is external or not. */
  isExternalBuild?: boolean;
}

export interface Paths1Fwr664V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItemsAllof0 {
  /** ID identifying a unique distribution group. */
  id: string;
  /** A name identifying a unique distribution group. */
  name?: string;
}

export interface PathsOjwcvoV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItemsAllof1 {
  /** Is the containing release the latest one in this distribution group. */
  isLatest?: boolean;
}

export interface PathsUii8Z4V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItemsAllof0 {
  /** ID identifying a unique distribution store. */
  id: string;
  /** A name identifying a unique distribution store. */
  name?: string;
  /** type of the distribution store currently stores type can be intune, googleplay or windows. */
  type?: Enum272;
  /** publishing status of the release in the store. */
  publishingStatus?: string;
}

export interface PathsGd6D92V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItemsAllof1 {
  /** Is the containing release the latest one in this distribution store. */
  isLatest?: boolean;
}

export interface Paths1612Hh6V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0 {
  /** type of the distribution store currently stores type can be intune, googleplay or windows. */
  type?: Enum273;
  /** publishing status of the release in the store. */
  publishingStatus?: string;
}

export interface Paths12Nyzp4V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0Allof1 {
  /** Is the containing release the latest one in this distribution store. */
  isLatest?: boolean;
}

/** A unique identifier for a destination. A destination can be identified by an ID (guid) or by a name. DestinationId encapsulates both options. A destination can be either a distribution group or a store. */
export interface Paths16Wfds7V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof1 {
  /** Name of a distribution group / distribution store. The release will be associated with this distribution group or store. If the distribution group / store doesn't exist a 400 is returned. If both distribution group / store name and id are passed, the id is taking precedence. */
  name?: string;
  /** Id of a distribution group / store. The release will be associated with this distribution group / store. If the distribution group / store doesn't exist a 400 is returned. If both distribution group / store name and id are passed, the id is taking precedence. */
  id: string;
}

export interface Paths2Wsk71V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof2 {
  /** Destination can be either store or group. */
  destinationType?: Enum274;
  /** Display name for the group or tester */
  displayName?: string;
}

/**
 * Build information for the release
 *
 */
export interface PathsC8XxqtV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesBuild {
  /** The branch name of the build producing the release */
  branchName?: string;
  /** The commit hash of the build producing the release */
  commitHash?: string;
  /** The commit message of the build producing the release */
  commitMessage?: string;
}

/** Basic information on a release */
export interface PathsYi44H6V01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItems {
  /** ID identifying this unique release. */
  id: number;
  /**
   * The release's version.<br>
   * For iOS: CFBundleVersion from info.plist.<br>
   * For Android: android:versionCode from AppManifest.xml.
   *
   */
  version: string;
  /** The release's origin */
  origin?: Enum275;
  /**
   * The release's short version.<br>
   * For iOS: CFBundleShortVersionString from info.plist.<br>
   * For Android: android:versionName from AppManifest.xml.
   *
   */
  shortVersion: string;
  /** This value determines the whether a release currently is enabled or disabled. */
  enabled: boolean;
  /** UTC time in ISO 8601 format of the uploaded time. */
  uploadedAt: string;
  /**
   * OBSOLETE. Will be removed in next version. The destination type.<br>
   * <b>group</b>: The release distributed to internal groups and distribution_groups details will be returned.<br>
   * <b>store</b>: The release distributed to external stores and distribution_stores details will be returned. <br>
   *
   */
  destinationType?: Enum276;
  /** OBSOLETE. Will be removed in next version. A list of distribution groups that are associated with this release. */
  distributionGroups?: Paths14BtkccV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItems[];
  /** OBSOLETE. Will be removed in next version. A list of distribution stores that are associated with this release. */
  distributionStores?: Paths1Yxm0T8V01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItems[];
  /** A list of distribution groups or stores. */
  destinations?: PathsM69GgsV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItems[];
  /**
   * Build information for the release
   *
   */
  build?: PathsKdfzV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesBuild;
  /** This value determines if a release is external or not. */
  isExternalBuild?: boolean;
}

export interface Paths1S10KqwV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItemsAllof0 {
  /** ID identifying a unique distribution group. */
  id: string;
  /** A name identifying a unique distribution group. */
  name?: string;
}

export interface PathsWb4NtlV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItemsAllof1 {
  /** Is the containing release the latest one in this distribution group. */
  isLatest?: boolean;
}

export interface Paths1UjvvjlV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItemsAllof0 {
  /** ID identifying a unique distribution store. */
  id: string;
  /** A name identifying a unique distribution store. */
  name?: string;
  /** type of the distribution store currently stores type can be intune, googleplay or windows. */
  type?: Enum277;
  /** publishing status of the release in the store. */
  publishingStatus?: string;
}

export interface Paths11O5OrcV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItemsAllof1 {
  /** Is the containing release the latest one in this distribution store. */
  isLatest?: boolean;
}

export interface PathsG3O3KxV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0 {
  /** type of the distribution store currently stores type can be intune, googleplay or windows. */
  type?: Enum278;
  /** publishing status of the release in the store. */
  publishingStatus?: string;
}

export interface Paths1LkdigmV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0Allof1 {
  /** Is the containing release the latest one in this distribution store. */
  isLatest?: boolean;
}

/** A unique identifier for a destination. A destination can be identified by an ID (guid) or by a name. DestinationId encapsulates both options. A destination can be either a distribution group or a store. */
export interface Paths1Os0Y5OV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof1 {
  /** Name of a distribution group / distribution store. The release will be associated with this distribution group or store. If the distribution group / store doesn't exist a 400 is returned. If both distribution group / store name and id are passed, the id is taking precedence. */
  name?: string;
  /** Id of a distribution group / store. The release will be associated with this distribution group / store. If the distribution group / store doesn't exist a 400 is returned. If both distribution group / store name and id are passed, the id is taking precedence. */
  id: string;
}

export interface Paths1Qd7R1NV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof2 {
  /** Destination can be either store or group. */
  destinationType?: Enum279;
  /** Display name for the group or tester */
  displayName?: string;
}

/**
 * Build information for the release
 *
 */
export interface PathsKdfzV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesBuild {
  /** The branch name of the build producing the release */
  branchName?: string;
  /** The commit hash of the build producing the release */
  commitHash?: string;
  /** The commit message of the build producing the release */
  commitMessage?: string;
}

export interface Paths1Hot65IV01AppsOwnerNameAppNamePushNotificationsConfigHeadResponsesDefaultContentApplicationJsonSchema {
  error: HeadDefaultApplicationJsonProperties;
}

export interface HeadDefaultApplicationJsonProperties {
  code: HeadDefaultApplicationJsonPropertiesProperties;
  message: string;
}

/** Generic notification configuration result. */
export interface Paths1C7Oun7V01AppsOwnerNameAppNamePushNotificationsConfigGetResponses200ContentApplicationJsonSchema {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "Paths1C7Oun7V01AppsOwnerNameAppNamePushNotificationsConfigGetResponses200ContentApplicationJsonSchema";
}

export interface PathsO0Ll17V01AppsOwnerNameAppNamePushNotificationsConfigGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths1Vuj69KV01AppsOwnerNameAppNamePushNotificationsConfigGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Vuj69KV01AppsOwnerNameAppNamePushNotificationsConfigGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum281;
  message: string;
}

/** Type of notification config (NotificationConfigAppleToken, NotificationConfigGoogle, NotificationConfigWindows). The 'type' property must be set to a valid value and the object must include the correct properties for the specified type. */
export interface Paths1Nw7A47V01AppsOwnerNameAppNamePushNotificationsConfigPutRequestbodyContentApplicationJsonSchema {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "Paths1Nw7A47V01AppsOwnerNameAppNamePushNotificationsConfigPutRequestbodyContentApplicationJsonSchema";
}

/** Generic notification configuration result. */
export interface Paths176Xq3CV01AppsOwnerNameAppNamePushNotificationsConfigPutResponses200ContentApplicationJsonSchema {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "Paths176Xq3CV01AppsOwnerNameAppNamePushNotificationsConfigPutResponses200ContentApplicationJsonSchema";
}

export interface PathsFgy7YfV01AppsOwnerNameAppNamePushNotificationsConfigPutResponsesDefaultContentApplicationJsonSchema {
  error: PutDefaultApplicationJsonProperties;
}

export interface PutDefaultApplicationJsonProperties {
  code: PutDefaultApplicationJsonPropertiesProperties;
  message: string;
}

export interface PathsFm6Bs9V01AppsOwnerNameAppNamePushNotificationsConfigDeleteResponsesDefaultContentApplicationJsonSchema {
  error: PathsAky7AtV01AppsOwnerNameAppNamePushNotificationsConfigDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsAky7AtV01AppsOwnerNameAppNamePushNotificationsConfigDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum284;
  message: string;
}

/** Notification definition object */
export interface PathsX4Uqn0V01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponses200ContentApplicationJsonSchemaPropertiesNotificationContent {
  /** Notification name */
  name: string;
  /** Notification title */
  title?: string;
  /** Notification body */
  body?: string;
  /** Notification custom data (such as badge, color, sound, etc.) */
  customData?: { [propertyName: string]: string };
}

/** Notification failure outcome count */
export interface Paths1V4Or6MV01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponses200ContentApplicationJsonSchemaPropertiesFailureOutcomesItems {
  /** The reason of the notification failure */
  failureReason?: string;
  /** count of this type of failure */
  count?: number;
}

/** Notification statistics */
export interface PathsM85ZfmV01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponses200ContentApplicationJsonSchemaAllof0 {
  /** Notification id. */
  notificationId: string;
  /** Notification name */
  name?: string;
  /** Type of Notification target (audiences, devices, user ids, account ids or broadcast). The object must include the correct properties for the specified target type except for broadcast. */
  notificationTarget?: Paths1Ym8ZayV01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponses200ContentApplicationJsonSchemaAllof0PropertiesNotificationTarget;
  /** Notification send time */
  sendTime?: Date;
  /** Number of the notifications failed to send to the push provider. */
  pnsSendFailure?: number;
  /** Number of the notifications successfully sent to push the provider. */
  pnsSendSuccess?: number;
  /** State of the notification. */
  state: NotificationStates;
}

/** Type of Notification target (audiences, devices, user ids, account ids or broadcast). The object must include the correct properties for the specified target type except for broadcast. */
export interface Paths1Ym8ZayV01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponses200ContentApplicationJsonSchemaAllof0PropertiesNotificationTarget {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "Paths1Ym8ZayV01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponses200ContentApplicationJsonSchemaAllof0PropertiesNotificationTarget";
}

export interface PathsY2MpnfV01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths1Vi0HjqV01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Vi0HjqV01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum287;
  message: string;
}

/** List of notifications */
export interface Paths1YjfjrmV01AppsOwnerNameAppNamePushNotificationsGetResponses200ContentApplicationJsonSchema {
  values: Paths1PpqnzdV01AppsOwnerNameAppNamePushNotificationsGetResponses200ContentApplicationJsonSchemaPropertiesValuesItems[];
  /** the total count of notifications */
  total?: number;
  nextLink?: string;
}

/** Notification statistics */
export interface Paths1PpqnzdV01AppsOwnerNameAppNamePushNotificationsGetResponses200ContentApplicationJsonSchemaPropertiesValuesItems {
  /** Notification id. */
  notificationId: string;
  /** Notification name */
  name?: string;
  /** Type of Notification target (audiences, devices, user ids, account ids or broadcast). The object must include the correct properties for the specified target type except for broadcast. */
  notificationTarget?: GetResponses200ContentApplicationJsonSchemaValuesItemNotificationTarget;
  /** Notification send time */
  sendTime?: Date;
  /** Number of the notifications failed to send to the push provider. */
  pnsSendFailure?: number;
  /** Number of the notifications successfully sent to push the provider. */
  pnsSendSuccess?: number;
  /** State of the notification. */
  state: NotificationStates;
}

/** Type of Notification target (audiences, devices, user ids, account ids or broadcast). The object must include the correct properties for the specified target type except for broadcast. */
export interface GetResponses200ContentApplicationJsonSchemaValuesItemNotificationTarget {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "GetResponses200ContentApplicationJsonSchemaValuesItemNotificationTarget";
}

export interface Paths1Ua4CuvV01AppsOwnerNameAppNamePushNotificationsGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths1176Y01V01AppsOwnerNameAppNamePushNotificationsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1176Y01V01AppsOwnerNameAppNamePushNotificationsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum290;
  message: string;
}

/** Notification definition object */
export interface Paths13Dzhd2V01AppsOwnerNameAppNamePushNotificationsPostRequestbodyContentApplicationJsonSchema {
  /** Type of Notification target (audiences, devices, user ids, account ids or broadcast). The object must include the correct properties for the specified target type except for broadcast. */
  notificationTarget?: PostContentSchemaNotificationTarget;
  /** Notification definition object */
  notificationContent: PostContentSchemaNotificationContent;
}

/** Type of Notification target (audiences, devices, user ids, account ids or broadcast). The object must include the correct properties for the specified target type except for broadcast. */
export interface PostContentSchemaNotificationTarget {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "PostContentSchemaNotificationTarget";
}

/** Notification definition object */
export interface PostContentSchemaNotificationContent {
  /** Notification name */
  name: string;
  /** Notification title */
  title?: string;
  /** Notification body */
  body?: string;
  /** Notification custom data (such as badge, color, sound, etc.) */
  customData?: { [propertyName: string]: string };
}

/** Notification send succeeded. */
export interface PathsKpnezyV01AppsOwnerNameAppNamePushNotificationsPostResponses202ContentApplicationJsonSchema {
  /** The unique notification identifier. */
  notificationId: string;
}

export interface Paths1Kwjsi2V01AppsOwnerNameAppNamePushNotificationsPostResponsesDefaultContentApplicationJsonSchema {
  error: PathsDnpbs4V01AppsOwnerNameAppNamePushNotificationsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsDnpbs4V01AppsOwnerNameAppNamePushNotificationsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum292;
  message: string;
}

/** List of notification Ids */
export interface Paths5M7Cf2V01AppsOwnerNameAppNamePushNotificationsDeleteRequestbodyContentApplicationJsonSchema {
  /** List of notification Ids. */
  values: string[];
}

export interface PathsC8NkptV01AppsOwnerNameAppNamePushNotificationsDeleteResponsesDefaultContentApplicationJsonSchema {
  error: Paths10R6M0YV01AppsOwnerNameAppNamePushNotificationsDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths10R6M0YV01AppsOwnerNameAppNamePushNotificationsDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum293;
  message: string;
}

export interface Paths11E7Jh9V01AppsOwnerNameAppNamePushDevicesInstallIdDeleteResponsesDefaultContentApplicationJsonSchema {
  error: Paths15YgnyyV01AppsOwnerNameAppNamePushDevicesInstallIdDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths15YgnyyV01AppsOwnerNameAppNamePushDevicesInstallIdDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum294;
  message: string;
}

/** Export status */
export interface Paths1UomvgvV01AppsOwnerNameAppNamePushDeviceExportsExportIdGetResponses200ContentApplicationJsonSchema {
  /** The unique export identifier. */
  exportId: string;
  /** Status of the export. */
  status: ExportStatus;
}

export interface Paths18Cvs3GV01AppsOwnerNameAppNamePushDeviceExportsExportIdGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths1Squgf0V01AppsOwnerNameAppNamePushDeviceExportsExportIdGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Squgf0V01AppsOwnerNameAppNamePushDeviceExportsExportIdGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum295;
  message: string;
}

/** Generic export configuration. */
export interface Paths1H0K4SgV01AppsOwnerNameAppNamePushDeviceExportsPostRequestbodyContentApplicationJsonSchema {
  /** A shared access signature (SAS) URI with Read, Write and Delete permissions on a container. */
  blobContainerSasUri: string;
}

/** Export started. */
export interface Paths11Qat48V01AppsOwnerNameAppNamePushDeviceExportsPostResponses202ContentApplicationJsonSchema {
  /** The unique export identifier. */
  exportId: string;
}

export interface Paths801PuuV01AppsOwnerNameAppNamePushDeviceExportsPostResponsesDefaultContentApplicationJsonSchema {
  error: Paths1Psx6UuV01AppsOwnerNameAppNamePushDeviceExportsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Psx6UuV01AppsOwnerNameAppNamePushDeviceExportsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum296;
  message: string;
}

/** The name and devices of the device set */
export interface DeviceSet2 {
  /** Identifier of the device set */
  id: string;
  /** The number of manufacturers in the device set's device selection */
  manufacturerCount?: number;
  /** Name of the device set */
  name: string;
  /** Slug of the device set */
  slug?: string;
  /** The owner of a device set */
  owner: PathsDgxcdrV01AppsOwnerNameAppNameOwnerDeviceSetsIdGetResponses200ContentApplicationJsonSchemaPropertiesOwner;
  /** The number of os versions in the device set's device selection */
  osVersionCount?: number;
  deviceConfigurations: Paths1PggvdrV01AppsOwnerNameAppNameOwnerDeviceSetsIdGetResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItems[];
}

/** The owner of a device set */
export interface PathsDgxcdrV01AppsOwnerNameAppNameOwnerDeviceSetsIdGetResponses200ContentApplicationJsonSchemaPropertiesOwner {
  /** Type of account */
  type: string;
  /** Account ID */
  id: string;
  /** Display name of the account */
  displayName?: string;
  /** Name of the account */
  name: string;
}

export interface Paths1PggvdrV01AppsOwnerNameAppNameOwnerDeviceSetsIdGetResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItems {
  /** The unique id of the device configuration */
  id?: string;
  image?: Paths1T751P9V01AppsOwnerNameAppNameOwnerDeviceSetsIdGetResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItemsPropertiesImage;
  model?: Paths1789Yx1V01AppsOwnerNameAppNameOwnerDeviceSetsIdGetResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItemsPropertiesModel;
  os?: string;
  osName?: string;
}

export interface Paths1T751P9V01AppsOwnerNameAppNameOwnerDeviceSetsIdGetResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItemsPropertiesImage {
  thumb?: string;
}

export interface Paths1789Yx1V01AppsOwnerNameAppNameOwnerDeviceSetsIdGetResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItemsPropertiesModel {
  name?: string;
  manufacturer?: string;
  releaseDate?: string;
  formFactor?: string;
}

/** The name of the device set and the list of device IDs */
export interface DeviceSetUpdateInformation1 {
  /** List of device IDs */
  devices: string[];
  /** The name of the device set */
  name: string;
}

/** The name and devices of the device set */
export interface DeviceSet3 {
  /** Identifier of the device set */
  id: string;
  /** The number of manufacturers in the device set's device selection */
  manufacturerCount?: number;
  /** Name of the device set */
  name: string;
  /** Slug of the device set */
  slug?: string;
  /** The owner of a device set */
  owner: Paths1Xa6Q5RV01AppsOwnerNameAppNameOwnerDeviceSetsIdPutResponses200ContentApplicationJsonSchemaPropertiesOwner;
  /** The number of os versions in the device set's device selection */
  osVersionCount?: number;
  deviceConfigurations: Paths1V1B4LjV01AppsOwnerNameAppNameOwnerDeviceSetsIdPutResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItems[];
}

/** The owner of a device set */
export interface Paths1Xa6Q5RV01AppsOwnerNameAppNameOwnerDeviceSetsIdPutResponses200ContentApplicationJsonSchemaPropertiesOwner {
  /** Type of account */
  type: string;
  /** Account ID */
  id: string;
  /** Display name of the account */
  displayName?: string;
  /** Name of the account */
  name: string;
}

export interface Paths1V1B4LjV01AppsOwnerNameAppNameOwnerDeviceSetsIdPutResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItems {
  /** The unique id of the device configuration */
  id?: string;
  image?: PathsT1FkomV01AppsOwnerNameAppNameOwnerDeviceSetsIdPutResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItemsPropertiesImage;
  model?: Paths1Og6JqsV01AppsOwnerNameAppNameOwnerDeviceSetsIdPutResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItemsPropertiesModel;
  os?: string;
  osName?: string;
}

export interface PathsT1FkomV01AppsOwnerNameAppNameOwnerDeviceSetsIdPutResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItemsPropertiesImage {
  thumb?: string;
}

export interface Paths1Og6JqsV01AppsOwnerNameAppNameOwnerDeviceSetsIdPutResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItemsPropertiesModel {
  name?: string;
  manufacturer?: string;
  releaseDate?: string;
  formFactor?: string;
}

/** Details of a failed operation */
export interface TestCloudErrorDetails2 {
  /** Status of the operation */
  status: string;
  /** Human-readable message that describes the error */
  message: string;
}

/** The name and devices of the device set */
export interface Paths1Qu9NsjV01AppsOwnerNameAppNameOwnerDeviceSetsGetResponses200ContentApplicationJsonSchemaItems {
  /** Identifier of the device set */
  id: string;
  /** The number of manufacturers in the device set's device selection */
  manufacturerCount?: number;
  /** Name of the device set */
  name: string;
  /** Slug of the device set */
  slug?: string;
  /** The owner of a device set */
  owner: PathsZnhpeeV01AppsOwnerNameAppNameOwnerDeviceSetsGetResponses200ContentApplicationJsonSchemaItemsPropertiesOwner;
  /** The number of os versions in the device set's device selection */
  osVersionCount?: number;
  deviceConfigurations: PathsSwb0V2V01AppsOwnerNameAppNameOwnerDeviceSetsGetResponses200ContentApplicationJsonSchemaItemsPropertiesDeviceconfigurationsItems[];
}

/** The owner of a device set */
export interface PathsZnhpeeV01AppsOwnerNameAppNameOwnerDeviceSetsGetResponses200ContentApplicationJsonSchemaItemsPropertiesOwner {
  /** Type of account */
  type: string;
  /** Account ID */
  id: string;
  /** Display name of the account */
  displayName?: string;
  /** Name of the account */
  name: string;
}

export interface PathsSwb0V2V01AppsOwnerNameAppNameOwnerDeviceSetsGetResponses200ContentApplicationJsonSchemaItemsPropertiesDeviceconfigurationsItems {
  /** The unique id of the device configuration */
  id?: string;
  image?: PathsIekuqdV01AppsOwnerNameAppNameOwnerDeviceSetsGetResponses200ContentApplicationJsonSchemaItemsPropertiesDeviceconfigurationsItemsPropertiesImage;
  model?: Paths1Sk8N6QV01AppsOwnerNameAppNameOwnerDeviceSetsGetResponses200ContentApplicationJsonSchemaItemsPropertiesDeviceconfigurationsItemsPropertiesModel;
  os?: string;
  osName?: string;
}

export interface PathsIekuqdV01AppsOwnerNameAppNameOwnerDeviceSetsGetResponses200ContentApplicationJsonSchemaItemsPropertiesDeviceconfigurationsItemsPropertiesImage {
  thumb?: string;
}

export interface Paths1Sk8N6QV01AppsOwnerNameAppNameOwnerDeviceSetsGetResponses200ContentApplicationJsonSchemaItemsPropertiesDeviceconfigurationsItemsPropertiesModel {
  name?: string;
  manufacturer?: string;
  releaseDate?: string;
  formFactor?: string;
}

/** The name of the device set and the list of device IDs */
export interface DeviceSetUpdateInformation2 {
  /** List of device IDs */
  devices: string[];
  /** The name of the device set */
  name: string;
}

/** The name and devices of the device set */
export interface DeviceSet4 {
  /** Identifier of the device set */
  id: string;
  /** The number of manufacturers in the device set's device selection */
  manufacturerCount?: number;
  /** Name of the device set */
  name: string;
  /** Slug of the device set */
  slug?: string;
  /** The owner of a device set */
  owner: Paths1Wvz3UrV01AppsOwnerNameAppNameOwnerDeviceSetsPostResponses201ContentApplicationJsonSchemaPropertiesOwner;
  /** The number of os versions in the device set's device selection */
  osVersionCount?: number;
  deviceConfigurations: Paths127TvwlV01AppsOwnerNameAppNameOwnerDeviceSetsPostResponses201ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItems[];
}

/** The owner of a device set */
export interface Paths1Wvz3UrV01AppsOwnerNameAppNameOwnerDeviceSetsPostResponses201ContentApplicationJsonSchemaPropertiesOwner {
  /** Type of account */
  type: string;
  /** Account ID */
  id: string;
  /** Display name of the account */
  displayName?: string;
  /** Name of the account */
  name: string;
}

export interface Paths127TvwlV01AppsOwnerNameAppNameOwnerDeviceSetsPostResponses201ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItems {
  /** The unique id of the device configuration */
  id?: string;
  image?: PathsV3Igf9V01AppsOwnerNameAppNameOwnerDeviceSetsPostResponses201ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItemsPropertiesImage;
  model?: Paths1Fbq1Q7V01AppsOwnerNameAppNameOwnerDeviceSetsPostResponses201ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItemsPropertiesModel;
  os?: string;
  osName?: string;
}

export interface PathsV3Igf9V01AppsOwnerNameAppNameOwnerDeviceSetsPostResponses201ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItemsPropertiesImage {
  thumb?: string;
}

export interface Paths1Fbq1Q7V01AppsOwnerNameAppNameOwnerDeviceSetsPostResponses201ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItemsPropertiesModel {
  name?: string;
  manufacturer?: string;
  releaseDate?: string;
  formFactor?: string;
}

/** Details of a failed operation */
export interface TestCloudErrorDetails3 {
  /** Status of the operation */
  status: string;
  /** Human-readable message that describes the error */
  message: string;
}

/** Generic result for any alerting API operation */
export interface Paths1Lv5TgxV01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchemaAllof0 {
  /** Unique request identifier for tracking */
  requestId: string;
}

export interface Paths1Exn54RV01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchemaAllof0Allof1 {
  /** The ETag of the entity */
  eTag?: string;
  /** Allows to forcefully disable emails on app or user level */
  enabled: boolean;
  /** The unique id (UUID) of the user */
  userId?: string;
  /** The settings the user has for the app */
  settings: Get200ApplicationJsonAllOfAllOfPropertiesItemsItem[];
}

/** Event Setting */
export interface Get200ApplicationJsonAllOfAllOfPropertiesItemsItem {
  /** Event Name */
  eventType: "crash_newCrashGroupCreated";
  /** Frequency of event */
  value: GetResponses200ContentApplicationJsonSchemaAllOf0AllOf1SettingsItemValue;
  /** Default frequency of event */
  defaultValue?: GetResponses200ContentApplicationJsonSchemaAllOf0AllOf1SettingsItemDefaultValue;
}

export interface Paths12H1WryV01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchemaAllof1 {
  /** Application ID */
  appId?: string;
  /** A flag indicating if settings are enabled at user/global level */
  userEnabled?: boolean;
}

/** Generic result for any alerting API operation */
export interface PathsMyxjuqV01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponsesDefaultContentApplicationJsonSchemaAllof0 {
  /** Unique request identifier for tracking */
  requestId: string;
}

export interface PathsLinqw9V01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponsesDefaultContentApplicationJsonSchemaAllof1 {
  /** The status code return by the API. It can be 400 or 404 or 409 or 500. */
  code: Enum299;
  /** The reason for the request failed */
  message?: string;
}

export interface Paths1HhwggV01AppsOwnerNameAppNameInvitationsUserEmailPostResponsesDefaultContentApplicationJsonSchema {
  error: Paths1Gerxl3V01AppsOwnerNameAppNameInvitationsUserEmailPostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Gerxl3V01AppsOwnerNameAppNameInvitationsUserEmailPostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum300;
  message: string;
}

export interface Paths1Uclv96V01AppsOwnerNameAppNameInvitationsUserEmailPatchRequestbodyContentApplicationJsonSchema {
  /** The permissions the user has for the app in the invitation */
  permissions: Enum301[];
}

export interface Paths8Hsxc2V01AppsOwnerNameAppNameInvitationsUserEmailPatchResponsesDefaultContentApplicationJsonSchema {
  error: PathsOxh137V01AppsOwnerNameAppNameInvitationsUserEmailPatchResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsOxh137V01AppsOwnerNameAppNameInvitationsUserEmailPatchResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum302;
  message: string;
}

export interface PathsTcxwc4V01AppsOwnerNameAppNameInvitationsUserEmailDeleteResponsesDefaultContentApplicationJsonSchema {
  error: Paths1Tm9T38V01AppsOwnerNameAppNameInvitationsUserEmailDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Tm9T38V01AppsOwnerNameAppNameInvitationsUserEmailDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum303;
  message: string;
}

export interface Paths1CzjavmV01AppsOwnerNameAppNameInvitationsPostRequestbodyContentApplicationJsonSchema {
  /** The user's email address */
  userEmail: string;
  /** The user's role */
  role?: Enum304;
}

export interface Paths86Npv6V01AppsOwnerNameAppNameInvitationsPostResponsesDefaultContentApplicationJsonSchema {
  error: Paths3Yu15JV01AppsOwnerNameAppNameInvitationsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths3Yu15JV01AppsOwnerNameAppNameInvitationsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum305;
  message: string;
}

export interface PathsIn5115V01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchema {
  /** The unique ID (UUID) of the invitation */
  id: string;
  app: Paths1R5Rn5OV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesApp;
  /** The email address of the invited user */
  email: string;
  /** The invitation type */
  inviteType: Enum311;
  invitedBy: Paths6NfbvnV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesInvitedBy;
  /** Indicates whether the invited user already exists */
  isExistingUser: boolean;
  /** The permissions the user has for the app */
  permissions?: Enum313[];
  /** The number of apps in the group */
  appCount?: number;
  /** The organization that owns the distribution group, if it exists */
  distributionGroup?: PathsQwfeuaV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesDistributionGroup;
}

export interface PathsR19UixV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesAppAllof0 {
  /** The unique ID (UUID) of the app */
  id: string;
  /** The description of the app */
  description?: string;
  /** The display name of the app */
  displayName: string;
  /** A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase */
  releaseType?: string;
  /** The string representation of the URL pointing to the app's icon */
  iconUrl?: string;
  /** The string representation of the source of the app's icon */
  iconSource?: string;
  /** The name of the app used in URLs */
  name: string;
  /** The OS the app will be running on */
  os: Enum306;
  /** The information about the app's owner */
  owner: Paths12UznlxV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesAppAllof0PropertiesOwner;
}

/** The information about the app's owner */
export interface Paths12UznlxV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesAppAllof0PropertiesOwner {
  /** The unique id (UUID) of the owner */
  id: string;
  /** The avatar URL of the owner */
  avatarUrl?: string;
  /** The owner's display name */
  displayName: string;
  /** The owner's email address */
  email?: string;
  /** The unique name that used to identify the owner */
  name: string;
  /** The owner type. Can either be 'org' or 'user' */
  type: Enum307;
}

export interface Paths39Q34WV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesAppAllof1 {
  /** A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics */
  appSecret?: string;
  azureSubscription?: Paths15L69XV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesAppAllof1PropertiesAzureSubscription;
  /** The platform of the app */
  platform?: Enum308;
  /** The creation origin of this app */
  origin?: Enum309;
  /** The created date of this app */
  createdAt?: string;
  /** The last updated date of this app */
  updatedAt?: string;
  /** The permissions of the calling user */
  memberPermissions?: Get200ApplicationJsonPropertiesAllOfPropertiesItemsItem[];
}

export interface Paths15L69XV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesAppAllof1PropertiesAzureSubscription {
  /** The azure subscription id */
  subscriptionId: string;
  /** The tenant id of the azure subscription belongs to */
  tenantId: string;
  /** The name of the azure subscription */
  subscriptionName: string;
  /** If the subscription is used for billing */
  isBilling?: boolean;
  /** If the subscription can be used for billing */
  isBillable?: boolean;
  /** If the subscription is internal Microsoft subscription */
  isMicrosoftInternal?: boolean;
}

export interface Paths6NfbvnV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesInvitedBy {
  /** The unique id (UUID) of the user */
  id: string;
  /** The avatar URL of the user */
  avatarUrl?: string;
  /** User is required to send an old password in order to change the password. */
  canChangePassword?: boolean;
  /** The full name of the user. Might for example be first and last name */
  displayName: string;
  /** The email address of the user */
  email: string;
  /** The unique name that is used to identify the user. */
  name: string;
  /** The permissions the user has for the app */
  permissions?: Get200ApplicationJsonPropertiesItemsItem[];
  /** The creation origin of this user */
  origin: Enum312;
}

/** The organization that owns the distribution group, if it exists */
export interface PathsQwfeuaV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesDistributionGroup {
  /** The information about the app's owner */
  owner?: Paths9Dzi6JV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesDistributionGroupPropertiesOwner;
}

/** The information about the app's owner */
export interface Paths9Dzi6JV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesDistributionGroupPropertiesOwner {
  /** The unique id (UUID) of the owner */
  id: string;
  /** The avatar URL of the owner */
  avatarUrl?: string;
  /** The owner's display name */
  displayName: string;
  /** The owner's email address */
  email?: string;
  /** The unique name that used to identify the owner */
  name: string;
  /** The owner type. Can either be 'org' or 'user' */
  type: Enum314;
}

export interface Paths8D56KcV01AppsOwnerNameAppNameInvitationsGetResponsesDefaultContentApplicationJsonSchema {
  error: PathsRkjqqhV01AppsOwnerNameAppNameInvitationsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsRkjqqhV01AppsOwnerNameAppNameInvitationsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum315;
  message: string;
}

export interface PathsUd9Bz2V01AppsOwnerNameAppNameFileAssetPostResponses200ContentApplicationJsonSchema {
  id?: string;
  location?: string;
  token?: string;
  uploadDomain?: string;
  uploadWindowLocation?: string;
  urlEncodedToken?: string;
}

export interface Paths1V86Qb5V01AppsOwnerNameAppNameFileAssetPostResponsesDefaultContentApplicationJsonSchema {
  id: string;
  code: string;
  message: string;
}

export interface Paths42AbxiV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdEnablePostResponsesDefaultContentApplicationJsonSchema {
  error: Paths1Tul1VsV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdEnablePostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Tul1VsV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdEnablePostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum316;
  message: string;
}

export interface PathsNstgqpV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdDisablePostResponsesDefaultContentApplicationJsonSchema {
  error: Paths1Hqbck1V01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdDisablePostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Hqbck1V01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdDisablePostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum317;
  message: string;
}

/** Export configuration result */
export interface Paths1OysruzV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdGetResponses200ContentApplicationJsonSchema {
  /** Export configuration id */
  id: string;
  /** Target resource type of export configuration */
  exportType: ExportType;
  /** Creation time in ISO 8601 format */
  creationTime: string;
  /** Latest time in ISO 8601 format when export completed successfully */
  lastRunTime?: string;
  exportEntities?: ExportEntity[];
  /** State of the export job */
  state: ExportState;
  /** Additional information about export configuration state */
  stateInfo?: string;
  /** resource group for the storage account/App Insights resource */
  resourceGroup?: string;
  /** Storage accout or Appinsights resource name */
  resourceName?: string;
  /** Export configuration */
  exportConfiguration?: PathsR53S6WV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdGetResponses200ContentApplicationJsonSchemaPropertiesExportConfiguration;
}

/** Export configuration */
export interface PathsR53S6WV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdGetResponses200ContentApplicationJsonSchemaPropertiesExportConfiguration {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "PathsR53S6WV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdGetResponses200ContentApplicationJsonSchemaPropertiesExportConfiguration";
  exportEntities?: ExportEntity[];
  /** The resource name on azure */
  resourceName?: string;
  /** The resource group name on azure */
  resourceGroup?: string;
  /** Field to determine if backfilling should occur. The default value is true. If set to false export starts from date and time of config creation. */
  backfill?: boolean;
}

export interface Paths1J8YtkwV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths19D426NV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths19D426NV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum319;
  message: string;
}

/** Export configuration */
export interface PathsEhcfgaV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdPatchRequestbodyContentApplicationJsonSchema {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "PathsEhcfgaV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdPatchRequestbodyContentApplicationJsonSchema";
  exportEntities?: ExportEntity[];
  /** The resource name on azure */
  resourceName?: string;
  /** The resource group name on azure */
  resourceGroup?: string;
  /** Field to determine if backfilling should occur. The default value is true. If set to false export starts from date and time of config creation. */
  backfill?: boolean;
}

/** Export configuration result */
export interface Paths420JlyV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdPatchResponses200ContentApplicationJsonSchema {
  /** Export configuration id */
  id: string;
  /** Target resource type of export configuration */
  exportType: ExportType;
  /** Creation time in ISO 8601 format */
  creationTime: string;
  /** Latest time in ISO 8601 format when export completed successfully */
  lastRunTime?: string;
  exportEntities?: ExportEntity[];
  /** State of the export job */
  state: ExportState;
  /** Additional information about export configuration state */
  stateInfo?: string;
  /** resource group for the storage account/App Insights resource */
  resourceGroup?: string;
  /** Storage accout or Appinsights resource name */
  resourceName?: string;
  /** Export configuration */
  exportConfiguration?: Paths2Az9PjV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdPatchResponses200ContentApplicationJsonSchemaPropertiesExportConfiguration;
}

/** Export configuration */
export interface Paths2Az9PjV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdPatchResponses200ContentApplicationJsonSchemaPropertiesExportConfiguration {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "Paths2Az9PjV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdPatchResponses200ContentApplicationJsonSchemaPropertiesExportConfiguration";
  exportEntities?: ExportEntity[];
  /** The resource name on azure */
  resourceName?: string;
  /** The resource group name on azure */
  resourceGroup?: string;
  /** Field to determine if backfilling should occur. The default value is true. If set to false export starts from date and time of config creation. */
  backfill?: boolean;
}

export interface Paths1Gnrj58V01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdPatchResponsesDefaultContentApplicationJsonSchema {
  error: Paths17Vzuc1V01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdPatchResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths17Vzuc1V01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdPatchResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum322;
  message: string;
}

export interface PathsVg92GuV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdDeleteResponsesDefaultContentApplicationJsonSchema {
  error: Paths1H6DccdV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1H6DccdV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum323;
  message: string;
}

/** List of export configurations */
export interface Paths1FgwvpvV01AppsOwnerNameAppNameExportConfigurationsGetResponses200ContentApplicationJsonSchema {
  values: PathsAkol8QV01AppsOwnerNameAppNameExportConfigurationsGetResponses200ContentApplicationJsonSchemaPropertiesValuesItems[];
  /** the total count of exports */
  total?: number;
  nextLink?: string;
}

/** Export configuration result */
export interface PathsAkol8QV01AppsOwnerNameAppNameExportConfigurationsGetResponses200ContentApplicationJsonSchemaPropertiesValuesItems {
  /** Export configuration id */
  id: string;
  /** Target resource type of export configuration */
  exportType: ExportType;
  /** Creation time in ISO 8601 format */
  creationTime: string;
  /** Latest time in ISO 8601 format when export completed successfully */
  lastRunTime?: string;
  exportEntities?: ExportEntity[];
  /** State of the export job */
  state: ExportState;
  /** Additional information about export configuration state */
  stateInfo?: string;
  /** resource group for the storage account/App Insights resource */
  resourceGroup?: string;
  /** Storage accout or Appinsights resource name */
  resourceName?: string;
  /** Export configuration */
  exportConfiguration?: GetResponses200ContentApplicationJsonSchemaValuesItemExportConfiguration;
}

/** Export configuration */
export interface GetResponses200ContentApplicationJsonSchemaValuesItemExportConfiguration {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "GetResponses200ContentApplicationJsonSchemaValuesItemExportConfiguration";
  exportEntities?: ExportEntity[];
  /** The resource name on azure */
  resourceName?: string;
  /** The resource group name on azure */
  resourceGroup?: string;
  /** Field to determine if backfilling should occur. The default value is true. If set to false export starts from date and time of config creation. */
  backfill?: boolean;
}

export interface Paths1QpjuboV01AppsOwnerNameAppNameExportConfigurationsGetResponsesDefaultContentApplicationJsonSchema {
  error: PathsNoyr8HV01AppsOwnerNameAppNameExportConfigurationsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsNoyr8HV01AppsOwnerNameAppNameExportConfigurationsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum325;
  message: string;
}

/** Export configuration */
export interface Paths1QllskkV01AppsOwnerNameAppNameExportConfigurationsPostRequestbodyContentApplicationJsonSchema {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "Paths1QllskkV01AppsOwnerNameAppNameExportConfigurationsPostRequestbodyContentApplicationJsonSchema";
  exportEntities?: ExportEntity[];
  /** The resource name on azure */
  resourceName?: string;
  /** The resource group name on azure */
  resourceGroup?: string;
  /** Field to determine if backfilling should occur. The default value is true. If set to false export starts from date and time of config creation. */
  backfill?: boolean;
}

/** Export configuration result */
export interface Paths95VcrfV01AppsOwnerNameAppNameExportConfigurationsPostResponses202ContentApplicationJsonSchema {
  /** Export configuration id */
  id: string;
  /** Target resource type of export configuration */
  exportType: ExportType;
  /** Creation time in ISO 8601 format */
  creationTime: string;
  /** Latest time in ISO 8601 format when export completed successfully */
  lastRunTime?: string;
  exportEntities?: ExportEntity[];
  /** State of the export job */
  state: ExportState;
  /** Additional information about export configuration state */
  stateInfo?: string;
  /** resource group for the storage account/App Insights resource */
  resourceGroup?: string;
  /** Storage accout or Appinsights resource name */
  resourceName?: string;
  /** Export configuration */
  exportConfiguration?: Paths3V81N3V01AppsOwnerNameAppNameExportConfigurationsPostResponses202ContentApplicationJsonSchemaPropertiesExportConfiguration;
}

/** Export configuration */
export interface Paths3V81N3V01AppsOwnerNameAppNameExportConfigurationsPostResponses202ContentApplicationJsonSchemaPropertiesExportConfiguration {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "Paths3V81N3V01AppsOwnerNameAppNameExportConfigurationsPostResponses202ContentApplicationJsonSchemaPropertiesExportConfiguration";
  exportEntities?: ExportEntity[];
  /** The resource name on azure */
  resourceName?: string;
  /** The resource group name on azure */
  resourceGroup?: string;
  /** Field to determine if backfilling should occur. The default value is true. If set to false export starts from date and time of config creation. */
  backfill?: boolean;
}

export interface PathsElutorV01AppsOwnerNameAppNameExportConfigurationsPostResponsesDefaultContentApplicationJsonSchema {
  error: PathsGbz3ZnV01AppsOwnerNameAppNameExportConfigurationsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsGbz3ZnV01AppsOwnerNameAppNameExportConfigurationsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum328;
  message: string;
}

export interface PathsBfc8KpV01AppsOwnerNameAppNameErrorsErroridSessionlogsGetResponses200ContentApplicationJsonSchema {
  /** indicates if the number of available logs are more than the max allowed return limit(100). */
  exceededMaxLimit?: boolean;
  /** the timestamp of the last log received. This value can be used as the start time parameter in the consecutive API call. */
  lastReceivedLogTimestamp?: Date;
  /** the list of logs */
  logs: Paths1Rdl0NeV01AppsOwnerNameAppNameErrorsErroridSessionlogsGetResponses200ContentApplicationJsonSchemaPropertiesLogsItems[];
}

/** Generic log. */
export interface Paths1Rdl0NeV01AppsOwnerNameAppNameErrorsErroridSessionlogsGetResponses200ContentApplicationJsonSchemaPropertiesLogsItems {
  /**
   * Log type.
   *
   */
  type: GetResponses200ContentApplicationJsonSchemaLogsItemType;
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /**
   * Session ID.
   *
   */
  sessionId?: string;
  /**
   * Event ID.
   *
   */
  eventId?: string;
  /**
   * Event name.
   *
   */
  eventName?: string;
  /**
   * Message ID.
   *
   */
  messageId?: string;
  /**
   * event specific properties.
   *
   */
  properties?: { [propertyName: string]: string };
  /** Device characteristics. */
  device: GetResponses200ContentApplicationJsonSchemaLogsItemDevice;
}

/** Device characteristics. */
export interface GetResponses200ContentApplicationJsonSchemaLogsItemDevice {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface Paths1DhmnxtV01AppsOwnerNameAppNameErrorsErroridSessionlogsGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths1Bly4LlV01AppsOwnerNameAppNameErrorsErroridSessionlogsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Bly4LlV01AppsOwnerNameAppNameErrorsErroridSessionlogsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum330;
  message: string;
}

export interface Paths11EzzhyV01AppsOwnerNameAppNameErrorsErroridAttachmentsAttachmentidTextGetResponses200ContentApplicationJsonSchema {
  content?: string;
}

export interface Paths1J3SejwV01AppsOwnerNameAppNameErrorsErroridAttachmentsAttachmentidTextGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths1Lwh1IhV01AppsOwnerNameAppNameErrorsErroridAttachmentsAttachmentidTextGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Lwh1IhV01AppsOwnerNameAppNameErrorsErroridAttachmentsAttachmentidTextGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum331;
  message: string;
}

export interface Paths1Pujyq9V01AppsOwnerNameAppNameErrorsErroridAttachmentsAttachmentidLocationGetResponses200ContentApplicationJsonSchema {
  uri?: string;
}

export interface Paths5X19N2V01AppsOwnerNameAppNameErrorsErroridAttachmentsAttachmentidLocationGetResponsesDefaultContentApplicationJsonSchema {
  error: PathsR99T10V01AppsOwnerNameAppNameErrorsErroridAttachmentsAttachmentidLocationGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsR99T10V01AppsOwnerNameAppNameErrorsErroridAttachmentsAttachmentidLocationGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum332;
  message: string;
}

export interface Paths1M1B7O1V01AppsOwnerNameAppNameErrorsErroridAttachmentsGetResponses200ContentApplicationJsonSchemaItems {
  appId?: string;
  attachmentId?: string;
  crashId?: string;
  blobLocation?: string;
  contentType?: string;
  fileName?: string;
  createdTime?: Date;
  size?: number;
}

export interface PathsB1HukrV01AppsOwnerNameAppNameErrorsErroridAttachmentsGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths1Wxbk5JV01AppsOwnerNameAppNameErrorsErroridAttachmentsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Wxbk5JV01AppsOwnerNameAppNameErrorsErroridAttachmentsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum333;
  message: string;
}

export interface Paths10EnauhV01AppsOwnerNameAppNameErrorsSearchGetResponses200ContentApplicationJsonSchema {
  hasMoreResults?: boolean;
  errors?: Paths1W538XxV01AppsOwnerNameAppNameErrorsSearchGetResponses200ContentApplicationJsonSchemaPropertiesErrorsItems[];
}

export interface Paths1W538XxV01AppsOwnerNameAppNameErrorsSearchGetResponses200ContentApplicationJsonSchemaPropertiesErrorsItems {
  errorId?: string;
  timestamp?: Date;
  deviceName?: string;
  osVersion?: string;
  osType?: string;
  country?: string;
  language?: string;
  userId?: string;
  hasBreadcrumbs?: boolean;
  hasAttachments?: boolean;
}

export interface Paths12BwkkqV01AppsOwnerNameAppNameErrorsSearchGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths1Lhvzu1V01AppsOwnerNameAppNameErrorsSearchGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Lhvzu1V01AppsOwnerNameAppNameErrorsSearchGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum336;
  message: string;
}

export interface Paths1V83InnV01AppsOwnerNameAppNameErrorsRetentionSettingsPutRequestbodyContentApplicationJsonSchema {
  retentionInDays: PutContentSchemaRetentionInDays;
}

export interface PathsW5Guk3V01AppsOwnerNameAppNameErrorsRetentionSettingsPutResponses200ContentApplicationJsonSchema {
  retentionInDays: Enum338;
}

export interface Paths1Pjyuj9V01AppsOwnerNameAppNameErrorsRetentionSettingsPutResponsesDefaultContentApplicationJsonSchema {
  error: Paths5L67B6V01AppsOwnerNameAppNameErrorsRetentionSettingsPutResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths5L67B6V01AppsOwnerNameAppNameErrorsRetentionSettingsPutResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum339;
  message: string;
}

export interface Paths4IzvtlV01AppsOwnerNameAppNameErrorsRetentionSettingsGetResponses200ContentApplicationJsonSchema {
  retentionInDays: Enum340;
}

export interface Paths1EgnpuqV01AppsOwnerNameAppNameErrorsRetentionSettingsGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths1J4JjcV01AppsOwnerNameAppNameErrorsRetentionSettingsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1J4JjcV01AppsOwnerNameAppNameErrorsRetentionSettingsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum341;
  message: string;
}

export interface PathsXb2Xr7V01AppsOwnerNameAppNameErrorsErrorfreedevicepercentagesGetResponses200ContentApplicationJsonSchema {
  /** Average percentage */
  averagePercentage?: number;
  /** The error-free percentage per day. */
  dailyPercentages?: PathsSehbt6V01AppsOwnerNameAppNameErrorsErrorfreedevicepercentagesGetResponses200ContentApplicationJsonSchemaPropertiesDailypercentagesItems[];
}

export interface PathsSehbt6V01AppsOwnerNameAppNameErrorsErrorfreedevicepercentagesGetResponses200ContentApplicationJsonSchemaPropertiesDailypercentagesItems {
  /** the ISO 8601 datetime */
  datetime?: string;
  /** percentage of the object */
  percentage?: number;
}

export interface Paths11Dw7J1V01AppsOwnerNameAppNameErrorsErrorfreedevicepercentagesGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths15Ak9YsV01AppsOwnerNameAppNameErrorsErrorfreedevicepercentagesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths15Ak9YsV01AppsOwnerNameAppNameErrorsErrorfreedevicepercentagesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum343;
  message: string;
}

/** a stacktrace in a processed and prettyfied way */
export interface DiagnosticsStackTrace {
  title?: string;
  reason?: string;
  threads?: DiagnosticsThread[];
  /** a exception */
  exception?: DiagnosticsException;
}

/** a thread representation */
export interface DiagnosticsThread {
  /** name of the thread */
  title: string;
  /** frames of that thread */
  frames: DiagnosticsThreadFramesItem[];
  /** potential additional exception happened in that thread (Last Exception Backtrace) */
  exception?: DiagnosticsException;
  /** Shows if a thread is relevant or not. Is false if all frames are non relevant, otherwise true */
  relevant?: boolean;
  /** SDK/Platform this thread is beeing generated from */
  platform?: DiagnosticsThreadPlatform;
  /** True if this thread crashed */
  crashed?: boolean;
}

/** a single frame of a stack trace */
export interface DiagnosticsThreadFramesItem {
  /** address of the frame */
  address?: string;
  /** name of the class */
  className?: string;
  /** name of the method */
  method?: string;
  /** is a class method */
  classMethod?: boolean;
  /** name of the file */
  file?: string;
  /** line number */
  line?: number;
  /** this line isn't from any framework */
  appCode: boolean;
  /** Name of the framework */
  frameworkName?: string;
  /** Raw frame string */
  codeRaw: string;
  /** Formatted frame string */
  codeFormatted: string;
  /** programming language of the frame */
  language?: DiagnosticsThreadFramesItemLanguage;
  /** frame should be shown always */
  relevant?: boolean;
  /** parameters of the frames method */
  methodParams?: string;
}

/** a exception */
export interface DiagnosticsException {
  /** Reason of the exception */
  reason?: string;
  /** Type of the exception (NSSomethingException, NullPointerException) */
  type?: string;
  /** frames of the excetpion */
  frames: DiagnosticsExceptionFramesItem[];
  /** relevant exception (crashed) */
  relevant?: boolean;
  /** SDK/Platform this thread is beeing generated from */
  platform?: DiagnosticsExceptionPlatform;
}

/** a single frame of a stack trace */
export interface DiagnosticsExceptionFramesItem {
  /** address of the frame */
  address?: string;
  /** name of the class */
  className?: string;
  /** name of the method */
  method?: string;
  /** is a class method */
  classMethod?: boolean;
  /** name of the file */
  file?: string;
  /** line number */
  line?: number;
  /** this line isn't from any framework */
  appCode: boolean;
  /** Name of the framework */
  frameworkName?: string;
  /** Raw frame string */
  codeRaw: string;
  /** Formatted frame string */
  codeFormatted: string;
  /** programming language of the frame */
  language?: DiagnosticsExceptionFramesItemLanguage;
  /** frame should be shown always */
  relevant?: boolean;
  /** parameters of the frames method */
  methodParams?: string;
}

export interface PathsA2E4EkV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidStacktraceGetResponsesDefaultContentApplicationJsonSchema {
  error: PathsBayg60V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidStacktraceGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsBayg60V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidStacktraceGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum348;
  message: string;
}

export interface PathsAhgr5MV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidOperatingsystemsGetResponses200ContentApplicationJsonSchema {
  errorCount?: number;
  operatingSystems?: PathsBlj5OjV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidOperatingsystemsGetResponses200ContentApplicationJsonSchemaPropertiesOperatingsystemsItems[];
}

export interface PathsBlj5OjV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidOperatingsystemsGetResponses200ContentApplicationJsonSchemaPropertiesOperatingsystemsItems {
  /** OS name */
  operatingSystemName?: string;
  /** count of OS */
  errorCount?: number;
}

export interface Paths1K006VjV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidOperatingsystemsGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths1HyyyyyV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidOperatingsystemsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1HyyyyyV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidOperatingsystemsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum349;
  message: string;
}

export interface PathsNvwrx0V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidModelsGetResponses200ContentApplicationJsonSchema {
  errorCount?: number;
  models?: PathsOkxnpnV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidModelsGetResponses200ContentApplicationJsonSchemaPropertiesModelsItems[];
}

export interface PathsOkxnpnV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidModelsGetResponses200ContentApplicationJsonSchemaPropertiesModelsItems {
  /** model name */
  modelName?: string;
  /** model code */
  modelCode?: string;
  /** count of errors in a model */
  errorCount?: number;
}

export interface Paths1Opz894V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidModelsGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths1Tatl0XV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidModelsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Tatl0XV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidModelsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum350;
  message: string;
}

export interface Paths1Jybj3TV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridStacktraceGetResponsesDefaultContentApplicationJsonSchema {
  error: PathsEkj2SwV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridStacktraceGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsEkj2SwV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridStacktraceGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum351;
  message: string;
}

export interface PathsPwx6QwV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridLocationGetResponses200ContentApplicationJsonSchema {
  uri?: string;
}

export interface Paths1LbtbuwV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridLocationGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths1O8ZrfiV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridLocationGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1O8ZrfiV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridLocationGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum352;
  message: string;
}

export interface PathsL404BsV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridDownloadGetResponsesDefaultContentApplicationJsonSchema {
  error: PathsZib2F1V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridDownloadGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsZib2F1V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridDownloadGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum354;
  message: string;
}

export interface PathsIus8TpV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridGetResponses200ContentApplicationJsonSchemaPropertiesReasonframesItems {
  /** name of the class */
  className?: string;
  /** name of the method */
  method?: string;
  /** is a class method */
  classMethod?: boolean;
  /** name of the file */
  file?: string;
  /** line number */
  line?: number;
  /** this line isn't from any framework */
  appCode?: boolean;
  /** Name of the framework */
  frameworkName?: string;
  /** Formatted frame string */
  codeFormatted?: string;
  /** Unformatted Frame string */
  codeRaw?: string;
  /** programming language of the frame */
  language?: GetResponses200ContentApplicationJsonSchemaReasonFramesItemLanguage;
  /** parameters of the frames method */
  methodParams?: string;
  /** Exception type. */
  exceptionType?: string;
  /** OS exception type. (aka. SIGNAL) */
  osExceptionType?: string;
}

export interface Paths1A0E8RfV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridGetResponses200ContentApplicationJsonSchemaAllof0 {
  errorId?: string;
  timestamp?: Date;
  deviceName?: string;
  osVersion?: string;
  osType?: string;
  country?: string;
  language?: string;
  userId?: string;
  hasBreadcrumbs?: boolean;
  hasAttachments?: boolean;
}

export interface Paths1Bug1WoV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths11N1ZoV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths11N1ZoV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum356;
  message: string;
}

export interface PathsNvbd0FV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridDeleteResponses200ContentApplicationJsonSchema {
  appId?: string;
  errorGroupId?: string;
  errorId?: string;
  errorsDeleted?: number;
  attachmentsDeleted?: number;
  blobsSucceeded?: number;
  blobsFailed?: number;
}

export interface Paths1U63Q3BV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridDeleteResponsesDefaultContentApplicationJsonSchema {
  error: Paths1Vw0KinV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Vw0KinV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum357;
  message: string;
}

export interface Paths4M2P0UV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsLatestGetResponses200ContentApplicationJsonSchemaPropertiesReasonframesItems {
  /** name of the class */
  className?: string;
  /** name of the method */
  method?: string;
  /** is a class method */
  classMethod?: boolean;
  /** name of the file */
  file?: string;
  /** line number */
  line?: number;
  /** this line isn't from any framework */
  appCode?: boolean;
  /** Name of the framework */
  frameworkName?: string;
  /** Formatted frame string */
  codeFormatted?: string;
  /** Unformatted Frame string */
  codeRaw?: string;
  /** programming language of the frame */
  language?: Enum358;
  /** parameters of the frames method */
  methodParams?: string;
  /** Exception type. */
  exceptionType?: string;
  /** OS exception type. (aka. SIGNAL) */
  osExceptionType?: string;
}

export interface Paths1W62YatV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsLatestGetResponses200ContentApplicationJsonSchemaAllof0 {
  errorId?: string;
  timestamp?: Date;
  deviceName?: string;
  osVersion?: string;
  osType?: string;
  country?: string;
  language?: string;
  userId?: string;
  hasBreadcrumbs?: boolean;
  hasAttachments?: boolean;
}

export interface Paths14Y18DhV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsLatestGetResponsesDefaultContentApplicationJsonSchema {
  error: PathsUg0IawV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsLatestGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsUg0IawV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsLatestGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum359;
  message: string;
}

export interface Paths18I7702V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsGetResponses200ContentApplicationJsonSchema {
  nextLink?: string;
  /** Errors list. */
  errors?: Paths1Fm6V81V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsGetResponses200ContentApplicationJsonSchemaPropertiesErrorsItems[];
}

export interface Paths1Fm6V81V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsGetResponses200ContentApplicationJsonSchemaPropertiesErrorsItems {
  errorId?: string;
  timestamp?: Date;
  deviceName?: string;
  osVersion?: string;
  osType?: string;
  country?: string;
  language?: string;
  userId?: string;
  hasBreadcrumbs?: boolean;
  hasAttachments?: boolean;
}

export interface Paths6Yh9NlV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths1Oh18VvV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Oh18VvV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum360;
  message: string;
}

export interface Paths1Eek5ByV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorfreedevicepercentagesGetResponses200ContentApplicationJsonSchema {
  /** Average percentage */
  averagePercentage?: number;
  /** The error-free percentage per day. */
  dailyPercentages?: Paths1OxifgfV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorfreedevicepercentagesGetResponses200ContentApplicationJsonSchemaPropertiesDailypercentagesItems[];
}

export interface Paths1OxifgfV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorfreedevicepercentagesGetResponses200ContentApplicationJsonSchemaPropertiesDailypercentagesItems {
  /** the ISO 8601 datetime */
  datetime?: string;
  /** percentage of the object */
  percentage?: number;
}

export interface PathsGggyq9V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorfreedevicepercentagesGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths9Rp2CfV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorfreedevicepercentagesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths9Rp2CfV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorfreedevicepercentagesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum361;
  message: string;
}

export interface Paths1O2Ld6PV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorcountsperdayGetResponses200ContentApplicationJsonSchema {
  /** total error count */
  count?: number;
  /** the total error count for day */
  errors?: Paths19Ck6PV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorcountsperdayGetResponses200ContentApplicationJsonSchemaPropertiesErrorsItems[];
}

export interface Paths19Ck6PV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorcountsperdayGetResponses200ContentApplicationJsonSchemaPropertiesErrorsItems {
  /** the ISO 8601 datetime */
  datetime?: string;
  /** count of the object */
  count?: number;
}

export interface PathsSjngesV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorcountsperdayGetResponsesDefaultContentApplicationJsonSchema {
  error: PathsEav0KtV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorcountsperdayGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsEav0KtV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorcountsperdayGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum362;
  message: string;
}

export interface PathsHk1U21V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidGetResponses200ContentApplicationJsonSchemaPropertiesReasonframesItems {
  /** name of the class */
  className?: string;
  /** name of the method */
  method?: string;
  /** is a class method */
  classMethod?: boolean;
  /** name of the file */
  file?: string;
  /** line number */
  line?: number;
  /** this line isn't from any framework */
  appCode?: boolean;
  /** Name of the framework */
  frameworkName?: string;
  /** Formatted frame string */
  codeFormatted?: string;
  /** Unformatted Frame string */
  codeRaw?: string;
  /** programming language of the frame */
  language?: Enum363;
  /** parameters of the frames method */
  methodParams?: string;
  /** Exception type. */
  exceptionType?: string;
  /** OS exception type. (aka. SIGNAL) */
  osExceptionType?: string;
}

export interface PathsUg1W4GV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidGetResponses200ContentApplicationJsonSchemaAllof0 {
  state: Enum364;
  annotation?: string;
}

export interface PathsNve630V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths8Bt8TwV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths8Bt8TwV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum365;
  message: string;
}

export interface PathsHpm6KuV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidPatchRequestbodyContentApplicationJsonSchema {
  state: PatchContentSchemaState;
  annotation?: string;
}

export interface PathsMvkf3KV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidPatchResponses200ContentApplicationJsonSchemaPropertiesReasonframesItems {
  /** name of the class */
  className?: string;
  /** name of the method */
  method?: string;
  /** is a class method */
  classMethod?: boolean;
  /** name of the file */
  file?: string;
  /** line number */
  line?: number;
  /** this line isn't from any framework */
  appCode?: boolean;
  /** Name of the framework */
  frameworkName?: string;
  /** Formatted frame string */
  codeFormatted?: string;
  /** Unformatted Frame string */
  codeRaw?: string;
  /** programming language of the frame */
  language?: PatchResponses200ContentApplicationJsonSchemaReasonFramesItemLanguage;
  /** parameters of the frames method */
  methodParams?: string;
  /** Exception type. */
  exceptionType?: string;
  /** OS exception type. (aka. SIGNAL) */
  osExceptionType?: string;
}

export interface Paths13AsklyV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidPatchResponses200ContentApplicationJsonSchemaAllof0 {
  state: Enum368;
  annotation?: string;
}

export interface Paths1Mu5I03V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidPatchResponsesDefaultContentApplicationJsonSchema {
  error: Paths1W9Su2UV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidPatchResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1W9Su2UV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidPatchResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum369;
  message: string;
}

export interface Paths3Uj0Q0V01AppsOwnerNameAppNameErrorsErrorgroupsSearchGetResponses200ContentApplicationJsonSchema {
  hasMoreResults?: boolean;
  errorGroups?: PathsDapaw8V01AppsOwnerNameAppNameErrorsErrorgroupsSearchGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItems[];
}

export interface Get200ApplicationJsonPropertiesItems0ReasonFramesItem {
  /** name of the class */
  className?: string;
  /** name of the method */
  method?: string;
  /** is a class method */
  classMethod?: boolean;
  /** name of the file */
  file?: string;
  /** line number */
  line?: number;
  /** this line isn't from any framework */
  appCode?: boolean;
  /** Name of the framework */
  frameworkName?: string;
  /** Formatted frame string */
  codeFormatted?: string;
  /** Unformatted Frame string */
  codeRaw?: string;
  /** programming language of the frame */
  language?: GetResponses200ContentApplicationJsonSchemaErrorGroupsItemAllOf0ReasonFramesItemLanguage;
  /** parameters of the frames method */
  methodParams?: string;
  /** Exception type. */
  exceptionType?: string;
  /** OS exception type. (aka. SIGNAL) */
  osExceptionType?: string;
}

export interface PathsGpexkdV01AppsOwnerNameAppNameErrorsErrorgroupsSearchGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItemsAllof0 {
  state: Get200ApplicationJsonPropertiesItems0State;
  annotation?: string;
}

export interface Paths15I10UwV01AppsOwnerNameAppNameErrorsErrorgroupsSearchGetResponsesDefaultContentApplicationJsonSchema {
  error: PathsJhpd5MV01AppsOwnerNameAppNameErrorsErrorgroupsSearchGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsJhpd5MV01AppsOwnerNameAppNameErrorsErrorgroupsSearchGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum374;
  message: string;
}

export interface Paths10KtxpjV01AppsOwnerNameAppNameErrorsErrorgroupsGetResponses200ContentApplicationJsonSchema {
  nextLink?: string;
  errorGroups?: Paths1X029LnV01AppsOwnerNameAppNameErrorsErrorgroupsGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItems[];
}

export interface Paths6YokraV01AppsOwnerNameAppNameErrorsErrorgroupsGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItemsAllof0PropertiesReasonframesItems {
  /** name of the class */
  className?: string;
  /** name of the method */
  method?: string;
  /** is a class method */
  classMethod?: boolean;
  /** name of the file */
  file?: string;
  /** line number */
  line?: number;
  /** this line isn't from any framework */
  appCode?: boolean;
  /** Name of the framework */
  frameworkName?: string;
  /** Formatted frame string */
  codeFormatted?: string;
  /** Unformatted Frame string */
  codeRaw?: string;
  /** programming language of the frame */
  language?: Enum376;
  /** parameters of the frames method */
  methodParams?: string;
  /** Exception type. */
  exceptionType?: string;
  /** OS exception type. (aka. SIGNAL) */
  osExceptionType?: string;
}

export interface Paths9Zowz3V01AppsOwnerNameAppNameErrorsErrorgroupsGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItemsAllof0 {
  state: Enum377;
  annotation?: string;
}

export interface PathsUwsddyV01AppsOwnerNameAppNameErrorsErrorgroupsGetResponsesDefaultContentApplicationJsonSchema {
  error: PathsByblq7V01AppsOwnerNameAppNameErrorsErrorgroupsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsByblq7V01AppsOwnerNameAppNameErrorsErrorgroupsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum378;
  message: string;
}

export interface Paths5Bnd9KV01AppsOwnerNameAppNameErrorsErrorcountsperdayGetResponses200ContentApplicationJsonSchema {
  /** total error count */
  count?: number;
  /** the total error count for day */
  errors?: Paths6Kmu91V01AppsOwnerNameAppNameErrorsErrorcountsperdayGetResponses200ContentApplicationJsonSchemaPropertiesErrorsItems[];
}

export interface Paths6Kmu91V01AppsOwnerNameAppNameErrorsErrorcountsperdayGetResponses200ContentApplicationJsonSchemaPropertiesErrorsItems {
  /** the ISO 8601 datetime */
  datetime?: string;
  /** count of the object */
  count?: number;
}

export interface PathsN8QcejV01AppsOwnerNameAppNameErrorsErrorcountsperdayGetResponsesDefaultContentApplicationJsonSchema {
  error: PathsOi504RV01AppsOwnerNameAppNameErrorsErrorcountsperdayGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsOi504RV01AppsOwnerNameAppNameErrorsErrorcountsperdayGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum380;
  message: string;
}

export interface Paths1Wi49JqV01AppsOwnerNameAppNameErrorsAvailableVersionsGetResponses200ContentApplicationJsonSchema {
  /** List of available versions. */
  versions?: string[];
  /** The full number of versions across all pages. */
  totalCount?: number;
}

export interface Paths13Rlhb7V01AppsOwnerNameAppNameErrorsAvailableVersionsGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths1P3Wvz1V01AppsOwnerNameAppNameErrorsAvailableVersionsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1P3Wvz1V01AppsOwnerNameAppNameErrorsAvailableVersionsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum383;
  message: string;
}

export interface Paths1Cq491NV01AppsOwnerNameAppNameErrorsAvailableappbuildsGetResponses200ContentApplicationJsonSchema {
  appBuilds?: string[];
}

export interface Paths1Loji0OV01AppsOwnerNameAppNameErrorsAvailableappbuildsGetResponsesDefaultContentApplicationJsonSchema {
  error: PathsY36PfV01AppsOwnerNameAppNameErrorsAvailableappbuildsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsY36PfV01AppsOwnerNameAppNameErrorsAvailableappbuildsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum385;
  message: string;
}

/** status of the app from store */
export interface PathsHaqcuV01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdRealtimestatusGetResponses200ContentApplicationJsonSchema {
  /** release id */
  releaseId?: string;
  /** app id */
  appId?: string;
  /** Status Data from store */
  status?: Paths1Tlj5KsV01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdRealtimestatusGetResponses200ContentApplicationJsonSchemaPropertiesStatus;
}

/** Status Data from store */
export interface Paths1Tlj5KsV01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdRealtimestatusGetResponses200ContentApplicationJsonSchemaPropertiesStatus {
  /** status from store */
  status?: string;
  /** store type */
  storetype?: string;
  /** track information from store */
  track?: string;
  /** version of the app from store */
  version?: string;
}

export interface PathsVb34MV01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdRealtimestatusGetResponsesDefaultContentApplicationJsonSchema {
  code: Enum386;
  message: string;
}

export interface PathsEm3U11V01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdPublishLogsGetResponsesDefaultContentApplicationJsonSchema {
  code: Enum387;
  message: string;
}

/** ReleasePublishErrorResponse */
export interface PathsAk7Qf9V01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdPublishErrorDetailsGetResponses200ContentApplicationJsonSchema {
  /** error Details */
  message?: string;
  /** boolean property to tell if logs are available for download */
  isLogAvailable?: boolean;
}

export interface Paths1S5Ty9V01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdPublishErrorDetailsGetResponsesDefaultContentApplicationJsonSchema {
  code: Enum388;
  message: string;
}

/** Details of an uploaded release */
export interface Paths16Kcv4PV01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaItems {
  /** ID identifying this unique release. */
  id?: number;
  /**
   * OBSOLETE. Will be removed in next version. The availability concept is now replaced with distributed. Any 'available' release will be associated with the default distribution group of an app.</br>
   * The release state.<br>
   * <b>available</b>: The uploaded release has been distributed.<br>
   * <b>unavailable</b>: The uploaded release is not visible to the user. <br>
   *
   */
  status?: Enum389;
  /** The app's name (extracted from the uploaded release). */
  appName?: string;
  /** The app's display name. */
  appDisplayName?: string;
  /**
   * The release's version.<br>
   * For iOS: CFBundleVersion from info.plist.
   * For Android: android:versionCode from AppManifest.xml.
   *
   */
  version?: string;
  /**
   * The release's short version.<br>
   * For iOS: CFBundleShortVersionString from info.plist.
   * For Android: android:versionName from AppManifest.xml.
   *
   */
  shortVersion?: string;
  /** The release's release notes. */
  releaseNotes?: string;
  /** The release's size in bytes. */
  size?: number;
  /** The release's minimum required operating system. */
  minOs?: string;
  /** The release's minimum required Android API level. */
  androidMinApiLevel?: string;
  /** The identifier of the apps bundle. */
  bundleIdentifier?: string;
  /** MD5 checksum of the release binary. */
  fingerprint?: string;
  /** UTC time in ISO 8601 format of the uploaded time. */
  uploadedAt?: string;
  /** The URL that hosts the binary for this release. */
  downloadUrl?: string;
  /** The href required to install a release on a mobile device. On iOS devices will be prefixed with `itms-services://?action=download-manifest&url=` */
  installUrl?: GetResponses200ContentApplicationJsonSchemaItemInstallUrl;
  /** a list of distribution stores that are associated with this release. */
  distributionStores?: Paths2DxexzV01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItems[];
}

export interface Paths2DxexzV01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItems {
  /** ID identifying a unique distribution store. */
  id?: string;
  /** A name identifying a unique distribution store. */
  name?: string;
  /** type of the distribution store currently stores type can be intune or googleplay. */
  type?: GetResponses200ContentApplicationJsonSchemaItemDistributionStoresItemType;
  /** publishing status of the release in the store. */
  publishingStatus?: string;
}

export interface PathsMk8Dv4V01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdGetResponsesDefaultContentApplicationJsonSchema {
  code: Enum392;
  message: string;
}

export interface PathsFj6ZdaV01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdDeleteResponsesDefaultContentApplicationJsonSchema {
  code: Enum393;
  message: string;
}

/** Basic information on a release */
export interface PathsWia9WV01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesGetResponses200ContentApplicationJsonSchemaItems {
  /** ID identifying this unique release. */
  id?: number;
  /**
   * The release's version.
   * For iOS: CFBundleVersion from info.plist.
   * For Android: android:versionCode from AppManifest.xml.
   *
   */
  version?: string;
  /**
   * The release's short version.
   * For iOS: CFBundleShortVersionString from info.plist.
   * For Android: android:versionName from AppManifest.xml.
   *
   */
  shortVersion?: string;
  /** UTC time in ISO 8601 format of the uploaded time. */
  uploadedAt?: string;
  /** Destination for this release. */
  destinationType?: Enum394;
  /** a list of distribution stores that are associated with this release. */
  distributionStores?: Paths1FuujvgV01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItems[];
}

export interface Paths1FuujvgV01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItems {
  /** ID identifying a unique distribution store. */
  id?: string;
  /** A name identifying a unique distribution store. */
  name?: string;
  /** A type identifying the type of distribution store. */
  type?: Enum395;
  /** A status identifying the status of release in the distribution store. */
  publishingStatus?: string;
  /** Is the containing release the latest one in this distribution store. */
  isLatest?: boolean;
}

export interface PathsWnkcq1V01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesGetResponsesDefaultContentApplicationJsonSchema {
  code: Enum396;
  message: string;
}

/** Details of an uploaded release */
export interface PathsT560UdV01AppsOwnerNameAppNameDistributionStoresStoreNameLatestReleaseGetResponses200ContentApplicationJsonSchemaItems {
  /** ID identifying this unique release. */
  id?: number;
  /**
   * OBSOLETE. Will be removed in next version. The availability concept is now replaced with distributed. Any 'available' release will be associated with the default distribution group of an app.</br>
   * The release state.<br>
   * <b>available</b>: The uploaded release has been distributed.<br>
   * <b>unavailable</b>: The uploaded release is not visible to the user. <br>
   *
   */
  status?: Enum397;
  /** The app's name (extracted from the uploaded release). */
  appName?: string;
  /** The app's display name. */
  appDisplayName?: string;
  /**
   * The release's version.<br>
   * For iOS: CFBundleVersion from info.plist.
   * For Android: android:versionCode from AppManifest.xml.
   *
   */
  version?: string;
  /**
   * The release's short version.<br>
   * For iOS: CFBundleShortVersionString from info.plist.
   * For Android: android:versionName from AppManifest.xml.
   *
   */
  shortVersion?: string;
  /** The release's release notes. */
  releaseNotes?: string;
  /** The release's size in bytes. */
  size?: number;
  /** The release's minimum required operating system. */
  minOs?: string;
  /** The release's minimum required Android API level. */
  androidMinApiLevel?: string;
  /** The identifier of the apps bundle. */
  bundleIdentifier?: string;
  /** MD5 checksum of the release binary. */
  fingerprint?: string;
  /** UTC time in ISO 8601 format of the uploaded time. */
  uploadedAt?: string;
  /** The URL that hosts the binary for this release. */
  downloadUrl?: string;
  /** The href required to install a release on a mobile device. On iOS devices will be prefixed with `itms-services://?action=download-manifest&url=` */
  installUrl?: Enum398;
  /** a list of distribution stores that are associated with this release. */
  distributionStores?: PathsXopyuvV01AppsOwnerNameAppNameDistributionStoresStoreNameLatestReleaseGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItems[];
}

export interface PathsXopyuvV01AppsOwnerNameAppNameDistributionStoresStoreNameLatestReleaseGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItems {
  /** ID identifying a unique distribution store. */
  id?: string;
  /** A name identifying a unique distribution store. */
  name?: string;
  /** type of the distribution store currently stores type can be intune or googleplay. */
  type?: Enum399;
  /** publishing status of the release in the store. */
  publishingStatus?: string;
}

export interface Paths8Yjtv1V01AppsOwnerNameAppNameDistributionStoresStoreNameLatestReleaseGetResponsesDefaultContentApplicationJsonSchema {
  code: Enum400;
  message: string;
}

/** ExternalStoreResponse */
export interface Paths17Ft4FaV01AppsOwnerNameAppNameDistributionStoresStoreNameGetResponses200ContentApplicationJsonSchema {
  /** Store id */
  id?: string;
  /** Store Name */
  name?: string;
  /** Store Type */
  type?: string;
  /** Store track */
  track?: Enum401;
  /** Store details for intune */
  intuneDetails?: Paths2Lc3KvV01AppsOwnerNameAppNameDistributionStoresStoreNameGetResponses200ContentApplicationJsonSchemaPropertiesIntuneDetails;
  /** Id for the shared service connection. In case of Apple / GooglePlay stores, this connection will be used to connect to the Apple / Google stores in App Center. */
  serviceConnectionId?: string;
  /** The ID of the principal that created the store. */
  createdBy?: string;
  /** The type of the principal that created the store. */
  createdByPrincipalType?: string;
}

/** Store details for intune */
export interface Paths2Lc3KvV01AppsOwnerNameAppNameDistributionStoresStoreNameGetResponses200ContentApplicationJsonSchemaPropertiesIntuneDetails {
  targetAudience?: Paths1U8S5GtV01AppsOwnerNameAppNameDistributionStoresStoreNameGetResponses200ContentApplicationJsonSchemaPropertiesIntuneDetailsPropertiesTargetAudience;
  appCategory?: PathsBj3Xa5V01AppsOwnerNameAppNameDistributionStoresStoreNameGetResponses200ContentApplicationJsonSchemaPropertiesIntuneDetailsPropertiesAppCategory;
}

export interface Paths1U8S5GtV01AppsOwnerNameAppNameDistributionStoresStoreNameGetResponses200ContentApplicationJsonSchemaPropertiesIntuneDetailsPropertiesTargetAudience {
  /** display name for the target audience/group */
  name?: string;
  /** ID for the target audience/group. */
  id?: string;
}

export interface PathsBj3Xa5V01AppsOwnerNameAppNameDistributionStoresStoreNameGetResponses200ContentApplicationJsonSchemaPropertiesIntuneDetailsPropertiesAppCategory {
  /** display name for the app category */
  name?: string;
  /** ID for the category. */
  id?: string;
}

export interface PathsTg2NhfV01AppsOwnerNameAppNameDistributionStoresStoreNameGetResponsesDefaultContentApplicationJsonSchema {
  code: Enum402;
  message: string;
}

export interface Paths1Yf5Jp5V01AppsOwnerNameAppNameDistributionStoresStoreNamePatchRequestbodyContentApplicationJsonSchema {
  /** Service connection id to updated. */
  serviceConnectionId: string;
}

export interface PathsAqfpleV01AppsOwnerNameAppNameDistributionStoresStoreNamePatchResponsesDefaultContentApplicationJsonSchema {
  code: Enum403;
  message: string;
}

export interface Paths14Io730V01AppsOwnerNameAppNameDistributionStoresStoreNameDeleteResponsesDefaultContentApplicationJsonSchema {
  code: Enum404;
  message: string;
}

/** ExternalStoreRequest */
export interface PathsPwsnpuV01AppsOwnerNameAppNameDistributionStoresPostRequestbodyContentApplicationJsonSchema {
  /** store Type */
  type?: Enum405;
  /** name of the store. In case of googleplay, and Apple store this is fixed to Production. */
  name?: string;
  /** track of the store. Can be production, alpha & beta for googleplay. Can be production, testflight-internal & testflight-external for Apple Store. */
  track?: PostContentSchemaTrack;
  intuneDetails?: PostContentSchemaIntuneDetails;
  /** Id for the shared service connection. In case of Apple AppStore, this connection will be used to create and connect to the Apple AppStore in Mobile Center. */
  serviceConnectionId?: string;
}

export interface PostContentSchemaIntuneDetails {
  secretJson?: PostContentSchemaIntuneDetailsSecretJson;
  targetAudience?: PostContentSchemaIntuneDetailsTargetAudience;
  appCategory?: PostContentSchemaIntuneDetailsAppCategory;
  /** tenant id of the intune store */
  tenantId?: string;
}

export interface PostContentSchemaIntuneDetailsSecretJson {
  /** the id token of user */
  idToken?: string;
  /** the refresh token for user */
  refreshToken?: string;
  /** the expiry of refresh token */
  refreshTokenExpiry?: string;
}

export interface PostContentSchemaIntuneDetailsTargetAudience {
  /** display name for the target audience/group */
  name?: string;
}

export interface PostContentSchemaIntuneDetailsAppCategory {
  /** display name for the app category */
  name?: string;
}

/** ExternalStoreResponse */
export interface PathsM4SyzbV01AppsOwnerNameAppNameDistributionStoresPostResponses201ContentApplicationJsonSchema {
  /** Store id */
  id?: string;
  /** Store Name */
  name?: string;
  /** Store Type */
  type?: string;
  /** Store track */
  track?: Enum407;
  /** Store details for intune */
  intuneDetails?: PathsE4FfluV01AppsOwnerNameAppNameDistributionStoresPostResponses201ContentApplicationJsonSchemaPropertiesIntuneDetails;
  /** Id for the shared service connection. In case of Apple / GooglePlay stores, this connection will be used to connect to the Apple / Google stores in App Center. */
  serviceConnectionId?: string;
  /** The ID of the principal that created the store. */
  createdBy?: string;
  /** The type of the principal that created the store. */
  createdByPrincipalType?: string;
}

/** Store details for intune */
export interface PathsE4FfluV01AppsOwnerNameAppNameDistributionStoresPostResponses201ContentApplicationJsonSchemaPropertiesIntuneDetails {
  targetAudience?: Paths1323AffV01AppsOwnerNameAppNameDistributionStoresPostResponses201ContentApplicationJsonSchemaPropertiesIntuneDetailsPropertiesTargetAudience;
  appCategory?: Paths8L099OV01AppsOwnerNameAppNameDistributionStoresPostResponses201ContentApplicationJsonSchemaPropertiesIntuneDetailsPropertiesAppCategory;
}

export interface Paths1323AffV01AppsOwnerNameAppNameDistributionStoresPostResponses201ContentApplicationJsonSchemaPropertiesIntuneDetailsPropertiesTargetAudience {
  /** display name for the target audience/group */
  name?: string;
  /** ID for the target audience/group. */
  id?: string;
}

export interface Paths8L099OV01AppsOwnerNameAppNameDistributionStoresPostResponses201ContentApplicationJsonSchemaPropertiesIntuneDetailsPropertiesAppCategory {
  /** display name for the app category */
  name?: string;
  /** ID for the category. */
  id?: string;
}

export interface PathsMlw3HcV01AppsOwnerNameAppNameDistributionStoresPostResponsesDefaultContentApplicationJsonSchema {
  code: Enum408;
  message: string;
}

/** ExternalStoreResponse */
export interface Paths1WzhejqV01AppsOwnerNameAppNameDistributionStoresGetResponses200ContentApplicationJsonSchemaItems {
  /** Store id */
  id?: string;
  /** Store Name */
  name?: string;
  /** Store Type */
  type?: string;
  /** Store track */
  track?: GetResponses200ContentApplicationJsonSchemaItemTrack;
  /** Store details for intune */
  intuneDetails?: GetResponses200ContentApplicationJsonSchemaItemIntuneDetails;
  /** Id for the shared service connection. In case of Apple / GooglePlay stores, this connection will be used to connect to the Apple / Google stores in App Center. */
  serviceConnectionId?: string;
  /** The ID of the principal that created the store. */
  createdBy?: string;
  /** The type of the principal that created the store. */
  createdByPrincipalType?: string;
}

/** Store details for intune */
export interface GetResponses200ContentApplicationJsonSchemaItemIntuneDetails {
  targetAudience?: Get200ApplicationJsonItemsIntuneDetailsTargetAudience;
  appCategory?: Get200ApplicationJsonItemsIntuneDetailsAppCategory;
}

export interface Get200ApplicationJsonItemsIntuneDetailsTargetAudience {
  /** display name for the target audience/group */
  name?: string;
  /** ID for the target audience/group. */
  id?: string;
}

export interface Get200ApplicationJsonItemsIntuneDetailsAppCategory {
  /** display name for the app category */
  name?: string;
  /** ID for the category. */
  id?: string;
}

export interface Paths1C26JzV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameResendInvitePostRequestbodyContentApplicationJsonSchema {
  /** The list of emails of the users */
  userEmails?: string[];
}

export interface Paths1NlleszV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameResendInvitePostResponsesDefaultContentApplicationJsonSchema {
  error: PathsRk3N3PV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameResendInvitePostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsRk3N3PV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameResendInvitePostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum410;
  message: string;
}

/** Details of an uploaded release */
export interface Paths7CegcuV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchema {
  /** ID identifying this unique release. */
  id: number;
  /** The app's name (extracted from the uploaded release). */
  appName: string;
  /** The app's display name. */
  appDisplayName: string;
  /** The app's OS. */
  appOs?: string;
  /**
   * The release's version.<br>
   * For iOS: CFBundleVersion from info.plist.
   * For Android: android:versionCode from AppManifest.xml.
   *
   */
  version: string;
  /** The release's origin */
  origin?: Enum411;
  /**
   * The release's short version.<br>
   * For iOS: CFBundleShortVersionString from info.plist.
   * For Android: android:versionName from AppManifest.xml.
   *
   */
  shortVersion: string;
  /** The release's release notes. */
  releaseNotes?: string;
  /** The release's provisioning profile name. */
  provisioningProfileName?: string;
  /** The type of the provisioning profile for the requested app version. */
  provisioningProfileType?: Enum412;
  /** expiration date of provisioning profile in UTC format. */
  provisioningProfileExpiryDate?: string;
  /** A flag that determines whether the release's provisioning profile is still extracted or not. */
  isProvisioningProfileSyncing?: boolean;
  /** The release's size in bytes. */
  size?: number;
  /** The release's minimum required operating system. */
  minOs?: string;
  /** The release's device family. */
  deviceFamily?: string;
  /** The release's minimum required Android API level. */
  androidMinApiLevel?: string;
  /** The identifier of the apps bundle. */
  bundleIdentifier?: string;
  /** Hashes for the packages. */
  packageHashes?: string[];
  /** MD5 checksum of the release binary. */
  fingerprint?: string;
  /** UTC time in ISO 8601 format of the uploaded time. */
  uploadedAt: string;
  /** The URL that hosts the binary for this release. */
  downloadUrl?: string;
  /** A URL to the app's icon. */
  appIconUrl: string;
  /** The href required to install a release on a mobile device. On iOS devices will be prefixed with `itms-services://?action=download-manifest&url=` */
  installUrl?: string;
  /**
   * OBSOLETE. Will be removed in next version. The destination type.<br>
   * <b>group</b>: The release distributed to internal groups and distribution_groups details will be returned.<br>
   * <b>store</b>: The release distributed to external stores and distribution_stores details will be returned.<br>
   * <b>tester</b>: The release distributed testers details will be returned.<br>
   *
   */
  destinationType?: Enum413;
  /** OBSOLETE. Will be removed in next version. A list of distribution groups that are associated with this release. */
  distributionGroups?: PathsQwfap8V01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDistributionGroupsItems[];
  /** OBSOLETE. Will be removed in next version. A list of distribution stores that are associated with this release. */
  distributionStores?: PathsY1Jr0XV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDistributionStoresItems[];
  /** A list of distribution groups or stores. */
  destinations?: Paths141Gsz2V01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItems[];
  /** In calls that allow passing `udid` in the query string, this value will hold the provisioning status of that UDID in this release. Will be ignored for non-iOS platforms. */
  isUdidProvisioned?: boolean;
  /** In calls that allow passing `udid` in the query string, this value determines if a release can be re-signed. When true, after a re-sign, the tester will be able to install the release from his registered devices. Will not be returned for non-iOS platforms. */
  canResign?: boolean;
  /** Contains metadata about the build that produced the release being uploaded */
  build?: PathsKzpnV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesBuild;
  /** This value determines the whether a release currently is enabled or disabled. */
  enabled: boolean;
  /** Status of the release. */
  status?: string;
  /** This value determines if a release is external or not. */
  isExternalBuild?: boolean;
}

export interface PathsQwfap8V01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDistributionGroupsItems {
  /** ID identifying a unique distribution group. */
  id: string;
  /** A name identifying a unique distribution group. */
  name?: string;
}

export interface PathsY1Jr0XV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDistributionStoresItems {
  /** ID identifying a unique distribution store. */
  id: string;
  /** A name identifying a unique distribution store. */
  name?: string;
  /** type of the distribution store currently stores type can be intune, googleplay or windows. */
  type?: Enum414;
  /** publishing status of the release in the store. */
  publishingStatus?: string;
}

export interface PathsJ2Qqa3V01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0 {
  /** type of the distribution store currently stores type can be intune, googleplay or windows. */
  type?: Enum415;
  /** publishing status of the release in the store. */
  publishingStatus?: string;
}

export interface Paths12P7F7IV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0Allof1 {
  /** Is the containing release the latest one in this distribution store. */
  isLatest?: boolean;
}

/** A unique identifier for a destination. A destination can be identified by an ID (guid) or by a name. DestinationId encapsulates both options. A destination can be either a distribution group or a store. */
export interface Paths18M4XcxV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof1 {
  /** Name of a distribution group / distribution store. The release will be associated with this distribution group or store. If the distribution group / store doesn't exist a 400 is returned. If both distribution group / store name and id are passed, the id is taking precedence. */
  name?: string;
  /** Id of a distribution group / store. The release will be associated with this distribution group / store. If the distribution group / store doesn't exist a 400 is returned. If both distribution group / store name and id are passed, the id is taking precedence. */
  id: string;
}

export interface Paths8Byq2JV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof2 {
  /** Destination can be either store or group. */
  destinationType?: Enum416;
  /** Display name for the group or tester */
  displayName?: string;
}

/** Contains metadata about the build that produced the release being uploaded */
export interface PathsKzpnV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesBuild {
  /** The branch name of the build producing the release */
  branchName?: string;
  /** The commit hash of the build producing the release */
  commitHash?: string;
  /** The commit message of the build producing the release */
  commitMessage?: string;
}

export interface Paths1Hpnd2WV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses404ContentApplicationJsonSchema {
  code: Enum417;
  message: string;
}

export interface PathsOst83YV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses501ContentApplicationJsonSchema {
  code: Get501ApplicationJsonProperties;
  message: string;
}

/** Response for getting a list of releases in a distribution group */
export interface PathsHninlmV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesGetResponses200ContentApplicationJsonSchemaItems {
  /** ID identifying this unique release. */
  id: number;
  /**
   * The release's version.<br>
   * For iOS: CFBundleVersion from info.plist.<br>
   * For Android: android:versionCode from AppManifest.xml.
   *
   */
  version: string;
  /** The release's origin */
  origin?: Enum419;
  /**
   * The release's short version.<br>
   * For iOS: CFBundleShortVersionString from info.plist.<br>
   * For Android: android:versionName from AppManifest.xml.
   *
   */
  shortVersion: string;
  /** A boolean which determines whether the release is a mandatory update or not. */
  mandatoryUpdate: boolean;
  /** UTC time in ISO 8601 format of the uploaded time. */
  uploadedAt: string;
  /** This value determines the whether a release currently is enabled or disabled. */
  enabled: boolean;
  /** This value determines if a release is external or not. */
  isExternalBuild?: boolean;
}

export interface Paths1JakpdqV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesGetResponses404ContentApplicationJsonSchema {
  code: Enum420;
  message: string;
}

export interface PathsLx7ZdvV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersBulkDeletePostRequestbodyContentApplicationJsonSchema {
  /** The list of emails of the users */
  userEmails?: string[];
}

export interface PathsH5A3IoV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersBulkDeletePostResponses200ContentApplicationJsonSchemaItems {
  /** The code of the result */
  code?: string;
  /** The message of the result */
  message?: number;
  /** The status code of the result */
  status: number;
  /** The email of the user */
  userEmail?: string;
}

export interface PathsAiyp0KV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersBulkDeletePostResponsesDefaultContentApplicationJsonSchema {
  error: Paths1LpdkgkV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersBulkDeletePostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1LpdkgkV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersBulkDeletePostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum421;
  message: string;
}

export interface PathsV8RijtV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersGetResponses200ContentApplicationJsonSchemaItems {
  /** The unique id (UUID) of the user */
  id?: string;
  /** The avatar URL of the user */
  avatarUrl?: string;
  /** User is required to send an old password in order to change the password. */
  canChangePassword?: boolean;
  /** The full name of the user. Might for example be first and last name */
  displayName?: string;
  /** The email address of the user */
  email: string;
  /** Whether the has accepted the invite. Available when an invite is pending, and the value will be "true". */
  invitePending?: boolean;
  /** The unique name that is used to identify the user. */
  name?: string;
}

export interface PathsDswa3EV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersGetResponsesDefaultContentApplicationJsonSchema {
  error: PathsUf7IliV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsUf7IliV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum422;
  message: string;
}

export interface Paths9330UyV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersPostRequestbodyContentApplicationJsonSchema {
  /** The list of emails of the users */
  userEmails?: string[];
}

export interface PathsQb9V9JV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersPostResponses200ContentApplicationJsonSchemaItems {
  /** The code of the result */
  code?: string;
  /** Whether the has accepted the invite. Available when an invite is pending, and the value will be "true". */
  invitePending?: boolean;
  /** The message of the result */
  message?: string;
  /** The status code of the result */
  status: number;
  /** The email of the user */
  userEmail?: string;
}

export interface Paths27EeybV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersPostResponsesDefaultContentApplicationJsonSchema {
  error: Paths1HugfkwV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersPostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1HugfkwV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersPostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum423;
  message: string;
}

export interface PathsPetbu0V01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameDevicesDownloadDevicesListGetResponses400ContentApplicationJsonSchema {
  code: Enum424;
  message: string;
}

export interface Paths1Lf13O3V01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameDevicesDownloadDevicesListGetResponses404ContentApplicationJsonSchema {
  code: Enum425;
  message: string;
}

export interface Paths1LlermxV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameDevicesDownloadDevicesListGetResponses500ContentApplicationJsonSchema {
  code: Enum426;
  message: string;
}

/** The information for a single iOS device */
export interface PathsTsc2V7V01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameDevicesGetResponses200ContentApplicationJsonSchemaItems {
  /** The Unique Device IDentifier of the device */
  udid: string;
  /** The model identifier of the device, in the format iDeviceM,N */
  model: string;
  /** The device description, in the format "iPhone 7 Plus (A1784)" */
  deviceName: string;
  /** A combination of the device model name and the owner name. */
  fullDeviceName?: string;
  /** The last known OS version running on the device */
  osBuild: string;
  /** The last known OS version running on the device */
  osVersion: string;
  /** The device's serial number. Always empty or undefined at present. */
  serial?: string;
  /** The device's International Mobile Equipment Identity number. Always empty or undefined at present. */
  imei?: string;
  /** The user ID of the device owner. */
  ownerId?: string;
  /** The provisioning status of the device. */
  status: string;
  /** Timestamp of when the device was registered in ISO format. */
  registeredAt?: string;
}

export interface Paths12Hwzd4V01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameDevicesGetResponses400ContentApplicationJsonSchema {
  code: Enum427;
  message: string;
}

export interface PathsWkyzigV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameDevicesGetResponses404ContentApplicationJsonSchema {
  code: Enum428;
  message: string;
}

export interface Paths1Wh2QvoV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameGetResponses200ContentApplicationJsonSchema {
  /** The unique ID of the distribution group */
  id: string;
  /** The name of the distribution group used in URLs */
  name: string;
  /** The name of the distribution group */
  displayName?: string;
  /** The creation origin of this distribution group */
  origin: Enum429;
  /** Whether the distribution group is public */
  isPublic: boolean;
}

export interface PathsM9Ao2YV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths2Dja2CV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths2Dja2CV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum430;
  message: string;
}

export interface Paths1Y98SmdV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNamePatchRequestbodyContentApplicationJsonSchema {
  /** The name of the distribution group */
  name?: string;
  /** Whether the distribution group is public */
  isPublic?: boolean;
}

export interface Paths15Yrg8NV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNamePatchResponses200ContentApplicationJsonSchema {
  /** The unique ID of the distribution group */
  id: string;
  /** The name of the distribution group used in URLs */
  name: string;
  /** The name of the distribution group */
  displayName?: string;
  /** The creation origin of this distribution group */
  origin: Enum431;
  /** Whether the distribution group is public */
  isPublic: boolean;
}

export interface Paths1Nibs8HV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNamePatchResponsesDefaultContentApplicationJsonSchema {
  error: Paths135MjxyV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths135MjxyV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum432;
  message: string;
}

export interface PathsKwupmvV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameDeleteResponsesDefaultContentApplicationJsonSchema {
  error: Paths74HcibV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths74HcibV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum433;
  message: string;
}

export interface Paths1O1HkymV01AppsOwnerNameAppNameDistributionGroupsGetResponses200ContentApplicationJsonSchemaItems {
  /** The unique ID of the distribution group */
  id: string;
  /** The name of the distribution group used in URLs */
  name: string;
  /** The name of the distribution group */
  displayName?: string;
  /** The creation origin of this distribution group */
  origin: Enum434;
  /** Whether the distribution group is public */
  isPublic: boolean;
}

export interface Paths9Wjl67V01AppsOwnerNameAppNameDistributionGroupsGetResponsesDefaultContentApplicationJsonSchema {
  error: PathsTqoq5TV01AppsOwnerNameAppNameDistributionGroupsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsTqoq5TV01AppsOwnerNameAppNameDistributionGroupsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum435;
  message: string;
}

export interface PathsFdbuo5V01AppsOwnerNameAppNameDistributionGroupsPostRequestbodyContentApplicationJsonSchema {
  /** The name of the distribution group */
  name: string;
  /** The display name of the distribution group. If not specified, the name will be used. */
  displayName?: string;
}

export interface Paths7NhijrV01AppsOwnerNameAppNameDistributionGroupsPostResponses201ContentApplicationJsonSchema {
  /** The unique ID of the distribution group */
  id: string;
  /** The name of the distribution group used in URLs */
  name: string;
  /** The name of the distribution group */
  displayName?: string;
  /** The creation origin of this distribution group */
  origin: Enum436;
  /** Whether the distribution group is public */
  isPublic: boolean;
}

export interface Paths5IifpfV01AppsOwnerNameAppNameDistributionGroupsPostResponsesDefaultContentApplicationJsonSchema {
  error: Paths1Ed3IkrV01AppsOwnerNameAppNameDistributionGroupsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Ed3IkrV01AppsOwnerNameAppNameDistributionGroupsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum437;
  message: string;
}

/** missing symbol groups */
export interface Paths11FvsglV01AppsOwnerNameAppNameDiagnosticsSymbolGroupsInfoGetResponses200ContentApplicationJsonSchema {
  /** total number of crashes for all missing symbol groups */
  totalCrashCount: number;
}

/** failure response object */
export interface Paths1WfkyxuV01AppsOwnerNameAppNameDiagnosticsSymbolGroupsInfoGetResponsesDefaultContentApplicationJsonSchema {
  code: string;
  message: string;
}

/** grouped by missing symbols crashes response object */
export interface Paths12L0F2LV01AppsOwnerNameAppNameDiagnosticsSymbolGroupsSymbolGroupIdGetResponses200ContentApplicationJsonSchema {
  /** total number of crashes for all the groups */
  totalCrashCount: number;
  /** list of crash groups formed by missing symbols combination */
  groups: Paths1BfgrzpV01AppsOwnerNameAppNameDiagnosticsSymbolGroupsSymbolGroupIdGetResponses200ContentApplicationJsonSchemaPropertiesGroupsItems[];
}

/** missing symbol crash group object */
export interface Paths1BfgrzpV01AppsOwnerNameAppNameDiagnosticsSymbolGroupsSymbolGroupIdGetResponses200ContentApplicationJsonSchemaPropertiesGroupsItems {
  /** id of the symbol group */
  symbolGroupId: string;
  /** number of crashes that belong to this group */
  crashCount?: number;
  /** number of errors that belong to this group */
  errorCount?: number;
  /** application id */
  appId: string;
  /** application version */
  appVer: string;
  /** application build */
  appBuild: string;
  /** last update date for the group */
  lastModified: Date;
  /** list of missing symbols */
  missingSymbols: Get200ApplicationJsonPropertiesItemsMissingSymbolsItem[];
  /** group status */
  status: GetResponses200ContentApplicationJsonSchemaGroupsItemStatus;
}

/** missing symbol */
export interface Get200ApplicationJsonPropertiesItemsMissingSymbolsItem {
  /** symbol id */
  symbolId: string;
  /** symbol name */
  name: string;
  /** symbol plarform */
  platform?: string;
  /** symbol status */
  status: GetResponses200ContentApplicationJsonSchemaGroupsItemMissingSymbolsItemStatus;
}

/** failure response object */
export interface Paths4Cl255V01AppsOwnerNameAppNameDiagnosticsSymbolGroupsSymbolGroupIdGetResponsesDefaultContentApplicationJsonSchema {
  code: string;
  message: string;
}

/** grouped by missing symbols crashes response object */
export interface PathsQn5ExjV01AppsOwnerNameAppNameDiagnosticsSymbolGroupsGetResponses200ContentApplicationJsonSchema {
  /** total number of crashes for all the groups */
  totalCrashCount: number;
  /** list of crash groups formed by missing symbols combination */
  groups: PathsOz8MxcV01AppsOwnerNameAppNameDiagnosticsSymbolGroupsGetResponses200ContentApplicationJsonSchemaPropertiesGroupsItems[];
}

/** missing symbol crash group object */
export interface PathsOz8MxcV01AppsOwnerNameAppNameDiagnosticsSymbolGroupsGetResponses200ContentApplicationJsonSchemaPropertiesGroupsItems {
  /** id of the symbol group */
  symbolGroupId: string;
  /** number of crashes that belong to this group */
  crashCount?: number;
  /** number of errors that belong to this group */
  errorCount?: number;
  /** application id */
  appId: string;
  /** application version */
  appVer: string;
  /** application build */
  appBuild: string;
  /** last update date for the group */
  lastModified: Date;
  /** list of missing symbols */
  missingSymbols: Paths1Lnr615V01AppsOwnerNameAppNameDiagnosticsSymbolGroupsGetResponses200ContentApplicationJsonSchemaPropertiesGroupsItemsPropertiesMissingSymbolsItems[];
  /** group status */
  status: Enum441;
}

/** missing symbol */
export interface Paths1Lnr615V01AppsOwnerNameAppNameDiagnosticsSymbolGroupsGetResponses200ContentApplicationJsonSchemaPropertiesGroupsItemsPropertiesMissingSymbolsItems {
  /** symbol id */
  symbolId: string;
  /** symbol name */
  name: string;
  /** symbol plarform */
  platform?: string;
  /** symbol status */
  status: Enum440;
}

/** failure response object */
export interface Paths1ByvenaV01AppsOwnerNameAppNameDiagnosticsSymbolGroupsGetResponsesDefaultContentApplicationJsonSchema {
  code: string;
  message: string;
}

/** A list of device IDs */
export interface DeviceList {
  devices: string[];
}

/** Short ID for a list of device IDs */
export interface DeviceSelection {
  /** Identifier of the device selection */
  shortId: string;
}

/** Details of a failed operation */
export interface TestCloudErrorDetails4 {
  /** Status of the operation */
  status: string;
  /** Human-readable message that describes the error */
  message: string;
}

export interface Paths1Wime0YV01AppsOwnerNameAppNameDeviceConfigurationsGetResponses200ContentApplicationJsonSchemaItems {
  /** The name of the device model and OS version */
  name?: string;
  /** The unique id of the device configuration */
  id?: string;
  /** The tier */
  tier?: number;
  image?: GetResponses200ContentApplicationJsonSchemaItemImage;
  model?: PathsUjn3BvV01AppsOwnerNameAppNameDeviceConfigurationsGetResponses200ContentApplicationJsonSchemaItemsPropertiesModel;
  os?: string;
  osName?: string;
  marketShare?: number;
}

export interface GetResponses200ContentApplicationJsonSchemaItemImage {
  full?: string;
  thumb?: string;
}

export interface PathsUjn3BvV01AppsOwnerNameAppNameDeviceConfigurationsGetResponses200ContentApplicationJsonSchemaItemsPropertiesModel {
  name?: string;
  manufacturer?: string;
  model?: string;
  platform?: string;
  /** Physical device dimensions */
  dimensions?: Get200ApplicationJsonItemsModelDimensions;
  /** Device screen resolution */
  resolution?: Get200ApplicationJsonItemsModelResolution;
  releaseDate?: string;
  formFactor?: string;
  /** Physical device screen dimensions */
  screenSize?: Get200ApplicationJsonItemsModelScreenSize;
  /** CPU data for device */
  cpu?: Get200ApplicationJsonItemsModelCpu;
  /** Memory data for device */
  memory?: Get200ApplicationJsonItemsModelMemory;
  screenRotation?: number;
  deviceFrame?: Get200ApplicationJsonItemsModelDeviceFrame;
  availabilityCount?: number;
}

/** Physical device dimensions */
export interface Get200ApplicationJsonItemsModelDimensions {
  /** Any object */
  depth?: Record<string, unknown>;
  /** Any object */
  height?: Record<string, unknown>;
  /** Any object */
  width?: Record<string, unknown>;
}

/** Device screen resolution */
export interface Get200ApplicationJsonItemsModelResolution {
  height?: string;
  width?: string;
  ppi?: string;
}

/** Physical device screen dimensions */
export interface Get200ApplicationJsonItemsModelScreenSize {
  cm?: string;
  in?: string;
}

/** CPU data for device */
export interface Get200ApplicationJsonItemsModelCpu {
  frequency?: string;
  core?: string;
  text?: string;
}

/** Memory data for device */
export interface Get200ApplicationJsonItemsModelMemory {
  formattedSize?: string;
}

export interface Get200ApplicationJsonItemsModelDeviceFrame {
  grid?: Get200ApplicationJsonItemsModelDeviceFrameGrid;
  full?: Get200ApplicationJsonItemsModelDeviceFrameFull;
}

export interface Get200ApplicationJsonItemsModelDeviceFrameGrid {
  width?: number;
  height?: number;
  frameUrl?: string;
  screen?: number[];
}

export interface Get200ApplicationJsonItemsModelDeviceFrameFull {
  width?: number;
  height?: number;
  frameUrl?: string;
  screen?: number[];
}

export interface Paths1Kb13FjV01AppsOwnerNameAppNameDeploymentsDeploymentNameUploadsPostResponses200ContentApplicationJsonSchema {
  /** The ID for the newly created upload. It is going to be required later in the process. */
  id: string;
  /** The URL domain used to upload the release. */
  uploadDomain: string;
  /** The URL encoded token used for upload permissions. */
  token: string;
}

export interface PathsO9B77WV01AppsOwnerNameAppNameDeploymentsDeploymentNameUploadsPostResponsesDefaultContentApplicationJsonSchema {
  message: string;
}

export interface Paths1G1PzhgV01AppsOwnerNameAppNameDeploymentsDeploymentNameRollbackReleasePostRequestbodyContentApplicationJsonSchema {
  label?: string;
}

export interface PathsQ8034WV01AppsOwnerNameAppNameDeploymentsDeploymentNameRollbackReleasePostResponses201ContentApplicationJsonSchemaAllof0 {
  targetBinaryRange?: string;
  description?: string;
  isDisabled?: boolean;
  isMandatory?: boolean;
  rollout?: number;
}

export interface Paths50Kz7V01AppsOwnerNameAppNameDeploymentsDeploymentNameRollbackReleasePostResponses201ContentApplicationJsonSchemaAllof1 {
  label?: string;
  packageHash?: string;
  blobUrl?: string;
  /** Dictionary of <paths·1nnmvfh·v0-1-apps-owner_name-app_name-deployments-deployment_name-rollback_release·post·responses·201·content·application-json·schema·allof·1·properties·diff_package_map·additionalproperties> */
  diffPackageMap?: {
    [propertyName: string]: Paths1NnmvfhV01AppsOwnerNameAppNameDeploymentsDeploymentNameRollbackReleasePostResponses201ContentApplicationJsonSchemaAllof1PropertiesDiffPackageMapAdditionalproperties;
  };
  /** Set on 'Promote' */
  originalDeployment?: string;
  /** Set on 'Promote' and 'Rollback' */
  originalLabel?: string;
  releasedBy?: string;
  /** The release method is unknown if unspecified */
  releaseMethod?: Enum442;
  size?: number;
  uploadTime?: number;
}

export interface Paths1NnmvfhV01AppsOwnerNameAppNameDeploymentsDeploymentNameRollbackReleasePostResponses201ContentApplicationJsonSchemaAllof1PropertiesDiffPackageMapAdditionalproperties {
  size: number;
  url: string;
}

export interface PathsC97F7PV01AppsOwnerNameAppNameDeploymentsDeploymentNameRollbackReleasePostResponsesDefaultContentApplicationJsonSchema {
  message: string;
}

export interface PathsK12I6HV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesReleaseLabelPatchRequestbodyContentApplicationJsonSchemaAllof0 {
  targetBinaryRange?: string;
  description?: string;
  isDisabled?: boolean;
  isMandatory?: boolean;
  rollout?: number;
}

export interface Paths1Yea874V01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesReleaseLabelPatchResponses200ContentApplicationJsonSchemaAllof0 {
  targetBinaryRange?: string;
  description?: string;
  isDisabled?: boolean;
  isMandatory?: boolean;
  rollout?: number;
}

export interface PathsYibmhkV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesReleaseLabelPatchResponses200ContentApplicationJsonSchemaAllof1 {
  label?: string;
  packageHash?: string;
  blobUrl?: string;
  /** Dictionary of <paths·6e7nbi·v0-1-apps-owner_name-app_name-deployments-deployment_name-releases-release_label·patch·responses·200·content·application-json·schema·allof·1·properties·diff_package_map·additionalproperties> */
  diffPackageMap?: {
    [propertyName: string]: Paths6E7NbiV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesReleaseLabelPatchResponses200ContentApplicationJsonSchemaAllof1PropertiesDiffPackageMapAdditionalproperties;
  };
  /** Set on 'Promote' */
  originalDeployment?: string;
  /** Set on 'Promote' and 'Rollback' */
  originalLabel?: string;
  releasedBy?: string;
  /** The release method is unknown if unspecified */
  releaseMethod?: Enum443;
  size?: number;
  uploadTime?: number;
}

export interface Paths6E7NbiV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesReleaseLabelPatchResponses200ContentApplicationJsonSchemaAllof1PropertiesDiffPackageMapAdditionalproperties {
  size: number;
  url: string;
}

export interface PathsIsso8KV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesReleaseLabelPatchResponsesDefaultContentApplicationJsonSchema {
  message: string;
}

export interface Paths2Uoo4MV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesDeleteResponsesDefaultContentApplicationJsonSchema {
  message: string;
}

export interface Paths1FevdlzV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesGetResponses200ContentApplicationJsonSchemaItemsAllof0 {
  targetBinaryRange?: string;
  description?: string;
  isDisabled?: boolean;
  isMandatory?: boolean;
  rollout?: number;
}

export interface PathsLr93OtV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesGetResponses200ContentApplicationJsonSchemaItemsAllof1 {
  label?: string;
  packageHash?: string;
  blobUrl?: string;
  /** Dictionary of <paths·igx569·v0-1-apps-owner_name-app_name-deployments-deployment_name-releases·get·responses·200·content·application-json·schema·items·allof·1·properties·diff_package_map·additionalproperties> */
  diffPackageMap?: {
    [propertyName: string]: PathsIgx569V01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesDiffPackageMapAdditionalproperties;
  };
  /** Set on 'Promote' */
  originalDeployment?: string;
  /** Set on 'Promote' and 'Rollback' */
  originalLabel?: string;
  releasedBy?: string;
  /** The release method is unknown if unspecified */
  releaseMethod?: Get200ApplicationJsonItems1ReleaseMethod;
  size?: number;
  uploadTime?: number;
}

export interface PathsIgx569V01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesDiffPackageMapAdditionalproperties {
  size: number;
  url: string;
}

export interface PathsSxykieV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesGetResponsesDefaultContentApplicationJsonSchema {
  message: string;
}

export interface Paths1Q5DgwjV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesPostRequestbodyContentApplicationJsonSchema {
  /** The upload metadata from the release initialization step. */
  releaseUpload: PostContentSchemaReleaseUpload;
  /** the binary version of the application */
  targetBinaryVersion: string;
  /** This specifies which deployment you want to release the update to. Default is Staging. */
  deploymentName?: string;
  /** This provides an optional "change log" for the deployment. */
  description?: string;
  /** This specifies whether an update should be downloadable by end users or not. */
  disabled?: boolean;
  /** This specifies whether the update should be considered mandatory or not (e.g. it includes a critical security fix). */
  mandatory?: boolean;
  /** This specifies that if the update is identical to the latest release on the deployment, the CLI should generate a warning instead of an error. */
  noDuplicateReleaseError?: boolean;
  /** This specifies the percentage of users (as an integer between 1 and 100) that should be eligible to receive this update. */
  rollout?: number;
}

/** The upload metadata from the release initialization step. */
export interface PostContentSchemaReleaseUpload {
  /** The ID for the newly created upload. It is going to be required later in the process. */
  id: string;
  /** The URL domain used to upload the release. */
  uploadDomain: string;
  /** The URL encoded token used for upload permissions. */
  token: string;
}

export interface Paths1Vd5IukV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesPostResponses201ContentApplicationJsonSchemaAllof0 {
  targetBinaryRange?: string;
  description?: string;
  isDisabled?: boolean;
  isMandatory?: boolean;
  rollout?: number;
}

export interface Paths17WmuvlV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesPostResponses201ContentApplicationJsonSchemaAllof1 {
  label?: string;
  packageHash?: string;
  blobUrl?: string;
  /** Dictionary of <paths·pamihw·v0-1-apps-owner_name-app_name-deployments-deployment_name-releases·post·responses·201·content·application-json·schema·allof·1·properties·diff_package_map·additionalproperties> */
  diffPackageMap?: {
    [propertyName: string]: PathsPamihwV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesPostResponses201ContentApplicationJsonSchemaAllof1PropertiesDiffPackageMapAdditionalproperties;
  };
  /** Set on 'Promote' */
  originalDeployment?: string;
  /** Set on 'Promote' and 'Rollback' */
  originalLabel?: string;
  releasedBy?: string;
  /** The release method is unknown if unspecified */
  releaseMethod?: Enum445;
  size?: number;
  uploadTime?: number;
}

export interface PathsPamihwV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesPostResponses201ContentApplicationJsonSchemaAllof1PropertiesDiffPackageMapAdditionalproperties {
  size: number;
  url: string;
}

export interface PathsWqgstxV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesPostResponsesDefaultContentApplicationJsonSchema {
  message: string;
}

export interface Paths622D52V01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostRequestbodyContentApplicationJsonSchemaAllof0 {
  targetBinaryRange?: string;
  description?: string;
  isDisabled?: boolean;
  isMandatory?: boolean;
  rollout?: number;
}

export interface Paths17F39DpV01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostRequestbodyContentApplicationJsonSchemaAllof1 {
  label?: string;
}

export interface Paths1Ublt1UV01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostResponses200ContentApplicationJsonSchemaAllof0 {
  targetBinaryRange?: string;
  description?: string;
  isDisabled?: boolean;
  isMandatory?: boolean;
  rollout?: number;
}

export interface Paths17Kc85CV01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostResponses200ContentApplicationJsonSchemaAllof1 {
  label?: string;
  packageHash?: string;
  blobUrl?: string;
  /** Dictionary of <paths·1wkleja·v0-1-apps-owner_name-app_name-deployments-deployment_name-promote_release-promote_deployment_name·post·responses·200·content·application-json·schema·allof·1·properties·diff_package_map·additionalproperties> */
  diffPackageMap?: {
    [propertyName: string]: Paths1WklejaV01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostResponses200ContentApplicationJsonSchemaAllof1PropertiesDiffPackageMapAdditionalproperties;
  };
  /** Set on 'Promote' */
  originalDeployment?: string;
  /** Set on 'Promote' and 'Rollback' */
  originalLabel?: string;
  releasedBy?: string;
  /** The release method is unknown if unspecified */
  releaseMethod?: Enum446;
  size?: number;
  uploadTime?: number;
}

export interface Paths1WklejaV01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostResponses200ContentApplicationJsonSchemaAllof1PropertiesDiffPackageMapAdditionalproperties {
  size: number;
  url: string;
}

export interface Paths1Qz2Z0EV01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostResponsesDefaultContentApplicationJsonSchema {
  message: string;
}

export interface Paths1Fpy0IjV01AppsOwnerNameAppNameDeploymentsDeploymentNameMetricsGetResponses200ContentApplicationJsonSchemaItems {
  label: string;
  active: number;
  downloaded?: number;
  failed?: number;
  installed?: number;
}

export interface Paths1U65Jj1V01AppsOwnerNameAppNameDeploymentsDeploymentNameMetricsGetResponsesDefaultContentApplicationJsonSchema {
  message: string;
}

export interface Paths3Tai91V01AppsOwnerNameAppNameDeploymentsDeploymentNameDeleteResponsesDefaultContentApplicationJsonSchema {
  message: string;
}

export interface PathsP17HdtV01AppsOwnerNameAppNameDeploymentsDeploymentNameGetResponses200ContentApplicationJsonSchema {
  key?: string;
  name: string;
  latestRelease?: PathsI5Bj4DV01AppsOwnerNameAppNameDeploymentsDeploymentNameGetResponses200ContentApplicationJsonSchemaPropertiesLatestRelease;
}

export interface PathsCr0BufV01AppsOwnerNameAppNameDeploymentsDeploymentNameGetResponses200ContentApplicationJsonSchemaPropertiesLatestReleaseAllof0 {
  targetBinaryRange?: string;
  description?: string;
  isDisabled?: boolean;
  isMandatory?: boolean;
  rollout?: number;
}

export interface PathsGw9MspV01AppsOwnerNameAppNameDeploymentsDeploymentNameGetResponses200ContentApplicationJsonSchemaPropertiesLatestReleaseAllof1 {
  label?: string;
  packageHash?: string;
  blobUrl?: string;
  /** Dictionary of <paths·1oui7he·v0-1-apps-owner_name-app_name-deployments-deployment_name·get·responses·200·content·application-json·schema·properties·latest_release·allof·1·properties·diff_package_map·additionalproperties> */
  diffPackageMap?: {
    [propertyName: string]: Paths1Oui7HeV01AppsOwnerNameAppNameDeploymentsDeploymentNameGetResponses200ContentApplicationJsonSchemaPropertiesLatestReleaseAllof1PropertiesDiffPackageMapAdditionalproperties;
  };
  /** Set on 'Promote' */
  originalDeployment?: string;
  /** Set on 'Promote' and 'Rollback' */
  originalLabel?: string;
  releasedBy?: string;
  /** The release method is unknown if unspecified */
  releaseMethod?: Enum447;
  size?: number;
  uploadTime?: number;
}

export interface Paths1Oui7HeV01AppsOwnerNameAppNameDeploymentsDeploymentNameGetResponses200ContentApplicationJsonSchemaPropertiesLatestReleaseAllof1PropertiesDiffPackageMapAdditionalproperties {
  size: number;
  url: string;
}

export interface Paths2Je1MzV01AppsOwnerNameAppNameDeploymentsDeploymentNameGetResponsesDefaultContentApplicationJsonSchema {
  message: string;
}

export interface PathsUaqn8EV01AppsOwnerNameAppNameDeploymentsDeploymentNamePatchRequestbodyContentApplicationJsonSchema {
  name: string;
}

export interface Paths1O9H9InV01AppsOwnerNameAppNameDeploymentsDeploymentNamePatchResponsesDefaultContentApplicationJsonSchema {
  message: string;
}

export interface Paths1Hq3VntV01AppsOwnerNameAppNameDeploymentsGetResponses200ContentApplicationJsonSchemaItems {
  key?: string;
  name: string;
  latestRelease?: GetResponses200ContentApplicationJsonSchemaItemLatestRelease;
}

export interface Paths1Bf3DjfV01AppsOwnerNameAppNameDeploymentsGetResponses200ContentApplicationJsonSchemaItemsPropertiesLatestReleaseAllof0 {
  targetBinaryRange?: string;
  description?: string;
  isDisabled?: boolean;
  isMandatory?: boolean;
  rollout?: number;
}

export interface PathsNsdjsyV01AppsOwnerNameAppNameDeploymentsGetResponses200ContentApplicationJsonSchemaItemsPropertiesLatestReleaseAllof1 {
  label?: string;
  packageHash?: string;
  blobUrl?: string;
  /** Dictionary of <paths·v0eczr·v0-1-apps-owner_name-app_name-deployments·get·responses·200·content·application-json·schema·items·properties·latest_release·allof·1·properties·diff_package_map·additionalproperties> */
  diffPackageMap?: {
    [propertyName: string]: PathsV0EczrV01AppsOwnerNameAppNameDeploymentsGetResponses200ContentApplicationJsonSchemaItemsPropertiesLatestReleaseAllof1PropertiesDiffPackageMapAdditionalproperties;
  };
  /** Set on 'Promote' */
  originalDeployment?: string;
  /** Set on 'Promote' and 'Rollback' */
  originalLabel?: string;
  releasedBy?: string;
  /** The release method is unknown if unspecified */
  releaseMethod?: Get200ApplicationJsonItemsLatestRelease1ReleaseMethod;
  size?: number;
  uploadTime?: number;
}

export interface PathsV0EczrV01AppsOwnerNameAppNameDeploymentsGetResponses200ContentApplicationJsonSchemaItemsPropertiesLatestReleaseAllof1PropertiesDiffPackageMapAdditionalproperties {
  size: number;
  url: string;
}

export interface PathsBg34XwV01AppsOwnerNameAppNameDeploymentsGetResponsesDefaultContentApplicationJsonSchema {
  message: string;
}

export interface Paths1Fgvm7MV01AppsOwnerNameAppNameDeploymentsPostRequestbodyContentApplicationJsonSchema {
  key?: string;
  name: string;
  latestRelease?: PostContentSchemaLatestRelease;
}

export interface PathsZehv0UV01AppsOwnerNameAppNameDeploymentsPostRequestbodyContentApplicationJsonSchemaPropertiesLatestReleaseAllof0 {
  targetBinaryRange?: string;
  description?: string;
  isDisabled?: boolean;
  isMandatory?: boolean;
  rollout?: number;
}

export interface Paths9Kw16BV01AppsOwnerNameAppNameDeploymentsPostRequestbodyContentApplicationJsonSchemaPropertiesLatestReleaseAllof1 {
  label?: string;
  packageHash?: string;
  blobUrl?: string;
  /** Dictionary of <paths·4jsvjw·v0-1-apps-owner_name-app_name-deployments·post·requestbody·content·application-json·schema·properties·latest_release·allof·1·properties·diff_package_map·additionalproperties> */
  diffPackageMap?: {
    [propertyName: string]: Paths4JsvjwV01AppsOwnerNameAppNameDeploymentsPostRequestbodyContentApplicationJsonSchemaPropertiesLatestReleaseAllof1PropertiesDiffPackageMapAdditionalproperties;
  };
  /** Set on 'Promote' */
  originalDeployment?: string;
  /** Set on 'Promote' and 'Rollback' */
  originalLabel?: string;
  releasedBy?: string;
  /** The release method is unknown if unspecified */
  releaseMethod?: PostContentSchemaLatestRelease1ReleaseMethod;
  size?: number;
  uploadTime?: number;
}

export interface Paths4JsvjwV01AppsOwnerNameAppNameDeploymentsPostRequestbodyContentApplicationJsonSchemaPropertiesLatestReleaseAllof1PropertiesDiffPackageMapAdditionalproperties {
  size: number;
  url: string;
}

export interface PathsPwjhi2V01AppsOwnerNameAppNameDeploymentsPostResponses201ContentApplicationJsonSchema {
  key?: string;
  name: string;
  latestRelease?: PathsKc6I0MV01AppsOwnerNameAppNameDeploymentsPostResponses201ContentApplicationJsonSchemaPropertiesLatestRelease;
}

export interface Paths1Kdzg16V01AppsOwnerNameAppNameDeploymentsPostResponses201ContentApplicationJsonSchemaPropertiesLatestReleaseAllof0 {
  targetBinaryRange?: string;
  description?: string;
  isDisabled?: boolean;
  isMandatory?: boolean;
  rollout?: number;
}

export interface PathsX1HeibV01AppsOwnerNameAppNameDeploymentsPostResponses201ContentApplicationJsonSchemaPropertiesLatestReleaseAllof1 {
  label?: string;
  packageHash?: string;
  blobUrl?: string;
  /** Dictionary of <paths·172mtp9·v0-1-apps-owner_name-app_name-deployments·post·responses·201·content·application-json·schema·properties·latest_release·allof·1·properties·diff_package_map·additionalproperties> */
  diffPackageMap?: {
    [propertyName: string]: Paths172Mtp9V01AppsOwnerNameAppNameDeploymentsPostResponses201ContentApplicationJsonSchemaPropertiesLatestReleaseAllof1PropertiesDiffPackageMapAdditionalproperties;
  };
  /** Set on 'Promote' */
  originalDeployment?: string;
  /** Set on 'Promote' and 'Rollback' */
  originalLabel?: string;
  releasedBy?: string;
  /** The release method is unknown if unspecified */
  releaseMethod?: Enum450;
  size?: number;
  uploadTime?: number;
}

export interface Paths172Mtp9V01AppsOwnerNameAppNameDeploymentsPostResponses201ContentApplicationJsonSchemaPropertiesLatestReleaseAllof1PropertiesDiffPackageMapAdditionalproperties {
  size: number;
  url: string;
}

export interface PathsIui0NlV01AppsOwnerNameAppNameDeploymentsPostResponsesDefaultContentApplicationJsonSchema {
  message: string;
}

export interface Paths1Eig5LtV01AppsOwnerNameAppNameDataResourceProvisioningGetResponses404ContentApplicationJsonSchema {
  status: Enum451;
  message?: string;
}

export interface PathsWumnz0V01AppsOwnerNameAppNameDataResourceProvisioningGetResponses500ContentApplicationJsonSchema {
  error: Paths1F64HaaV01AppsOwnerNameAppNameDataResourceProvisioningGetResponses500ContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1F64HaaV01AppsOwnerNameAppNameDataResourceProvisioningGetResponses500ContentApplicationJsonSchemaPropertiesError {
  code: Get500ApplicationJsonProperties;
  message: string;
}

export interface PathsA5R1LbV01AppsOwnerNameAppNameDataResourceProvisioningPostRequestbodyContentApplicationJsonSchema {
  subscriptionId?: string;
  databaseConnectionString?: string;
  resourceRegion?: PostContentSchemaResourceRegion;
  database?: string;
  collection?: string;
  requestUnits?: number;
  accountName?: string;
}

export interface PathsAv3L5YV01AppsOwnerNameAppNameDataResourceProvisioningPostResponses202ContentApplicationJsonSchema {
  status: Enum454;
  message?: string;
}

export interface PathsHml8V01AppsOwnerNameAppNameDataResourceProvisioningPostResponses400ContentApplicationJsonSchema {
  error: PathsQ18UgnV01AppsOwnerNameAppNameDataResourceProvisioningPostResponses400ContentApplicationJsonSchemaPropertiesError;
}

export interface PathsQ18UgnV01AppsOwnerNameAppNameDataResourceProvisioningPostResponses400ContentApplicationJsonSchemaPropertiesError {
  code: Post400ApplicationJsonProperties;
  message: string;
}

export interface Paths2Bmy5KV01AppsOwnerNameAppNameDataResourceProvisioningPostResponses500ContentApplicationJsonSchema {
  error: PathsRdoofkV01AppsOwnerNameAppNameDataResourceProvisioningPostResponses500ContentApplicationJsonSchemaPropertiesError;
}

export interface PathsRdoofkV01AppsOwnerNameAppNameDataResourceProvisioningPostResponses500ContentApplicationJsonSchemaPropertiesError {
  code: Post500ApplicationJsonProperties;
  message: string;
}

export interface Paths154Xl4EV01AppsOwnerNameAppNameDataOverviewGetResponses500ContentApplicationJsonSchema {
  error: PathsJistswV01AppsOwnerNameAppNameDataOverviewGetResponses500ContentApplicationJsonSchemaPropertiesError;
}

export interface PathsJistswV01AppsOwnerNameAppNameDataOverviewGetResponses500ContentApplicationJsonSchemaPropertiesError {
  code: Enum457;
  message: string;
}

export interface PathsA8ApyzV01AppsOwnerNameAppNameCrashesInfoGetResponses200ContentApplicationJsonSchema {
  hasCrashes: boolean;
  features: PathsLalu30V01AppsOwnerNameAppNameCrashesInfoGetResponses200ContentApplicationJsonSchemaPropertiesFeatures;
}

export interface PathsLalu30V01AppsOwnerNameAppNameCrashesInfoGetResponses200ContentApplicationJsonSchemaPropertiesFeatures {
  /** App supports modification of crashgroup status */
  crashgroupModifyStatus?: boolean;
  /** App supports modification of crashgroup annotation */
  crashgroupModifyAnnotation?: boolean;
  /** App supports search API */
  search?: boolean;
  /** App supports the 'crash free user' metric */
  crashgroupAnalyticsCrashfreeusers?: boolean;
  /** App supports the 'impacted users' metric */
  crashgroupAnalyticsImpactedusers?: boolean;
  /** App supports download of raw crashes */
  crashDownloadRaw?: boolean;
}

export interface PathsBhrh3SV01AppsOwnerNameAppNameCrashesInfoGetResponsesDefaultContentApplicationJsonSchema {
  message: string;
}

export interface Paths1Ut4QauV01AppsOwnerNameAppNameCrashesCrashIdSessionLogsGetResponses200ContentApplicationJsonSchema {
  /** indicates if the number of available logs are more than the max allowed return limit(100). */
  exceededMaxLimit?: boolean;
  /** the timestamp of the last log received. This value can be used as the start time parameter in the consecutive API call. */
  lastReceivedLogTimestamp?: Date;
  /** the list of logs */
  logs: Paths8Hju1CV01AppsOwnerNameAppNameCrashesCrashIdSessionLogsGetResponses200ContentApplicationJsonSchemaPropertiesLogsItems[];
}

/** Generic log. */
export interface Paths8Hju1CV01AppsOwnerNameAppNameCrashesCrashIdSessionLogsGetResponses200ContentApplicationJsonSchemaPropertiesLogsItems {
  /**
   * Log type.
   *
   */
  type: Enum458;
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /**
   * Session ID.
   *
   */
  sessionId?: string;
  /**
   * Event ID.
   *
   */
  eventId?: string;
  /**
   * Event name.
   *
   */
  eventName?: string;
  /**
   * Message ID.
   *
   */
  messageId?: string;
  /**
   * event specific properties.
   *
   */
  properties?: { [propertyName: string]: string };
  /** Device characteristics. */
  device: PathsE5YdvpV01AppsOwnerNameAppNameCrashesCrashIdSessionLogsGetResponses200ContentApplicationJsonSchemaPropertiesLogsItemsPropertiesDevice;
  /**
   * Auth service provider.
   *
   */
  authProvider?: string;
  /**
   * Account ID of the authenticated user.
   *
   */
  accountId?: string;
}

/** Device characteristics. */
export interface PathsE5YdvpV01AppsOwnerNameAppNameCrashesCrashIdSessionLogsGetResponses200ContentApplicationJsonSchemaPropertiesLogsItemsPropertiesDevice {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface PathsRtgrgxV01AppsOwnerNameAppNameCrashesCrashIdSessionLogsGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths1OlcaagV01AppsOwnerNameAppNameCrashesCrashIdSessionLogsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1OlcaagV01AppsOwnerNameAppNameCrashesCrashIdSessionLogsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum459;
  message: string;
}

export interface Paths2Myey8V01AppsOwnerNameAppNameCrashesCrashIdAttachmentsAttachmentIdTextGetResponsesDefaultContentApplicationJsonSchema {
  message: string;
}

/** Location for downloading crash attachment */
export interface Paths1520RtwV01AppsOwnerNameAppNameCrashesCrashIdAttachmentsAttachmentIdLocationGetResponses200ContentApplicationJsonSchema {
  uri: string;
}

export interface PathsM7AdswV01AppsOwnerNameAppNameCrashesCrashIdAttachmentsAttachmentIdLocationGetResponsesDefaultContentApplicationJsonSchema {
  message: string;
}

export interface Paths1Yzy65LV01AppsOwnerNameAppNameCrashesCrashIdAttachmentsGetResponses200ContentApplicationJsonSchemaItems {
  appId: string;
  attachmentId: string;
  crashId: string;
  blobLocation: string;
  contentType: string;
  fileName: string;
  createdTime: Date;
  size: number;
}

export interface Paths1Kphy82V01AppsOwnerNameAppNameCrashesCrashIdAttachmentsGetResponsesDefaultContentApplicationJsonSchema {
  message: string;
}

/** a stacktrace in a processed and prettyfied way */
export interface Stacktrace {
  title?: string;
  reason?: string;
  threads?: Thread[];
  /** a exception */
  exception?: Exception;
}

/** a thread representation */
export interface Thread {
  /** name of the thread */
  title: string;
  /** frames of that thread */
  frames: ThreadFramesItem[];
  /** potential additional exception happened in that thread (Last Exception Backtrace) */
  exception?: Exception;
  /** Shows if a thread is relevant or not. Is false if all frames are non relevant, otherwise true */
  relevant?: boolean;
  /** SDK/Platform this thread is beeing generated from */
  platform?: ThreadPlatform;
  /** True if this thread crashed */
  crashed?: boolean;
}

/** a single frame of a stack trace */
export interface ThreadFramesItem {
  /** address of the frame */
  address?: string;
  /** name of the class */
  className?: string;
  /** name of the method */
  method?: string;
  /** is a class method */
  classMethod?: boolean;
  /** name of the file */
  file?: string;
  /** line number */
  line?: number;
  /** this line isn't from any framework */
  appCode: boolean;
  /** Name of the framework */
  frameworkName?: string;
  /** Raw frame string */
  codeRaw: string;
  /** Formatted frame string */
  codeFormatted: string;
  /** programming language of the frame */
  language?: ThreadFramesItemLanguage;
  /** frame should be shown always */
  relevant?: boolean;
  /** parameters of the frames method */
  methodParams?: string;
}

/** a exception */
export interface Exception {
  /** Reason of the exception */
  reason?: string;
  /** Type of the exception (NSSomethingException, NullPointerException) */
  type?: string;
  /** frames of the excetpion */
  frames: ExceptionFramesItem[];
  /** relevant exception (crashed) */
  relevant?: boolean;
  /** SDK/Platform this thread is beeing generated from */
  platform?: ExceptionPlatform;
}

/** a single frame of a stack trace */
export interface ExceptionFramesItem {
  /** address of the frame */
  address?: string;
  /** name of the class */
  className?: string;
  /** name of the method */
  method?: string;
  /** is a class method */
  classMethod?: boolean;
  /** name of the file */
  file?: string;
  /** line number */
  line?: number;
  /** this line isn't from any framework */
  appCode: boolean;
  /** Name of the framework */
  frameworkName?: string;
  /** Raw frame string */
  codeRaw: string;
  /** Formatted frame string */
  codeFormatted: string;
  /** programming language of the frame */
  language?: ExceptionFramesItemLanguage;
  /** frame should be shown always */
  relevant?: boolean;
  /** parameters of the frames method */
  methodParams?: string;
}

export interface Paths11Adk1LV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdStacktraceGetResponsesDefaultContentApplicationJsonSchema {
  message: string;
}

export interface Paths1Ow10Y0V01AppsOwnerNameAppNameCrashGroupsCrashGroupIdCrashesCrashIdStacktraceGetResponsesDefaultContentApplicationJsonSchema {
  message: string;
}

/** Location for downloading crash raw */
export interface Paths5WkrbzV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdCrashesCrashIdRawLocationGetResponses200ContentApplicationJsonSchema {
  uri: string;
}

export interface Paths1Ft0W9TV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdCrashesCrashIdRawLocationGetResponsesDefaultContentApplicationJsonSchema {
  message: string;
}

export interface Paths1Oul3BhV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdCrashesCrashIdNativeDownloadGetResponsesDefaultContentApplicationJsonSchema {
  message: string;
}

export interface PathsFd64KmV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdCrashesCrashIdNativeGetResponsesDefaultContentApplicationJsonSchema {
  message: string;
}

export interface Crash {
  details?: CrashDetails;
  newCrashGroupId: string;
  crashId: string;
  newCrashId: string;
  displayId?: string;
  timestamp: Date;
  version: string;
  build: string;
  device: string;
  deviceName?: string;
  osVersion: string;
  osType?: string;
  /** a stacktrace in a processed and prettyfied way */
  stacktrace?: Stacktrace;
  userName: string;
  userEmail?: string;
}

export interface CrashDetails {
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCountry?: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * Whether the device where the crash occurred is rooted or jailbroken
   *
   */
  rooted: boolean;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize: string;
  /**
   * Application launch timestamp (example: 1985-04-12T23:20:50.52Z).
   *
   */
  appStartTimestamp?: Date;
}

export interface Paths13Dx2ZcV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdCrashesCrashIdGetResponsesDefaultContentApplicationJsonSchema {
  message: string;
}

export interface Paths10HkftV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdCrashesCrashIdDeleteResponses200ContentApplicationJsonSchema {
  appId?: string;
  crashGroupId?: string;
  crashId?: string;
  crashesDeleted?: number;
  attachmentsDeleted?: number;
  blobsSucceeded?: number;
  blobsFailed?: number;
}

export interface PathsL75Q9YV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdCrashesCrashIdDeleteResponsesDefaultContentApplicationJsonSchema {
  message: string;
}

export interface Paths1U57JmnV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdCrashesGetResponsesDefaultContentApplicationJsonSchema {
  message: string;
}

export interface PathsHnvr1EV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdGetResponses200ContentApplicationJsonSchema {
  crashGroupId: string;
  newCrashGroupId: string;
  displayId: string;
  appVersion: string;
  build: string;
  status: Enum465;
  count: number;
  impactedUsers?: number;
  firstOccurrence: Date;
  lastOccurrence: Date;
  exception?: string;
  crashReason: string;
  /** frame belonging to the reason of the crash */
  reasonFrame?: PathsWe5X42V01AppsOwnerNameAppNameCrashGroupsCrashGroupIdGetResponses200ContentApplicationJsonSchemaPropertiesReasonFrame;
  /** Crash or handled exception */
  fatal: boolean;
  annotation: string;
}

/** frame belonging to the reason of the crash */
export interface PathsWe5X42V01AppsOwnerNameAppNameCrashGroupsCrashGroupIdGetResponses200ContentApplicationJsonSchemaPropertiesReasonFrame {
  /** name of the class */
  className?: string;
  /** name of the method */
  method?: string;
  /** is a class method */
  classMethod?: boolean;
  /** name of the file */
  file?: string;
  /** line number */
  line?: number;
  /** this line isn't from any framework */
  appCode?: boolean;
  /** Name of the framework */
  frameworkName?: string;
  /** Formatted frame string */
  codeFormatted?: string;
  /** Unformatted Frame string */
  codeRaw?: string;
  /** programming language of the frame */
  language?: Enum466;
  /** parameters of the frames method */
  methodParams?: string;
  /** Exception type. */
  exceptionType?: string;
  /** OS exception type. (aka. SIGNAL) */
  osExceptionType?: string;
}

export interface PathsNzisgxV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdGetResponsesDefaultContentApplicationJsonSchema {
  message: string;
}

export interface PathsT60UxpV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdPatchRequestbodyContentApplicationJsonSchema {
  status?: Enum467;
  annotation?: string;
}

export interface Paths6Qmpl3V01AppsOwnerNameAppNameCrashGroupsCrashGroupIdPatchResponses200ContentApplicationJsonSchema {
  crashGroupId: string;
  newCrashGroupId: string;
  displayId: string;
  appVersion: string;
  build: string;
  status: Enum468;
  count: number;
  impactedUsers?: number;
  firstOccurrence: Date;
  lastOccurrence: Date;
  exception?: string;
  crashReason: string;
  /** frame belonging to the reason of the crash */
  reasonFrame?: Paths1BqpefcV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdPatchResponses200ContentApplicationJsonSchemaPropertiesReasonFrame;
  /** Crash or handled exception */
  fatal: boolean;
  annotation: string;
}

/** frame belonging to the reason of the crash */
export interface Paths1BqpefcV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdPatchResponses200ContentApplicationJsonSchemaPropertiesReasonFrame {
  /** name of the class */
  className?: string;
  /** name of the method */
  method?: string;
  /** is a class method */
  classMethod?: boolean;
  /** name of the file */
  file?: string;
  /** line number */
  line?: number;
  /** this line isn't from any framework */
  appCode?: boolean;
  /** Name of the framework */
  frameworkName?: string;
  /** Formatted frame string */
  codeFormatted?: string;
  /** Unformatted Frame string */
  codeRaw?: string;
  /** programming language of the frame */
  language?: Enum469;
  /** parameters of the frames method */
  methodParams?: string;
  /** Exception type. */
  exceptionType?: string;
  /** OS exception type. (aka. SIGNAL) */
  osExceptionType?: string;
}

export interface Paths1D54ZerV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdPatchResponsesDefaultContentApplicationJsonSchema {
  message: string;
}

export interface PathsScc799V01AppsOwnerNameAppNameCrashGroupsGetResponses200ContentApplicationJsonSchema {
  limitedResultSet: boolean;
  /** Cassandra request continuation token. The token is used for pagination. */
  continuationToken?: string;
  crashGroups: Paths15OwjybV01AppsOwnerNameAppNameCrashGroupsGetResponses200ContentApplicationJsonSchemaPropertiesCrashGroupsItems[];
}

export interface Paths15OwjybV01AppsOwnerNameAppNameCrashGroupsGetResponses200ContentApplicationJsonSchemaPropertiesCrashGroupsItems {
  crashGroupId: string;
  newCrashGroupId: string;
  displayId: string;
  appVersion: string;
  build: string;
  status: GetResponses200ContentApplicationJsonSchemaCrashGroupsItemStatus;
  count: number;
  impactedUsers?: number;
  firstOccurrence: Date;
  lastOccurrence: Date;
  exception?: string;
  crashReason: string;
  /** frame belonging to the reason of the crash */
  reasonFrame?: GetResponses200ContentApplicationJsonSchemaCrashGroupsItemReasonFrame;
  /** Crash or handled exception */
  fatal: boolean;
  annotation: string;
}

/** frame belonging to the reason of the crash */
export interface GetResponses200ContentApplicationJsonSchemaCrashGroupsItemReasonFrame {
  /** name of the class */
  className?: string;
  /** name of the method */
  method?: string;
  /** is a class method */
  classMethod?: boolean;
  /** name of the file */
  file?: string;
  /** line number */
  line?: number;
  /** this line isn't from any framework */
  appCode?: boolean;
  /** Name of the framework */
  frameworkName?: string;
  /** Formatted frame string */
  codeFormatted?: string;
  /** Unformatted Frame string */
  codeRaw?: string;
  /** programming language of the frame */
  language?: Get200ApplicationJsonPropertiesItemsReasonFrameLanguage;
  /** parameters of the frames method */
  methodParams?: string;
  /** Exception type. */
  exceptionType?: string;
  /** OS exception type. (aka. SIGNAL) */
  osExceptionType?: string;
}

export interface PathsFkuj51V01AppsOwnerNameAppNameCrashGroupsGetResponsesDefaultContentApplicationJsonSchema {
  message: string;
}

export interface PathsCg3UfaV01AppsOwnerNameAppNameCommitsBatchGetResponses200ContentApplicationJsonSchemaItemsAllof0 {
  /** The commit SHA */
  sha?: string;
  /** The URL to the commit */
  url?: string;
}

export interface Paths9M4LhgV01AppsOwnerNameAppNameCommitsBatchGetResponses200ContentApplicationJsonSchemaItemsAllof1 {
  commit?: Get200ApplicationJsonItems1Commit;
}

export interface Get200ApplicationJsonItems1Commit {
  /** Commit message */
  message?: string;
  author?: Get200ApplicationJsonItems1CommitAuthor;
}

export interface Get200ApplicationJsonItems1CommitAuthor {
  /** Date and time of the commit */
  date?: string;
  /** Author name */
  name?: string;
  /** Author's email */
  email?: string;
}

export interface Paths1A4WxwuV01AppsOwnerNameAppNameBuildsBuildIdLogsGetResponses200ContentApplicationJsonSchema {
  value?: string[];
}

/** A download reference */
export interface PathsQ75XzuV01AppsOwnerNameAppNameBuildsBuildIdDownloadsDownloadTypeGetResponses200ContentApplicationJsonSchema {
  /** Download URI */
  uri: string;
}

export interface Paths1P28L53V01AppsOwnerNameAppNameBuildsBuildIdDistributePostRequestbodyContentApplicationJsonSchema {
  /** Array of objects {id:string, type:string} with "id" being the distribution group ID, store ID, or tester email, and "type" being "group", "store", or "tester" */
  destinations?: PostContentSchemaDestinationsItem[];
  /** The release notes */
  releaseNotes?: string;
  mandatoryUpdate?: boolean;
  notifyTesters?: boolean;
}

/** Destination details for distributing build releases */
export interface PostContentSchemaDestinationsItem {
  id: string;
  type: PostRequestBodyContentApplicationJsonSchemaDestinationsItemType;
}

export interface Paths1D42Nj4V01AppsOwnerNameAppNameBuildsBuildIdDistributePostResponses200ContentApplicationJsonSchema {
  /** Status of the Request */
  status?: string;
  /** A unique ID of the upload */
  uploadId?: string;
}

export interface PathsN3VrpV01AppsOwnerNameAppNameBuildsBuildIdGetResponses200ContentApplicationJsonSchema {
  /** The build ID */
  id: number;
  /** The build number */
  buildNumber: string;
  /** The time the build was queued */
  queueTime: string;
  /** The time the build was started */
  startTime?: string;
  /** The time the build was finished */
  finishTime?: string;
  /** The time the build status was last changed */
  lastChangedDate?: string;
  /** The build status */
  status: string;
  /** The build result */
  result: string;
  /** The source branch name */
  sourceBranch: string;
  /** The source SHA */
  sourceVersion: string;
}

export interface PathsFcn32WV01AppsOwnerNameAppNameBuildsBuildIdPatchRequestbodyContentApplicationJsonSchema {
  /** The build status; used to cancel builds */
  status?: "cancelling";
}

export interface Paths1Kppxb1V01AppsOwnerNameAppNameBuildsBuildIdPatchResponses200ContentApplicationJsonSchema {
  /** The build ID */
  id: number;
  /** The build number */
  buildNumber: string;
  /** The time the build was queued */
  queueTime: string;
  /** The time the build was started */
  startTime?: string;
  /** The time the build was finished */
  finishTime?: string;
  /** The time the build status was last changed */
  lastChangedDate?: string;
  /** The build status */
  status: string;
  /** The build result */
  result: string;
  /** The source branch name */
  sourceBranch: string;
  /** The source SHA */
  sourceVersion: string;
}

export interface PathsPo7UnwV01AppsOwnerNameAppNameBuildServiceStatusGetResponses200ContentApplicationJsonSchema {
  status?: string;
  service?: string;
  message?: string;
  url?: string;
  validUntil?: number;
  os?: string;
}

/** Object returned in response to getting a bug tracker issue related to a crash group id */
export interface Paths1G7Ul4DV01AppsOwnerNameAppNameBugtrackerCrashgroupCrashGroupIdGetResponses200ContentApplicationJsonSchema {
  id?: string;
  url?: string;
  title?: string;
  bugTrackerType?: Enum477;
  repoName?: string;
  mobileCenterId?: string;
  eventType?: string;
}

/** Generic result for any alerting API operation */
export interface Paths1Xg1Y27V01AppsOwnerNameAppNameBugtrackerCrashgroupCrashGroupIdGetResponsesDefaultContentApplicationJsonSchemaAllof0 {
  /** Unique request identifier for tracking */
  requestId: string;
}

export interface PathsNmpisgV01AppsOwnerNameAppNameBugtrackerCrashgroupCrashGroupIdGetResponsesDefaultContentApplicationJsonSchemaAllof1 {
  /** The status code return by the API. It can be 400 or 404 or 409 or 500. */
  code: Enum478;
  /** The reason for the request failed */
  message?: string;
}

/** Alerting bugtracker resource */
export interface Paths7O6EcbV01AppsOwnerNameAppNameBugtrackerGetResponses200ContentApplicationJsonSchema {
  /** type of bugtracker */
  type?: Enum479;
  /** bugtracker state */
  state?: Enum480;
  /** ID of OAuth token */
  tokenId?: string;
  /** Event types enabled for bugtracker */
  eventTypes?: Enum481[];
  /** Bugtracker specific settings */
  settings?: Paths11Cmak4V01AppsOwnerNameAppNameBugtrackerGetResponses200ContentApplicationJsonSchemaPropertiesSettings;
}

/** Bugtracker specific settings */
export interface Paths11Cmak4V01AppsOwnerNameAppNameBugtrackerGetResponses200ContentApplicationJsonSchemaPropertiesSettings {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "Paths11Cmak4V01AppsOwnerNameAppNameBugtrackerGetResponses200ContentApplicationJsonSchemaPropertiesSettings";
  callbackUrl?: string;
  ownerName: string;
}

/** Generic result for any alerting API operation */
export interface Paths1Ar0SvjV01AppsOwnerNameAppNameBugtrackerGetResponsesDefaultContentApplicationJsonSchemaAllof0 {
  /** Unique request identifier for tracking */
  requestId: string;
}

export interface Paths1KnyufoV01AppsOwnerNameAppNameBugtrackerGetResponsesDefaultContentApplicationJsonSchemaAllof1 {
  /** The status code return by the API. It can be 400 or 404 or 409 or 500. */
  code: Enum483;
  /** The reason for the request failed */
  message?: string;
}

/** A collection of projects for each type of toolset */
export interface Paths17D5VcoV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchema {
  /** The commit hash of the analyzed commit */
  commit?: string;
  xcode?: Paths119Wvx9V01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesXcode;
  javascript?: Paths1X2Qhy4V01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesJavascript;
  xamarin?: PathsAvakg2V01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesXamarin;
  android?: PathsVin8AnV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesAndroid;
  /** A collection of detected pre/post buildscripts for current platform toolset */
  buildscripts?: {
    [propertyName: string]: Paths1Thhra4V01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesBuildscriptsAdditionalproperties;
  };
  uwp?: Paths188BnixV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesUwp;
  testcloud?: Paths19Aa0DdV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesTestcloud;
}

export interface Paths119Wvx9V01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesXcode {
  /** The Xcode scheme containers */
  xcodeSchemeContainers: PathsYyvi3WV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesXcodePropertiesXcodeschemecontainersItems[];
}

export interface PathsYyvi3WV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesXcodePropertiesXcodeschemecontainersItems {
  /** Path to project */
  path: string;
  /** Project schemes */
  sharedSchemes: Get200ApplicationJsonPropertiesItemsSharedSchemesItem[];
  /** Path to CocoaPods file, if present */
  podfilePath?: string;
  /** Path to Carthage file, if present */
  cartfilePath?: string;
  /** repo object Id of the pbxproject */
  xcodeProjectSha?: string;
  /** Related projects paths for xcworkspace */
  workspaceProjectPaths?: string;
  /** Information regarding project app extensions, if present */
  appExtensionTargets?: Get200ApplicationJsonPropertiesItemsAppExtensionTargetsItem[];
}

export interface Get200ApplicationJsonPropertiesItemsSharedSchemesItem {
  /** Scheme name */
  name: string;
  /** Does scheme have a test action? */
  hasTestAction: boolean;
  /** Build configuration set in Archive action */
  archiveConfiguration?: string;
  archiveProject?: GetResponses200ContentApplicationJsonSchemaXcodeSchemeContainersItemSharedSchemesItemArchiveProject;
}

export interface GetResponses200ContentApplicationJsonSchemaXcodeSchemeContainersItemSharedSchemesItemArchiveProject {
  /** The Id of the target to archive */
  archiveTargetId: string;
  /** The project to archive container name */
  projectName: string;
  /** Full path of the target project */
  projectPath?: string;
}

/** App extension information */
export interface Get200ApplicationJsonPropertiesItemsAppExtensionTargetsItem {
  /** App extension name */
  name: string;
  /** App extension bundle identifier */
  targetBundleIdentifier: string;
}

export interface Paths1X2Qhy4V01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesJavascript {
  /** Paths for detected package.json files */
  packageJsonPaths: string[];
  /** The React Native solutions detected */
  javascriptSolutions?: Paths423GnmV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesJavascriptPropertiesJavascriptsolutionsItems[];
}

export interface Paths423GnmV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesJavascriptPropertiesJavascriptsolutionsItems {
  /** The path to the detected package.json */
  packageJsonPath: string;
  /** Version of React Native from package.json files */
  reactNativeVersion?: string;
}

export interface PathsAvakg2V01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesXamarin {
  /** Xamarin solutions for the toolset */
  xamarinSolutions: Paths4AwywcV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesXamarinPropertiesXamarinsolutionsItems[];
}

export interface Paths4AwywcV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesXamarinPropertiesXamarinsolutionsItems {
  /** Path to solution */
  path: string;
  /** Solution configurations */
  configurations: string[];
  /** Solution default configuration */
  defaultConfiguration?: string;
}

export interface PathsVin8AnV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesAndroid {
  /** Android Gradle modules */
  androidModules: Paths1Khgc94V01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesAndroidPropertiesAndroidmodulesItems[];
  /** The path of the Gradle wrapper */
  gradleWrapperPath?: string;
}

export interface Paths1Khgc94V01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesAndroidPropertiesAndroidmodulesItems {
  /** Name of the Android module */
  name: string;
  /** Module contains bundle settings */
  hasBundle?: boolean;
  /** The product flavors of the Android module */
  productFlavors?: string[];
  /** The detected build variants of the Android module (matrix of product flavor + build type (debug|release)) */
  buildVariants?: string[];
  /** The detected build types of the Android module */
  buildTypes?: string[];
  /** The detected build configurations of the Android module */
  buildConfigurations?: Get200ApplicationJsonPropertiesItemsBuildConfigurationsItem[];
  /** Whether the module is at the root level of the project */
  isRoot?: boolean;
}

export interface Get200ApplicationJsonPropertiesItemsBuildConfigurationsItem {
  /** Name of build configuration (the same as a build type name) */
  name: string;
  /** Android signing config. Null if not specified */
  signingConfig?: GetResponses200ContentApplicationJsonSchemaAndroidModulesItemBuildConfigurationsItemSigningConfig;
}

/** Android signing config. Null if not specified */
export interface GetResponses200ContentApplicationJsonSchemaAndroidModulesItemBuildConfigurationsItemSigningConfig {
  /** Indicates if storeFile is specified in the signing configuration */
  hasStoreFile?: boolean;
}

/** Abstract platform project */
export interface Paths1Thhra4V01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesBuildscriptsAdditionalproperties {
  name?: string;
  path?: string;
}

export interface Paths188BnixV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesUwp {
  /** The UWP solutions detected */
  uwpSolutions: PathsSe6X6AV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesUwpPropertiesUwpsolutionsItems[];
}

export interface PathsSe6X6AV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesUwpPropertiesUwpsolutionsItems {
  /** The path to the UWP solution */
  path: string;
  /** The possible configurations detected for the UWP solution */
  configurations: string[];
}

export interface Paths19Aa0DdV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesTestcloud {
  /** The TestCloud projects detected */
  projects: Paths157OrpgV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesTestcloudPropertiesProjectsItems[];
}

export interface Paths157OrpgV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesTestcloudPropertiesProjectsItems {
  /** The path to the TestCloud project */
  path: string;
  frameworkType: GetResponses200ContentApplicationJsonSchemaTestcloudProjectsItemFrameworkType;
  frameworkProperties?: GetResponses200ContentApplicationJsonSchemaTestcloudProjectsItemFrameworkProperties;
}

export interface GetResponses200ContentApplicationJsonSchemaTestcloudProjectsItemFrameworkProperties {
  configurations?: string[];
}

/** The branch build core properties */
export interface PathsVbr4Q2V01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0Additionalproperties {
  branch?: Get200ApplicationJsonAllOfAdditionalPropertiesBranch;
  enabled?: boolean;
}

export interface Get200ApplicationJsonAllOfAdditionalPropertiesBranch {
  /** The branch name */
  name: string;
  commit: Get200ApplicationJsonAllOfAdditionalPropertiesBranchCommit;
}

export interface Get200ApplicationJsonAllOfAdditionalPropertiesBranchCommit {
  /** The commit SHA */
  sha?: string;
  /** The URL to the commit */
  url?: string;
}

/** The branch build configuration */
export interface Paths13VettcV01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0 {
  /** Describes unknown properties. The value of an unknown property can be of "any" type. */
  [property: string]: any;
  trigger?: Enum487;
  testsEnabled?: boolean;
  badgeIsEnabled?: boolean;
  signed?: boolean;
  /** A configured branch name to clone from. If provided, all other parameters will be ignored. Only supported in POST requests. */
  cloneFromBranch?: string;
  /** The branch build configuration for each toolset */
  toolsets?: Paths5Dl8MmV01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsets;
  /** The versioning configuration for artifacts built for this branch */
  artifactVersioning?: Paths14Lbq1V01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0PropertiesArtifactversioning;
}

/** The branch build configuration for each toolset */
export interface Paths5Dl8MmV01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsets {
  /** Build configuration when Xcode is part of the build steps */
  xcode?: Paths5K2CezV01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesXcode;
  /** Build configuration when React Native, or other JavaScript tech, is part of the build steps */
  javascript?: Paths5FsbooV01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesJavascript;
  /** Build configuration for Xamarin projects */
  xamarin?: Paths1Lf9SbhV01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesXamarin;
  /** Build configuration for Android projects */
  android?: Paths10Dr1V01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesAndroid;
}

/** Build configuration when Xcode is part of the build steps */
export interface Paths5K2CezV01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesXcode {
  /** Xcode project/workspace path */
  projectOrWorkspacePath?: string;
  /** Path to CococaPods file, if present */
  podfilePath?: string;
  /** Path to Carthage file, if present */
  cartfilePath?: string;
  provisioningProfileEncoded?: string;
  certificateEncoded?: string;
  provisioningProfileFileId?: string;
  certificateFileId?: string;
  provisioningProfileUploadId?: string;
  appExtensionProvisioningProfileFiles?: Get200ApplicationJsonAllOfPropertiesPropertiesPropertiesItemsItem[];
  certificateUploadId?: string;
  certificatePassword?: string;
  scheme?: string;
  /** Xcode version used to build. Available versions can be found in "/xcode_versions" API. Default is latest stable version, at the time when the configuration is set. */
  xcodeVersion?: string;
  provisioningProfileFilename?: string;
  certificateFilename?: string;
  teamId?: string;
  automaticSigning?: boolean;
  /** The selected pbxproject hash to the repositroy */
  xcodeProjectSha?: string;
  /** The build configuration of the target to archive */
  archiveConfiguration?: string;
  /** The target id of the selected scheme to archive */
  targetToArchive?: string;
  /**
   * Setting this to true forces the build to use Xcode legacy build system. Otherwise, the setting from workspace settings is used.
   * By default new build system is used if workspace setting is not committed to the repository. Only used for iOS React Native app, with Xcode 10.
   *
   */
  forceLegacyBuildSystem?: boolean;
}

/** Provisioning profile fetch and store information */
export interface Get200ApplicationJsonAllOfPropertiesPropertiesPropertiesItemsItem {
  /** Name of uploaded provisioning profile */
  fileName?: string;
  /** File id from secure file storage */
  fileId?: string;
  /** Upload id to App Center File Upload Store */
  uploadId?: string;
  /** Target the provisioning profile is used to sign */
  targetBundleIdentifier?: string;
}

/** Build configuration when React Native, or other JavaScript tech, is part of the build steps */
export interface Paths5FsbooV01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesJavascript {
  /** Path to package.json file for the main project, e.g. "package.json" or "myapp/package.json" */
  packageJsonPath?: string;
  /** Whether to run Jest unit tests, via npm test, during the build */
  runTests?: boolean;
  /** Version of React Native from package.json files */
  reactNativeVersion?: string;
}

/** Build configuration for Xamarin projects */
export interface Paths1Lf9SbhV01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesXamarin {
  slnPath?: string;
  isSimBuild?: boolean;
  args?: string;
  configuration?: string;
  p12File?: string;
  p12Pwd?: string;
  provProfile?: string;
  monoVersion?: string;
  sdkBundle?: string;
  /**
   * Symlink of the SDK Bundle and Mono installation.
   * The build will use the associated Mono bundled with related Xamarin SDK. If both symlink and monoVersion or sdkBundle are passed, the symlink is taking precedence. If non-existing symlink is passed, the current stable Mono version will be configured for building.
   *
   */
  symlink?: string;
}

/** Build configuration for Android projects */
export interface Paths10Dr1V01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesAndroid {
  /** Path to the Gradle wrapper script */
  gradleWrapperPath?: string;
  /** The Gradle module to build */
  module?: string;
  /** The Android build variant to build */
  buildVariant?: string;
  /** Whether to run unit tests during the build (default) */
  runTests?: boolean;
  /** Whether to run lint checks during the build (default) */
  runLint?: boolean;
  /** Whether it is the root module or not */
  isRoot?: boolean;
  /** Whether to apply automatic signing or not */
  automaticSigning?: boolean;
  /** The password of the keystore */
  keystorePassword?: string;
  /** The key alias */
  keyAlias?: string;
  /** The key password */
  keyPassword?: string;
  /** The name of the keystore file */
  keystoreFilename?: string;
  /** The keystore encoded value */
  keystoreEncoded?: string;
}

/** The versioning configuration for artifacts built for this branch */
export interface Paths14Lbq1V01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0PropertiesArtifactversioning {
  buildNumberFormat?: Enum488;
}

export interface Paths4Y3LpwV01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof1 {
  id: number;
}

export interface Paths1Pv0ByrV01AppsOwnerNameAppNameBranchesBranchConfigGetResponsesDefaultContentApplicationJsonSchema {
  id: string;
  code: string;
  message: string;
}

/** The branch build core properties */
export interface PathsRm1L2KV01AppsOwnerNameAppNameBranchesBranchConfigPostRequestbodyContentApplicationJsonSchemaAdditionalproperties {
  branch?: PostContentSchemaProperties;
  enabled?: boolean;
}

export interface PostContentSchemaProperties {
  /** The branch name */
  name: string;
  commit: Paths1B8N66RV01AppsOwnerNameAppNameBranchesBranchConfigPostRequestbodyContentApplicationJsonSchemaAdditionalpropertiesPropertiesBranchPropertiesCommit;
}

export interface Paths1B8N66RV01AppsOwnerNameAppNameBranchesBranchConfigPostRequestbodyContentApplicationJsonSchemaAdditionalpropertiesPropertiesBranchPropertiesCommit {
  /** The commit SHA */
  sha?: string;
  /** The URL to the commit */
  url?: string;
}

/** The branch build configuration */
export interface PathsXn26H7V01AppsOwnerNameAppNameBranchesBranchConfigPostRequestbodyContentApplicationJsonSchema {
  /** Describes unknown properties. The value of an unknown property can be of "any" type. */
  [property: string]: any;
  trigger?: PostContentSchemaTrigger;
  testsEnabled?: boolean;
  badgeIsEnabled?: boolean;
  signed?: boolean;
  /** A configured branch name to clone from. If provided, all other parameters will be ignored. Only supported in POST requests. */
  cloneFromBranch?: string;
  /** The branch build configuration for each toolset */
  toolsets?: PostContentSchemaToolsets;
  /** The versioning configuration for artifacts built for this branch */
  artifactVersioning?: PostContentSchemaArtifactVersioning;
}

/** The branch build configuration for each toolset */
export interface PostContentSchemaToolsets {
  /** Build configuration when Xcode is part of the build steps */
  xcode?: PostContentSchemaToolsetsXcode;
  /** Build configuration when React Native, or other JavaScript tech, is part of the build steps */
  javascript?: PostContentSchemaToolsetsJavascript;
  /** Build configuration for Xamarin projects */
  xamarin?: PostContentSchemaToolsetsXamarin;
  /** Build configuration for Android projects */
  android?: PostContentSchemaToolsetsAndroid;
}

/** Build configuration when Xcode is part of the build steps */
export interface PostContentSchemaToolsetsXcode {
  /** Xcode project/workspace path */
  projectOrWorkspacePath?: string;
  /** Path to CococaPods file, if present */
  podfilePath?: string;
  /** Path to Carthage file, if present */
  cartfilePath?: string;
  provisioningProfileEncoded?: string;
  certificateEncoded?: string;
  provisioningProfileFileId?: string;
  certificateFileId?: string;
  provisioningProfileUploadId?: string;
  appExtensionProvisioningProfileFiles?: PostContentSchemaToolsetsXcodeAppExtensionProvisioningProfileFilesItem[];
  certificateUploadId?: string;
  certificatePassword?: string;
  scheme?: string;
  /** Xcode version used to build. Available versions can be found in "/xcode_versions" API. Default is latest stable version, at the time when the configuration is set. */
  xcodeVersion?: string;
  provisioningProfileFilename?: string;
  certificateFilename?: string;
  teamId?: string;
  automaticSigning?: boolean;
  /** The selected pbxproject hash to the repositroy */
  xcodeProjectSha?: string;
  /** The build configuration of the target to archive */
  archiveConfiguration?: string;
  /** The target id of the selected scheme to archive */
  targetToArchive?: string;
  /**
   * Setting this to true forces the build to use Xcode legacy build system. Otherwise, the setting from workspace settings is used.
   * By default new build system is used if workspace setting is not committed to the repository. Only used for iOS React Native app, with Xcode 10.
   *
   */
  forceLegacyBuildSystem?: boolean;
}

/** Provisioning profile fetch and store information */
export interface PostContentSchemaToolsetsXcodeAppExtensionProvisioningProfileFilesItem {
  /** Name of uploaded provisioning profile */
  fileName?: string;
  /** File id from secure file storage */
  fileId?: string;
  /** Upload id to App Center File Upload Store */
  uploadId?: string;
  /** Target the provisioning profile is used to sign */
  targetBundleIdentifier?: string;
}

/** Build configuration when React Native, or other JavaScript tech, is part of the build steps */
export interface PostContentSchemaToolsetsJavascript {
  /** Path to package.json file for the main project, e.g. "package.json" or "myapp/package.json" */
  packageJsonPath?: string;
  /** Whether to run Jest unit tests, via npm test, during the build */
  runTests?: boolean;
  /** Version of React Native from package.json files */
  reactNativeVersion?: string;
}

/** Build configuration for Xamarin projects */
export interface PostContentSchemaToolsetsXamarin {
  slnPath?: string;
  isSimBuild?: boolean;
  args?: string;
  configuration?: string;
  p12File?: string;
  p12Pwd?: string;
  provProfile?: string;
  monoVersion?: string;
  sdkBundle?: string;
  /**
   * Symlink of the SDK Bundle and Mono installation.
   * The build will use the associated Mono bundled with related Xamarin SDK. If both symlink and monoVersion or sdkBundle are passed, the symlink is taking precedence. If non-existing symlink is passed, the current stable Mono version will be configured for building.
   *
   */
  symlink?: string;
}

/** Build configuration for Android projects */
export interface PostContentSchemaToolsetsAndroid {
  /** Path to the Gradle wrapper script */
  gradleWrapperPath?: string;
  /** The Gradle module to build */
  module?: string;
  /** The Android build variant to build */
  buildVariant?: string;
  /** Whether to run unit tests during the build (default) */
  runTests?: boolean;
  /** Whether to run lint checks during the build (default) */
  runLint?: boolean;
  /** Whether it is the root module or not */
  isRoot?: boolean;
  /** Whether to apply automatic signing or not */
  automaticSigning?: boolean;
  /** The password of the keystore */
  keystorePassword?: string;
  /** The key alias */
  keyAlias?: string;
  /** The key password */
  keyPassword?: string;
  /** The name of the keystore file */
  keystoreFilename?: string;
  /** The keystore encoded value */
  keystoreEncoded?: string;
}

/** The versioning configuration for artifacts built for this branch */
export interface PostContentSchemaArtifactVersioning {
  buildNumberFormat?: PostContentSchemaArtifactVersioningBuildNumberFormat;
}

/** The branch build core properties */
export interface Paths1Ip4BvnV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0Additionalproperties {
  branch?: Post200ApplicationJsonAllOfAdditionalPropertiesBranch;
  enabled?: boolean;
}

export interface Post200ApplicationJsonAllOfAdditionalPropertiesBranch {
  /** The branch name */
  name: string;
  commit: Post200ApplicationJsonAllOfAdditionalPropertiesBranchCommit;
}

export interface Post200ApplicationJsonAllOfAdditionalPropertiesBranchCommit {
  /** The commit SHA */
  sha?: string;
  /** The URL to the commit */
  url?: string;
}

/** The branch build configuration */
export interface Paths1Kbv5LpV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0 {
  /** Describes unknown properties. The value of an unknown property can be of "any" type. */
  [property: string]: any;
  trigger?: Enum491;
  testsEnabled?: boolean;
  badgeIsEnabled?: boolean;
  signed?: boolean;
  /** A configured branch name to clone from. If provided, all other parameters will be ignored. Only supported in POST requests. */
  cloneFromBranch?: string;
  /** The branch build configuration for each toolset */
  toolsets?: PathsA1NnigV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsets;
  /** The versioning configuration for artifacts built for this branch */
  artifactVersioning?: Paths1Hf5Vr2V01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0PropertiesArtifactversioning;
}

/** The branch build configuration for each toolset */
export interface PathsA1NnigV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsets {
  /** Build configuration when Xcode is part of the build steps */
  xcode?: Paths3Ut9WuV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesXcode;
  /** Build configuration when React Native, or other JavaScript tech, is part of the build steps */
  javascript?: Paths1Crx4ZrV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesJavascript;
  /** Build configuration for Xamarin projects */
  xamarin?: Paths1Gc1TdmV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesXamarin;
  /** Build configuration for Android projects */
  android?: Paths19UrzlpV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesAndroid;
}

/** Build configuration when Xcode is part of the build steps */
export interface Paths3Ut9WuV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesXcode {
  /** Xcode project/workspace path */
  projectOrWorkspacePath?: string;
  /** Path to CococaPods file, if present */
  podfilePath?: string;
  /** Path to Carthage file, if present */
  cartfilePath?: string;
  provisioningProfileEncoded?: string;
  certificateEncoded?: string;
  provisioningProfileFileId?: string;
  certificateFileId?: string;
  provisioningProfileUploadId?: string;
  appExtensionProvisioningProfileFiles?: Post200ApplicationJsonAllOfPropertiesPropertiesPropertiesItemsItem[];
  certificateUploadId?: string;
  certificatePassword?: string;
  scheme?: string;
  /** Xcode version used to build. Available versions can be found in "/xcode_versions" API. Default is latest stable version, at the time when the configuration is set. */
  xcodeVersion?: string;
  provisioningProfileFilename?: string;
  certificateFilename?: string;
  teamId?: string;
  automaticSigning?: boolean;
  /** The selected pbxproject hash to the repositroy */
  xcodeProjectSha?: string;
  /** The build configuration of the target to archive */
  archiveConfiguration?: string;
  /** The target id of the selected scheme to archive */
  targetToArchive?: string;
  /**
   * Setting this to true forces the build to use Xcode legacy build system. Otherwise, the setting from workspace settings is used.
   * By default new build system is used if workspace setting is not committed to the repository. Only used for iOS React Native app, with Xcode 10.
   *
   */
  forceLegacyBuildSystem?: boolean;
}

/** Provisioning profile fetch and store information */
export interface Post200ApplicationJsonAllOfPropertiesPropertiesPropertiesItemsItem {
  /** Name of uploaded provisioning profile */
  fileName?: string;
  /** File id from secure file storage */
  fileId?: string;
  /** Upload id to App Center File Upload Store */
  uploadId?: string;
  /** Target the provisioning profile is used to sign */
  targetBundleIdentifier?: string;
}

/** Build configuration when React Native, or other JavaScript tech, is part of the build steps */
export interface Paths1Crx4ZrV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesJavascript {
  /** Path to package.json file for the main project, e.g. "package.json" or "myapp/package.json" */
  packageJsonPath?: string;
  /** Whether to run Jest unit tests, via npm test, during the build */
  runTests?: boolean;
  /** Version of React Native from package.json files */
  reactNativeVersion?: string;
}

/** Build configuration for Xamarin projects */
export interface Paths1Gc1TdmV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesXamarin {
  slnPath?: string;
  isSimBuild?: boolean;
  args?: string;
  configuration?: string;
  p12File?: string;
  p12Pwd?: string;
  provProfile?: string;
  monoVersion?: string;
  sdkBundle?: string;
  /**
   * Symlink of the SDK Bundle and Mono installation.
   * The build will use the associated Mono bundled with related Xamarin SDK. If both symlink and monoVersion or sdkBundle are passed, the symlink is taking precedence. If non-existing symlink is passed, the current stable Mono version will be configured for building.
   *
   */
  symlink?: string;
}

/** Build configuration for Android projects */
export interface Paths19UrzlpV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesAndroid {
  /** Path to the Gradle wrapper script */
  gradleWrapperPath?: string;
  /** The Gradle module to build */
  module?: string;
  /** The Android build variant to build */
  buildVariant?: string;
  /** Whether to run unit tests during the build (default) */
  runTests?: boolean;
  /** Whether to run lint checks during the build (default) */
  runLint?: boolean;
  /** Whether it is the root module or not */
  isRoot?: boolean;
  /** Whether to apply automatic signing or not */
  automaticSigning?: boolean;
  /** The password of the keystore */
  keystorePassword?: string;
  /** The key alias */
  keyAlias?: string;
  /** The key password */
  keyPassword?: string;
  /** The name of the keystore file */
  keystoreFilename?: string;
  /** The keystore encoded value */
  keystoreEncoded?: string;
}

/** The versioning configuration for artifacts built for this branch */
export interface Paths1Hf5Vr2V01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0PropertiesArtifactversioning {
  buildNumberFormat?: Enum492;
}

export interface Paths1PqezhuV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof1 {
  id: number;
}

/** The branch build core properties */
export interface Paths2EseggV01AppsOwnerNameAppNameBranchesBranchConfigPutRequestbodyContentApplicationJsonSchemaAdditionalproperties {
  branch?: PutContentSchemaProperties;
  enabled?: boolean;
}

export interface PutContentSchemaProperties {
  /** The branch name */
  name: string;
  commit: PathsVfv5IrV01AppsOwnerNameAppNameBranchesBranchConfigPutRequestbodyContentApplicationJsonSchemaAdditionalpropertiesPropertiesBranchPropertiesCommit;
}

export interface PathsVfv5IrV01AppsOwnerNameAppNameBranchesBranchConfigPutRequestbodyContentApplicationJsonSchemaAdditionalpropertiesPropertiesBranchPropertiesCommit {
  /** The commit SHA */
  sha?: string;
  /** The URL to the commit */
  url?: string;
}

/** The branch build configuration */
export interface Paths1O0K3JpV01AppsOwnerNameAppNameBranchesBranchConfigPutRequestbodyContentApplicationJsonSchema {
  /** Describes unknown properties. The value of an unknown property can be of "any" type. */
  [property: string]: any;
  trigger?: PutContentSchemaTrigger;
  testsEnabled?: boolean;
  badgeIsEnabled?: boolean;
  signed?: boolean;
  /** A configured branch name to clone from. If provided, all other parameters will be ignored. Only supported in POST requests. */
  cloneFromBranch?: string;
  /** The branch build configuration for each toolset */
  toolsets?: PutContentSchemaToolsets;
  /** The versioning configuration for artifacts built for this branch */
  artifactVersioning?: PutContentSchemaArtifactVersioning;
}

/** The branch build configuration for each toolset */
export interface PutContentSchemaToolsets {
  /** Build configuration when Xcode is part of the build steps */
  xcode?: PutContentSchemaToolsetsXcode;
  /** Build configuration when React Native, or other JavaScript tech, is part of the build steps */
  javascript?: PutContentSchemaToolsetsJavascript;
  /** Build configuration for Xamarin projects */
  xamarin?: PutContentSchemaToolsetsXamarin;
  /** Build configuration for Android projects */
  android?: PutContentSchemaToolsetsAndroid;
}

/** Build configuration when Xcode is part of the build steps */
export interface PutContentSchemaToolsetsXcode {
  /** Xcode project/workspace path */
  projectOrWorkspacePath?: string;
  /** Path to CococaPods file, if present */
  podfilePath?: string;
  /** Path to Carthage file, if present */
  cartfilePath?: string;
  provisioningProfileEncoded?: string;
  certificateEncoded?: string;
  provisioningProfileFileId?: string;
  certificateFileId?: string;
  provisioningProfileUploadId?: string;
  appExtensionProvisioningProfileFiles?: PutContentSchemaToolsetsXcodeAppExtensionProvisioningProfileFilesItem[];
  certificateUploadId?: string;
  certificatePassword?: string;
  scheme?: string;
  /** Xcode version used to build. Available versions can be found in "/xcode_versions" API. Default is latest stable version, at the time when the configuration is set. */
  xcodeVersion?: string;
  provisioningProfileFilename?: string;
  certificateFilename?: string;
  teamId?: string;
  automaticSigning?: boolean;
  /** The selected pbxproject hash to the repositroy */
  xcodeProjectSha?: string;
  /** The build configuration of the target to archive */
  archiveConfiguration?: string;
  /** The target id of the selected scheme to archive */
  targetToArchive?: string;
  /**
   * Setting this to true forces the build to use Xcode legacy build system. Otherwise, the setting from workspace settings is used.
   * By default new build system is used if workspace setting is not committed to the repository. Only used for iOS React Native app, with Xcode 10.
   *
   */
  forceLegacyBuildSystem?: boolean;
}

/** Provisioning profile fetch and store information */
export interface PutContentSchemaToolsetsXcodeAppExtensionProvisioningProfileFilesItem {
  /** Name of uploaded provisioning profile */
  fileName?: string;
  /** File id from secure file storage */
  fileId?: string;
  /** Upload id to App Center File Upload Store */
  uploadId?: string;
  /** Target the provisioning profile is used to sign */
  targetBundleIdentifier?: string;
}

/** Build configuration when React Native, or other JavaScript tech, is part of the build steps */
export interface PutContentSchemaToolsetsJavascript {
  /** Path to package.json file for the main project, e.g. "package.json" or "myapp/package.json" */
  packageJsonPath?: string;
  /** Whether to run Jest unit tests, via npm test, during the build */
  runTests?: boolean;
  /** Version of React Native from package.json files */
  reactNativeVersion?: string;
}

/** Build configuration for Xamarin projects */
export interface PutContentSchemaToolsetsXamarin {
  slnPath?: string;
  isSimBuild?: boolean;
  args?: string;
  configuration?: string;
  p12File?: string;
  p12Pwd?: string;
  provProfile?: string;
  monoVersion?: string;
  sdkBundle?: string;
  /**
   * Symlink of the SDK Bundle and Mono installation.
   * The build will use the associated Mono bundled with related Xamarin SDK. If both symlink and monoVersion or sdkBundle are passed, the symlink is taking precedence. If non-existing symlink is passed, the current stable Mono version will be configured for building.
   *
   */
  symlink?: string;
}

/** Build configuration for Android projects */
export interface PutContentSchemaToolsetsAndroid {
  /** Path to the Gradle wrapper script */
  gradleWrapperPath?: string;
  /** The Gradle module to build */
  module?: string;
  /** The Android build variant to build */
  buildVariant?: string;
  /** Whether to run unit tests during the build (default) */
  runTests?: boolean;
  /** Whether to run lint checks during the build (default) */
  runLint?: boolean;
  /** Whether it is the root module or not */
  isRoot?: boolean;
  /** Whether to apply automatic signing or not */
  automaticSigning?: boolean;
  /** The password of the keystore */
  keystorePassword?: string;
  /** The key alias */
  keyAlias?: string;
  /** The key password */
  keyPassword?: string;
  /** The name of the keystore file */
  keystoreFilename?: string;
  /** The keystore encoded value */
  keystoreEncoded?: string;
}

/** The versioning configuration for artifacts built for this branch */
export interface PutContentSchemaArtifactVersioning {
  buildNumberFormat?: PutContentSchemaArtifactVersioningBuildNumberFormat;
}

/** The branch build core properties */
export interface Paths1P4PqlhV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof0Additionalproperties {
  branch?: Put200ApplicationJsonAllOfAdditionalPropertiesBranch;
  enabled?: boolean;
}

export interface Put200ApplicationJsonAllOfAdditionalPropertiesBranch {
  /** The branch name */
  name: string;
  commit: Put200ApplicationJsonAllOfAdditionalPropertiesBranchCommit;
}

export interface Put200ApplicationJsonAllOfAdditionalPropertiesBranchCommit {
  /** The commit SHA */
  sha?: string;
  /** The URL to the commit */
  url?: string;
}

/** The branch build configuration */
export interface PathsXp75IdV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof0 {
  /** Describes unknown properties. The value of an unknown property can be of "any" type. */
  [property: string]: any;
  trigger?: Put200ApplicationJsonAllOfProperties;
  testsEnabled?: boolean;
  badgeIsEnabled?: boolean;
  signed?: boolean;
  /** A configured branch name to clone from. If provided, all other parameters will be ignored. Only supported in POST requests. */
  cloneFromBranch?: string;
  /** The branch build configuration for each toolset */
  toolsets?: Paths17X9I1IV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsets;
  /** The versioning configuration for artifacts built for this branch */
  artifactVersioning?: Paths1Usk3QhV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof0PropertiesArtifactversioning;
}

/** The branch build configuration for each toolset */
export interface Paths17X9I1IV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsets {
  /** Build configuration when Xcode is part of the build steps */
  xcode?: Put200ApplicationJsonAllOfPropertiesProperties;
  /** Build configuration when React Native, or other JavaScript tech, is part of the build steps */
  javascript?: PathsR6UalpV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesJavascript;
  /** Build configuration for Xamarin projects */
  xamarin?: Paths1Mkeg5LV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesXamarin;
  /** Build configuration for Android projects */
  android?: Paths1Dtki2QV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesAndroid;
}

/** Build configuration when Xcode is part of the build steps */
export interface Put200ApplicationJsonAllOfPropertiesProperties {
  /** Xcode project/workspace path */
  projectOrWorkspacePath?: string;
  /** Path to CococaPods file, if present */
  podfilePath?: string;
  /** Path to Carthage file, if present */
  cartfilePath?: string;
  provisioningProfileEncoded?: string;
  certificateEncoded?: string;
  provisioningProfileFileId?: string;
  certificateFileId?: string;
  provisioningProfileUploadId?: string;
  appExtensionProvisioningProfileFiles?: Put200ApplicationJsonAllOfPropertiesItemsItem[];
  certificateUploadId?: string;
  certificatePassword?: string;
  scheme?: string;
  /** Xcode version used to build. Available versions can be found in "/xcode_versions" API. Default is latest stable version, at the time when the configuration is set. */
  xcodeVersion?: string;
  provisioningProfileFilename?: string;
  certificateFilename?: string;
  teamId?: string;
  automaticSigning?: boolean;
  /** The selected pbxproject hash to the repositroy */
  xcodeProjectSha?: string;
  /** The build configuration of the target to archive */
  archiveConfiguration?: string;
  /** The target id of the selected scheme to archive */
  targetToArchive?: string;
  /**
   * Setting this to true forces the build to use Xcode legacy build system. Otherwise, the setting from workspace settings is used.
   * By default new build system is used if workspace setting is not committed to the repository. Only used for iOS React Native app, with Xcode 10.
   *
   */
  forceLegacyBuildSystem?: boolean;
}

/** Provisioning profile fetch and store information */
export interface Put200ApplicationJsonAllOfPropertiesItemsItem {
  /** Name of uploaded provisioning profile */
  fileName?: string;
  /** File id from secure file storage */
  fileId?: string;
  /** Upload id to App Center File Upload Store */
  uploadId?: string;
  /** Target the provisioning profile is used to sign */
  targetBundleIdentifier?: string;
}

/** Build configuration when React Native, or other JavaScript tech, is part of the build steps */
export interface PathsR6UalpV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesJavascript {
  /** Path to package.json file for the main project, e.g. "package.json" or "myapp/package.json" */
  packageJsonPath?: string;
  /** Whether to run Jest unit tests, via npm test, during the build */
  runTests?: boolean;
  /** Version of React Native from package.json files */
  reactNativeVersion?: string;
}

/** Build configuration for Xamarin projects */
export interface Paths1Mkeg5LV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesXamarin {
  slnPath?: string;
  isSimBuild?: boolean;
  args?: string;
  configuration?: string;
  p12File?: string;
  p12Pwd?: string;
  provProfile?: string;
  monoVersion?: string;
  sdkBundle?: string;
  /**
   * Symlink of the SDK Bundle and Mono installation.
   * The build will use the associated Mono bundled with related Xamarin SDK. If both symlink and monoVersion or sdkBundle are passed, the symlink is taking precedence. If non-existing symlink is passed, the current stable Mono version will be configured for building.
   *
   */
  symlink?: string;
}

/** Build configuration for Android projects */
export interface Paths1Dtki2QV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesAndroid {
  /** Path to the Gradle wrapper script */
  gradleWrapperPath?: string;
  /** The Gradle module to build */
  module?: string;
  /** The Android build variant to build */
  buildVariant?: string;
  /** Whether to run unit tests during the build (default) */
  runTests?: boolean;
  /** Whether to run lint checks during the build (default) */
  runLint?: boolean;
  /** Whether it is the root module or not */
  isRoot?: boolean;
  /** Whether to apply automatic signing or not */
  automaticSigning?: boolean;
  /** The password of the keystore */
  keystorePassword?: string;
  /** The key alias */
  keyAlias?: string;
  /** The key password */
  keyPassword?: string;
  /** The name of the keystore file */
  keystoreFilename?: string;
  /** The keystore encoded value */
  keystoreEncoded?: string;
}

/** The versioning configuration for artifacts built for this branch */
export interface Paths1Usk3QhV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof0PropertiesArtifactversioning {
  buildNumberFormat?: Enum496;
}

export interface Paths1Mp73R1V01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof1 {
  id: number;
}

export interface PathsQs07S5V01AppsOwnerNameAppNameBranchesBranchConfigDeleteResponses200ContentApplicationJsonSchema {
  message: string;
}

export interface PathsRyxelmV01AppsOwnerNameAppNameBranchesBranchBuildsGetResponses200ContentApplicationJsonSchemaItems {
  /** The build ID */
  id: number;
  /** The build number */
  buildNumber: string;
  /** The time the build was queued */
  queueTime: string;
  /** The time the build was started */
  startTime?: string;
  /** The time the build was finished */
  finishTime?: string;
  /** The time the build status was last changed */
  lastChangedDate?: string;
  /** The build status */
  status: string;
  /** The build result */
  result: string;
  /** The source branch name */
  sourceBranch: string;
  /** The source SHA */
  sourceVersion: string;
}

export interface Paths1Jgsne9V01AppsOwnerNameAppNameBranchesBranchBuildsPostRequestbodyContentApplicationJsonSchema {
  /** Version to build which represents the full Git commit reference */
  sourceVersion?: string;
  /** Run build in debug mode */
  debug?: boolean;
}

export interface PathsIgnnsjV01AppsOwnerNameAppNameBranchesBranchBuildsPostResponses200ContentApplicationJsonSchema {
  /** The build ID */
  id: number;
  /** The build number */
  buildNumber: string;
  /** The time the build was queued */
  queueTime: string;
  /** The time the build was started */
  startTime?: string;
  /** The time the build was finished */
  finishTime?: string;
  /** The time the build status was last changed */
  lastChangedDate?: string;
  /** The build status */
  status: string;
  /** The build result */
  result: string;
  /** The source branch name */
  sourceBranch: string;
  /** The source SHA */
  sourceVersion: string;
}

/** The branch build core properties */
export interface PathsHjd5D0V01AppsOwnerNameAppNameBranchesGetResponses200ContentApplicationJsonSchemaItemsAdditionalproperties {
  branch?: Get200ApplicationJsonItemsProperties;
  enabled?: boolean;
}

export interface Get200ApplicationJsonItemsProperties {
  /** The branch name */
  name: string;
  commit: PathsVvtvpgV01AppsOwnerNameAppNameBranchesGetResponses200ContentApplicationJsonSchemaItemsAdditionalpropertiesPropertiesBranchPropertiesCommit;
}

export interface PathsVvtvpgV01AppsOwnerNameAppNameBranchesGetResponses200ContentApplicationJsonSchemaItemsAdditionalpropertiesPropertiesBranchPropertiesCommit {
  /** The commit SHA */
  sha?: string;
  /** The URL to the commit */
  url?: string;
}

/** The branch build status */
export interface Paths5Mg2CrV01AppsOwnerNameAppNameBranchesGetResponses200ContentApplicationJsonSchemaItems {
  /** Describes unknown properties. The value of an unknown property can be of "any" type. */
  [property: string]: any;
  configured: boolean;
  lastBuild?: GetResponses200ContentApplicationJsonSchemaItemLastBuild;
}

export interface GetResponses200ContentApplicationJsonSchemaItemLastBuild {
  /** The build ID */
  id: number;
  /** The build number */
  buildNumber: string;
  /** The time the build was queued */
  queueTime: string;
  /** The time the build was started */
  startTime?: string;
  /** The time the build was finished */
  finishTime?: string;
  /** The time the build status was last changed */
  lastChangedDate?: string;
  /** The build status */
  status: string;
  /** The build result */
  result: string;
  /** The source branch name */
  sourceBranch: string;
  /** The source SHA */
  sourceVersion: string;
}

export interface Paths1WpnegrV01AppsOwnerNameAppNameBranchesGetResponsesDefaultContentApplicationJsonSchema {
  id: string;
  code: string;
  message: string;
}

/** Aggregated Billing Information for a user or an organization */
export interface Paths5MjbktV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchema {
  /** Version of the Billing Information schema */
  version?: string;
  /** The ISO 8601 datetime of last modification */
  timestamp?: string;
  /** ID of the user or organization */
  id?: string;
  /** Billing Plans section in the Billing Information */
  billingPlans?: PathsPm671NV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplans;
  /** Usage section in the Billing Information */
  usage?: PathsFq58EoV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsage;
  /** Unique identifier for the Azure subscription used for billing */
  azureSubscriptionId?: string;
  /** State of the Azure subscription used for billing */
  azureSubscriptionState?: Enum503;
}

/** Billing Plans section in the Billing Information */
export interface PathsPm671NV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplans {
  /** Billing Plans for a single service */
  buildService?: PathsOppzg8V01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservice;
  /** Billing Plans for a single service */
  testService?: Paths1Eo89OdV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservice;
}

/** Billing Plans for a single service */
export interface PathsOppzg8V01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservice {
  /** Can customer select trial plan for that service (if it exists)? */
  canSelectTrialPlan?: boolean;
  /** Expiration time of the last selected trial plan. Will be null if trial plan was not used. */
  lastTrialPlanExpirationTime?: string;
  /** Billing plans for a given period */
  currentBillingPeriod?: Paths6Ga1NlV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiod;
}

/** Billing plans for a given period */
export interface Paths6Ga1NlV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiod {
  /** Inclusive start of the period */
  startTime?: string;
  /** Exclusive end of the period. */
  endTime?: string;
  /** Selection of a billing plan */
  byAccount?: Paths1W6Sn9XV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiodPropertiesByaccount;
}

/** Selection of a billing plan */
export interface Paths1W6Sn9XV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiodPropertiesByaccount {
  /** Number of instances of the billing plan. */
  count?: number;
  /** Billing Plan */
  plan?: PathsVcxu3V01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiodPropertiesByaccountPropertiesPlan;
}

/** Billing Plan */
export interface PathsVcxu3V01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiodPropertiesByaccountPropertiesPlan {
  /** The Billing Plan ID */
  id?: string;
  /** Version of the Billing Plan schema */
  version?: string;
  /** Price of the Billing Plan */
  price?: number;
  /** Service that receives payments for this billing plan. */
  paymentSource?: Enum499;
  /** Name of the service that the plan applies to. */
  service?: Enum500;
  /** A collection of named numeric values */
  limits?: { [propertyName: string]: number };
  /** Collection of attribute values. */
  attributes?: { [propertyName: string]: Record<string, unknown> };
  parentId?: string;
}

/** Billing Plans for a single service */
export interface Paths1Eo89OdV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservice {
  /** Can customer select trial plan for that service (if it exists)? */
  canSelectTrialPlan?: boolean;
  /** Expiration time of the last selected trial plan. Will be null if trial plan was not used. */
  lastTrialPlanExpirationTime?: string;
  /** Billing plans for a given period */
  currentBillingPeriod?: PathsA5554JV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiod;
}

/** Billing plans for a given period */
export interface PathsA5554JV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiod {
  /** Inclusive start of the period */
  startTime?: string;
  /** Exclusive end of the period. */
  endTime?: string;
  /** Selection of a billing plan */
  byAccount?: Paths1T0DpzdV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiodPropertiesByaccount;
}

/** Selection of a billing plan */
export interface Paths1T0DpzdV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiodPropertiesByaccount {
  /** Number of instances of the billing plan. */
  count?: number;
  /** Billing Plan */
  plan?: Paths1KducdkV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiodPropertiesByaccountPropertiesPlan;
}

/** Billing Plan */
export interface Paths1KducdkV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiodPropertiesByaccountPropertiesPlan {
  /** The Billing Plan ID */
  id?: string;
  /** Version of the Billing Plan schema */
  version?: string;
  /** Price of the Billing Plan */
  price?: number;
  /** Service that receives payments for this billing plan. */
  paymentSource?: Enum501;
  /** Name of the service that the plan applies to. */
  service?: Enum502;
  /** A collection of named numeric values */
  limits?: { [propertyName: string]: number };
  /** Collection of attribute values. */
  attributes?: { [propertyName: string]: Record<string, unknown> };
  parentId?: string;
}

/** Usage section in the Billing Information */
export interface PathsFq58EoV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsage {
  /** Resource usage for a single Mobile Center service */
  buildService?: PathsWut5UaV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesBuildservice;
  /** Resource usage for a single Mobile Center service */
  testService?: Paths1Iyeh26V01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesTestservice;
}

/** Resource usage for a single Mobile Center service */
export interface PathsWut5UaV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesBuildservice {
  /** Usage for a single period */
  currentUsagePeriod?: Paths12YqdrpV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesBuildservicePropertiesCurrentusageperiod;
}

/** Usage for a single period */
export interface Paths12YqdrpV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesBuildservicePropertiesCurrentusageperiod {
  /** Inclusive start time of the usage period */
  startTime?: string;
  /** Exclusive end time of the usage period. */
  endTime?: string;
  /** A collection of named numeric values */
  byAccount?: { [propertyName: string]: number };
  /** A collection of  named numeric values grouped by app */
  byApp?: { [propertyName: string]: { [propertyName: string]: number } };
}

/** Resource usage for a single Mobile Center service */
export interface Paths1Iyeh26V01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesTestservice {
  /** Usage for a single period */
  currentUsagePeriod?: Paths4Ze5T4V01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesTestservicePropertiesCurrentusageperiod;
}

/** Usage for a single period */
export interface Paths4Ze5T4V01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesTestservicePropertiesCurrentusageperiod {
  /** Inclusive start time of the usage period */
  startTime?: string;
  /** Exclusive end time of the usage period. */
  endTime?: string;
  /** A collection of named numeric values */
  byAccount?: { [propertyName: string]: number };
  /** A collection of  named numeric values grouped by app */
  byApp?: { [propertyName: string]: { [propertyName: string]: number } };
}

/** Error */
export interface PathsN4OwfxV01AppsOwnerNameAppNameBillingAggregatedGetResponsesDefaultContentApplicationJsonSchema {
  error?: PathsC87Bf3V01AppsOwnerNameAppNameBillingAggregatedGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsC87Bf3V01AppsOwnerNameAppNameBillingAggregatedGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  /** The status code return by the API. It can be 400 or 403 or 500. */
  code?: Enum504;
  /** The reason for the request failed */
  message?: string;
}

export interface PathsG46OulV01AppsOwnerNameAppNameAzureSubscriptionsAzureSubscriptionIdDeleteResponsesDefaultContentApplicationJsonSchema {
  error: PathsJiwhtgV01AppsOwnerNameAppNameAzureSubscriptionsAzureSubscriptionIdDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsJiwhtgV01AppsOwnerNameAppNameAzureSubscriptionsAzureSubscriptionIdDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum505;
  message: string;
}

export interface PathsZl5LyeV01AppsOwnerNameAppNameAzureSubscriptionsGetResponses200ContentApplicationJsonSchemaItems {
  /** The azure subscription id */
  subscriptionId: string;
  /** The tenant id of the azure subscription belongs to */
  tenantId: string;
  /** The name of the azure subscription */
  subscriptionName: string;
  /** If the subscription is used for billing */
  isBilling?: boolean;
  /** If the subscription can be used for billing */
  isBillable?: boolean;
  /** If the subscription is internal Microsoft subscription */
  isMicrosoftInternal?: boolean;
}

export interface PathsYyfq7IV01AppsOwnerNameAppNameAzureSubscriptionsGetResponsesDefaultContentApplicationJsonSchema {
  error: PathsIhmu71V01AppsOwnerNameAppNameAzureSubscriptionsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsIhmu71V01AppsOwnerNameAppNameAzureSubscriptionsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum506;
  message: string;
}

export interface Paths11GzlnuV01AppsOwnerNameAppNameAzureSubscriptionsPostRequestbodyContentApplicationJsonSchema {
  /** The azure subscription id */
  subscriptionId: string;
}

export interface PathsIlp5CpV01AppsOwnerNameAppNameAzureSubscriptionsPostResponsesDefaultContentApplicationJsonSchema {
  error: PathsO22Rx6V01AppsOwnerNameAppNameAzureSubscriptionsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsO22Rx6V01AppsOwnerNameAppNameAzureSubscriptionsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum507;
  message: string;
}

export interface Paths1R8EjleV01AppsOwnerNameAppNameAvatarPostResponses200ContentApplicationJsonSchemaAllof0 {
  /** The unique ID (UUID) of the app */
  id: string;
  /** The description of the app */
  description?: string;
  /** The display name of the app */
  displayName: string;
  /** A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase */
  releaseType?: string;
  /** The string representation of the URL pointing to the app's icon */
  iconUrl?: string;
  /** The string representation of the source of the app's icon */
  iconSource?: string;
  /** The name of the app used in URLs */
  name: string;
  /** The OS the app will be running on */
  os: Enum508;
  /** The information about the app's owner */
  owner: Paths6Eac0FV01AppsOwnerNameAppNameAvatarPostResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner;
}

/** The information about the app's owner */
export interface Paths6Eac0FV01AppsOwnerNameAppNameAvatarPostResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner {
  /** The unique id (UUID) of the owner */
  id: string;
  /** The avatar URL of the owner */
  avatarUrl?: string;
  /** The owner's display name */
  displayName: string;
  /** The owner's email address */
  email?: string;
  /** The unique name that used to identify the owner */
  name: string;
  /** The owner type. Can either be 'org' or 'user' */
  type: Enum509;
}

export interface PathsTl8K7SV01AppsOwnerNameAppNameAvatarPostResponses200ContentApplicationJsonSchemaAllof1 {
  /** A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics */
  appSecret?: string;
  azureSubscription?: Paths730U6UV01AppsOwnerNameAppNameAvatarPostResponses200ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription;
  /** The platform of the app */
  platform?: Enum510;
  /** The creation origin of this app */
  origin?: Enum511;
  /** The created date of this app */
  createdAt?: string;
  /** The last updated date of this app */
  updatedAt?: string;
  /** The permissions of the calling user */
  memberPermissions?: Enum512[];
}

export interface Paths730U6UV01AppsOwnerNameAppNameAvatarPostResponses200ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription {
  /** The azure subscription id */
  subscriptionId: string;
  /** The tenant id of the azure subscription belongs to */
  tenantId: string;
  /** The name of the azure subscription */
  subscriptionName: string;
  /** If the subscription is used for billing */
  isBilling?: boolean;
  /** If the subscription can be used for billing */
  isBillable?: boolean;
  /** If the subscription is internal Microsoft subscription */
  isMicrosoftInternal?: boolean;
}

export interface Paths17Ufom9V01AppsOwnerNameAppNameAvatarPostResponsesDefaultContentApplicationJsonSchema {
  error: PathsVa0B8OV01AppsOwnerNameAppNameAvatarPostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsVa0B8OV01AppsOwnerNameAppNameAvatarPostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum513;
  message: string;
}

export interface Paths1D6EjcuV01AppsOwnerNameAppNameAvatarDeleteResponses200ContentApplicationJsonSchemaAllof0 {
  /** The unique ID (UUID) of the app */
  id: string;
  /** The description of the app */
  description?: string;
  /** The display name of the app */
  displayName: string;
  /** A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase */
  releaseType?: string;
  /** The string representation of the URL pointing to the app's icon */
  iconUrl?: string;
  /** The string representation of the source of the app's icon */
  iconSource?: string;
  /** The name of the app used in URLs */
  name: string;
  /** The OS the app will be running on */
  os: Enum514;
  /** The information about the app's owner */
  owner: PathsUoduhjV01AppsOwnerNameAppNameAvatarDeleteResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner;
}

/** The information about the app's owner */
export interface PathsUoduhjV01AppsOwnerNameAppNameAvatarDeleteResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner {
  /** The unique id (UUID) of the owner */
  id: string;
  /** The avatar URL of the owner */
  avatarUrl?: string;
  /** The owner's display name */
  displayName: string;
  /** The owner's email address */
  email?: string;
  /** The unique name that used to identify the owner */
  name: string;
  /** The owner type. Can either be 'org' or 'user' */
  type: Enum515;
}

export interface PathsJ1Qwc6V01AppsOwnerNameAppNameAvatarDeleteResponses200ContentApplicationJsonSchemaAllof1 {
  /** A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics */
  appSecret?: string;
  azureSubscription?: PathsSt41VbV01AppsOwnerNameAppNameAvatarDeleteResponses200ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription;
  /** The platform of the app */
  platform?: Enum516;
  /** The creation origin of this app */
  origin?: Enum517;
  /** The created date of this app */
  createdAt?: string;
  /** The last updated date of this app */
  updatedAt?: string;
  /** The permissions of the calling user */
  memberPermissions?: Delete200ApplicationJsonAllOfPropertiesItemsItem[];
}

export interface PathsSt41VbV01AppsOwnerNameAppNameAvatarDeleteResponses200ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription {
  /** The azure subscription id */
  subscriptionId: string;
  /** The tenant id of the azure subscription belongs to */
  tenantId: string;
  /** The name of the azure subscription */
  subscriptionName: string;
  /** If the subscription is used for billing */
  isBilling?: boolean;
  /** If the subscription can be used for billing */
  isBillable?: boolean;
  /** If the subscription is internal Microsoft subscription */
  isMicrosoftInternal?: boolean;
}

export interface PathsB7Jif8V01AppsOwnerNameAppNameAvatarDeleteResponsesDefaultContentApplicationJsonSchema {
  error: Paths1Jiykd7V01AppsOwnerNameAppNameAvatarDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Jiykd7V01AppsOwnerNameAppNameAvatarDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum519;
  message: string;
}

export interface Paths1458PiV01AppsOwnerNameAppNameAuthUsersGetResponses401ContentApplicationJsonSchema {
  error: Get401ApplicationJsonProperties;
}

export interface Get401ApplicationJsonProperties {
  code: Get401ApplicationJsonPropertiesProperties;
  message: string;
}

export interface Paths1Bjskc1V01AppsOwnerNameAppNameAuthUsersGetResponses500ContentApplicationJsonSchema {
  error: PathsO1Jj13V01AppsOwnerNameAppNameAuthUsersGetResponses500ContentApplicationJsonSchemaPropertiesError;
}

export interface PathsO1Jj13V01AppsOwnerNameAppNameAuthUsersGetResponses500ContentApplicationJsonSchemaPropertiesError {
  code: Enum521;
  message: string;
}

/** Apple Test Flight Groups Response Type */
export interface PathsZew5JgV01AppsOwnerNameAppNameAppleTestFlightGroupsGetResponses200ContentApplicationJsonSchemaItems {
  /** id of the group. */
  id?: string;
  /** provider id of the group. */
  providerId?: number;
  /** apple id of the group. */
  appleId?: number;
  /** name of the group. */
  name?: string;
}

export interface Paths11QoktgV01AppsOwnerNameAppNameAppleTestFlightGroupsGetResponsesDefaultContentApplicationJsonSchema {
  code: Enum522;
  message: string;
}

/** Apple Mapping Request Type */
export interface PathsH96V4UV01AppsOwnerNameAppNameAppleMappingGetResponses200ContentApplicationJsonSchema {
  /** ID of the apple application in Mobile Center */
  appId?: string;
  /** Id for the shared service connection. In case of Apple AppStore, this connection will be used to create and connect to the Apple AppStore in Mobile Center. */
  serviceConnectionId?: string;
  /** ID of the apple application in apple store */
  appleId?: string;
  /** ID of the Team associated with the app in apple store */
  teamIdentifier?: string;
}

export interface PathsU1IachV01AppsOwnerNameAppNameAppleMappingGetResponsesDefaultContentApplicationJsonSchema {
  code: Enum523;
  message: string;
}

export interface Paths1F11J7YV01AppsOwnerNameAppNameAppleMappingDeleteResponsesDefaultContentApplicationJsonSchema {
  code: Enum524;
  message: string;
}

/** Apple Mapping Request Type */
export interface Paths1B7RevxV01AppsOwnerNameAppNameAppleMappingPostRequestbodyContentApplicationJsonSchema {
  /** Id for the shared service connection. In case of Apple AppStore, this connection will be used to create and connect to the Apple AppStore in Mobile Center. */
  serviceConnectionId: string;
  /** ID of the apple application in apple store, takes precedence over bundle_identifier when both are provided */
  appleId?: string;
  /** Bundle Identifier of the apple package */
  bundleIdentifier?: string;
  /** ID of the Team associated with the app in apple store */
  teamIdentifier: string;
}

/** Apple Mapping Request Type */
export interface Paths1J6Tdl2V01AppsOwnerNameAppNameAppleMappingPostResponses201ContentApplicationJsonSchema {
  /** ID of the apple application in Mobile Center */
  appId?: string;
  /** Id for the shared service connection. In case of Apple AppStore, this connection will be used to create and connect to the Apple AppStore in Mobile Center. */
  serviceConnectionId?: string;
  /** ID of the apple application in apple store */
  appleId?: string;
  /** ID of the Team associated with the app in apple store */
  teamIdentifier?: string;
}

export interface PathsRxnoxxV01AppsOwnerNameAppNameAppleMappingPostResponsesDefaultContentApplicationJsonSchema {
  code: Enum525;
  message: string;
}

export interface Paths1NebezpV01AppsOwnerNameAppNameApiTokensApiTokenIdDeleteResponses400ContentApplicationJsonSchema {
  error: Delete400ApplicationJsonProperties;
}

export interface Delete400ApplicationJsonProperties {
  code: Delete400ApplicationJsonPropertiesProperties;
  message: string;
}

export interface Paths1X34P14V01AppsOwnerNameAppNameApiTokensApiTokenIdDeleteResponses401ContentApplicationJsonSchema {
  error: Delete401ApplicationJsonProperties;
}

export interface Delete401ApplicationJsonProperties {
  code: Delete401ApplicationJsonPropertiesProperties;
  message: string;
}

export interface PathsA1Vv93V01AppsOwnerNameAppNameApiTokensApiTokenIdDeleteResponses404ContentApplicationJsonSchema {
  error: PathsJzlh3AV01AppsOwnerNameAppNameApiTokensApiTokenIdDeleteResponses404ContentApplicationJsonSchemaPropertiesError;
}

export interface PathsJzlh3AV01AppsOwnerNameAppNameApiTokensApiTokenIdDeleteResponses404ContentApplicationJsonSchemaPropertiesError {
  code: Delete404ApplicationJsonProperties;
  message: string;
}

export interface PathsVpkwjrV01AppsOwnerNameAppNameApiTokensGetResponses200ContentApplicationJsonSchemaItems {
  /** The unique id (UUID) of the api token */
  id: string;
  /** The description of the token */
  description?: string;
  /** The scope for this token. */
  scope?: Get200ApplicationJsonItemsScopeItem[];
  /** The creation time */
  createdAt: string;
}

export interface Paths1P1Ao38V01AppsOwnerNameAppNameApiTokensGetResponses400ContentApplicationJsonSchema {
  error: PathsOkyae4V01AppsOwnerNameAppNameApiTokensGetResponses400ContentApplicationJsonSchemaPropertiesError;
}

export interface PathsOkyae4V01AppsOwnerNameAppNameApiTokensGetResponses400ContentApplicationJsonSchemaPropertiesError {
  code: Get400ApplicationJsonProperties;
  message: string;
}

export interface PathsJ0An0FV01AppsOwnerNameAppNameApiTokensGetResponses401ContentApplicationJsonSchema {
  error: PathsB6Lrm7V01AppsOwnerNameAppNameApiTokensGetResponses401ContentApplicationJsonSchemaPropertiesError;
}

export interface PathsB6Lrm7V01AppsOwnerNameAppNameApiTokensGetResponses401ContentApplicationJsonSchemaPropertiesError {
  code: Enum529;
  message: string;
}

export interface PathsUuian4V01AppsOwnerNameAppNameApiTokensPostRequestbodyContentApplicationJsonSchema {
  /** The description of the token */
  description?: string;
  /** The scope for this token. */
  scope?: PostContentSchemaScopeItem[];
}

export interface Paths1FrjyzkV01AppsOwnerNameAppNameApiTokensPostResponses201ContentApplicationJsonSchema {
  /** The unique id (UUID) of the api token */
  id: string;
  /** The api token generated will not be accessible again */
  apiToken: string;
  /** The description of the token */
  description?: string;
  /** The scope for this token. */
  scope?: Enum531[];
  /** The creation time */
  createdAt: string;
}

export interface Paths8Qg468V01AppsOwnerNameAppNameApiTokensPostResponses400ContentApplicationJsonSchema {
  error: Paths1Es2B28V01AppsOwnerNameAppNameApiTokensPostResponses400ContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Es2B28V01AppsOwnerNameAppNameApiTokensPostResponses400ContentApplicationJsonSchemaPropertiesError {
  code: Enum532;
  message: string;
}

export interface Paths1ElzjgvV01AppsOwnerNameAppNameApiTokensPostResponses401ContentApplicationJsonSchema {
  error: Post401ApplicationJsonProperties;
}

export interface Post401ApplicationJsonProperties {
  code: Post401ApplicationJsonPropertiesProperties;
  message: string;
}

export interface Paths1Lu7Qn2V01AppsOwnerNameAppNameAnalyticsVersionsGetResponses200ContentApplicationJsonSchema {
  /** List of version count. */
  versions?: Paths1W577QdV01AppsOwnerNameAppNameAnalyticsVersionsGetResponses200ContentApplicationJsonSchemaPropertiesVersionsItems[];
  /** The total count of versions. */
  total?: number;
}

export interface Paths1W577QdV01AppsOwnerNameAppNameAnalyticsVersionsGetResponses200ContentApplicationJsonSchemaPropertiesVersionsItems {
  /** Version. */
  version?: string;
  /** Version count. */
  count?: number;
  /** The count of previous time range of the version. */
  previousCount?: number;
}

/** Error */
export interface Paths1M0Rs3DV01AppsOwnerNameAppNameAnalyticsVersionsGetResponsesDefaultContentApplicationJsonSchema {
  error?: PathsV9MsjbV01AppsOwnerNameAppNameAnalyticsVersionsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsV9MsjbV01AppsOwnerNameAppNameAnalyticsVersionsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  /** The status code return by the API. It can be 400 or 403 or 500. */
  code?: Enum534;
  /** The reason for the request failed. */
  message?: string;
}

export interface PathsG2CzwV01AppsOwnerNameAppNameAnalyticsSessionsPerDeviceGetResponses200ContentApplicationJsonSchema {
  /** Average seesion per user. */
  averageSessionsPerUser?: number;
  /** Previous average session per user. */
  previousAverageSessionsPerUser?: number;
  /** Total session per device count. */
  totalCount?: number;
  /** Previous total count. */
  previousTotalCount?: number;
  /** The session count for each interval per device. */
  sessionsPerUser?: Paths1S8KsifV01AppsOwnerNameAppNameAnalyticsSessionsPerDeviceGetResponses200ContentApplicationJsonSchemaPropertiesSessionsPerUserItems[];
}

export interface Paths1S8KsifV01AppsOwnerNameAppNameAnalyticsSessionsPerDeviceGetResponses200ContentApplicationJsonSchemaPropertiesSessionsPerUserItems {
  /** The ISO 8601 datetime. */
  datetime?: string;
  /** Count. */
  count?: number;
}

/** Error */
export interface PathsXdv8KgV01AppsOwnerNameAppNameAnalyticsSessionsPerDeviceGetResponsesDefaultContentApplicationJsonSchema {
  error?: PathsSp9O4RV01AppsOwnerNameAppNameAnalyticsSessionsPerDeviceGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsSp9O4RV01AppsOwnerNameAppNameAnalyticsSessionsPerDeviceGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  /** The status code return by the API. It can be 400 or 403 or 500. */
  code?: Enum535;
  /** The reason for the request failed. */
  message?: string;
}

export interface PathsLck9IlV01AppsOwnerNameAppNameAnalyticsSessionDurationsDistributionGetResponses200ContentApplicationJsonSchema {
  /** The count of sessions in these buckets. */
  distribution?: Paths10FblyaV01AppsOwnerNameAppNameAnalyticsSessionDurationsDistributionGetResponses200ContentApplicationJsonSchemaPropertiesDistributionItems[];
  /** The previous average session duration for previous time range. */
  previousAverageDuration?: string;
  /** The average session duration for current time range. */
  averageDuration?: string;
}

export interface Paths10FblyaV01AppsOwnerNameAppNameAnalyticsSessionDurationsDistributionGetResponses200ContentApplicationJsonSchemaPropertiesDistributionItems {
  /** The bucket name. */
  bucket?: string;
  /** The count of sessions in current bucket. */
  count?: number;
}

/** Error */
export interface PathsE9HufsV01AppsOwnerNameAppNameAnalyticsSessionDurationsDistributionGetResponsesDefaultContentApplicationJsonSchema {
  error?: Paths1Sic7B6V01AppsOwnerNameAppNameAnalyticsSessionDurationsDistributionGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Sic7B6V01AppsOwnerNameAppNameAnalyticsSessionDurationsDistributionGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  /** The status code return by the API. It can be 400 or 403 or 500. */
  code?: Enum536;
  /** The reason for the request failed. */
  message?: string;
}

export interface Paths1Exxd1EV01AppsOwnerNameAppNameAnalyticsSessionCountsGetResponses200ContentApplicationJsonSchemaItems {
  /** The ISO 8601 datetime. */
  datetime?: string;
  /** Count of the object. */
  count?: number;
}

export interface PathsOfz5BuV01AppsOwnerNameAppNameAnalyticsSessionCountsGetResponsesDefaultContentApplicationJsonSchema {
  error: PathsEzijgzV01AppsOwnerNameAppNameAnalyticsSessionCountsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsEzijgzV01AppsOwnerNameAppNameAnalyticsSessionCountsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum537;
  message: string;
}

/** Places and count during the time range in descending order. */
export interface PathsRxbv8DV01AppsOwnerNameAppNameAnalyticsPlacesGetResponses200ContentApplicationJsonSchema {
  total?: number;
  places?: PathsBh4LpxV01AppsOwnerNameAppNameAnalyticsPlacesGetResponses200ContentApplicationJsonSchemaPropertiesPlacesItems[];
}

/** The place code and the count. */
export interface PathsBh4LpxV01AppsOwnerNameAppNameAnalyticsPlacesGetResponses200ContentApplicationJsonSchemaPropertiesPlacesItems {
  /** The place code. */
  code?: string;
  /** The count of the this place. */
  count?: number;
  /** The count of previous time range of the place. */
  previousCount?: number;
}

/** Error */
export interface Paths1B7RutuV01AppsOwnerNameAppNameAnalyticsPlacesGetResponsesDefaultContentApplicationJsonSchema {
  error?: PathsJvtbqiV01AppsOwnerNameAppNameAnalyticsPlacesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsJvtbqiV01AppsOwnerNameAppNameAnalyticsPlacesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  /** The status code return by the API. It can be 400 or 403 or 500. */
  code?: Enum538;
  /** The reason for the request failed. */
  message?: string;
}

export interface Paths19DmkkdV01AppsOwnerNameAppNameAnalyticsOsesGetResponses200ContentApplicationJsonSchema {
  total?: number;
  oses?: Paths1Fot2SyV01AppsOwnerNameAppNameAnalyticsOsesGetResponses200ContentApplicationJsonSchemaPropertiesOsesItems[];
}

export interface Paths1Fot2SyV01AppsOwnerNameAppNameAnalyticsOsesGetResponses200ContentApplicationJsonSchemaPropertiesOsesItems {
  /** OS name. */
  osName?: string;
  /** Count current of OS. */
  count?: number;
  /** Count of previous OS. */
  previousCount?: number;
}

/** Error */
export interface Paths1G1UvgvV01AppsOwnerNameAppNameAnalyticsOsesGetResponsesDefaultContentApplicationJsonSchema {
  error?: Paths1Vfw1VhV01AppsOwnerNameAppNameAnalyticsOsesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Vfw1VhV01AppsOwnerNameAppNameAnalyticsOsesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  /** The status code return by the API. It can be 400 or 403 or 500. */
  code?: Enum539;
  /** The reason for the request failed. */
  message?: string;
}

export interface Paths814LkhV01AppsOwnerNameAppNameAnalyticsModelsGetResponses200ContentApplicationJsonSchema {
  total?: number;
  models?: Paths1VtqjxlV01AppsOwnerNameAppNameAnalyticsModelsGetResponses200ContentApplicationJsonSchemaPropertiesModelsItems[];
}

export interface Paths1VtqjxlV01AppsOwnerNameAppNameAnalyticsModelsGetResponses200ContentApplicationJsonSchemaPropertiesModelsItems {
  /** Model's name. */
  modelName?: string;
  /** Count current of model. */
  count?: number;
  /** Count of previous model. */
  previousCount?: number;
}

/** Error */
export interface PathsGaffajV01AppsOwnerNameAppNameAnalyticsModelsGetResponsesDefaultContentApplicationJsonSchema {
  error?: Paths1H2Ze8FV01AppsOwnerNameAppNameAnalyticsModelsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1H2Ze8FV01AppsOwnerNameAppNameAnalyticsModelsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  /** The status code return by the API. It can be 400 or 403 or 500. */
  code?: Enum540;
  /** The reason for the request failed. */
  message?: string;
}

export interface PathsW9Dr0CV01AppsOwnerNameAppNameAnalyticsLogFlowGetResponses200ContentApplicationJsonSchema {
  /** indicates if the number of available logs are more than the max allowed return limit(100). */
  exceededMaxLimit?: boolean;
  /** the timestamp of the last log received. This value can be used as the start time parameter in the consecutive API call. */
  lastReceivedLogTimestamp?: Date;
  /** the list of logs */
  logs: Paths16LtczwV01AppsOwnerNameAppNameAnalyticsLogFlowGetResponses200ContentApplicationJsonSchemaPropertiesLogsItems[];
}

export interface Paths16LtczwV01AppsOwnerNameAppNameAnalyticsLogFlowGetResponses200ContentApplicationJsonSchemaPropertiesLogsItems {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "Paths16LtczwV01AppsOwnerNameAppNameAnalyticsLogFlowGetResponses200ContentApplicationJsonSchemaPropertiesLogsItems";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: PathsAsxc3TV01AppsOwnerNameAppNameAnalyticsLogFlowGetResponses200ContentApplicationJsonSchemaPropertiesLogsItemsPropertiesDevice;
}

/** Device characteristics. */
export interface PathsAsxc3TV01AppsOwnerNameAppNameAnalyticsLogFlowGetResponses200ContentApplicationJsonSchemaPropertiesLogsItemsPropertiesDevice {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface PathsYucxmuV01AppsOwnerNameAppNameAnalyticsLogFlowGetResponsesDefaultContentApplicationJsonSchema {
  error: PathsAlnd2FV01AppsOwnerNameAppNameAnalyticsLogFlowGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsAlnd2FV01AppsOwnerNameAppNameAnalyticsLogFlowGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum542;
  message: string;
}

export interface PathsD2NxbnV01AppsOwnerNameAppNameAnalyticsLanguagesGetResponses200ContentApplicationJsonSchema {
  total?: number;
  languages?: PathsM074LcV01AppsOwnerNameAppNameAnalyticsLanguagesGetResponses200ContentApplicationJsonSchemaPropertiesLanguagesItems[];
}

export interface PathsM074LcV01AppsOwnerNameAppNameAnalyticsLanguagesGetResponses200ContentApplicationJsonSchemaPropertiesLanguagesItems {
  /** Language's name. */
  languageName?: string;
  /** Count current of language. */
  count?: number;
  /** Count of previous lanugage. */
  previousCount?: number;
}

/** Error */
export interface Paths1MghrhbV01AppsOwnerNameAppNameAnalyticsLanguagesGetResponsesDefaultContentApplicationJsonSchema {
  error?: Paths197Pz78V01AppsOwnerNameAppNameAnalyticsLanguagesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths197Pz78V01AppsOwnerNameAppNameAnalyticsLanguagesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  /** The status code return by the API. It can be 400 or 403 or 500. */
  code?: Enum543;
  /** The reason for the request failed. */
  message?: string;
}

export interface Paths14I7I2XV01AppsOwnerNameAppNameAnalyticsGenericLogFlowGetResponses200ContentApplicationJsonSchema {
  /** indicates if the number of available logs are more than the max allowed return limit(100). */
  exceededMaxLimit?: boolean;
  /** the timestamp of the last log received. This value can be used as the start time parameter in the consecutive API call. */
  lastReceivedLogTimestamp?: Date;
  /** the list of logs */
  logs: Paths16H6A62V01AppsOwnerNameAppNameAnalyticsGenericLogFlowGetResponses200ContentApplicationJsonSchemaPropertiesLogsItems[];
}

/** Generic log. */
export interface Paths16H6A62V01AppsOwnerNameAppNameAnalyticsGenericLogFlowGetResponses200ContentApplicationJsonSchemaPropertiesLogsItems {
  /**
   * Log type.
   *
   */
  type: Enum544;
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /**
   * Session ID.
   *
   */
  sessionId?: string;
  /**
   * Event ID.
   *
   */
  eventId?: string;
  /**
   * Event name.
   *
   */
  eventName?: string;
  /**
   * Message ID.
   *
   */
  messageId?: string;
  /**
   * event specific properties.
   *
   */
  properties?: { [propertyName: string]: string };
  /** Device characteristics. */
  device: PathsP8AffzV01AppsOwnerNameAppNameAnalyticsGenericLogFlowGetResponses200ContentApplicationJsonSchemaPropertiesLogsItemsPropertiesDevice;
  /**
   * Auth service provider.
   *
   */
  authProvider?: string;
  /**
   * Account ID of the authenticated user.
   *
   */
  accountId?: string;
}

/** Device characteristics. */
export interface PathsP8AffzV01AppsOwnerNameAppNameAnalyticsGenericLogFlowGetResponses200ContentApplicationJsonSchemaPropertiesLogsItemsPropertiesDevice {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface Paths1McyotlV01AppsOwnerNameAppNameAnalyticsGenericLogFlowGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths1LsxazwV01AppsOwnerNameAppNameAnalyticsGenericLogFlowGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1LsxazwV01AppsOwnerNameAppNameAnalyticsGenericLogFlowGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum545;
  message: string;
}

/** Event property value counts during the time range in descending order. */
export interface PathsC87RxV01AppsOwnerNameAppNameAnalyticsEventsEventNamePropertiesEventPropertyNameCountsGetResponses200ContentApplicationJsonSchema {
  /** The total property value counts. */
  total?: number;
  /** The event property values. */
  values?: PathsLsfzhjV01AppsOwnerNameAppNameAnalyticsEventsEventNamePropertiesEventPropertyNameCountsGetResponses200ContentApplicationJsonSchemaPropertiesValuesItems[];
}

/** An event property value with counts. */
export interface PathsLsfzhjV01AppsOwnerNameAppNameAnalyticsEventsEventNamePropertiesEventPropertyNameCountsGetResponses200ContentApplicationJsonSchemaPropertiesValuesItems {
  /** The event property value name. */
  name?: string;
  /** The count of the the event property value. */
  count?: number;
  /** The count of previous time range of the event property value. */
  previousCount?: number;
}

/** Error */
export interface Paths10Zy7X0V01AppsOwnerNameAppNameAnalyticsEventsEventNamePropertiesEventPropertyNameCountsGetResponsesDefaultContentApplicationJsonSchema {
  error?: Paths1WmvqqqV01AppsOwnerNameAppNameAnalyticsEventsEventNamePropertiesEventPropertyNameCountsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1WmvqqqV01AppsOwnerNameAppNameAnalyticsEventsEventNamePropertiesEventPropertyNameCountsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  /** The status code return by the API. It can be 400 or 403 or 500. */
  code?: Enum546;
  /** The reason for the request failed. */
  message?: string;
}

/** Event properties during the time range. */
export interface PathsU48L8WV01AppsOwnerNameAppNameAnalyticsEventsEventNamePropertiesGetResponses200ContentApplicationJsonSchema {
  eventProperties?: string[];
}

/** Error */
export interface PathsAk50KdV01AppsOwnerNameAppNameAnalyticsEventsEventNamePropertiesGetResponsesDefaultContentApplicationJsonSchema {
  error?: PathsE27Sx5V01AppsOwnerNameAppNameAnalyticsEventsEventNamePropertiesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsE27Sx5V01AppsOwnerNameAppNameAnalyticsEventsEventNamePropertiesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  /** The status code return by the API. It can be 400 or 403 or 500. */
  code?: Enum547;
  /** The reason for the request failed. */
  message?: string;
}

export interface PathsTigd7TV01AppsOwnerNameAppNameAnalyticsEventsEventNameEventCountGetResponses200ContentApplicationJsonSchema {
  totalCount?: number;
  previousTotalCount?: number;
  count?: Paths2Ok3SyV01AppsOwnerNameAppNameAnalyticsEventsEventNameEventCountGetResponses200ContentApplicationJsonSchemaPropertiesCountItems[];
}

export interface Paths2Ok3SyV01AppsOwnerNameAppNameAnalyticsEventsEventNameEventCountGetResponses200ContentApplicationJsonSchemaPropertiesCountItems {
  /** The ISO 8601 datetime. */
  datetime?: string;
  /** Count of the object. */
  count?: number;
}

/** Error */
export interface PathsJjlrfvV01AppsOwnerNameAppNameAnalyticsEventsEventNameEventCountGetResponsesDefaultContentApplicationJsonSchema {
  error?: Paths675VrtV01AppsOwnerNameAppNameAnalyticsEventsEventNameEventCountGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths675VrtV01AppsOwnerNameAppNameAnalyticsEventsEventNameEventCountGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  /** The status code return by the API. It can be 400 or 403 or 500. */
  code?: Enum548;
  /** The reason for the request failed. */
  message?: string;
}

export interface PathsZz2O50V01AppsOwnerNameAppNameAnalyticsEventsEventNameDeviceCountGetResponses200ContentApplicationJsonSchema {
  totalDevices?: number;
  totalDevicesWithEvent?: number;
  previousTotalDevicesWithEvent?: number;
  devicesCount?: PathsQf9VuhV01AppsOwnerNameAppNameAnalyticsEventsEventNameDeviceCountGetResponses200ContentApplicationJsonSchemaPropertiesDevicesCountItems[];
}

export interface PathsQf9VuhV01AppsOwnerNameAppNameAnalyticsEventsEventNameDeviceCountGetResponses200ContentApplicationJsonSchemaPropertiesDevicesCountItems {
  /** The ISO 8601 datetime. */
  datetime?: string;
  /** Count of the object. */
  count?: number;
}

/** Error */
export interface PathsBei5L3V01AppsOwnerNameAppNameAnalyticsEventsEventNameDeviceCountGetResponsesDefaultContentApplicationJsonSchema {
  error?: Paths1Q53VhsV01AppsOwnerNameAppNameAnalyticsEventsEventNameDeviceCountGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Q53VhsV01AppsOwnerNameAppNameAnalyticsEventsEventNameDeviceCountGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  /** The status code return by the API. It can be 400 or 403 or 500. */
  code?: Enum549;
  /** The reason for the request failed. */
  message?: string;
}

export interface Paths1Ggxk2EV01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerSessionGetResponses200ContentApplicationJsonSchema {
  avgCountPerSession?: number;
  previousAvgCountPerSession?: number;
  countPerSession?: Paths33Ckd3V01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerSessionGetResponses200ContentApplicationJsonSchemaPropertiesCountPerSessionItems[];
}

export interface Paths33Ckd3V01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerSessionGetResponses200ContentApplicationJsonSchemaPropertiesCountPerSessionItems {
  /** The ISO 8601 datetime. */
  datetime?: string;
  /** Decimal count of the object. */
  count?: number;
}

/** Error */
export interface PathsE2Fo6FV01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerSessionGetResponsesDefaultContentApplicationJsonSchema {
  error?: PathsM2Qve7V01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerSessionGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsM2Qve7V01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerSessionGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  /** The status code return by the API. It can be 400 or 403 or 500. */
  code?: Enum550;
  /** The reason for the request failed. */
  message?: string;
}

export interface Paths1Eiee2V01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerDeviceGetResponses200ContentApplicationJsonSchema {
  avgCountPerDevice?: number;
  previousAvgCountPerDevice?: number;
  countPerDevice?: Paths1Xb3I0PV01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerDeviceGetResponses200ContentApplicationJsonSchemaPropertiesCountPerDeviceItems[];
}

export interface Paths1Xb3I0PV01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerDeviceGetResponses200ContentApplicationJsonSchemaPropertiesCountPerDeviceItems {
  /** The ISO 8601 datetime. */
  datetime?: string;
  /** Decimal count of the object. */
  count?: number;
}

/** Error */
export interface Paths1Z0SaeV01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerDeviceGetResponsesDefaultContentApplicationJsonSchema {
  error?: PathsDzmih4V01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerDeviceGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsDzmih4V01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerDeviceGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  /** The status code return by the API. It can be 400 or 403 or 500. */
  code?: Enum551;
  /** The reason for the request failed. */
  message?: string;
}

/** Error */
export interface Paths1Al4Sp3V01AppsOwnerNameAppNameAnalyticsEventsEventNameDeleteResponsesDefaultContentApplicationJsonSchema {
  error?: PathsX5R6DfV01AppsOwnerNameAppNameAnalyticsEventsEventNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsX5R6DfV01AppsOwnerNameAppNameAnalyticsEventsEventNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  /** The status code return by the API. It can be 400 or 403 or 500. */
  code?: Enum552;
  /** The reason for the request failed. */
  message?: string;
}

export interface PathsDtblk4V01AppsOwnerNameAppNameAnalyticsEventsGetResponses200ContentApplicationJsonSchema {
  events?: PathsM70QdxV01AppsOwnerNameAppNameAnalyticsEventsGetResponses200ContentApplicationJsonSchemaPropertiesEventsItems[];
  /** The total count of events. */
  total?: number;
  /** The active device over this period. */
  totalDevices?: number;
}

export interface PathsM70QdxV01AppsOwnerNameAppNameAnalyticsEventsGetResponses200ContentApplicationJsonSchemaPropertiesEventsItems {
  id?: string;
  name?: string;
  deviceCount?: number;
  /** The device count of previous time range of the event. */
  previousDeviceCount?: number;
  count?: number;
  /** The event count of previous time range of the event. */
  previousCount?: number;
  countPerDevice?: number;
  countPerSession?: number;
}

/** Error */
export interface Paths1L7Des7V01AppsOwnerNameAppNameAnalyticsEventsGetResponsesDefaultContentApplicationJsonSchema {
  error?: Paths1Jpj1WtV01AppsOwnerNameAppNameAnalyticsEventsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Jpj1WtV01AppsOwnerNameAppNameAnalyticsEventsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  /** The status code return by the API. It can be 400 or 403 or 500. */
  code?: Enum554;
  /** The reason for the request failed. */
  message?: string;
}

/** Error */
export interface PathsH4Oq3ZV01AppsOwnerNameAppNameAnalyticsEventLogsEventNameDeleteResponsesDefaultContentApplicationJsonSchema {
  error?: Paths1UwhkciV01AppsOwnerNameAppNameAnalyticsEventLogsEventNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1UwhkciV01AppsOwnerNameAppNameAnalyticsEventLogsEventNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  /** The status code return by the API. It can be 400 or 403 or 500. */
  code?: Enum555;
  /** The reason for the request failed. */
  message?: string;
}

export interface Paths1Pzxl78V01AppsOwnerNameAppNameAnalyticsDistributionReleaseCountsPostRequestbodyContentApplicationJsonSchema {
  releases: PostContentSchemaReleasesItem[];
}

export interface Paths1D756ChV01AppsOwnerNameAppNameAnalyticsDistributionReleaseCountsPostRequestbodyContentApplicationJsonSchemaPropertiesReleasesItemsAllof0 {
  /**
   * Release Id.
   *
   */
  release: string;
}

export interface Paths1Vmnk7OV01AppsOwnerNameAppNameAnalyticsDistributionReleaseCountsPostResponses200ContentApplicationJsonSchema {
  total?: number;
  counts: Paths7Pd7IeV01AppsOwnerNameAppNameAnalyticsDistributionReleaseCountsPostResponses200ContentApplicationJsonSchemaPropertiesCountsItems[];
}

export interface Paths7Pd7IeV01AppsOwnerNameAppNameAnalyticsDistributionReleaseCountsPostResponses200ContentApplicationJsonSchemaPropertiesCountsItems {
  releaseId: string;
  /**
   * Distribution group queried.
   *
   */
  distributionGroup?: string;
  /**
   * Count of unique downloads against user id.
   *
   */
  uniqueCount: number;
  /**
   * Total count of downloads.
   *
   */
  totalCount: number;
}

export interface Paths12681XzV01AppsOwnerNameAppNameAnalyticsDistributionReleaseCountsPostResponsesDefaultContentApplicationJsonSchema {
  error: Paths4Bfa3V01AppsOwnerNameAppNameAnalyticsDistributionReleaseCountsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths4Bfa3V01AppsOwnerNameAppNameAnalyticsDistributionReleaseCountsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum556;
  message: string;
}

export interface Paths1Evy1PhV01AppsOwnerNameAppNameAnalyticsCrashfreeDevicePercentagesGetResponses200ContentApplicationJsonSchema {
  /** Average percentage. */
  averagePercentage?: number;
  /** The crash-free percentage per day. */
  dailyPercentages?: Paths1Oj1AudV01AppsOwnerNameAppNameAnalyticsCrashfreeDevicePercentagesGetResponses200ContentApplicationJsonSchemaPropertiesDailyPercentagesItems[];
}

export interface Paths1Oj1AudV01AppsOwnerNameAppNameAnalyticsCrashfreeDevicePercentagesGetResponses200ContentApplicationJsonSchemaPropertiesDailyPercentagesItems {
  /** The ISO 8601 datetime. */
  datetime?: string;
  /** Percentage of the object. */
  percentage?: number;
}

/** Error */
export interface Paths10VcmexV01AppsOwnerNameAppNameAnalyticsCrashfreeDevicePercentagesGetResponsesDefaultContentApplicationJsonSchema {
  error?: PathsFu92X5V01AppsOwnerNameAppNameAnalyticsCrashfreeDevicePercentagesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsFu92X5V01AppsOwnerNameAppNameAnalyticsCrashfreeDevicePercentagesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  /** The status code return by the API. It can be 400 or 403 or 500. */
  code?: Enum557;
  /** The reason for the request failed. */
  message?: string;
}

export interface PathsBb6J7UV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdOverallGetResponses200ContentApplicationJsonSchema {
  crashCount?: number;
  deviceCount?: number;
}

/** Error */
export interface Paths167FplzV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdOverallGetResponsesDefaultContentApplicationJsonSchema {
  error?: Paths1Oprgo9V01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdOverallGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Oprgo9V01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdOverallGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  /** The status code return by the API. It can be 400 or 403 or 500. */
  code?: Enum558;
  /** The reason for the request failed. */
  message?: string;
}

export interface Paths1U5H2EiV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdOperatingSystemsGetResponses200ContentApplicationJsonSchema {
  crashCount?: number;
  operatingSystems?: Paths1257UwhV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdOperatingSystemsGetResponses200ContentApplicationJsonSchemaPropertiesOperatingSystemsItems[];
}

export interface Paths1257UwhV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdOperatingSystemsGetResponses200ContentApplicationJsonSchemaPropertiesOperatingSystemsItems {
  /** OS name. */
  operatingSystemName?: string;
  /** Count of OS. */
  crashCount?: number;
}

/** Error */
export interface Paths19Xl0HvV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdOperatingSystemsGetResponsesDefaultContentApplicationJsonSchema {
  error?: PathsI8LdwjV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdOperatingSystemsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsI8LdwjV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdOperatingSystemsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  /** The status code return by the API. It can be 400 or 403 or 500. */
  code?: Enum559;
  /** The reason for the request failed. */
  message?: string;
}

export interface Paths130SxupV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdModelsGetResponses200ContentApplicationJsonSchema {
  crashCount?: number;
  models?: Paths1Y9X8C3V01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdModelsGetResponses200ContentApplicationJsonSchemaPropertiesModelsItems[];
}

export interface Paths1Y9X8C3V01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdModelsGetResponses200ContentApplicationJsonSchemaPropertiesModelsItems {
  /** Model's name. */
  modelName?: string;
  /** Count of model. */
  crashCount?: number;
}

/** Error */
export interface Paths1Tx0U3UV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdModelsGetResponsesDefaultContentApplicationJsonSchema {
  error?: Paths15VazsxV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdModelsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths15VazsxV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdModelsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  /** The status code return by the API. It can be 400 or 403 or 500. */
  code?: Enum560;
  /** The reason for the request failed. */
  message?: string;
}

export interface Paths1NileprV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdCrashCountsGetResponses200ContentApplicationJsonSchema {
  /** Total crash count. */
  count?: number;
  /** The total crash count for day. */
  crashes?: PathsBnfog8V01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdCrashCountsGetResponses200ContentApplicationJsonSchemaPropertiesCrashesItems[];
}

export interface PathsBnfog8V01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdCrashCountsGetResponses200ContentApplicationJsonSchemaPropertiesCrashesItems {
  /** The ISO 8601 datetime. */
  datetime?: string;
  /** Count of the object. */
  count?: number;
}

/** Error */
export interface PathsYwx8WzV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdCrashCountsGetResponsesDefaultContentApplicationJsonSchema {
  error?: Paths1H67M6CV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdCrashCountsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1H67M6CV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdCrashCountsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  /** The status code return by the API. It can be 400 or 403 or 500. */
  code?: Enum561;
  /** The reason for the request failed. */
  message?: string;
}

export interface PathsDc3Tj4V01AppsOwnerNameAppNameAnalyticsCrashGroupsPostRequestbodyContentApplicationJsonSchema {
  crashGroups: PostContentSchemaCrashGroupsItem[];
}

export interface PostContentSchemaCrashGroupsItem {
  crashGroupId?: string;
  appVersion?: string;
}

export interface PathsP18M6YV01AppsOwnerNameAppNameAnalyticsCrashGroupsPostResponses200ContentApplicationJsonSchemaItems {
  crashGroupId?: string;
  appVersion?: string;
  overall?: PostResponses200ContentApplicationJsonSchemaItemOverall;
}

export interface PostResponses200ContentApplicationJsonSchemaItemOverall {
  crashCount?: number;
  deviceCount?: number;
}

/** Error */
export interface PathsCy68FjV01AppsOwnerNameAppNameAnalyticsCrashGroupsPostResponsesDefaultContentApplicationJsonSchema {
  error?: PathsNivm6BV01AppsOwnerNameAppNameAnalyticsCrashGroupsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsNivm6BV01AppsOwnerNameAppNameAnalyticsCrashGroupsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  /** The status code return by the API. It can be 400 or 403 or 500. */
  code?: Enum562;
  /** The reason for the request failed. */
  message?: string;
}

export interface Paths5Ga8JpV01AppsOwnerNameAppNameAnalyticsCrashCountsGetResponses200ContentApplicationJsonSchema {
  /** Total crash count. */
  count?: number;
  /** The total crash count for day. */
  crashes?: PathsHnsiz1V01AppsOwnerNameAppNameAnalyticsCrashCountsGetResponses200ContentApplicationJsonSchemaPropertiesCrashesItems[];
}

export interface PathsHnsiz1V01AppsOwnerNameAppNameAnalyticsCrashCountsGetResponses200ContentApplicationJsonSchemaPropertiesCrashesItems {
  /** The ISO 8601 datetime. */
  datetime?: string;
  /** Count of the object. */
  count?: number;
}

/** Error */
export interface PathsY5XlfzV01AppsOwnerNameAppNameAnalyticsCrashCountsGetResponsesDefaultContentApplicationJsonSchema {
  error?: PathsQ0KipyV01AppsOwnerNameAppNameAnalyticsCrashCountsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsQ0KipyV01AppsOwnerNameAppNameAnalyticsCrashCountsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  /** The status code return by the API. It can be 400 or 403 or 500. */
  code?: Enum563;
  /** The reason for the request failed. */
  message?: string;
}

export interface Paths14Gegw4V01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNameHeadResponsesDefaultContentApplicationJsonSchema {
  error: Paths16T55ByV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNameHeadResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths16T55ByV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNameHeadResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum564;
  message: string;
}

export interface Paths1Bu61Q9V01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNameDeleteResponsesDefaultContentApplicationJsonSchema {
  error: PathsMqqctfV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsMqqctfV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum565;
  message: string;
}

/** Audience definition. */
export interface Paths4Tfj7FV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNameGetResponses200ContentApplicationJsonSchemaAllof0 {
  /** Audience name. */
  name?: string;
  /** Audience description. */
  description?: string;
  /** Estimated audience size. */
  estimatedCount?: number;
  /** Audience definition in OData format. */
  definition?: string;
  /** Audience state. */
  state?: AudienceProcessingState;
}

export interface PathsIepcj0V01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNameGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths1Jlf8StV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Jlf8StV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum566;
  message: string;
}

/** Audience definition. */
export interface Paths2Mes8QV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNamePutRequestbodyContentApplicationJsonSchema {
  /** Audience description. */
  description?: string;
  /** Audience definition in OData format. */
  definition: string;
  enabled?: boolean;
  /** Custom properties used in the definition. */
  customProperties?: { [propertyName: string]: DevicePropertyType };
}

/** Audience definition. */
export interface PathsIokya3V01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNamePutResponses200ContentApplicationJsonSchemaAllof0 {
  /** Audience name. */
  name?: string;
  /** Audience description. */
  description?: string;
  /** Estimated audience size. */
  estimatedCount?: number;
  /** Audience definition in OData format. */
  definition?: string;
  /** Audience state. */
  state?: AudienceProcessingState;
}

export interface Paths1Tedeb8V01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNamePutResponsesDefaultContentApplicationJsonSchema {
  error: Paths1Mwy65FV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNamePutResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Mwy65FV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNamePutResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum567;
  message: string;
}

/** List of device property values. */
export interface PathsOw62VsV01AppsOwnerNameAppNameAnalyticsAudiencesMetadataDevicePropertiesPropertyNameValuesGetResponses200ContentApplicationJsonSchema {
  /** List of device property values. */
  values: string[];
}

export interface Paths1IjxfyzV01AppsOwnerNameAppNameAnalyticsAudiencesMetadataDevicePropertiesPropertyNameValuesGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths1A9Yq9SV01AppsOwnerNameAppNameAnalyticsAudiencesMetadataDevicePropertiesPropertyNameValuesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1A9Yq9SV01AppsOwnerNameAppNameAnalyticsAudiencesMetadataDevicePropertiesPropertyNameValuesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum568;
  message: string;
}

/** List of device properties. */
export interface Paths3Bwm02V01AppsOwnerNameAppNameAnalyticsAudiencesMetadataDevicePropertiesGetResponses200ContentApplicationJsonSchema {
  /** List of device properties. */
  values: { [propertyName: string]: DevicePropertyType };
}

export interface PathsW9NyjxV01AppsOwnerNameAppNameAnalyticsAudiencesMetadataDevicePropertiesGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths5Q1T5JV01AppsOwnerNameAppNameAnalyticsAudiencesMetadataDevicePropertiesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths5Q1T5JV01AppsOwnerNameAppNameAnalyticsAudiencesMetadataDevicePropertiesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum569;
  message: string;
}

/** List of device properties. */
export interface Paths6Mckw0V01AppsOwnerNameAppNameAnalyticsAudiencesMetadataCustomPropertiesGetResponses200ContentApplicationJsonSchema {
  /** List of device properties. */
  values: { [propertyName: string]: DevicePropertyType };
}

export interface Paths1X2Ro5DV01AppsOwnerNameAppNameAnalyticsAudiencesMetadataCustomPropertiesGetResponsesDefaultContentApplicationJsonSchema {
  error: PathsO0MxzeV01AppsOwnerNameAppNameAnalyticsAudiencesMetadataCustomPropertiesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsO0MxzeV01AppsOwnerNameAppNameAnalyticsAudiencesMetadataCustomPropertiesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum570;
  message: string;
}

/** Audience definition. */
export interface Paths16F7ScgV01AppsOwnerNameAppNameAnalyticsAudiencesDefinitionTestPostRequestbodyContentApplicationJsonSchema {
  /** Audience description. */
  description?: string;
  /** Audience definition in OData format. */
  definition: string;
  enabled?: boolean;
  /** Custom properties used in the definition. */
  customProperties?: { [propertyName: string]: DevicePropertyType };
}

/** Audience test result. */
export interface Paths3SvqoyV01AppsOwnerNameAppNameAnalyticsAudiencesDefinitionTestPostResponses200ContentApplicationJsonSchema {
  /** Audience definition in OData format. */
  definition?: string;
  /** Custom properties used in the definition. */
  customProperties?: { [propertyName: string]: DevicePropertyType };
  /** Estimated audience size. */
  estimatedCount?: number;
  /** Estimated total audience size. */
  estimatedTotalCount?: number;
}

export interface Paths1Wwaiu3V01AppsOwnerNameAppNameAnalyticsAudiencesDefinitionTestPostResponsesDefaultContentApplicationJsonSchema {
  error: PathsN5QazwV01AppsOwnerNameAppNameAnalyticsAudiencesDefinitionTestPostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsN5QazwV01AppsOwnerNameAppNameAnalyticsAudiencesDefinitionTestPostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum571;
  message: string;
}

/** List of audiences. */
export interface PathsTx3PmsV01AppsOwnerNameAppNameAnalyticsAudiencesGetResponses200ContentApplicationJsonSchema {
  /** List of audiences. */
  values: Paths13226TpV01AppsOwnerNameAppNameAnalyticsAudiencesGetResponses200ContentApplicationJsonSchemaPropertiesValuesItems[];
  nextLink?: string;
}

/** Audience definition. */
export interface Paths13226TpV01AppsOwnerNameAppNameAnalyticsAudiencesGetResponses200ContentApplicationJsonSchemaPropertiesValuesItems {
  /** Audience name. */
  name?: string;
  /** Audience description. */
  description?: string;
  /** Estimated audience size. */
  estimatedCount?: number;
  /** Audience definition in OData format. */
  definition?: string;
  /** Audience state. */
  state?: AudienceProcessingState;
}

export interface PathsEq5Uq6V01AppsOwnerNameAppNameAnalyticsAudiencesGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths1Lfvhb8V01AppsOwnerNameAppNameAnalyticsAudiencesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Lfvhb8V01AppsOwnerNameAppNameAnalyticsAudiencesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum572;
  message: string;
}

export interface PathsKudmomV01AppsOwnerNameAppNameAnalyticsActiveDeviceCountsGetResponses200ContentApplicationJsonSchema {
  /** The active device count for each interval. */
  daily?: Paths1I70DibV01AppsOwnerNameAppNameAnalyticsActiveDeviceCountsGetResponses200ContentApplicationJsonSchemaPropertiesDailyItems[];
  /** The active device count for each interval with a week's retention. */
  weekly?: PathsNewl0V01AppsOwnerNameAppNameAnalyticsActiveDeviceCountsGetResponses200ContentApplicationJsonSchemaPropertiesWeeklyItems[];
  /** The active device count for each interval with a month's retention. */
  monthly?: PathsZhttoqV01AppsOwnerNameAppNameAnalyticsActiveDeviceCountsGetResponses200ContentApplicationJsonSchemaPropertiesMonthlyItems[];
}

export interface Paths1I70DibV01AppsOwnerNameAppNameAnalyticsActiveDeviceCountsGetResponses200ContentApplicationJsonSchemaPropertiesDailyItems {
  /** The ISO 8601 datetime. */
  datetime?: string;
  /** Count of the object. */
  count?: number;
}

export interface PathsNewl0V01AppsOwnerNameAppNameAnalyticsActiveDeviceCountsGetResponses200ContentApplicationJsonSchemaPropertiesWeeklyItems {
  /** The ISO 8601 datetime. */
  datetime?: string;
  /** Count of the object. */
  count?: number;
}

export interface PathsZhttoqV01AppsOwnerNameAppNameAnalyticsActiveDeviceCountsGetResponses200ContentApplicationJsonSchemaPropertiesMonthlyItems {
  /** The ISO 8601 datetime. */
  datetime?: string;
  /** Count of the object. */
  count?: number;
}

/** Error */
export interface Paths1Lned21V01AppsOwnerNameAppNameAnalyticsActiveDeviceCountsGetResponsesDefaultContentApplicationJsonSchema {
  error?: Paths11YswcdV01AppsOwnerNameAppNameAnalyticsActiveDeviceCountsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths11YswcdV01AppsOwnerNameAppNameAnalyticsActiveDeviceCountsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  /** The status code return by the API. It can be 400 or 403 or 500. */
  code?: Enum573;
  /** The reason for the request failed. */
  message?: string;
}

export interface PathsGwup8BV01AppsOwnerNameAppNameGetResponses200ContentApplicationJsonSchemaAllof0 {
  /** The unique ID (UUID) of the app */
  id: string;
  /** The description of the app */
  description?: string;
  /** The display name of the app */
  displayName: string;
  /** A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase */
  releaseType?: string;
  /** The string representation of the URL pointing to the app's icon */
  iconUrl?: string;
  /** The string representation of the source of the app's icon */
  iconSource?: string;
  /** The name of the app used in URLs */
  name: string;
  /** The OS the app will be running on */
  os: Enum574;
  /** The information about the app's owner */
  owner: PathsU9JfiiV01AppsOwnerNameAppNameGetResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner;
}

/** The information about the app's owner */
export interface PathsU9JfiiV01AppsOwnerNameAppNameGetResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner {
  /** The unique id (UUID) of the owner */
  id: string;
  /** The avatar URL of the owner */
  avatarUrl?: string;
  /** The owner's display name */
  displayName: string;
  /** The owner's email address */
  email?: string;
  /** The unique name that used to identify the owner */
  name: string;
  /** The owner type. Can either be 'org' or 'user' */
  type: Enum575;
}

export interface PathsYhp60MV01AppsOwnerNameAppNameGetResponses200ContentApplicationJsonSchemaAllof1 {
  /** A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics */
  appSecret?: string;
  azureSubscription?: Paths2UobgbV01AppsOwnerNameAppNameGetResponses200ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription;
  /** The platform of the app */
  platform?: Enum576;
  /** The creation origin of this app */
  origin?: Enum577;
  /** The created date of this app */
  createdAt?: string;
  /** The last updated date of this app */
  updatedAt?: string;
  /** The permissions of the calling user */
  memberPermissions?: Enum578[];
}

export interface Paths2UobgbV01AppsOwnerNameAppNameGetResponses200ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription {
  /** The azure subscription id */
  subscriptionId: string;
  /** The tenant id of the azure subscription belongs to */
  tenantId: string;
  /** The name of the azure subscription */
  subscriptionName: string;
  /** If the subscription is used for billing */
  isBilling?: boolean;
  /** If the subscription can be used for billing */
  isBillable?: boolean;
  /** If the subscription is internal Microsoft subscription */
  isMicrosoftInternal?: boolean;
}

export interface PathsZhn7DqV01AppsOwnerNameAppNameGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths2IxwfzV01AppsOwnerNameAppNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths2IxwfzV01AppsOwnerNameAppNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum579;
  message: string;
}

export interface PathsMhqbvhV01AppsOwnerNameAppNamePatchRequestbodyContentApplicationJsonSchema {
  /** A short text describing the app */
  description?: string;
  /** The display name of the app */
  displayName?: string;
  /** A one-word descriptive release type value that starts with a capital letter but is otherwise lowercase */
  releaseType?: string;
  /** The name of the app used in URLs */
  name?: string;
  /** The string representation of the URL pointing to the app's icon */
  iconUrl?: string;
  /** The uuid for the icon's asset id from ACFUS */
  iconAssetId?: string;
}

export interface Paths1UogsreV01AppsOwnerNameAppNamePatchResponses200ContentApplicationJsonSchemaAllof0 {
  /** The unique ID (UUID) of the app */
  id: string;
  /** The description of the app */
  description?: string;
  /** The display name of the app */
  displayName: string;
  /** A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase */
  releaseType?: string;
  /** The string representation of the URL pointing to the app's icon */
  iconUrl?: string;
  /** The string representation of the source of the app's icon */
  iconSource?: string;
  /** The name of the app used in URLs */
  name: string;
  /** The OS the app will be running on */
  os: Enum580;
  /** The information about the app's owner */
  owner: PathsOuh9BhV01AppsOwnerNameAppNamePatchResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner;
}

/** The information about the app's owner */
export interface PathsOuh9BhV01AppsOwnerNameAppNamePatchResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner {
  /** The unique id (UUID) of the owner */
  id: string;
  /** The avatar URL of the owner */
  avatarUrl?: string;
  /** The owner's display name */
  displayName: string;
  /** The owner's email address */
  email?: string;
  /** The unique name that used to identify the owner */
  name: string;
  /** The owner type. Can either be 'org' or 'user' */
  type: Enum581;
}

export interface Paths176RmcwV01AppsOwnerNameAppNamePatchResponses200ContentApplicationJsonSchemaAllof1 {
  /** A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics */
  appSecret?: string;
  azureSubscription?: PathsNoytcoV01AppsOwnerNameAppNamePatchResponses200ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription;
  /** The platform of the app */
  platform?: Enum582;
  /** The creation origin of this app */
  origin?: Enum583;
  /** The created date of this app */
  createdAt?: string;
  /** The last updated date of this app */
  updatedAt?: string;
  /** The permissions of the calling user */
  memberPermissions?: Enum584[];
}

export interface PathsNoytcoV01AppsOwnerNameAppNamePatchResponses200ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription {
  /** The azure subscription id */
  subscriptionId: string;
  /** The tenant id of the azure subscription belongs to */
  tenantId: string;
  /** The name of the azure subscription */
  subscriptionName: string;
  /** If the subscription is used for billing */
  isBilling?: boolean;
  /** If the subscription can be used for billing */
  isBillable?: boolean;
  /** If the subscription is internal Microsoft subscription */
  isMicrosoftInternal?: boolean;
}

export interface PathsJbts1XV01AppsOwnerNameAppNamePatchResponsesDefaultContentApplicationJsonSchema {
  error: PathsIjyk6PV01AppsOwnerNameAppNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsIjyk6PV01AppsOwnerNameAppNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum585;
  message: string;
}

export interface Paths1BdpjjmV01AppsOwnerNameAppNameDeleteResponsesDefaultContentApplicationJsonSchema {
  error: Paths1Md60RbV01AppsOwnerNameAppNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Md60RbV01AppsOwnerNameAppNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum586;
  message: string;
}

export interface Paths1XqwatgV01AppsPostRequestbodyContentApplicationJsonSchema {
  /** A short text describing the app */
  description?: string;
  /** A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase */
  releaseType?: string;
  /** The descriptive name of the app. This can contain any characters */
  displayName: string;
  /** The name of the app used in URLs */
  name?: string;
  /** The OS the app will be running on */
  os: Enum587;
  /** The platform of the app */
  platform: Enum588;
}

export interface Paths1Mhfa1V01AppsPostResponses201ContentApplicationJsonSchemaAllof0 {
  /** The unique ID (UUID) of the app */
  id: string;
  /** The description of the app */
  description?: string;
  /** The display name of the app */
  displayName: string;
  /** A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase */
  releaseType?: string;
  /** The string representation of the URL pointing to the app's icon */
  iconUrl?: string;
  /** The string representation of the source of the app's icon */
  iconSource?: string;
  /** The name of the app used in URLs */
  name: string;
  /** The OS the app will be running on */
  os: Enum589;
  /** The information about the app's owner */
  owner: Paths1Rslxh6V01AppsPostResponses201ContentApplicationJsonSchemaAllof0PropertiesOwner;
}

/** The information about the app's owner */
export interface Paths1Rslxh6V01AppsPostResponses201ContentApplicationJsonSchemaAllof0PropertiesOwner {
  /** The unique id (UUID) of the owner */
  id: string;
  /** The avatar URL of the owner */
  avatarUrl?: string;
  /** The owner's display name */
  displayName: string;
  /** The owner's email address */
  email?: string;
  /** The unique name that used to identify the owner */
  name: string;
  /** The owner type. Can either be 'org' or 'user' */
  type: Enum590;
}

export interface Paths1KwnvogV01AppsPostResponses201ContentApplicationJsonSchemaAllof1 {
  /** A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics */
  appSecret?: string;
  azureSubscription?: Paths1Ccd1NdV01AppsPostResponses201ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription;
  /** The platform of the app */
  platform?: Enum591;
  /** The creation origin of this app */
  origin?: Enum592;
  /** The created date of this app */
  createdAt?: string;
  /** The last updated date of this app */
  updatedAt?: string;
  /** The permissions of the calling user */
  memberPermissions?: Enum593[];
}

export interface Paths1Ccd1NdV01AppsPostResponses201ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription {
  /** The azure subscription id */
  subscriptionId: string;
  /** The tenant id of the azure subscription belongs to */
  tenantId: string;
  /** The name of the azure subscription */
  subscriptionName: string;
  /** If the subscription is used for billing */
  isBilling?: boolean;
  /** If the subscription can be used for billing */
  isBillable?: boolean;
  /** If the subscription is internal Microsoft subscription */
  isMicrosoftInternal?: boolean;
}

export interface PathsV9XtwoV01AppsPostResponsesDefaultContentApplicationJsonSchema {
  error: PathsW9Lsw5V01AppsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsW9Lsw5V01AppsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum594;
  message: string;
}

export interface Paths2I85NV01AppsGetResponses200ContentApplicationJsonSchemaItemsAllof0 {
  /** The unique ID (UUID) of the app */
  id: string;
  /** The description of the app */
  description?: string;
  /** The display name of the app */
  displayName: string;
  /** A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase */
  releaseType?: string;
  /** The string representation of the URL pointing to the app's icon */
  iconUrl?: string;
  /** The string representation of the source of the app's icon */
  iconSource?: string;
  /** The name of the app used in URLs */
  name: string;
  /** The OS the app will be running on */
  os: Enum596;
  /** The information about the app's owner */
  owner: Paths3TvudzV01AppsGetResponses200ContentApplicationJsonSchemaItemsAllof0PropertiesOwner;
}

/** The information about the app's owner */
export interface Paths3TvudzV01AppsGetResponses200ContentApplicationJsonSchemaItemsAllof0PropertiesOwner {
  /** The unique id (UUID) of the owner */
  id: string;
  /** The avatar URL of the owner */
  avatarUrl?: string;
  /** The owner's display name */
  displayName: string;
  /** The owner's email address */
  email?: string;
  /** The unique name that used to identify the owner */
  name: string;
  /** The owner type. Can either be 'org' or 'user' */
  type: Enum597;
}

export interface Paths1Rjy06FV01AppsGetResponses200ContentApplicationJsonSchemaItemsAllof1 {
  /** A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics */
  appSecret?: string;
  azureSubscription?: Paths13LwziiV01AppsGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesAzureSubscription;
  /** The platform of the app */
  platform?: Enum598;
  /** The creation origin of this app */
  origin?: Enum599;
  /** The created date of this app */
  createdAt?: string;
  /** The last updated date of this app */
  updatedAt?: string;
  /** The permissions of the calling user */
  memberPermissions?: Enum600[];
}

export interface Paths13LwziiV01AppsGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesAzureSubscription {
  /** The azure subscription id */
  subscriptionId: string;
  /** The tenant id of the azure subscription belongs to */
  tenantId: string;
  /** The name of the azure subscription */
  subscriptionName: string;
  /** If the subscription is used for billing */
  isBilling?: boolean;
  /** If the subscription can be used for billing */
  isBillable?: boolean;
  /** If the subscription is internal Microsoft subscription */
  isMicrosoftInternal?: boolean;
}

export interface Paths127V8Y9V01AppsGetResponsesDefaultContentApplicationJsonSchema {
  error: PathsW2OmslV01AppsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface PathsW2OmslV01AppsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum601;
  message: string;
}

export interface Paths1X61Db6V01ApiTokensApiTokenIdDeleteResponses400ContentApplicationJsonSchema {
  error: Paths1Ufqn0BV01ApiTokensApiTokenIdDeleteResponses400ContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Ufqn0BV01ApiTokensApiTokenIdDeleteResponses400ContentApplicationJsonSchemaPropertiesError {
  code: Enum602;
  message: string;
}

export interface Paths1140VhkV01ApiTokensApiTokenIdDeleteResponses401ContentApplicationJsonSchema {
  error: Paths16Jve8JV01ApiTokensApiTokenIdDeleteResponses401ContentApplicationJsonSchemaPropertiesError;
}

export interface Paths16Jve8JV01ApiTokensApiTokenIdDeleteResponses401ContentApplicationJsonSchemaPropertiesError {
  code: Enum603;
  message: string;
}

export interface PathsD8RxloV01ApiTokensApiTokenIdDeleteResponses404ContentApplicationJsonSchema {
  error: Paths1Drc2FxV01ApiTokensApiTokenIdDeleteResponses404ContentApplicationJsonSchemaPropertiesError;
}

export interface Paths1Drc2FxV01ApiTokensApiTokenIdDeleteResponses404ContentApplicationJsonSchemaPropertiesError {
  code: Enum604;
  message: string;
}

export interface Paths18ZssypV01ApiTokensGetResponses200ContentApplicationJsonSchemaItems {
  /** The unique id (UUID) of the api token */
  id: string;
  /** The description of the token */
  description?: string;
  /** The scope for this token. */
  scope?: Enum605[];
  /** The creation time */
  createdAt: string;
}

export interface Paths1Eu1Qp7V01ApiTokensGetResponses400ContentApplicationJsonSchema {
  error: Paths103GacfV01ApiTokensGetResponses400ContentApplicationJsonSchemaPropertiesError;
}

export interface Paths103GacfV01ApiTokensGetResponses400ContentApplicationJsonSchemaPropertiesError {
  code: Enum606;
  message: string;
}

export interface Paths1Jnqp8FV01ApiTokensGetResponses401ContentApplicationJsonSchema {
  error: PathsYkw9ZjV01ApiTokensGetResponses401ContentApplicationJsonSchemaPropertiesError;
}

export interface PathsYkw9ZjV01ApiTokensGetResponses401ContentApplicationJsonSchemaPropertiesError {
  code: Enum607;
  message: string;
}

export interface Paths163K2XcV01ApiTokensPostRequestbodyContentApplicationJsonSchema {
  /** The description of the token */
  description?: string;
  /** The scope for this token. */
  scope?: Enum608[];
}

export interface PathsC2U0SxV01ApiTokensPostResponses201ContentApplicationJsonSchema {
  /** The unique id (UUID) of the api token */
  id: string;
  /** The api token generated will not be accessible again */
  apiToken: string;
  /** The description of the token */
  description?: string;
  /** The scope for this token. */
  scope?: Enum609[];
  /** The creation time */
  createdAt: string;
}

export interface Paths1VzgmvnV01ApiTokensPostResponses400ContentApplicationJsonSchema {
  error: Paths62XlojV01ApiTokensPostResponses400ContentApplicationJsonSchemaPropertiesError;
}

export interface Paths62XlojV01ApiTokensPostResponses400ContentApplicationJsonSchemaPropertiesError {
  code: Enum610;
  message: string;
}

export interface Paths1Uv4MczV01ApiTokensPostResponses401ContentApplicationJsonSchema {
  error: PathsXj76AoV01ApiTokensPostResponses401ContentApplicationJsonSchemaPropertiesError;
}

export interface PathsXj76AoV01ApiTokensPostResponses401ContentApplicationJsonSchemaPropertiesError {
  code: Enum611;
  message: string;
}

export interface PathsSnamasV01AdministeredorgsGetResponses200ContentApplicationJsonSchema {
  organizations: Paths1L985GzV01AdministeredorgsGetResponses200ContentApplicationJsonSchemaPropertiesOrganizations;
}

export interface Paths1L985GzV01AdministeredorgsGetResponses200ContentApplicationJsonSchemaPropertiesOrganizations {
  /** The internal unique id (UUID) of the organization. */
  id: string;
  /** The display name of the organization */
  displayName: string;
  /** The slug name of the organization */
  name: string;
  /** The URL to a user-uploaded Avatar image */
  avatarUrl?: string;
  /** The creation origin of this organization */
  origin: Enum612;
  /** The creation date of this organization */
  createdAt: string;
  /** The date the organization was last updated at */
  updatedAt: string;
}

export interface PathsHjvrvyV01AdministeredorgsGetResponsesDefaultContentApplicationJsonSchema {
  error: Paths8AdyjjV01AdministeredorgsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError;
}

export interface Paths8AdyjjV01AdministeredorgsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError {
  code: Enum613;
  message: string;
}

export interface Paths120IxifV01AccountTestExportFeatureflagsGetResponses200ContentApplicationJsonSchema {
  name?: string;
  targetId?: string;
}

export interface PathsK7Amr2V01AccountTestExportAccountsGetResponses200ContentApplicationJsonSchema {
  id?: string;
}

export interface PathsIp035RV01AccountTestExportGetResponses200ContentApplicationJsonSchema {
  resources?: PathsQfwcmvV01AccountTestExportGetResponses200ContentApplicationJsonSchemaPropertiesResourcesItems[];
}

export interface PathsQfwcmvV01AccountTestExportGetResponses200ContentApplicationJsonSchemaPropertiesResourcesItems {
  rel?: string;
  path?: string;
}

export interface GetInAppUpdateTokenResponse {
  /** The api token generated will not be accessible again */
  token: string;
}

export interface ApiTokensCreateResponse {
  /** The unique id (UUID) of the api token */
  id: string;
  /** The api token generated will not be accessible again */
  apiToken: string;
  /** The description of the token */
  description?: string;
  /** The scope for this token. */
  scope?: ApiTokensCreateResponseScopeItem[];
  /** The creation time */
  createdAt: string;
}

export interface ApiTokensCreateRequest {
  /** The description of the token */
  description?: string;
  /** The scope for this token. */
  scope?: ApiTokensCreateRequestScopeItem[];
}

export interface ApiTokensGetResponse {
  /** The unique id (UUID) of the api token */
  id: string;
  /** The description of the token */
  description?: string;
  /** The scope for this token. */
  scope?: ApiTokensGetResponseScopeItem[];
  /** The creation time */
  createdAt: string;
}

export interface Status {
  status: string;
}

export interface Failure {
  message: string;
}

export interface ErrorResponse {
  error: ErrorResponseError;
}

export interface ErrorResponseError {
  code: ErrorResponseErrorCode;
  message: string;
}

export interface ErrorDetails {
  code: ErrorDetailsCode;
  message: string;
}

export interface SuccessResponse {
  message: string;
}

export interface AADTenantAddRequest {
  /** The user wanting to add this tenant to the organization, must be an admin of the organization */
  userId: string;
  /** The AAD tenant id */
  aadTenantId: string;
  /** The name of the AAD Tenant */
  displayName: string;
}

export interface AADTenantResponse {
  /** The AAD tenant id */
  aadTenantId: string;
  /** The name of the AAD Tenant */
  displayName: string;
}

export interface AddAppTesterRequest {
  /** The user ID of the tester that needs to be added */
  userId: string;
  /** The ID of the release the user was added to */
  releaseId: number;
}

export interface AddAppTesterResponse {
  /** The user ID of the tester that needs to be added */
  userId: string;
  /** The ID of the release the user was added to */
  releaseId: number;
}

export interface ApiTokensPostRequest {
  /** The description of the token */
  description?: string;
  /** An encrypted value of the token. */
  encryptedToken?: string;
  /** The scope for this token. An array of supported roles. */
  scope?: ApiTokensPostRequestScopeItem[];
  /** The hashed value of api token */
  tokenHash?: string;
  /** The token's type. public:managed by the user; in_app_update:special token for in-app update scenario; buid:dedicated for CI usage for now; session:for CLI session management; tester_app: used for tester mobile app; default is "public".' */
  tokenType?: ApiTokensPostRequestTokenType;
}

export interface AppPatchRequest {
  /** A short text describing the app */
  description?: string;
  /** The display name of the app */
  displayName?: string;
  /** A one-word descriptive release type value that starts with a capital letter but is otherwise lowercase */
  releaseType?: string;
  /** The name of the app used in URLs */
  name?: string;
  /** The string representation of the URL pointing to the app's icon */
  iconUrl?: string;
  /** The uuid for the icon's asset id from ACFUS */
  iconAssetId?: string;
}

export interface AppRepoPatchRequest {
  /** The absolute URL of the repository */
  repoUrl?: string;
  /** The unique id (UUID) of the user */
  userId?: string;
  /** The external user id from the provider */
  externalUserId?: string;
  /** The id of the service connection stored in customer credential store */
  serviceConnectionId?: string;
}

export interface AppRepoPostRequest {
  /** The absolute URL of the repository */
  repoUrl: string;
  /** The provider of the repository */
  repoProvider?: AppRepoPostRequestRepoProvider;
  /** The unique id (UUID) of the user who configured the repository */
  userId: string;
  /** Installation id from the provider */
  installationId?: string;
  /** Repository id from the provider */
  repoId?: string;
  /** The external user id from the provider */
  externalUserId?: string;
  /** The id of the service connection stored in customer credential store */
  serviceConnectionId?: string;
}

export interface AppRequest {
  /** A short text describing the app */
  description?: string;
  /** A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase */
  releaseType?: string;
  /** The descriptive name of the app. This can contain any characters */
  displayName: string;
  /** The name of the app used in URLs */
  name?: string;
  /** The OS the app will be running on */
  os: AppRequestOs;
  /** The platform of the app */
  platform: AppRequestPlatform;
}

export interface AppAddRequest {
  /** The name of the app to be added to the distribution group */
  name: string;
}

export interface AppDeleteRequest {
  /** The name of the app to be deleted from the distribution group */
  name: string;
}

export interface AzureSubscriptionAddRequest {
  /** The azure subscription id */
  subscriptionId: string;
  /** The tenant id of the azure subscription belongs to */
  tenantId: string;
  /** The name of the azure subscription */
  subscriptionName: string;
  /** If the subscription is used for billing */
  isBilling?: boolean;
}

export interface AzureSubscriptionUpdateBillableRequest {
  /** Billable status of the subscription */
  isBillable: boolean;
}

export interface AzureSubscriptionPatchRequest {
  /** If the subscription is used for billing */
  isBilling: boolean;
}

export interface AzureSubscriptionAddToAppRequest {
  /** The azure subscription id */
  subscriptionId: string;
}

export interface DistributionGroupPatchRequest {
  /** The name of the distribution group */
  name?: string;
  /** Whether the distribution group is public */
  isPublic?: boolean;
}

export interface DistributionGroupRequest {
  /** The name of the distribution group */
  name: string;
  /** The display name of the distribution group. If not specified, the name will be used. */
  displayName?: string;
}

export interface AppDistributionGroupUsersRequest {
  memberIds?: string[];
}

export interface DistributionGroupUserRequest {
  /** The list of emails of the users */
  userEmails?: string[];
}

export interface DistributionGroupAppAddRequest {
  /** The list of apps to add to distribution group */
  apps?: DistributionGroupAppAddRequestAppsItem[];
}

export interface DistributionGroupAppAddRequestAppsItem {
  /** The name of the app to be added to the distribution group */
  name: string;
}

export interface DistributionGroupAppsDeleteRequest {
  /** The list of apps to delete from the distribution group */
  apps?: DistributionGroupAppsDeleteRequestAppsItem[];
}

export interface DistributionGroupAppsDeleteRequestAppsItem {
  /** The name of the app to be deleted from the distribution group */
  name: string;
}

export interface DistributionGroupAADGroupsDeleteRequest {
  /** The list of aad group ids */
  aadGroupIds?: string[];
}

export interface DataDeletionRequest {
  /** Type of data to delete */
  dataDeletionType?: string;
}

export interface DistributionGroupAADGroupRequest {
  /** The list of aad group ids and names to add */
  aadGroups?: DistributionGroupAADGroupRequestAadGroupsItem[];
}

export interface DistributionGroupAADGroupRequestAadGroupsItem {
  /** The id of the aad group */
  aadGroupId?: string;
  /** The display name of the aad group */
  displayName?: string;
}

export interface DistributionGroupAADGroupBase {
  /** The id of the aad group */
  aadGroupId?: string;
  /** The display name of the aad group */
  displayName?: string;
}

export interface DistributionGroupsUserVerifyRequest {
  /** An array of distribution group ids */
  distributionGroupIds: DistributionGroupsUserVerifyRequestDistributionGroupIdsItem[];
}

export interface DistributionGroupsUserVerifyRequestDistributionGroupIdsItem {
  /** The id of the distribution group */
  id: string;
}

export interface DistributionGroupIdRequest {
  /** The id of the distribution group */
  id: string;
}

export interface EmailVerificationRequest {
  /** The verification token that was sent to the user */
  token: string;
}

export interface ExternalUserRequest {
  /** The token of the app invitation which lead to signup */
  appInvitation?: string;
  /** The token of the test invitation which lead to signup */
  testerInvitation?: string;
  /** The token of the organization invitation which lead to signup */
  organizationInvitation?: string;
  /** The avatar URL of the user */
  avatarUrl?: string;
  /** The full name of the user. Might for example be first and last name */
  displayName?: string;
  /** The email address of the user */
  email: string;
  /** The unique name that is used to identify the user. If no explicit value is given, a default will be auto-generated from the `display_name` value */
  name?: string;
}

export interface ExternalAppId {
  /** The identifier for external apps that map to an App Center app */
  externalId?: string;
}

export interface FeaturePatchRequest {
  /** The friendly name of the feature */
  description?: string;
  /** The full (friendly) name of the feature. */
  displayName?: string;
  /** The state of the feature */
  state?: number;
}

export interface FeatureCreateRequest {
  /** The unique name of the feature */
  name: string;
  /** The full (friendly) name of the feature. */
  displayName: string;
  /** The state of the feature */
  state?: number;
  /** The friendly name of the feature */
  description?: string;
}

export interface GrantAdminRoleRequest {
  /** The new admin_role */
  adminRole: GrantAdminRoleRequestAdminRole;
}

export interface InternalBulkAppResponse {
  /** The name of the app */
  appName?: string;
  /** The display name of the owner */
  ownerDisplayName?: string;
}

export interface InternalUserRequest {
  /** The token of the app invitation which lead to signup */
  appInvitation?: string;
  /** The token of the test invitation which lead to signup */
  testerInvitation?: string;
  /** The token of the organization invitation which lead to signup */
  organizationInvitation?: string;
  /** The avatar URL of the user */
  avatarUrl?: string;
  /** The full name of the user. Might for example be first and last name */
  displayName?: string;
  /** The email address of the user */
  email: string;
  /** The unique name that is used to identify the user. */
  name: string;
  /** The password of the user. Needs to be at least 8 characters long and contain at least one lower- and one uppercase letter. */
  password: string;
  /** The sub-domain of the portal from which this request was made. Will be used to build the invitation link. */
  portalSubdomain?: "install.";
}

export interface OrganizationPatchRequest {
  /** The full (friendly) name of the organization. */
  displayName?: string;
  /** The name of the organization used in URLs */
  name?: string;
}

export interface OrganizationRequest {
  /** The display name of the organization */
  displayName?: string;
  /** The name of the organization used in URLs */
  name?: string;
}

export interface OrganizationUserPatchRequest {
  /** The user's role in the organizatiion */
  role?: OrganizationUserPatchRequestRole;
}

export interface AddOrganizationAdminRequest {
  /** The internal unique id (UUID) of the account. */
  userId: string;
}

export interface TransferAppAdminRequest {
  /** The internal unique id (UUID) of the user/org. */
  newOwnerId: string;
}

export interface PasswordUpdateRequest {
  /** The new password that will be set for the user. Needs to be at least 8 characters long and contain at least one lower- and one uppercase letter. */
  newPassword: string;
  /** The old password, if needed. */
  oldPassword?: string;
}

export interface PostRepositoryProviderMappingRequest {
  /** Id of user in the external provider service */
  externalAccountId: string;
  /** Supported external providers of source control repositories */
  provider: "github";
  /** App Center account id to link to this provider and external id */
  accountId: string;
}

export interface GetOrCreateRepositoryProviderMappingRequest {
  /** The account name given by the external provider. If provided, create an organization and the mapping. If not, create mapping with user. */
  externalAccountName?: string;
}

export interface ResendVerificationRequest {
  /** The email or name of the user to resend verification */
  name: string;
}

export interface ResetPasswordUsingTokenRequest {
  /** The new password. Needs to be at least 8 characters long and contain at least one lower- and one uppercase letter. */
  newPassword: string;
  /** The reset password token that was sent to the user */
  token: string;
}

export interface UserAppPermissionsUpdateRequest {
  /** The permissions the user has for the app */
  permissions: UserAppPermissionsUpdateRequestPermissionsItem[];
}

export interface UserInvitationPermissionsUpdateRequest {
  /** The permissions the user has for the app in the invitation */
  permissions: UserInvitationPermissionsUpdateRequestPermissionsItem[];
}

export interface UserEmailOrgRoleRequest {
  /** The user's email address */
  userEmail: string;
  /** The user's role */
  role?: UserEmailOrgRoleRequestRole;
}

export interface UserEmailRequest {
  /** The user's email address */
  userEmail: string;
}

export interface UserNameUpdateRequest {
  /** The new, unique name that is used to identify. */
  name?: string;
}

export interface UserUpdateRequest {
  /** The full name of the user. Might for example be first and last name */
  displayName?: string;
}

export interface UserUpdateRequestInternal {
  /** The full name of the user. Might for example be first and last name */
  displayName?: string;
  /** The new, unique name that is used to identify. */
  name?: string;
  /** The date in the future when the user should be checked again for NPS eligibility */
  nextNpsSurveyDate?: string;
  /** The email address for this user */
  email?: string;
}

export interface UserSettingRequest {
  /** The setting value */
  value: string;
}

export interface AccountResponse {
  /** The internal unique id (UUID) of the account. */
  id: string;
  /** The display name of the account */
  displayName: string;
  /** The slug name of the account */
  name: string;
  /** The account's email. For org that value might be empty. */
  email?: string;
  /** The creation origin of this account */
  origin: AccountResponseOrigin;
  /** The type of this account */
  type: AccountResponseType;
}

export interface ApiTokenDeleteResponse {
  /** The unique id (UUID) of the api token */
  id: string;
  /** The hashed value of api token */
  tokenHash: string;
}

export interface ApiTokenGetUserResponse {
  /** The token's unique id (UUID) */
  tokenId: string;
  /** The token's scope. A list of allowed roles. */
  tokenScope: ApiTokenGetUserResponseTokenScopeItem[];
  /** The user email */
  userEmail: string;
  /** The unique id (UUID) of the user */
  userId: string;
  /** The creation origin of the user who created this api token */
  userOrigin: ApiTokenGetUserResponseUserOrigin;
}

export interface ValidatedApiTokenResponse {
  /** The token's unique id (UUID) */
  tokenId: string;
  /** The token's scope. A list of allowed roles. */
  tokenScope: ValidatedApiTokenResponseTokenScopeItem[];
  /** The ID of the owner of the API Token (user_id or app_id) */
  principalId: string;
  /** Indicates the type of the principal (app or user) */
  principalType: ValidatedApiTokenResponsePrincipalType;
  /** Collection of attributes that describe the principal of the specified API Token */
  claims: ValidatedApiTokenResponseClaimsItem[];
}

export interface ValidatedApiTokenResponseClaimsItem {
  claimType?: ValidatedApiTokenResponseClaimsItemClaimType;
  claimValue?: string;
}

export interface ApiTokenClaim {
  claimType?: ApiTokenClaimType;
  claimValue?: string;
}

export interface ApiTokenResponse {
  /** The unique id (UUID) of the api token */
  id: string;
  /** The creation time */
  createdAt: string;
  /** The token's scope. A list of allowed roles. */
  scope?: ApiTokenResponseScopeItem[];
  /** The encrypted value of a token. This value will only be returned for token of type in_app_update. */
  encryptedToken?: string;
  /** The description of the token */
  description?: string;
}

export interface AppGroupResponse {
  /** The unique ID (UUID) of the app */
  id: string;
  /** The unique ID (UUID) of the group that the app belongs to */
  groupId: string;
  /** The display name of the app */
  displayName?: string;
  /** A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase */
  releaseType?: string;
  /** The name of the app used in URLs */
  name: string;
  /** The OS the app will be running on */
  os: AppGroupResponseOs;
  /** The platform of the app */
  platform: AppGroupResponsePlatform;
}

export interface AppInvitationDetailResponse {
  /** The unique ID (UUID) of the invitation */
  id: string;
  app: AppInvitationDetailResponseApp;
  /** The email address of the invited user */
  email: string;
  /** The invitation type */
  inviteType: AppInvitationDetailResponseInviteType;
  invitedBy: AppInvitationDetailResponseInvitedBy;
  /** Indicates whether the invited user already exists */
  isExistingUser: boolean;
  /** The permissions the user has for the app */
  permissions?: AppInvitationDetailResponsePermissionsItem[];
  /** The number of apps in the group */
  appCount?: number;
  /** The organization that owns the distribution group, if it exists */
  distributionGroup?: AppInvitationDetailResponseDistributionGroup;
}

export interface ComponentsI5EjcmSchemasAppinvitationdetailresponsePropertiesAppAllof0 {
  /** The unique ID (UUID) of the app */
  id: string;
  /** The description of the app */
  description?: string;
  /** The display name of the app */
  displayName: string;
  /** A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase */
  releaseType?: string;
  /** The string representation of the URL pointing to the app's icon */
  iconUrl?: string;
  /** The string representation of the source of the app's icon */
  iconSource?: string;
  /** The name of the app used in URLs */
  name: string;
  /** The OS the app will be running on */
  os: AppInvitationDetailResponseApp0Os;
  /** The information about the app's owner */
  owner: AppInvitationDetailResponseApp0Owner;
}

/** The information about the app's owner */
export interface AppInvitationDetailResponseApp0Owner {
  /** The unique id (UUID) of the owner */
  id: string;
  /** The avatar URL of the owner */
  avatarUrl?: string;
  /** The owner's display name */
  displayName: string;
  /** The owner's email address */
  email?: string;
  /** The unique name that used to identify the owner */
  name: string;
  /** The owner type. Can either be 'org' or 'user' */
  type: AppInvitationDetailResponseApp0OwnerType;
}

export interface Components1Fe01MdSchemasAppinvitationdetailresponsePropertiesAppAllof1 {
  /** A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics */
  appSecret?: string;
  azureSubscription?: AppInvitationDetailResponseApp1AzureSubscription;
  /** The platform of the app */
  platform?: AppInvitationDetailResponseApp1Platform;
  /** The creation origin of this app */
  origin?: AppInvitationDetailResponseApp1Origin;
  /** The created date of this app */
  createdAt?: string;
  /** The last updated date of this app */
  updatedAt?: string;
  /** The permissions of the calling user */
  memberPermissions?: AppInvitationDetailResponseApp1MemberPermissionsItem[];
}

export interface AppInvitationDetailResponseApp1AzureSubscription {
  /** The azure subscription id */
  subscriptionId: string;
  /** The tenant id of the azure subscription belongs to */
  tenantId: string;
  /** The name of the azure subscription */
  subscriptionName: string;
  /** If the subscription is used for billing */
  isBilling?: boolean;
  /** If the subscription can be used for billing */
  isBillable?: boolean;
  /** If the subscription is internal Microsoft subscription */
  isMicrosoftInternal?: boolean;
}

export interface AppInvitationDetailResponseInvitedBy {
  /** The unique id (UUID) of the user */
  id: string;
  /** The avatar URL of the user */
  avatarUrl?: string;
  /** User is required to send an old password in order to change the password. */
  canChangePassword?: boolean;
  /** The full name of the user. Might for example be first and last name */
  displayName: string;
  /** The email address of the user */
  email: string;
  /** The unique name that is used to identify the user. */
  name: string;
  /** The permissions the user has for the app */
  permissions?: AppInvitationDetailResponseInvitedByPermissionsItem[];
  /** The creation origin of this user */
  origin: AppInvitationDetailResponseInvitedByOrigin;
}

/** The organization that owns the distribution group, if it exists */
export interface AppInvitationDetailResponseDistributionGroup {
  /** The information about the app's owner */
  owner?: AppInvitationDetailResponseDistributionGroupOwner;
}

/** The information about the app's owner */
export interface AppInvitationDetailResponseDistributionGroupOwner {
  /** The unique id (UUID) of the owner */
  id: string;
  /** The avatar URL of the owner */
  avatarUrl?: string;
  /** The owner's display name */
  displayName: string;
  /** The owner's email address */
  email?: string;
  /** The unique name that used to identify the owner */
  name: string;
  /** The owner type. Can either be 'org' or 'user' */
  type: AppInvitationDetailResponseDistributionGroupOwnerType;
}

export interface AppRepoResponse {
  /** The unique id (UUID) of the repository integration */
  id: string;
  /** The unique id (UUID) of the app that this repository integration belongs to */
  appId: string;
  /** The absolute URL of the repository */
  repoUrl: string;
  /** The provider of the repository */
  repoProvider?: AppRepoResponseRepoProvider;
  /** The unique id (UUID) of the user who configured the repository */
  userId: string;
  /** Installation id from the provider */
  installationId?: string;
  /** Repository id from the provider */
  repoId?: string;
  /** User id from the provider */
  externalUserId?: string;
  /** The id of the service connection stored in customer credential store */
  serviceConnectionId?: string;
}

export interface BasicAppResponse {
  /** The unique ID (UUID) of the app */
  id: string;
  /** The description of the app */
  description?: string;
  /** The display name of the app */
  displayName: string;
  /** A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase */
  releaseType?: string;
  /** The string representation of the URL pointing to the app's icon */
  iconUrl?: string;
  /** The string representation of the source of the app's icon */
  iconSource?: string;
  /** The name of the app used in URLs */
  name: string;
  /** The OS the app will be running on */
  os: BasicAppResponseOs;
  /** The information about the app's owner */
  owner: BasicAppResponseOwner;
}

/** The information about the app's owner */
export interface BasicAppResponseOwner {
  /** The unique id (UUID) of the owner */
  id: string;
  /** The avatar URL of the owner */
  avatarUrl?: string;
  /** The owner's display name */
  displayName: string;
  /** The owner's email address */
  email?: string;
  /** The unique name that used to identify the owner */
  name: string;
  /** The owner type. Can either be 'org' or 'user' */
  type: BasicAppResponseOwnerType;
}

export interface AppResponse {
  /** A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics */
  appSecret?: string;
  azureSubscription?: AppResponseAzureSubscription;
  /** The platform of the app */
  platform?: AppResponsePlatform;
  /** The creation origin of this app */
  origin?: AppResponseOrigin;
  /** The created date of this app */
  createdAt?: string;
  /** The last updated date of this app */
  updatedAt?: string;
  /** The permissions of the calling user */
  memberPermissions?: AppResponseMemberPermissionsItem[];
}

export interface AppResponseAzureSubscription {
  /** The azure subscription id */
  subscriptionId: string;
  /** The tenant id of the azure subscription belongs to */
  tenantId: string;
  /** The name of the azure subscription */
  subscriptionName: string;
  /** If the subscription is used for billing */
  isBilling?: boolean;
  /** If the subscription can be used for billing */
  isBillable?: boolean;
  /** If the subscription is internal Microsoft subscription */
  isMicrosoftInternal?: boolean;
}

export interface TesterAppResponse {
  /** it indicates if the app is microsoft internal */
  microsoftInternal?: boolean;
  /** The permissions associated with the app */
  permissions?: string[];
}

export interface OrgDistributionGroupAppResponse {
  /** The platform of the app */
  platform?: string;
  /** The creation origin of this app */
  origin?: string;
}

export interface AppResponseInternalRepositoriesItem {
  repoProvider?: string;
  repoUrl?: string;
}

/** the permissions for the specified app user */
export interface AppResponseInternalUserPermissions {
  permissions?: AppResponseInternalUserPermissionsItem[];
  userId?: string;
}

export interface ComponentsXf12WkSchemasAppresponseinternalAllof0 {
  /** The unique ID (UUID) of the app */
  id: string;
  /** The description of the app */
  description?: string;
  /** The display name of the app */
  displayName: string;
  /** A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase */
  releaseType?: string;
  /** The string representation of the URL pointing to the app's icon */
  iconUrl?: string;
  /** The string representation of the source of the app's icon */
  iconSource?: string;
  /** The name of the app used in URLs */
  name: string;
  /** The OS the app will be running on */
  os: AppResponseInternal0Os;
  /** The information about the app's owner */
  owner: AppResponseInternal0Owner;
}

/** The information about the app's owner */
export interface AppResponseInternal0Owner {
  /** The unique id (UUID) of the owner */
  id: string;
  /** The avatar URL of the owner */
  avatarUrl?: string;
  /** The owner's display name */
  displayName: string;
  /** The owner's email address */
  email?: string;
  /** The unique name that used to identify the owner */
  name: string;
  /** The owner type. Can either be 'org' or 'user' */
  type: AppResponseInternal0OwnerType;
}

export interface Components1V5My88SchemasAppresponseinternalAllof0Allof1 {
  /** A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics */
  appSecret?: string;
  azureSubscription?: AppResponseInternal01AzureSubscription;
  /** The platform of the app */
  platform?: AppResponseInternal01Platform;
  /** The creation origin of this app */
  origin?: AppResponseInternal01Origin;
  /** The created date of this app */
  createdAt?: string;
  /** The last updated date of this app */
  updatedAt?: string;
  /** The permissions of the calling user */
  memberPermissions?: AppResponseInternal01MemberPermissionsItem[];
}

export interface AppResponseInternal01AzureSubscription {
  /** The azure subscription id */
  subscriptionId: string;
  /** The tenant id of the azure subscription belongs to */
  tenantId: string;
  /** The name of the azure subscription */
  subscriptionName: string;
  /** If the subscription is used for billing */
  isBilling?: boolean;
  /** If the subscription can be used for billing */
  isBillable?: boolean;
  /** If the subscription is internal Microsoft subscription */
  isMicrosoftInternal?: boolean;
}

export interface AppUserPermissionResponse {
  /** The unique id (UUID) of the app */
  appId: string;
  /** The permissions the user has for the app */
  permissions: AppUserPermissionResponsePermissionsItem[];
  /** The email of the user */
  userEmail: string;
  /** The unique id (UUID) of the user */
  userId: string;
  /** The creation origin of this app */
  appOrigin: AppUserPermissionResponseAppOrigin;
  /** A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics */
  appSecret: string;
}

export interface Components1QyxhbgSchemasAppwithteampermissionsresponseAllof0 {
  /** The unique ID (UUID) of the app */
  id: string;
  /** The description of the app */
  description?: string;
  /** The display name of the app */
  displayName: string;
  /** A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase */
  releaseType?: string;
  /** The string representation of the URL pointing to the app's icon */
  iconUrl?: string;
  /** The string representation of the source of the app's icon */
  iconSource?: string;
  /** The name of the app used in URLs */
  name: string;
  /** The OS the app will be running on */
  os: AppWithTeamPermissionsResponse0Os;
  /** The information about the app's owner */
  owner: AppWithTeamPermissionsResponse0Owner;
}

/** The information about the app's owner */
export interface AppWithTeamPermissionsResponse0Owner {
  /** The unique id (UUID) of the owner */
  id: string;
  /** The avatar URL of the owner */
  avatarUrl?: string;
  /** The owner's display name */
  displayName: string;
  /** The owner's email address */
  email?: string;
  /** The unique name that used to identify the owner */
  name: string;
  /** The owner type. Can either be 'org' or 'user' */
  type: AppWithTeamPermissionsResponse0OwnerType;
}

export interface Components1Lu2Z3SchemasAppwithteampermissionsresponseAllof0Allof1 {
  /** A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics */
  appSecret?: string;
  azureSubscription?: AppWithTeamPermissionsResponse01AzureSubscription;
  /** The platform of the app */
  platform?: AppWithTeamPermissionsResponse01Platform;
  /** The creation origin of this app */
  origin?: AppWithTeamPermissionsResponse01Origin;
  /** The created date of this app */
  createdAt?: string;
  /** The last updated date of this app */
  updatedAt?: string;
  /** The permissions of the calling user */
  memberPermissions?: AppWithTeamPermissionsResponse01MemberPermissionsItem[];
}

export interface AppWithTeamPermissionsResponse01AzureSubscription {
  /** The azure subscription id */
  subscriptionId: string;
  /** The tenant id of the azure subscription belongs to */
  tenantId: string;
  /** The name of the azure subscription */
  subscriptionName: string;
  /** If the subscription is used for billing */
  isBilling?: boolean;
  /** If the subscription can be used for billing */
  isBillable?: boolean;
  /** If the subscription is internal Microsoft subscription */
  isMicrosoftInternal?: boolean;
}

export interface OrgUserPermissionResponse {
  /** The unique id (UUID) of the org */
  orgId: string;
  /** The user role for the org */
  userRole: OrgUserPermissionResponseUserRole;
}

export interface AzureSubscriptionResponse {
  /** The azure subscription id */
  subscriptionId: string;
  /** The tenant id of the azure subscription belongs to */
  tenantId: string;
  /** The name of the azure subscription */
  subscriptionName: string;
  /** If the subscription is used for billing */
  isBilling?: boolean;
  /** If the subscription can be used for billing */
  isBillable?: boolean;
  /** If the subscription is internal Microsoft subscription */
  isMicrosoftInternal?: boolean;
}

export interface DistributionGroupResponse {
  /** The unique ID of the distribution group */
  id: string;
  /** The name of the distribution group used in URLs */
  name: string;
  /** The name of the distribution group */
  displayName?: string;
  /** The creation origin of this distribution group */
  origin: DistributionGroupResponseOrigin;
  /** Whether the distribution group is public */
  isPublic: boolean;
}

export interface DistributionGroupPrivateResponse {
  /** Type of group */
  groupType?: DistributionGroupPrivateResponseGroupType;
}

export interface DistributionGroupDetailsResponse {
  /** Whether the distribution group is shared group or not */
  isShared?: boolean;
  /** The count of apps associated with this distribution group */
  totalAppsCount?: number;
  /** The count of users in the distribution group */
  totalUserCount?: number;
  /** The count of non-pending users in the distribution group who will be notified by new releases */
  notifiedUserCount?: number;
  /** Type of group (Default, HockeyAppDefault or MicrosoftDogfooding) */
  groupType?: DistributionGroupDetailsResponseGroupType;
  /** The distribution group users */
  users?: DistributionGroupDetailsResponseUsersItem[];
}

export interface DistributionGroupDetailsResponseUsersItem {
  /** The unique id (UUID) of the user */
  id?: string;
  /** The avatar URL of the user */
  avatarUrl?: string;
  /** User is required to send an old password in order to change the password. */
  canChangePassword?: boolean;
  /** The full name of the user. Might for example be first and last name */
  displayName?: string;
  /** The email address of the user */
  email: string;
  /** Whether the has accepted the invite. Available when an invite is pending, and the value will be "true". */
  invitePending?: boolean;
  /** The unique name that is used to identify the user. */
  name?: string;
}

export interface OrgDistributionGroupDetailsResponse {
  /** The count of apps associated with this distribution group */
  totalAppsCount?: number;
  /** The count of users in the distribution group */
  totalUsersCount?: number;
  /** The apps associated with the distribution group */
  apps?: OrgDistributionGroupDetailsResponseAppsItem[];
}

export interface Components81FkqhSchemasOrgdistributiongroupdetailsresponsePropertiesAppsItemsAllof0 {
  /** The unique ID (UUID) of the app */
  id: string;
  /** The description of the app */
  description?: string;
  /** The display name of the app */
  displayName: string;
  /** A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase */
  releaseType?: string;
  /** The string representation of the URL pointing to the app's icon */
  iconUrl?: string;
  /** The string representation of the source of the app's icon */
  iconSource?: string;
  /** The name of the app used in URLs */
  name: string;
  /** The OS the app will be running on */
  os: Enum674;
  /** The information about the app's owner */
  owner: Components17Nuvn1SchemasOrgdistributiongroupdetailsresponsePropertiesAppsItemsAllof0PropertiesOwner;
}

/** The information about the app's owner */
export interface Components17Nuvn1SchemasOrgdistributiongroupdetailsresponsePropertiesAppsItemsAllof0PropertiesOwner {
  /** The unique id (UUID) of the owner */
  id: string;
  /** The avatar URL of the owner */
  avatarUrl?: string;
  /** The owner's display name */
  displayName: string;
  /** The owner's email address */
  email?: string;
  /** The unique name that used to identify the owner */
  name: string;
  /** The owner type. Can either be 'org' or 'user' */
  type: Enum675;
}

export interface ComponentsL6FpkwSchemasOrgdistributiongroupdetailsresponsePropertiesAppsItemsAllof1 {
  /** A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics */
  appSecret?: string;
  azureSubscription?: Components1Vx7L44SchemasOrgdistributiongroupdetailsresponsePropertiesAppsItemsAllof1PropertiesAzureSubscription;
  /** The platform of the app */
  platform?: Enum676;
  /** The creation origin of this app */
  origin?: Enum677;
  /** The created date of this app */
  createdAt?: string;
  /** The last updated date of this app */
  updatedAt?: string;
  /** The permissions of the calling user */
  memberPermissions?: OrgDistributionGroupDetailsResponseAppsAllOfPropertiesItemsItem[];
}

export interface Components1Vx7L44SchemasOrgdistributiongroupdetailsresponsePropertiesAppsItemsAllof1PropertiesAzureSubscription {
  /** The azure subscription id */
  subscriptionId: string;
  /** The tenant id of the azure subscription belongs to */
  tenantId: string;
  /** The name of the azure subscription */
  subscriptionName: string;
  /** If the subscription is used for billing */
  isBilling?: boolean;
  /** If the subscription can be used for billing */
  isBillable?: boolean;
  /** If the subscription is internal Microsoft subscription */
  isMicrosoftInternal?: boolean;
}

export interface GeneralDistributionGroupDetailsResponse {
  /** Whether the distribution group is shared group or not */
  isShared?: boolean;
  /** If distribution group is owned by an app, this is the unique app ID */
  ownerAppId?: string;
  /** If distribution group is owned by an org, this is the unique org ID */
  ownerOrgId?: string;
}

export interface DistributionGroupUserDeleteResponse {
  /** The code of the result */
  code?: string;
  /** The message of the result */
  message?: number;
  /** The status code of the result */
  status: number;
  /** The email of the user */
  userEmail?: string;
}

export interface CloseAccountOrganizationResponse {
  /** The number of collaborators from the organization */
  collaboratorsCount?: number;
}

export interface DistributionGroupUserGetResponse {
  /** The unique id (UUID) of the user */
  id?: string;
  /** The avatar URL of the user */
  avatarUrl?: string;
  /** User is required to send an old password in order to change the password. */
  canChangePassword?: boolean;
  /** The full name of the user. Might for example be first and last name */
  displayName?: string;
  /** The email address of the user */
  email: string;
  /** Whether the has accepted the invite. Available when an invite is pending, and the value will be "true". */
  invitePending?: boolean;
  /** The unique name that is used to identify the user. */
  name?: string;
}

export interface DistributionGroupUserPostResponse {
  /** The code of the result */
  code?: string;
  /** Whether the has accepted the invite. Available when an invite is pending, and the value will be "true". */
  invitePending?: boolean;
  /** The message of the result */
  message?: string;
  /** The status code of the result */
  status: number;
  /** The email of the user */
  userEmail?: string;
}

export interface DistributionGroupTesterGetResponse {
  /** The full name of the tester. Might for example be first and last name */
  displayName?: string;
  /** The unique name that is used to identify the tester. */
  name: string;
  /** The email address of the tester */
  email: string;
}

export interface DistributionGroupAADGroupPostResponse {
  /** The internal unique id (UUID) of the AAD group. */
  id?: string;
  /** The AAD unique id (UUID) of the AAD group. */
  aadGroupId?: string;
  /** The display name of the AAD group */
  displayName?: string;
}

export interface DistributionGroupAADGroupResponse {
  /** The internal unique id (UUID) of the AAD group. */
  id?: string;
  /** The AAD unique id (UUID) of the AAD group. */
  aadGroupId?: string;
  /** The display name of the AAD group */
  displayName?: string;
  isAadGroup?: boolean;
  /** The distribution group of the AAD group */
  distributionGroupName?: string;
}

export interface DistributionGroupAadGroupsDeleteResponse {
  /** The code of the result */
  code?: string;
  /** The message of the result */
  message?: number;
  /** The status code of the result */
  status: number;
  /** The aad id of the group */
  aadGroupId?: string;
}

export interface DistributionGroupWithUsersResponse {
  /** The unique ID of the distribution group */
  id: string;
  /** The name of the distribution group used in URLs */
  name: string;
  /** The count of users in the distribution group */
  totalUserCount: number;
  /** The count of aad groups in the distribution group */
  totalGroupsCount?: number;
  /** The count of non-pending users in the distribution group who will be notified by new releases */
  notifiedUserCount: number;
  /** Whether the distribution group is public */
  isPublic?: boolean;
  /** The distribution group users */
  users: DistributionGroupWithUsersResponseUsersItem[];
  /** The distribution group aad groups */
  aadGroups?: DistributionGroupWithUsersResponseAadGroupsItem[];
}

export interface DistributionGroupWithUsersResponseUsersItem {
  /** The unique id (UUID) of the user */
  id?: string;
  /** The avatar URL of the user */
  avatarUrl?: string;
  /** User is required to send an old password in order to change the password. */
  canChangePassword?: boolean;
  /** The full name of the user. Might for example be first and last name */
  displayName?: string;
  /** The email address of the user */
  email: string;
  /** Whether the has accepted the invite. Available when an invite is pending, and the value will be "true". */
  invitePending?: boolean;
  /** The unique name that is used to identify the user. */
  name?: string;
}

export interface DistributionGroupWithUsersResponseAadGroupsItem {
  /** The internal unique id (UUID) of the AAD group. */
  id?: string;
  /** The AAD unique id (UUID) of the AAD group. */
  aadGroupId?: string;
  /** The display name of the AAD group */
  displayName?: string;
}

export interface FeatureFlagsResponse {
  featureFlags: string[];
}

export interface FeatureResponse {
  /** The description of the feature */
  description?: string;
  /** The friendly name of the feature */
  displayName: string;
  /** The unique name of the feature */
  name: string;
  /** The state (unset, enabled, disabled) of the feature */
  state: number;
  /** The creation date of the feature */
  createdAt?: string;
  /** The date the feature was last updated at */
  updatedAt?: string;
}

export interface GlobalFeatureFlagsResponse {
  /** The dictionary of global state values indexed by feature flag names */
  value: { [propertyName: string]: string };
}

export interface InternalUserSignupResponse {
  /** The unique id (UUID) of the user */
  id: string;
  /** The full name of the user. Might for example be first and last name */
  displayName: string;
  /** The email address of the user */
  email: string;
  /** The name of the external auth provider */
  externalProvider?: string;
  /** The user ID given by the external provider */
  externalUserId?: string;
  /** The unique name that is used to identify the user. */
  name: string;
  /** The current status of the user record after signup */
  status?: InternalUserSignupResponseStatus;
}

export interface InvitationDetailResponse {
  /** The id of the invitation */
  invitationId: string;
  invitedBy: InvitationDetailResponseInvitedBy;
  organization?: InvitationDetailResponseOrganization;
  app?: InvitationDetailResponseApp;
}

export interface InvitationDetailResponseInvitedBy {
  /** The unique id (UUID) of the user */
  id: string;
  /** The avatar URL of the user */
  avatarUrl?: string;
  /** User is required to send an old password in order to change the password. */
  canChangePassword?: boolean;
  /** The full name of the user. Might for example be first and last name */
  displayName: string;
  /** The email address of the user */
  email: string;
  /** The unique name that is used to identify the user. */
  name: string;
  /** The permissions the user has for the app */
  permissions?: InvitationDetailResponseInvitedByPermissionsItem[];
  /** The creation origin of this user */
  origin: InvitationDetailResponseInvitedByOrigin;
}

export interface InvitationDetailResponseOrganization {
  /** The internal unique id (UUID) of the organization. */
  id: string;
  /** The display name of the organization */
  displayName: string;
  /** The slug name of the organization */
  name: string;
  /** The URL to a user-uploaded Avatar image */
  avatarUrl?: string;
  /** The creation origin of this organization */
  origin: InvitationDetailResponseOrganizationOrigin;
  /** The creation date of this organization */
  createdAt: string;
  /** The date the organization was last updated at */
  updatedAt: string;
}

export interface Components1Jkno23SchemasInvitationdetailresponsePropertiesAppAllof0 {
  /** The unique ID (UUID) of the app */
  id: string;
  /** The description of the app */
  description?: string;
  /** The display name of the app */
  displayName: string;
  /** A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase */
  releaseType?: string;
  /** The string representation of the URL pointing to the app's icon */
  iconUrl?: string;
  /** The string representation of the source of the app's icon */
  iconSource?: string;
  /** The name of the app used in URLs */
  name: string;
  /** The OS the app will be running on */
  os: InvitationDetailResponseApp0Os;
  /** The information about the app's owner */
  owner: InvitationDetailResponseApp0Owner;
}

/** The information about the app's owner */
export interface InvitationDetailResponseApp0Owner {
  /** The unique id (UUID) of the owner */
  id: string;
  /** The avatar URL of the owner */
  avatarUrl?: string;
  /** The owner's display name */
  displayName: string;
  /** The owner's email address */
  email?: string;
  /** The unique name that used to identify the owner */
  name: string;
  /** The owner type. Can either be 'org' or 'user' */
  type: InvitationDetailResponseApp0OwnerType;
}

export interface Components1SdfznqSchemasInvitationdetailresponsePropertiesAppAllof1 {
  /** A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics */
  appSecret?: string;
  azureSubscription?: InvitationDetailResponseApp1AzureSubscription;
  /** The platform of the app */
  platform?: InvitationDetailResponseApp1Platform;
  /** The creation origin of this app */
  origin?: InvitationDetailResponseApp1Origin;
  /** The created date of this app */
  createdAt?: string;
  /** The last updated date of this app */
  updatedAt?: string;
  /** The permissions of the calling user */
  memberPermissions?: InvitationDetailResponseApp1MemberPermissionsItem[];
}

export interface InvitationDetailResponseApp1AzureSubscription {
  /** The azure subscription id */
  subscriptionId: string;
  /** The tenant id of the azure subscription belongs to */
  tenantId: string;
  /** The name of the azure subscription */
  subscriptionName: string;
  /** If the subscription is used for billing */
  isBilling?: boolean;
  /** If the subscription can be used for billing */
  isBillable?: boolean;
  /** If the subscription is internal Microsoft subscription */
  isMicrosoftInternal?: boolean;
}

export interface GdprInvitationDetailResponse {
  /** The id of the invitation */
  invitationId: string;
  organization?: GdprInvitationDetailResponseOrganization;
  app?: GdprInvitationDetailResponseApp;
}

export interface GdprInvitationDetailResponseOrganization {
  /** The internal unique id (UUID) of the organization. */
  id: string;
  /** The display name of the organization */
  displayName: string;
  /** The slug name of the organization */
  name: string;
  /** The URL to a user-uploaded Avatar image */
  avatarUrl?: string;
  /** The creation origin of this organization */
  origin: GdprInvitationDetailResponseOrganizationOrigin;
  /** The creation date of this organization */
  createdAt: string;
  /** The date the organization was last updated at */
  updatedAt: string;
}

export interface ComponentsJ73B5WSchemasGdprinvitationdetailresponsePropertiesAppAllof0 {
  /** The unique ID (UUID) of the app */
  id: string;
  /** The description of the app */
  description?: string;
  /** The display name of the app */
  displayName: string;
  /** A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase */
  releaseType?: string;
  /** The string representation of the URL pointing to the app's icon */
  iconUrl?: string;
  /** The string representation of the source of the app's icon */
  iconSource?: string;
  /** The name of the app used in URLs */
  name: string;
  /** The OS the app will be running on */
  os: GdprInvitationDetailResponseApp0Os;
  /** The information about the app's owner */
  owner: GdprInvitationDetailResponseApp0Owner;
}

/** The information about the app's owner */
export interface GdprInvitationDetailResponseApp0Owner {
  /** The unique id (UUID) of the owner */
  id: string;
  /** The avatar URL of the owner */
  avatarUrl?: string;
  /** The owner's display name */
  displayName: string;
  /** The owner's email address */
  email?: string;
  /** The unique name that used to identify the owner */
  name: string;
  /** The owner type. Can either be 'org' or 'user' */
  type: GdprInvitationDetailResponseApp0OwnerType;
}

export interface Components116Ns0HSchemasGdprinvitationdetailresponsePropertiesAppAllof1 {
  /** A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics */
  appSecret?: string;
  azureSubscription?: GdprInvitationDetailResponseApp1AzureSubscription;
  /** The platform of the app */
  platform?: GdprInvitationDetailResponseApp1Platform;
  /** The creation origin of this app */
  origin?: GdprInvitationDetailResponseApp1Origin;
  /** The created date of this app */
  createdAt?: string;
  /** The last updated date of this app */
  updatedAt?: string;
  /** The permissions of the calling user */
  memberPermissions?: GdprInvitationDetailResponseApp1MemberPermissionsItem[];
}

export interface GdprInvitationDetailResponseApp1AzureSubscription {
  /** The azure subscription id */
  subscriptionId: string;
  /** The tenant id of the azure subscription belongs to */
  tenantId: string;
  /** The name of the azure subscription */
  subscriptionName: string;
  /** If the subscription is used for billing */
  isBilling?: boolean;
  /** If the subscription can be used for billing */
  isBillable?: boolean;
  /** If the subscription is internal Microsoft subscription */
  isMicrosoftInternal?: boolean;
}

export interface OrgNameAvailabilityResponse {
  /** The availability status of the requested org name */
  available: boolean;
  /** The generated org name */
  name: string;
}

export interface OrganizationInvitationDetailResponse {
  /** The unique ID (UUID) of the invitation */
  id: string;
  organization: OrganizationInvitationDetailResponseOrganization;
  /** The email address of the invited user */
  email: string;
  invitedBy: OrganizationInvitationDetailResponseInvitedBy;
  /** Indicates whether the invited user already exists */
  isExistingUser: boolean;
  /** The role assigned to the invited user */
  role?: string;
}

export interface OrganizationInvitationDetailResponseOrganization {
  /** The internal unique id (UUID) of the organization. */
  id: string;
  /** The display name of the organization */
  displayName: string;
  /** The slug name of the organization */
  name: string;
  /** The URL to a user-uploaded Avatar image */
  avatarUrl?: string;
  /** The creation origin of this organization */
  origin: OrganizationInvitationDetailResponseOrganizationOrigin;
  /** The creation date of this organization */
  createdAt: string;
  /** The date the organization was last updated at */
  updatedAt: string;
}

export interface OrganizationInvitationDetailResponseInvitedBy {
  /** The unique id (UUID) of the user */
  id: string;
  /** The avatar URL of the user */
  avatarUrl?: string;
  /** User is required to send an old password in order to change the password. */
  canChangePassword?: boolean;
  /** The full name of the user. Might for example be first and last name */
  displayName: string;
  /** The email address of the user */
  email: string;
  /** The unique name that is used to identify the user. */
  name: string;
  /** The permissions the user has for the app */
  permissions?: OrganizationInvitationDetailResponseInvitedByPermissionsItem[];
  /** The creation origin of this user */
  origin: OrganizationInvitationDetailResponseInvitedByOrigin;
}

export interface OrganizationInvitationSimpleDetailResponse {
  /** The unique ID (UUID) of the invitation */
  id: string;
  /** The email address of the invited user */
  email: string;
  /** The role assigned to the invited user */
  role: string;
}

export interface AdministeredOrgsResponse {
  organizations: AdministeredOrgsResponseOrganizations;
}

export interface AdministeredOrgsResponseOrganizations {
  /** The internal unique id (UUID) of the organization. */
  id: string;
  /** The display name of the organization */
  displayName: string;
  /** The slug name of the organization */
  name: string;
  /** The URL to a user-uploaded Avatar image */
  avatarUrl?: string;
  /** The creation origin of this organization */
  origin: AdministeredOrgsResponseOrganizationsOrigin;
  /** The creation date of this organization */
  createdAt: string;
  /** The date the organization was last updated at */
  updatedAt: string;
}

export interface OrganizationResponse {
  /** The internal unique id (UUID) of the organization. */
  id: string;
  /** The display name of the organization */
  displayName: string;
  /** The slug name of the organization */
  name: string;
  /** The URL to a user-uploaded Avatar image */
  avatarUrl?: string;
  /** The creation origin of this organization */
  origin: OrganizationResponseOrigin;
  /** The creation date of this organization */
  createdAt: string;
  /** The date the organization was last updated at */
  updatedAt: string;
}

export interface OrganizationResponseInternal {
  /** The feature flags that are enabled for this organization */
  featureFlags?: string[];
}

export interface ComponentsG3G8Y3SchemasOrganizationresponsemanagementAllof0 {
  /** The internal unique id (UUID) of the organization. */
  id: string;
  /** The display name of the organization */
  displayName: string;
  /** The slug name of the organization */
  name: string;
  /** The URL to a user-uploaded Avatar image */
  avatarUrl?: string;
  /** The creation origin of this organization */
  origin: OrganizationResponseManagement0Origin;
  /** The date the organization was last updated at */
  updatedAt: string;
}

export interface Components1Rgq5DkSchemasOrganizationresponsemanagementAllof0Allof1 {
  /** The feature flags that are enabled for this organization */
  featureFlags?: string[];
}

export interface OrganizationUserResponse {
  /** The email address of the user */
  email: string;
  /** The full name of the user. Might for example be first and last name */
  displayName: string;
  /** The date when the user joined the organization */
  joinedAt: string;
  /** The unique name that is used to identify the user. */
  name: string;
  /** The role the user has within the organization */
  role: string;
}

export interface TeamAppUpdateRequest {
  /** The permissions all members of the team have on the app */
  permissions: TeamAppUpdateRequestPermissionsItem[];
}

export interface TeamRequest {
  /** The display name of the team */
  displayName: string;
  /** The name of the team */
  name?: string;
  /** The description of the team */
  description?: string;
}

export interface TeamUpdateRequest {
  /** The new display name of the team */
  displayName: string;
}

export interface TeamResponse {
  /** The internal unique id (UUID) of the team. */
  id: string;
  /** The name of the team */
  name: string;
  /** The display name of the team */
  displayName: string;
  /** The description of the team */
  description?: string;
}

export interface TeamAppResponse {
  /** The permissions the team has for the app */
  permissions?: TeamAppResponsePermissionsItem[];
}

export interface StatusResponse {
  status: string;
}

export interface PurgeResponse {
  status: string;
}

export interface ServiceBusStatusResponse {
  status: string;
  subscriptions?: ServiceBusStatusResponseSubscriptionsItem[];
}

export interface ServiceBusStatusResponseSubscriptionsItem {
  /** The name of the subsciption (prefixed with the topic name) */
  name: string;
  /** The number of messages in the subscription */
  messageCount: number;
}

export interface SubscriptionMetrics {
  /** The name of the subsciption (prefixed with the topic name) */
  name: string;
  /** The number of messages in the subscription */
  messageCount: number;
}

export interface TeamUserResponse {
  /** The email address of the user */
  email: string;
  /** The full name of the user. Might for example be first and last name */
  displayName: string;
  /** The unique name that is used to identify the user. */
  name: string;
  /** The role of the user has within the team */
  role: TeamUserResponseRole;
}

export interface UserAuthResponse {
  /** The unique id (UUID) of the user */
  id: string;
  /** The full name of the user. Might for example be first and last name */
  displayName: string;
  /** The email address of the user */
  email: string;
  /** The name of the external auth provider */
  externalProvider?: string;
  /** The user ID given by the external provider */
  externalUserId?: string;
  /** The unique name that is used to identify the user */
  name: string;
  /** The creation origin of this user */
  origin: UserAuthResponseOrigin;
}

export interface UserLiteProfileResponse {
  /** The unique id (UUID) of the user */
  id: string;
  /** The full name of the user. Might for example be first and last name */
  displayName: string;
  /** The email address of the user */
  email: string;
}

export interface UserNameAvailabilityResponse {
  /** The availability status of the requested user name */
  available: boolean;
  /** The requested user name */
  name: string;
}

export interface AppIntegration {
  /** app id */
  appId: string;
  /** integration state */
  state: string;
  /** provider type */
  provider: string;
}

export interface AppIntegrationResponse {
  /** app id */
  appId: string;
}

export interface AppMembershipsResponse {
  /** The app's origin */
  appOrigin?: string;
  /** An array of all ways a user has access to the app, based on the app_memberships table. */
  memberships?: AppMembershipsResponseMembershipsItem[];
}

export interface AppMembershipsResponseMembershipsItem {
  appId?: string;
  userId?: string;
  permissions?: string[];
  origin?: AppMembershipsResponseMembershipsItemOrigin;
  sourceType?: AppMembershipsResponseMembershipsItemSourceType;
  sourceId?: string;
}

export interface AppMembership {
  appId?: string;
  userId?: string;
  permissions?: string[];
  origin?: AppMembershipOrigin;
  sourceType?: AppMembershipSourceType;
  sourceId?: string;
}

export interface AppMembershipsValidationResponse {
  excessAppMemberships?: AppMembershipsValidationResponseExcessAppMemberships;
  appUsersWithMissingMemberships?: AppMembershipsValidationResponseAppUsersWithMissingMembershipsItem[];
  distributionGroupUsersWithMissingMemberships?: AppMembershipsValidationResponseDistributionGroupUsersWithMissingMembershipsItem[];
  organizationAdminsWithMissingMemberships?: AppMembershipsValidationResponseOrganizationAdminsWithMissingMembershipsItem[];
}

export interface AppMembershipsValidationResponseExcessAppMemberships {
  appUsersMemberships?: AppMembershipsValidationResponseExcessAppMembershipsAppUsersMembershipsItem[];
  distributionGroupMemberships?: AppMembershipsValidationResponseExcessAppMembershipsDistributionGroupMembershipsItem[];
  organizationAdminMemberships?: AppMembershipsValidationResponseExcessAppMembershipsOrganizationAdminMembershipsItem[];
}

export interface AppMembershipsValidationResponseExcessAppMembershipsAppUsersMembershipsItem {
  appId?: string;
  userId?: string;
  permissions?: string[];
  origin?: AppMembershipsValidationResponseExcessAppMembershipsAppUsersMembershipsItemOrigin;
  sourceType?: AppMembershipsValidationResponseExcessAppMembershipsAppUsersMembershipsItemSourceType;
  sourceId?: string;
}

export interface AppMembershipsValidationResponseExcessAppMembershipsDistributionGroupMembershipsItem {
  appId?: string;
  userId?: string;
  permissions?: string[];
  origin?: AppMembershipsValidationResponseExcessAppMembershipsDistributionGroupMembershipsItemOrigin;
  sourceType?: AppMembershipsValidationResponseExcessAppMembershipsDistributionGroupMembershipsItemSourceType;
  sourceId?: string;
}

export interface AppMembershipsValidationResponseExcessAppMembershipsOrganizationAdminMembershipsItem {
  appId?: string;
  userId?: string;
  permissions?: string[];
  origin?: AppMembershipsValidationResponseExcessAppMembershipsOrganizationAdminMembershipsItemOrigin;
  sourceType?: AppMembershipsValidationResponseExcessAppMembershipsOrganizationAdminMembershipsItemSourceType;
  sourceId?: string;
}

export interface AppMembershipsValidationResponseAppUsersWithMissingMembershipsItem {
  appId?: string;
  userId?: string;
  permissions?: string[];
  origin?: string;
}

export interface AppMembershipsValidationResponseDistributionGroupUsersWithMissingMembershipsItem {
  distributionGroupId?: string;
  userId?: string;
  origin?: string;
}

export interface AppMembershipsValidationResponseOrganizationAdminsWithMissingMembershipsItem {
  organizationId?: string;
  userId?: string;
  role?: string;
  origin?: string;
}

export interface UserProfileResponse {
  /** The unique id (UUID) of the user */
  id: string;
  /** The avatar URL of the user */
  avatarUrl?: string;
  /** User is required to send an old password in order to change the password. */
  canChangePassword?: boolean;
  /** The full name of the user. Might for example be first and last name */
  displayName: string;
  /** The email address of the user */
  email: string;
  /** The unique name that is used to identify the user. */
  name: string;
  /** The permissions the user has for the app */
  permissions?: UserProfileResponsePermissionsItem[];
  /** The creation origin of this user */
  origin: UserProfileResponseOrigin;
}

export interface UserProfileAdminResponse {
  /** The user's role in the organization */
  role?: UserProfileAdminResponseRole;
}

export interface UserProfileResponseInternal {
  /** The feature flags that are enabled for this app */
  featureFlags?: string[];
  /** The new admin_role */
  adminRole?: UserProfileResponseInternalAdminRole;
  /** The user's settings */
  settings?: UserProfileResponseInternalSettings;
}

/** The user's settings */
export interface UserProfileResponseInternalSettings {
  /** The marketing opt-in setting */
  marketingOptIn?: string;
}

export interface UserProfileResponseManagementIdentityProvidersItem {
  /** The name of the identity provider type */
  providerName?: UserProfileResponseManagementIdentityProvidersItemProviderName;
  /** Whether the identity provider originated in HockeyApp or App Center */
  origin?: string;
}

export interface Components1AlcexuSchemasUserprofileresponsemanagementAllof0 {
  /** The unique id (UUID) of the user */
  id: string;
  /** The avatar URL of the user */
  avatarUrl?: string;
  /** User is required to send an old password in order to change the password. */
  canChangePassword?: boolean;
  /** The full name of the user. Might for example be first and last name */
  displayName: string;
  /** The email address of the user */
  email: string;
  /** The unique name that is used to identify the user. */
  name: string;
  /** The permissions the user has for the app */
  permissions?: UserProfileResponseManagement0PermissionsItem[];
  /** The creation origin of this user */
  origin: UserProfileResponseManagement0Origin;
}

export interface Components42S30FSchemasUserprofileresponsemanagementAllof0Allof1 {
  /** The feature flags that are enabled for this app */
  featureFlags?: string[];
  /** The new admin_role */
  adminRole?: UserProfileResponseManagement01AdminRole;
  /** The user's settings */
  settings?: UserProfileResponseManagement01Settings;
}

/** The user's settings */
export interface UserProfileResponseManagement01Settings {
  /** The marketing opt-in setting */
  marketingOptIn?: string;
}

/** A user's setting */
export interface UserSettingResponse {
  /** The marketing opt-in setting */
  marketingOptIn?: string;
}

/** The information about the app's owner */
export interface Owner {
  /** The unique id (UUID) of the owner */
  id: string;
  /** The avatar URL of the owner */
  avatarUrl?: string;
  /** The owner's display name */
  displayName: string;
  /** The owner's email address */
  email?: string;
  /** The unique name that used to identify the owner */
  name: string;
  /** The owner type. Can either be 'org' or 'user' */
  type: OwnerType;
}

export interface AADGroup {
  /** The id of the aad group */
  aadGroupId: string;
  /** The id of the aad tenant */
  tenantId: string;
  /** The display name of the aad group */
  displayName: string;
}

/** an AAD user's id and tenant id */
export interface AADUser {
  /** the aad user's id */
  objectId: string;
  /** the aad user's tenant id */
  tenantId: string;
}

/** an MSA user's hex CID */
export interface MSAUser {
  /** the user's CID */
  hexcid: string;
}

export interface LinkAADtoUserRequest {
  /** An array of AAD tenant data needed to link the user to the tenants */
  aadTenantIds: string[];
  /** The role of the user to be added */
  role?: LinkAADtoUserRequestRole;
}

export interface AddUserAsRoleRequest {
  /** The role of the user to be added */
  role?: AddUserAsRoleRequestRole;
}

export interface OrganizationAadGroupPatchRequest {
  /** The user's role in the organizatiion */
  role?: OrganizationAadGroupPatchRequestRole;
}

export interface AddAADGroupResponse {
  /** The unique ID (UUID) of the aad group */
  id?: string;
}

/** Shared connection patch request */
export interface SharedConnectionPatchRequest {
  /** Display name of the shared connection */
  displayName?: string;
  /** Represents the data for connecting to service */
  data: Record<string, unknown>;
}

/** SharedConnectionRequest */
export interface SharedConnectionRequest {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "SharedConnectionRequest";
  /** display name of shared connection */
  displayName?: string;
  /** credential type of the shared connection. Values can be credentials|certificate */
  credentialType?: SharedConnectionRequestCredentialType;
}

/** SharedConnectionResponse */
export interface SharedConnectionResponse {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "SharedConnectionResponse";
  /** id of the shared connection */
  id: string;
  /** display name of shared connection */
  displayName?: string;
  /** the type of the credential */
  credentialType: SharedConnectionResponseCredentialType;
  /** whether the credentials are valid or not */
  isValid?: boolean;
  /** if the account is a 2FA account or not */
  is2FA?: boolean;
}

/** PrivateSharedConnectionResponse */
export interface PrivateSharedConnectionResponse {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "PrivateSharedConnectionResponse";
  /** id of the shared connection */
  id: string;
  /** display name of shared connection */
  displayName?: string;
  /** whether the credentials are valid or not */
  isValid?: boolean;
  /** if the account is a 2FA account or not */
  is2FA?: boolean;
}

/** SharedConnectionRequest */
export interface AppleConnectionSecretRequest {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "AppleConnectionSecretRequest";
  /** display name of shared connection */
  displayName?: string;
  /** credential type of the shared connection. Values can be credentials|certificate */
  credentialType?: AppleConnectionSecretRequestCredentialType;
}

/** apple secret details */
export interface AppleCredentialsMultifactorSecretRequestData {
  /** username to connect to apple store. */
  username: string;
  /** password to connect to apple store. */
  password: string;
  /** The 6 digit Apple OTP for Multifactor accounts */
  authCode: string;
  /** The app specific password required for app publishing for 2FA accounts */
  appSpecificPassword?: string;
}

/** SharedConnectionRequest */
export interface Components8Iu7RuSchemasApplecredentialsmultifactorsecretrequestAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "apple" | "credentials";
  /** display name of shared connection */
  displayName?: string;
  /** credential type of the shared connection. Values can be credentials|certificate */
  credentialType?: AppleCredentialsMultifactorSecretRequest0CredentialType;
}

/** apple secret details */
export interface AppleCredentialsSecretRequestData {
  /** username to connect to apple store. */
  username?: string;
  /** 6 digit auth code */
  authCode?: string;
  /** password to connect to apple store. */
  password?: string;
}

/** SharedConnectionRequest */
export interface Components5A5L2ESchemasApplecredentialssecretrequestAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "apple" | "credentials";
  /** display name of shared connection */
  displayName?: string;
  /** credential type of the shared connection. Values can be credentials|certificate */
  credentialType?: AppleCredentialsSecretRequest0CredentialType;
}

/** apple secret details */
export interface AppleCertificateSecretRequestData {
  /** The certificate contents in base 64 encoded string */
  base64Certificate: string;
  /** The password for the certificate */
  password: string;
}

/** SharedConnectionRequest */
export interface Components13S9A4RSchemasApplecertificatesecretrequestAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "apple" | "certificate";
  /** display name of shared connection */
  displayName?: string;
  /** credential type of the shared connection. Values can be credentials|certificate */
  credentialType?: AppleCertificateSecretRequest0CredentialType;
}

/** PrivateSharedConnectionResponse */
export interface PrivateAppleSecretResponse {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "PrivateAppleSecretResponse";
  /** id of the shared connection */
  id: string;
  /** display name of shared connection */
  displayName?: string;
  /** whether the credentials are valid or not */
  isValid?: boolean;
  /** if the account is a 2FA account or not */
  is2FA?: boolean;
}

/** apple secret details */
export interface PrivateAppleCredentialsSecretResponseData {
  /** username to connect to apple store. */
  username?: string;
  /** 6 digit auth code */
  authCode?: string;
  /** password to connect to apple store. */
  password?: string;
}

/** PrivateSharedConnectionResponse */
export interface ComponentsS0Rbt7SchemasPrivateapplecredentialssecretresponseAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "apple" | "certificate";
  /** id of the shared connection */
  id: string;
  /** display name of shared connection */
  displayName?: string;
  /** whether the credentials are valid or not */
  isValid?: boolean;
  /** if the account is a 2FA account or not */
  is2FA?: boolean;
}

/** apple secret details */
export interface PrivateAppleCertificateSecretResponseData {
  /** The certificate contents in base 64 encoded string */
  base64Certificate: string;
  /** The password for the certificate */
  password: string;
  /** The display name (CN) of the certificate */
  displayName: string;
  /** The date-time from which the certificate is valid */
  certificateValidityStartDate: string;
  /** The date-time till which the certificate is valid */
  certificateValidityEndDate: string;
}

/** PrivateSharedConnectionResponse */
export interface ComponentsHw7AncSchemasPrivateapplecertificatesecretresponseAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "apple" | "certificate";
  /** id of the shared connection */
  id: string;
  /** display name of shared connection */
  displayName?: string;
  /** whether the credentials are valid or not */
  isValid?: boolean;
  /** if the account is a 2FA account or not */
  is2FA?: boolean;
}

/** Apple secret details */
export interface AppleSecretDetails {
  /** username to connect to apple store. */
  username?: string;
  /** 6 digit auth code */
  authCode?: string;
  /** password to connect to apple store. */
  password?: string;
}

/** Apple secret details */
export interface AppleMultifactorSecretDetails {
  /** username to connect to apple store. */
  username: string;
  /** password to connect to apple store. */
  password: string;
  /** The 6 digit Apple OTP for Multifactor accounts */
  authCode: string;
  /** The app specific password required for app publishing for 2FA accounts */
  appSpecificPassword?: string;
}

/** Apple secret details */
export interface AppleSecretDetailsResponse {
  /** username to connect to apple store */
  username: string;
}

/** apple secret details */
export interface AppleConnectionSecretResponseData {
  /** username to connect to apple store */
  username: string;
}

/** SharedConnectionResponse */
export interface Components1Yflo3CSchemasAppleconnectionsecretresponseAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "apple";
  /** id of the shared connection */
  id: string;
  /** display name of shared connection */
  displayName?: string;
  /** the type of the credential */
  credentialType: AppleConnectionSecretResponse0CredentialType;
  /** whether the credentials are valid or not */
  isValid?: boolean;
  /** if the account is a 2FA account or not */
  is2FA?: boolean;
}

/** SharedConnectionResponse */
export interface AppleConnectionNonSecretResponse {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "AppleConnectionNonSecretResponse";
  /** id of the shared connection */
  id: string;
  /** display name of shared connection */
  displayName?: string;
  /** the type of the credential */
  credentialType: AppleConnectionNonSecretResponseCredentialType;
  /** whether the credentials are valid or not */
  isValid?: boolean;
  /** if the account is a 2FA account or not */
  is2FA?: boolean;
}

/** Apple credentials non-secret data */
export interface AppleCredentialNonSecretDetailsResponseData {
  /** username to connect to apple store */
  username: string;
}

/** SharedConnectionResponse */
export interface Components8D2JkjSchemasApplecredentialnonsecretdetailsresponseAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "apple" | "credentials";
  /** id of the shared connection */
  id: string;
  /** display name of shared connection */
  displayName?: string;
  /** the type of the credential */
  credentialType: AppleCredentialNonSecretDetailsResponse0CredentialType;
  /** whether the credentials are valid or not */
  isValid?: boolean;
  /** if the account is a 2FA account or not */
  is2FA?: boolean;
}

/** apple certificate non-secret details */
export interface AppleCertificateNonSecretDetailsResponseData {
  /** The display name (CN) of the certificate */
  displayName: string;
  /** The date-time from which the certificate is valid */
  certificateValidityStartDate: string;
  /** The date-time till which the certificate is valid */
  certificateValidityEndDate: string;
}

/** SharedConnectionResponse */
export interface ComponentsUk3N19SchemasApplecertificatenonsecretdetailsresponseAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "apple" | "certificate";
  /** id of the shared connection */
  id: string;
  /** display name of shared connection */
  displayName?: string;
  /** the type of the credential */
  credentialType: AppleCertificateNonSecretDetailsResponse0CredentialType;
  /** whether the credentials are valid or not */
  isValid?: boolean;
  /** if the account is a 2FA account or not */
  is2FA?: boolean;
}

/** apple certificate secret details. */
export interface AppleCertificateSecretDetailsResponseData {
  /** The certificate contents in base 64 encoded string */
  base64Certificate: string;
  /** The password for the certificate */
  password: string;
  /** The display name (CN) of the certificate */
  displayName: string;
  /** The date-time from which the certificate is valid */
  certificateValidityStartDate: string;
  /** The date-time till which the certificate is valid */
  certificateValidityEndDate: string;
}

/** SharedConnectionResponse */
export interface Components1Hfba82SchemasApplecertificatesecretdetailsresponseAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "apple";
  /** id of the shared connection */
  id: string;
  /** display name of shared connection */
  displayName?: string;
  /** the type of the credential */
  credentialType: AppleCertificateSecretDetailsResponse0CredentialType;
  /** whether the credentials are valid or not */
  isValid?: boolean;
  /** if the account is a 2FA account or not */
  is2FA?: boolean;
}

/** Apple Certificate Secret Details */
export interface AppleCertificateSecretDetails {
  /** The certificate contents in base 64 encoded string */
  base64Certificate: string;
  /** The password for the certificate */
  password: string;
  /** The display name (CN) of the certificate */
  displayName: string;
  /** The date-time from which the certificate is valid */
  certificateValidityStartDate: string;
  /** The date-time till which the certificate is valid */
  certificateValidityEndDate: string;
}

/** Apple Certificate Details */
export interface AppleCertificateDetails {
  /** The certificate contents in base 64 encoded string */
  base64Certificate: string;
  /** The password for the certificate */
  password: string;
}

/** Apple Certificate Secret Details */
export interface AppleCertificateNonSecretDetails {
  /** The display name (CN) of the certificate */
  displayName: string;
  /** The date-time from which the certificate is valid */
  certificateValidityStartDate: string;
  /** The date-time till which the certificate is valid */
  certificateValidityEndDate: string;
}

/** jira secret details */
export interface JiraConnectionSecretRequestData {
  /** baseUrl to connect to jira instance */
  baseUrl: string;
  /** username to connect to jira instance */
  username: string;
  /** password to connect to jira instance */
  password: string;
}

/** SharedConnectionRequest */
export interface Components1VirfwpSchemasJiraconnectionsecretrequestAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "jira";
  /** display name of shared connection */
  displayName?: string;
  /** credential type of the shared connection. Values can be credentials|certificate */
  credentialType?: JiraConnectionSecretRequest0CredentialType;
}

/** jira secret details */
export interface JiraConnectionSecretResponseData {
  /** baseUrl to connect to jira instance */
  baseUrl: string;
  /** username to connect to jira instance */
  username: string;
}

/** SharedConnectionResponse */
export interface Components1TsjhacSchemasJiraconnectionsecretresponseAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "jira";
  /** id of the shared connection */
  id: string;
  /** display name of shared connection */
  displayName?: string;
  /** the type of the credential */
  credentialType: JiraConnectionSecretResponse0CredentialType;
  /** whether the credentials are valid or not */
  isValid?: boolean;
  /** if the account is a 2FA account or not */
  is2FA?: boolean;
}

/** jira secret details */
export interface PrivateJiraConnectionSecretResponseData {
  /** baseUrl to connect to jira instance */
  baseUrl: string;
  /** username to connect to jira instance */
  username: string;
  /** password to connect to jira instance */
  password: string;
}

/** PrivateSharedConnectionResponse */
export interface Components1Rn2982SchemasPrivatejiraconnectionsecretresponseAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "jira";
  /** id of the shared connection */
  id: string;
  /** display name of shared connection */
  displayName?: string;
  /** whether the credentials are valid or not */
  isValid?: boolean;
  /** if the account is a 2FA account or not */
  is2FA?: boolean;
}

/** Jira secret details */
export interface JiraSecretDetails {
  /** baseUrl to connect to jira instance */
  baseUrl: string;
  /** username to connect to jira instance */
  username: string;
  /** password to connect to jira instance */
  password: string;
}

/** Jira secret details */
export interface JiraSecretDetailsResponse {
  /** baseUrl to connect to jira instance */
  baseUrl: string;
  /** username to connect to jira instance */
  username: string;
}

/** SharedConnectionRequest */
export interface ComponentsDtnm3YSchemasGoogleplayconnectionsecretrequestAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "googleplay";
  /** display name of shared connection */
  displayName?: string;
  /** credential type of the shared connection. Values can be credentials|certificate */
  credentialType?: GooglePlayConnectionSecretRequest0CredentialType;
}

/** SharedConnectionResponse */
export interface Components1T4OuyrSchemasGoogleplayconnectionsecretresponseAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "googleplay";
  /** id of the shared connection */
  id: string;
  /** display name of shared connection */
  displayName?: string;
  /** the type of the credential */
  credentialType: GooglePlayConnectionSecretResponse0CredentialType;
  /** whether the credentials are valid or not */
  isValid?: boolean;
  /** if the account is a 2FA account or not */
  is2FA?: boolean;
}

/** PrivateSharedConnectionResponse */
export interface Components8R88R5SchemasPrivategoogleplayconnectionsecretresponseAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "googleplay";
  /** id of the shared connection */
  id: string;
  /** display name of shared connection */
  displayName?: string;
  /** whether the credentials are valid or not */
  isValid?: boolean;
  /** if the account is a 2FA account or not */
  is2FA?: boolean;
}

/** SharedConnectionResponse */
export interface GooglePlayConnectionNonSecretResponse {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "GooglePlayConnectionNonSecretResponse";
  /** id of the shared connection */
  id: string;
  /** display name of shared connection */
  displayName?: string;
  /** the type of the credential */
  credentialType: GooglePlayConnectionNonSecretResponseCredentialType;
  /** whether the credentials are valid or not */
  isValid?: boolean;
  /** if the account is a 2FA account or not */
  is2FA?: boolean;
}

/** SharedConnectionResponse */
export interface ComponentsH0D4WySchemasGoogleplaycredentialnonsecretdetailsresponseAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "googleplay" | "credentials";
  /** id of the shared connection */
  id: string;
  /** display name of shared connection */
  displayName?: string;
  /** the type of the credential */
  credentialType: GooglePlayCredentialNonSecretDetailsResponse0CredentialType;
  /** whether the credentials are valid or not */
  isValid?: boolean;
  /** if the account is a 2FA account or not */
  is2FA?: boolean;
}

/** SharedConnectionResponse */
export interface JiraConnectionNonSecretResponse {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "JiraConnectionNonSecretResponse";
  /** id of the shared connection */
  id: string;
  /** display name of shared connection */
  displayName?: string;
  /** the type of the credential */
  credentialType: JiraConnectionNonSecretResponseCredentialType;
  /** whether the credentials are valid or not */
  isValid?: boolean;
  /** if the account is a 2FA account or not */
  is2FA?: boolean;
}

/** Jira credentials non-secret details */
export interface JiraCredentialNonSecretDetailsResponseData {
  /** baseUrl to connect to jira instance */
  baseUrl: string;
  /** username to connect to jira instance */
  username: string;
}

/** SharedConnectionResponse */
export interface ComponentsOj73MvSchemasJiracredentialnonsecretdetailsresponseAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "googleplay" | "credentials";
  /** id of the shared connection */
  id: string;
  /** display name of shared connection */
  displayName?: string;
  /** the type of the credential */
  credentialType: JiraCredentialNonSecretDetailsResponse0CredentialType;
  /** whether the credentials are valid or not */
  isValid?: boolean;
  /** if the account is a 2FA account or not */
  is2FA?: boolean;
}

export interface ApiTokenResponsev2 {
  /** The unique id (UUID) of the api token */
  id: string;
  /** The creation time */
  createdAt: string;
  /** The token's scope. A list of allowed roles. */
  scope?: ApiTokenResponsev2ScopeItem[];
  /** The encrypted value of a token. This value will only be returned for token of type in_app_update. */
  encryptedToken?: string;
  /** The description of the token */
  description?: string;
}

export interface UserDataResponse {
  /** The unique id (UUID) of the user */
  id?: string;
  /** The display name of the user */
  displayName?: string;
  /** The name of the user */
  name?: string;
  /** The url at which the user's avatar can be reached */
  avatarUrl?: string;
}

export interface UserProfileResponsev2 {
  /** The unique id (UUID) of the user */
  id: string;
  /** The avatar URL of the user */
  avatarUrl?: string;
  /** User is required to send an old password in order to change the password. */
  canChangePassword?: boolean;
  /** The full name of the user. Might for example be first and last name */
  displayName: string;
  /** The email address of the user */
  email: string;
  /** The unique name that is used to identify the user. */
  name: string;
  /** The created date of the user */
  createdAt?: string;
  /** The date in the future when the user should be checked again for NPS eligibility */
  nextNpsSurveyDate?: string;
  /** The creation origin of this user */
  origin: UserProfileResponsev2Origin;
  /** The feature flags that are enabled for this user */
  featureFlags?: string[];
  /** The new admin_role */
  adminRole?: UserProfileResponsev2AdminRole;
  /** The user's settings */
  settings?: Record<string, unknown>;
  /** The session hash of the user */
  sessionHash?: string;
}

export interface MbaasSurveyDataResponse {
  /** The next mbaas survey date for the user */
  nextSurveyDate?: string;
}

export interface ErrorDetailsv2 {
  code: ErrorDetailsv2Code;
  message: string;
}

export interface ErrorResponsev2 {
  error: ErrorResponsev2Error;
}

export interface ErrorResponsev2Error {
  code: ErrorResponsev2ErrorCode;
  message: string;
}

export interface OptimizelyUserMetaDataResponse {
  userId?: string;
  /** Any object */
  metadata?: Record<string, unknown>;
}

export interface OptimizelyUserMetaDataRequest {
  /** Any object */
  metadata?: Record<string, unknown>;
}

export interface FileAsset {
  id?: string;
  location?: string;
  token?: string;
  uploadDomain?: string;
  uploadWindowLocation?: string;
  urlEncodedToken?: string;
}

/** The source repository */
export interface SourceRepository {
  /** The repository name */
  name?: string;
  /** URL used to clone the repository */
  cloneUrl?: string;
}

/** The source repository */
export interface SourceRepositoriesItem {
  /** The repository name */
  name?: string;
  /** URL used to clone the repository */
  cloneUrl?: string;
}

/** The GitHub Installation */
export interface GitHubInstallationLite {
  /** GitHub Installation Id */
  id?: number;
  /** The GitHub Installation */
  account?: GitHubInstallationLiteAccount;
  /** GitHub Installation App Id */
  appId?: number;
}

/** The GitHub Installation */
export interface GitHubInstallationLiteAccount {
  /** GitHub Account Id */
  id?: string;
  /** GitHub Account Login Name */
  login?: string;
  /** GitHub Account Type */
  type?: string;
  /** GitHub Account Url */
  url?: string;
}

/** The GitHub Installation */
export interface GitHubAccountLite {
  /** GitHub Account Id */
  id?: string;
  /** GitHub Account Login Name */
  login?: string;
  /** GitHub Account Type */
  type?: string;
  /** GitHub Account Url */
  url?: string;
}

/** The repository which is accessiable by GitHub App Installation */
export interface GitHubInstallationRepository {
  /** The repository name */
  name?: string;
  /** The discription of repository */
  description?: string;
  /** URL used to clone the repository */
  cloneUrl?: string;
  /** The default branch for the repo */
  defaultBranch?: string;
  /** The language in the repository */
  language?: string;
  /** The repository updated time */
  updatedAt?: string;
  /** Whether the repository is a fork */
  fork?: boolean;
}

/** The repository which is accessiable by GitHub App Installation */
export interface GitHubInstallationRepositoriesItem {
  /** The repository name */
  name?: string;
  /** The discription of repository */
  description?: string;
  /** URL used to clone the repository */
  cloneUrl?: string;
  /** The default branch for the repo */
  defaultBranch?: string;
  /** The language in the repository */
  language?: string;
  /** The repository updated time */
  updatedAt?: string;
  /** Whether the repository is a fork */
  fork?: boolean;
}

/** App Center account details from GitHub billing */
export interface GitHubBillingAccount {
  /** The unique id (UUID) of the account */
  id: string;
  /** The account's display name */
  displayName: string;
  /** The unique name that used to identify the owner */
  name: string;
  /** The owner type. Can either be 'org' or 'user' */
  type: GitHubBillingAccountType;
}

/** The lite version of GitHub pull request */
export interface GitHubPullRequestLite {
  /** The lite version of GitHub branch */
  head?: GitHubPullRequestLiteHead;
  /** The lite version of GitHub branch */
  base?: GitHubPullRequestLiteBase;
}

/** The lite version of GitHub branch */
export interface GitHubPullRequestLiteHead {
  /** The repository name */
  ref?: string;
  /** The discription of repository */
  sha?: string;
  /** The lite version of GitHub repository */
  repo?: GitHubPullRequestLiteHeadRepo;
}

/** The lite version of GitHub repository */
export interface GitHubPullRequestLiteHeadRepo {
  /** The repository id */
  id?: number;
}

/** The lite version of GitHub branch */
export interface GitHubPullRequestLiteBase {
  /** The repository name */
  ref?: string;
  /** The discription of repository */
  sha?: string;
  /** The lite version of GitHub repository */
  repo?: GitHubPullRequestLiteBaseRepo;
}

/** The lite version of GitHub repository */
export interface GitHubPullRequestLiteBaseRepo {
  /** The repository id */
  id?: number;
}

/** The lite version of GitHub branch */
export interface GitHubBranchLite {
  /** The repository name */
  ref?: string;
  /** The discription of repository */
  sha?: string;
  /** The lite version of GitHub repository */
  repo?: GitHubBranchLiteRepo;
}

/** The lite version of GitHub repository */
export interface GitHubBranchLiteRepo {
  /** The repository id */
  id?: number;
}

/** The lite version of GitHub repository */
export interface GitHubRepositoryLite {
  /** The repository id */
  id?: number;
}

/** App extension information */
export interface IosAppExtensionInfo {
  /** App extension name */
  name: string;
  /** App extension bundle identifier */
  targetBundleIdentifier: string;
}

/** Provisioning profile fetch and store information */
export interface ProvisioningProfileFile {
  /** Name of uploaded provisioning profile */
  fileName?: string;
  /** File id from secure file storage */
  fileId?: string;
  /** Upload id to App Center File Upload Store */
  uploadId?: string;
  /** Target the provisioning profile is used to sign */
  targetBundleIdentifier?: string;
}

/** VSTS user profile */
export interface VstsProfile {
  /** Profile id */
  id?: string;
  /** Profile display name */
  displayName?: string;
  /** Profile alias */
  publicAlias?: string;
  /** Profile email */
  emailAddress?: string;
}

/** VSTS project */
export interface VstsProject {
  /** Project id */
  id?: string;
  /** Project name */
  name?: string;
  /** Project description */
  description?: string;
  /** Project URL */
  url?: string;
  /** Project state */
  state?: string;
  /** Project visibility */
  visibility?: string;
}

/** VSTS account with projects list and user info */
export interface VstsAccount {
  /** Account id */
  accountId?: string;
  /** Account uri */
  accountUri?: string;
  /** Account name */
  accountName?: string;
  /** Account type */
  accountType?: string;
  /** Account status */
  accountStatus?: string;
  /** VSTS user profile */
  user?: VstsAccountUser;
  /** Account projects */
  projects?: VstsAccountProjectsItem[];
}

/** VSTS user profile */
export interface VstsAccountUser {
  /** Profile id */
  id?: string;
  /** Profile display name */
  displayName?: string;
  /** Profile alias */
  publicAlias?: string;
  /** Profile email */
  emailAddress?: string;
}

/** VSTS project */
export interface VstsAccountProjectsItem {
  /** Project id */
  id?: string;
  /** Project name */
  name?: string;
  /** Project description */
  description?: string;
  /** Project URL */
  url?: string;
  /** Project state */
  state?: string;
  /** Project visibility */
  visibility?: string;
}

/** VSTS account with projects list and user info */
export interface VstsAccountsItem {
  /** Account id */
  accountId?: string;
  /** Account uri */
  accountUri?: string;
  /** Account name */
  accountName?: string;
  /** Account type */
  accountType?: string;
  /** Account status */
  accountStatus?: string;
  /** VSTS user profile */
  user?: VstsAccountsItemUser;
  /** Account projects */
  projects?: VstsAccountsPropertiesItemsItem[];
}

/** VSTS user profile */
export interface VstsAccountsItemUser {
  /** Profile id */
  id?: string;
  /** Profile display name */
  displayName?: string;
  /** Profile alias */
  publicAlias?: string;
  /** Profile email */
  emailAddress?: string;
}

/** VSTS project */
export interface VstsAccountsPropertiesItemsItem {
  /** Project id */
  id?: string;
  /** Project name */
  name?: string;
  /** Project description */
  description?: string;
  /** Project URL */
  url?: string;
  /** Project state */
  state?: string;
  /** Project visibility */
  visibility?: string;
}

/** A download reference */
export interface DownloadContainer {
  /** Download URI */
  uri: string;
}

/** A websocket reference */
export interface WebSocketContainer {
  /** WebSocket URL */
  url: string;
}

export interface XcodeArchiveProject {
  /** The Id of the target to archive */
  archiveTargetId: string;
  /** The project to archive container name */
  projectName: string;
  /** Full path of the target project */
  projectPath?: string;
}

export interface XcodeScheme {
  /** Scheme name */
  name: string;
  /** Does scheme have a test action? */
  hasTestAction: boolean;
  /** Build configuration set in Archive action */
  archiveConfiguration?: string;
  archiveProject?: XcodeSchemeArchiveProject;
}

export interface XcodeSchemeArchiveProject {
  /** The Id of the target to archive */
  archiveTargetId: string;
  /** The project to archive container name */
  projectName: string;
  /** Full path of the target project */
  projectPath?: string;
}

export interface XcodeToolset {
  /** The Xcode scheme containers */
  xcodeSchemeContainers: XcodeToolsetXcodeSchemeContainersItem[];
}

export interface XcodeToolsetXcodeSchemeContainersItem {
  /** Path to project */
  path: string;
  /** Project schemes */
  sharedSchemes: XcodeToolsetXcodeSchemeContainersPropertiesItemsItem[];
  /** Path to CocoaPods file, if present */
  podfilePath?: string;
  /** Path to Carthage file, if present */
  cartfilePath?: string;
  /** repo object Id of the pbxproject */
  xcodeProjectSha?: string;
  /** Related projects paths for xcworkspace */
  workspaceProjectPaths?: string;
  /** Information regarding project app extensions, if present */
  appExtensionTargets?: Components1SlyjcwSchemasXcodetoolsetPropertiesXcodeschemecontainersItemsPropertiesAppextensiontargetsItems[];
}

export interface XcodeToolsetXcodeSchemeContainersPropertiesItemsItem {
  /** Scheme name */
  name: string;
  /** Does scheme have a test action? */
  hasTestAction: boolean;
  /** Build configuration set in Archive action */
  archiveConfiguration?: string;
  archiveProject?: XcodeToolsetXcodeSchemeContainersItemSharedSchemesItemArchiveProject;
}

export interface XcodeToolsetXcodeSchemeContainersItemSharedSchemesItemArchiveProject {
  /** The Id of the target to archive */
  archiveTargetId: string;
  /** The project to archive container name */
  projectName: string;
  /** Full path of the target project */
  projectPath?: string;
}

/** App extension information */
export interface Components1SlyjcwSchemasXcodetoolsetPropertiesXcodeschemecontainersItemsPropertiesAppextensiontargetsItems {
  /** App extension name */
  name: string;
  /** App extension bundle identifier */
  targetBundleIdentifier: string;
}

export interface XcodeSchemeContainer {
  /** Path to project */
  path: string;
  /** Project schemes */
  sharedSchemes: XcodeSchemeContainerSharedSchemesItem[];
  /** Path to CocoaPods file, if present */
  podfilePath?: string;
  /** Path to Carthage file, if present */
  cartfilePath?: string;
  /** repo object Id of the pbxproject */
  xcodeProjectSha?: string;
  /** Related projects paths for xcworkspace */
  workspaceProjectPaths?: string;
  /** Information regarding project app extensions, if present */
  appExtensionTargets?: XcodeSchemeContainerAppExtensionTargetsItem[];
}

export interface XcodeSchemeContainerSharedSchemesItem {
  /** Scheme name */
  name: string;
  /** Does scheme have a test action? */
  hasTestAction: boolean;
  /** Build configuration set in Archive action */
  archiveConfiguration?: string;
  archiveProject?: XcodeSchemeContainerSharedSchemesItemArchiveProject;
}

export interface XcodeSchemeContainerSharedSchemesItemArchiveProject {
  /** The Id of the target to archive */
  archiveTargetId: string;
  /** The project to archive container name */
  projectName: string;
  /** Full path of the target project */
  projectPath?: string;
}

/** App extension information */
export interface XcodeSchemeContainerAppExtensionTargetsItem {
  /** App extension name */
  name: string;
  /** App extension bundle identifier */
  targetBundleIdentifier: string;
}

export interface XamarinToolset {
  /** Xamarin solutions for the toolset */
  xamarinSolutions: XamarinToolsetXamarinSolutionsItem[];
}

export interface XamarinToolsetXamarinSolutionsItem {
  /** Path to solution */
  path: string;
  /** Solution configurations */
  configurations: string[];
  /** Solution default configuration */
  defaultConfiguration?: string;
}

export interface XamarinSolution {
  /** Path to solution */
  path: string;
  /** Solution configurations */
  configurations: string[];
  /** Solution default configuration */
  defaultConfiguration?: string;
}

export interface AndroidProject {
  /** Android Gradle modules */
  androidModules: AndroidProjectAndroidModulesItem[];
  /** The path of the Gradle wrapper */
  gradleWrapperPath?: string;
}

export interface AndroidProjectAndroidModulesItem {
  /** Name of the Android module */
  name: string;
  /** Module contains bundle settings */
  hasBundle?: boolean;
  /** The product flavors of the Android module */
  productFlavors?: string[];
  /** The detected build variants of the Android module (matrix of product flavor + build type (debug|release)) */
  buildVariants?: string[];
  /** The detected build types of the Android module */
  buildTypes?: string[];
  /** The detected build configurations of the Android module */
  buildConfigurations?: ComponentsFbgdjrSchemasAndroidprojectPropertiesAndroidmodulesItemsPropertiesBuildconfigurationsItems[];
  /** Whether the module is at the root level of the project */
  isRoot?: boolean;
}

export interface ComponentsFbgdjrSchemasAndroidprojectPropertiesAndroidmodulesItemsPropertiesBuildconfigurationsItems {
  /** Name of build configuration (the same as a build type name) */
  name: string;
  /** Android signing config. Null if not specified */
  signingConfig?: AndroidProjectAndroidModulesItemBuildConfigurationsItemSigningConfig;
}

/** Android signing config. Null if not specified */
export interface AndroidProjectAndroidModulesItemBuildConfigurationsItemSigningConfig {
  /** Indicates if storeFile is specified in the signing configuration */
  hasStoreFile?: boolean;
}

export interface AndroidModule {
  /** Name of the Android module */
  name: string;
  /** Module contains bundle settings */
  hasBundle?: boolean;
  /** The product flavors of the Android module */
  productFlavors?: string[];
  /** The detected build variants of the Android module (matrix of product flavor + build type (debug|release)) */
  buildVariants?: string[];
  /** The detected build types of the Android module */
  buildTypes?: string[];
  /** The detected build configurations of the Android module */
  buildConfigurations?: AndroidModuleBuildConfigurationsItem[];
  /** Whether the module is at the root level of the project */
  isRoot?: boolean;
}

export interface AndroidModuleBuildConfigurationsItem {
  /** Name of build configuration (the same as a build type name) */
  name: string;
  /** Android signing config. Null if not specified */
  signingConfig?: AndroidModuleBuildConfigurationsItemSigningConfig;
}

/** Android signing config. Null if not specified */
export interface AndroidModuleBuildConfigurationsItemSigningConfig {
  /** Indicates if storeFile is specified in the signing configuration */
  hasStoreFile?: boolean;
}

export interface BuildConfiguration {
  /** Name of build configuration (the same as a build type name) */
  name: string;
  /** Android signing config. Null if not specified */
  signingConfig?: BuildConfigurationSigningConfig;
}

/** Android signing config. Null if not specified */
export interface BuildConfigurationSigningConfig {
  /** Indicates if storeFile is specified in the signing configuration */
  hasStoreFile?: boolean;
}

export interface SigningConfig {
  /** Indicates if storeFile is specified in the signing configuration */
  hasStoreFile?: boolean;
}

export interface JavaScriptToolset {
  /** Paths for detected package.json files */
  packageJsonPaths: string[];
  /** The React Native solutions detected */
  javascriptSolutions?: JavaScriptToolsetJavascriptSolutionsItem[];
}

export interface JavaScriptToolsetJavascriptSolutionsItem {
  /** The path to the detected package.json */
  packageJsonPath: string;
  /** Version of React Native from package.json files */
  reactNativeVersion?: string;
}

export interface JavaScriptSolution {
  /** The path to the detected package.json */
  packageJsonPath: string;
  /** Version of React Native from package.json files */
  reactNativeVersion?: string;
}

export interface UWPToolset {
  /** The UWP solutions detected */
  uwpSolutions: UWPToolsetUwpSolutionsItem[];
}

export interface UWPToolsetUwpSolutionsItem {
  /** The path to the UWP solution */
  path: string;
  /** The possible configurations detected for the UWP solution */
  configurations: string[];
}

export interface UWPSolution {
  /** The path to the UWP solution */
  path: string;
  /** The possible configurations detected for the UWP solution */
  configurations: string[];
}

export interface TestCloudToolset {
  /** The TestCloud projects detected */
  projects: TestCloudToolsetProjectsItem[];
}

export interface TestCloudToolsetProjectsItem {
  /** The path to the TestCloud project */
  path: string;
  frameworkType: TestCloudToolsetProjectsItemFrameworkType;
  frameworkProperties?: TestCloudToolsetProjectsItemFrameworkProperties;
}

export interface TestCloudToolsetProjectsItemFrameworkProperties {
  configurations?: string[];
}

export interface TestCloudProject {
  /** The path to the TestCloud project */
  path: string;
  frameworkType: TestCloudProjectFrameworkType;
  frameworkProperties?: TestCloudProjectFrameworkProperties;
}

export interface TestCloudProjectFrameworkProperties {
  configurations?: string[];
}

/** A collection of projects for each type of toolset */
export interface ToolsetProjects {
  /** The commit hash of the analyzed commit */
  commit?: string;
  xcode?: ToolsetProjectsXcode;
  javascript?: ToolsetProjectsJavascript;
  xamarin?: ToolsetProjectsXamarin;
  android?: ToolsetProjectsAndroid;
  /** A collection of detected pre/post buildscripts for current platform toolset */
  buildscripts?: {
    [propertyName: string]: ComponentsCwfjmtSchemasToolsetprojectsPropertiesBuildscriptsAdditionalproperties;
  };
  uwp?: ToolsetProjectsUwp;
  testcloud?: ToolsetProjectsTestcloud;
}

export interface ToolsetProjectsXcode {
  /** The Xcode scheme containers */
  xcodeSchemeContainers: ToolsetProjectsXcodeSchemeContainersItem[];
}

export interface ToolsetProjectsXcodeSchemeContainersItem {
  /** Path to project */
  path: string;
  /** Project schemes */
  sharedSchemes: ToolsetProjectsXcodeSchemeContainersPropertiesItemsItem[];
  /** Path to CocoaPods file, if present */
  podfilePath?: string;
  /** Path to Carthage file, if present */
  cartfilePath?: string;
  /** repo object Id of the pbxproject */
  xcodeProjectSha?: string;
  /** Related projects paths for xcworkspace */
  workspaceProjectPaths?: string;
  /** Information regarding project app extensions, if present */
  appExtensionTargets?: ComponentsU3Jyw6SchemasToolsetprojectsPropertiesXcodePropertiesXcodeschemecontainersItemsPropertiesAppextensiontargetsItems[];
}

export interface ToolsetProjectsXcodeSchemeContainersPropertiesItemsItem {
  /** Scheme name */
  name: string;
  /** Does scheme have a test action? */
  hasTestAction: boolean;
  /** Build configuration set in Archive action */
  archiveConfiguration?: string;
  archiveProject?: ToolsetProjectsXcodeSchemeContainersItemSharedSchemesItemArchiveProject;
}

export interface ToolsetProjectsXcodeSchemeContainersItemSharedSchemesItemArchiveProject {
  /** The Id of the target to archive */
  archiveTargetId: string;
  /** The project to archive container name */
  projectName: string;
  /** Full path of the target project */
  projectPath?: string;
}

/** App extension information */
export interface ComponentsU3Jyw6SchemasToolsetprojectsPropertiesXcodePropertiesXcodeschemecontainersItemsPropertiesAppextensiontargetsItems {
  /** App extension name */
  name: string;
  /** App extension bundle identifier */
  targetBundleIdentifier: string;
}

export interface ToolsetProjectsJavascript {
  /** Paths for detected package.json files */
  packageJsonPaths: string[];
  /** The React Native solutions detected */
  javascriptSolutions?: ToolsetProjectsJavascriptSolutionsItem[];
}

export interface ToolsetProjectsJavascriptSolutionsItem {
  /** The path to the detected package.json */
  packageJsonPath: string;
  /** Version of React Native from package.json files */
  reactNativeVersion?: string;
}

export interface ToolsetProjectsXamarin {
  /** Xamarin solutions for the toolset */
  xamarinSolutions: ToolsetProjectsXamarinSolutionsItem[];
}

export interface ToolsetProjectsXamarinSolutionsItem {
  /** Path to solution */
  path: string;
  /** Solution configurations */
  configurations: string[];
  /** Solution default configuration */
  defaultConfiguration?: string;
}

export interface ToolsetProjectsAndroid {
  /** Android Gradle modules */
  androidModules: ToolsetProjectsAndroidModulesItem[];
  /** The path of the Gradle wrapper */
  gradleWrapperPath?: string;
}

export interface ToolsetProjectsAndroidModulesItem {
  /** Name of the Android module */
  name: string;
  /** Module contains bundle settings */
  hasBundle?: boolean;
  /** The product flavors of the Android module */
  productFlavors?: string[];
  /** The detected build variants of the Android module (matrix of product flavor + build type (debug|release)) */
  buildVariants?: string[];
  /** The detected build types of the Android module */
  buildTypes?: string[];
  /** The detected build configurations of the Android module */
  buildConfigurations?: ComponentsG6DsdaSchemasToolsetprojectsPropertiesAndroidPropertiesAndroidmodulesItemsPropertiesBuildconfigurationsItems[];
  /** Whether the module is at the root level of the project */
  isRoot?: boolean;
}

export interface ComponentsG6DsdaSchemasToolsetprojectsPropertiesAndroidPropertiesAndroidmodulesItemsPropertiesBuildconfigurationsItems {
  /** Name of build configuration (the same as a build type name) */
  name: string;
  /** Android signing config. Null if not specified */
  signingConfig?: ToolsetProjectsAndroidModulesItemBuildConfigurationsItemSigningConfig;
}

/** Android signing config. Null if not specified */
export interface ToolsetProjectsAndroidModulesItemBuildConfigurationsItemSigningConfig {
  /** Indicates if storeFile is specified in the signing configuration */
  hasStoreFile?: boolean;
}

/** Abstract platform project */
export interface ComponentsCwfjmtSchemasToolsetprojectsPropertiesBuildscriptsAdditionalproperties {
  name?: string;
  path?: string;
}

export interface ToolsetProjectsUwp {
  /** The UWP solutions detected */
  uwpSolutions: ToolsetProjectsUwpSolutionsItem[];
}

export interface ToolsetProjectsUwpSolutionsItem {
  /** The path to the UWP solution */
  path: string;
  /** The possible configurations detected for the UWP solution */
  configurations: string[];
}

export interface ToolsetProjectsTestcloud {
  /** The TestCloud projects detected */
  projects: ToolsetProjectsTestcloudProjectsItem[];
}

export interface ToolsetProjectsTestcloudProjectsItem {
  /** The path to the TestCloud project */
  path: string;
  frameworkType: ToolsetProjectsTestcloudProjectsItemFrameworkType;
  frameworkProperties?: ToolsetProjectsTestcloudProjectsItemFrameworkProperties;
}

export interface ToolsetProjectsTestcloudProjectsItemFrameworkProperties {
  configurations?: string[];
}

/** Abstract platform project */
export interface Components3K91NpSchemasBuildscriptsAdditionalproperties {
  name?: string;
  path?: string;
}

/** Abstract platform project */
export interface ToolsetProject {
  name?: string;
  path?: string;
}

/** The branch build core properties */
export interface ComponentsV0Ku4ESchemasBranchstatuscollectionItemsAdditionalproperties {
  branch?: BranchStatusCollectionAdditionalPropertiesBranch;
  enabled?: boolean;
}

export interface BranchStatusCollectionAdditionalPropertiesBranch {
  /** The branch name */
  name: string;
  commit: BranchStatusCollectionAdditionalPropertiesBranchCommit;
}

export interface BranchStatusCollectionAdditionalPropertiesBranchCommit {
  /** The commit SHA */
  sha?: string;
  /** The URL to the commit */
  url?: string;
}

/** The branch build status */
export interface BranchStatusCollectionItem {
  /** Describes unknown properties. The value of an unknown property can be of "any" type. */
  [property: string]: any;
  configured: boolean;
  lastBuild?: BranchStatusCollectionItemLastBuild;
}

export interface BranchStatusCollectionItemLastBuild {
  /** The build ID */
  id: number;
  /** The build number */
  buildNumber: string;
  /** The time the build was queued */
  queueTime: string;
  /** The time the build was started */
  startTime?: string;
  /** The time the build was finished */
  finishTime?: string;
  /** The time the build status was last changed */
  lastChangedDate?: string;
  /** The build status */
  status: string;
  /** The build result */
  result: string;
  /** The source branch name */
  sourceBranch: string;
  /** The source SHA */
  sourceVersion: string;
}

/** The branch build core properties */
export interface Components1UuhtzdSchemasBranchstatusAdditionalproperties {
  branch?: BranchStatusProperties;
  enabled?: boolean;
}

export interface BranchStatusProperties {
  /** The branch name */
  name: string;
  commit: ComponentsRwugn8SchemasBranchstatusAdditionalpropertiesPropertiesBranchPropertiesCommit;
}

export interface ComponentsRwugn8SchemasBranchstatusAdditionalpropertiesPropertiesBranchPropertiesCommit {
  /** The commit SHA */
  sha?: string;
  /** The URL to the commit */
  url?: string;
}

/** The branch build status */
export interface BranchStatus {
  /** Describes unknown properties. The value of an unknown property can be of "any" type. */
  [property: string]: any;
  configured: boolean;
  lastBuild?: BranchStatusLastBuild;
}

export interface BranchStatusLastBuild {
  /** The build ID */
  id: number;
  /** The build number */
  buildNumber: string;
  /** The time the build was queued */
  queueTime: string;
  /** The time the build was started */
  startTime?: string;
  /** The time the build was finished */
  finishTime?: string;
  /** The time the build status was last changed */
  lastChangedDate?: string;
  /** The build status */
  status: string;
  /** The build result */
  result: string;
  /** The source branch name */
  sourceBranch: string;
  /** The source SHA */
  sourceVersion: string;
}

/** The branch build core properties */
export interface BranchProperties {
  branch?: BranchPropertiesBranch;
  enabled?: boolean;
}

export interface BranchPropertiesBranch {
  /** The branch name */
  name: string;
  commit: BranchPropertiesBranchCommit;
}

export interface BranchPropertiesBranchCommit {
  /** The commit SHA */
  sha?: string;
  /** The URL to the commit */
  url?: string;
}

/** The branch build core properties */
export interface Components103Kx4VSchemasBranchconfigurationAdditionalproperties {
  branch?: BranchConfigurationProperties;
  enabled?: boolean;
}

export interface BranchConfigurationProperties {
  /** The branch name */
  name: string;
  commit: ComponentsKnnno4SchemasBranchconfigurationAdditionalpropertiesPropertiesBranchPropertiesCommit;
}

export interface ComponentsKnnno4SchemasBranchconfigurationAdditionalpropertiesPropertiesBranchPropertiesCommit {
  /** The commit SHA */
  sha?: string;
  /** The URL to the commit */
  url?: string;
}

/** The branch build configuration */
export interface BranchConfiguration {
  /** Describes unknown properties. The value of an unknown property can be of "any" type. */
  [property: string]: any;
  trigger?: BranchConfigurationTrigger;
  testsEnabled?: boolean;
  badgeIsEnabled?: boolean;
  signed?: boolean;
  /** A configured branch name to clone from. If provided, all other parameters will be ignored. Only supported in POST requests. */
  cloneFromBranch?: string;
  /** The branch build configuration for each toolset */
  toolsets?: BranchConfigurationToolsets;
  /** The versioning configuration for artifacts built for this branch */
  artifactVersioning?: BranchConfigurationArtifactVersioning;
}

/** The branch build configuration for each toolset */
export interface BranchConfigurationToolsets {
  /** Build configuration when Xcode is part of the build steps */
  xcode?: BranchConfigurationToolsetsXcode;
  /** Build configuration when React Native, or other JavaScript tech, is part of the build steps */
  javascript?: BranchConfigurationToolsetsJavascript;
  /** Build configuration for Xamarin projects */
  xamarin?: BranchConfigurationToolsetsXamarin;
  /** Build configuration for Android projects */
  android?: BranchConfigurationToolsetsAndroid;
}

/** Build configuration when Xcode is part of the build steps */
export interface BranchConfigurationToolsetsXcode {
  /** Xcode project/workspace path */
  projectOrWorkspacePath?: string;
  /** Path to CococaPods file, if present */
  podfilePath?: string;
  /** Path to Carthage file, if present */
  cartfilePath?: string;
  provisioningProfileEncoded?: string;
  certificateEncoded?: string;
  provisioningProfileFileId?: string;
  certificateFileId?: string;
  provisioningProfileUploadId?: string;
  appExtensionProvisioningProfileFiles?: BranchConfigurationToolsetsXcodeAppExtensionProvisioningProfileFilesItem[];
  certificateUploadId?: string;
  certificatePassword?: string;
  scheme?: string;
  /** Xcode version used to build. Available versions can be found in "/xcode_versions" API. Default is latest stable version, at the time when the configuration is set. */
  xcodeVersion?: string;
  provisioningProfileFilename?: string;
  certificateFilename?: string;
  teamId?: string;
  automaticSigning?: boolean;
  /** The selected pbxproject hash to the repositroy */
  xcodeProjectSha?: string;
  /** The build configuration of the target to archive */
  archiveConfiguration?: string;
  /** The target id of the selected scheme to archive */
  targetToArchive?: string;
  /**
   * Setting this to true forces the build to use Xcode legacy build system. Otherwise, the setting from workspace settings is used.
   * By default new build system is used if workspace setting is not committed to the repository. Only used for iOS React Native app, with Xcode 10.
   *
   */
  forceLegacyBuildSystem?: boolean;
}

/** Provisioning profile fetch and store information */
export interface BranchConfigurationToolsetsXcodeAppExtensionProvisioningProfileFilesItem {
  /** Name of uploaded provisioning profile */
  fileName?: string;
  /** File id from secure file storage */
  fileId?: string;
  /** Upload id to App Center File Upload Store */
  uploadId?: string;
  /** Target the provisioning profile is used to sign */
  targetBundleIdentifier?: string;
}

/** Build configuration when React Native, or other JavaScript tech, is part of the build steps */
export interface BranchConfigurationToolsetsJavascript {
  /** Path to package.json file for the main project, e.g. "package.json" or "myapp/package.json" */
  packageJsonPath?: string;
  /** Whether to run Jest unit tests, via npm test, during the build */
  runTests?: boolean;
  /** Version of React Native from package.json files */
  reactNativeVersion?: string;
}

/** Build configuration for Xamarin projects */
export interface BranchConfigurationToolsetsXamarin {
  slnPath?: string;
  isSimBuild?: boolean;
  args?: string;
  configuration?: string;
  p12File?: string;
  p12Pwd?: string;
  provProfile?: string;
  monoVersion?: string;
  sdkBundle?: string;
  /**
   * Symlink of the SDK Bundle and Mono installation.
   * The build will use the associated Mono bundled with related Xamarin SDK. If both symlink and monoVersion or sdkBundle are passed, the symlink is taking precedence. If non-existing symlink is passed, the current stable Mono version will be configured for building.
   *
   */
  symlink?: string;
}

/** Build configuration for Android projects */
export interface BranchConfigurationToolsetsAndroid {
  /** Path to the Gradle wrapper script */
  gradleWrapperPath?: string;
  /** The Gradle module to build */
  module?: string;
  /** The Android build variant to build */
  buildVariant?: string;
  /** Whether to run unit tests during the build (default) */
  runTests?: boolean;
  /** Whether to run lint checks during the build (default) */
  runLint?: boolean;
  /** Whether it is the root module or not */
  isRoot?: boolean;
  /** Whether to apply automatic signing or not */
  automaticSigning?: boolean;
  /** The password of the keystore */
  keystorePassword?: string;
  /** The key alias */
  keyAlias?: string;
  /** The key password */
  keyPassword?: string;
  /** The name of the keystore file */
  keystoreFilename?: string;
  /** The keystore encoded value */
  keystoreEncoded?: string;
}

/** The versioning configuration for artifacts built for this branch */
export interface BranchConfigurationArtifactVersioning {
  buildNumberFormat?: BranchConfigurationArtifactVersioningBuildNumberFormat;
}

/** branch configuration revision */
export interface BranchConfigurationRevisionsItem {
  id?: string;
  revision?: number;
  changedDate?: string;
  name?: string;
  changeType?: string;
  definitionUrl?: string;
  /** user who made a change in branch configuration */
  changedBy?: BranchConfigurationRevisionsItemChangedBy;
}

/** user who made a change in branch configuration */
export interface BranchConfigurationRevisionsItemChangedBy {
  displayName?: string;
  url?: string;
}

/** branch configuration revision */
export interface BranchConfigurationRevision {
  id?: string;
  revision?: number;
  changedDate?: string;
  name?: string;
  changeType?: string;
  definitionUrl?: string;
  /** user who made a change in branch configuration */
  changedBy?: BranchConfigurationRevisionChangedBy;
}

/** user who made a change in branch configuration */
export interface BranchConfigurationRevisionChangedBy {
  displayName?: string;
  url?: string;
}

/** user who made a change in branch configuration */
export interface BranchConfigurationRevisionAuthor {
  displayName?: string;
  url?: string;
}

/** The branch build core properties */
export interface Components10Y43Q0SchemasBranchconfigurationwithidAdditionalproperties {
  branch?: BranchConfigurationWithIdProperties;
  enabled?: boolean;
}

export interface BranchConfigurationWithIdProperties {
  /** The branch name */
  name: string;
  commit: Components108Rz3YSchemasBranchconfigurationwithidAdditionalpropertiesPropertiesBranchPropertiesCommit;
}

export interface Components108Rz3YSchemasBranchconfigurationwithidAdditionalpropertiesPropertiesBranchPropertiesCommit {
  /** The commit SHA */
  sha?: string;
  /** The URL to the commit */
  url?: string;
}

/** The branch build configuration */
export interface BranchConfigurationWithId {
  /** Describes unknown properties. The value of an unknown property can be of "any" type. */
  [property: string]: any;
  id: number;
}

/** Build configuration when Xcode is part of the build steps */
export interface XcodeBranchConfigurationProperties {
  /** Xcode project/workspace path */
  projectOrWorkspacePath?: string;
  /** Path to CococaPods file, if present */
  podfilePath?: string;
  /** Path to Carthage file, if present */
  cartfilePath?: string;
  provisioningProfileEncoded?: string;
  certificateEncoded?: string;
  provisioningProfileFileId?: string;
  certificateFileId?: string;
  provisioningProfileUploadId?: string;
  appExtensionProvisioningProfileFiles?: XcodeBranchConfigurationPropertiesAppExtensionProvisioningProfileFilesItem[];
  certificateUploadId?: string;
  certificatePassword?: string;
  scheme?: string;
  /** Xcode version used to build. Available versions can be found in "/xcode_versions" API. Default is latest stable version, at the time when the configuration is set. */
  xcodeVersion?: string;
  provisioningProfileFilename?: string;
  certificateFilename?: string;
  teamId?: string;
  automaticSigning?: boolean;
  /** The selected pbxproject hash to the repositroy */
  xcodeProjectSha?: string;
  /** The build configuration of the target to archive */
  archiveConfiguration?: string;
  /** The target id of the selected scheme to archive */
  targetToArchive?: string;
  /**
   * Setting this to true forces the build to use Xcode legacy build system. Otherwise, the setting from workspace settings is used.
   * By default new build system is used if workspace setting is not committed to the repository. Only used for iOS React Native app, with Xcode 10.
   *
   */
  forceLegacyBuildSystem?: boolean;
}

/** Provisioning profile fetch and store information */
export interface XcodeBranchConfigurationPropertiesAppExtensionProvisioningProfileFilesItem {
  /** Name of uploaded provisioning profile */
  fileName?: string;
  /** File id from secure file storage */
  fileId?: string;
  /** Upload id to App Center File Upload Store */
  uploadId?: string;
  /** Target the provisioning profile is used to sign */
  targetBundleIdentifier?: string;
}

/** Build configuration for Android projects */
export interface AndroidBranchConfigurationProperties {
  /** Path to the Gradle wrapper script */
  gradleWrapperPath?: string;
  /** The Gradle module to build */
  module?: string;
  /** The Android build variant to build */
  buildVariant?: string;
  /** Whether to run unit tests during the build (default) */
  runTests?: boolean;
  /** Whether to run lint checks during the build (default) */
  runLint?: boolean;
  /** Whether it is the root module or not */
  isRoot?: boolean;
  /** Whether to apply automatic signing or not */
  automaticSigning?: boolean;
  /** The password of the keystore */
  keystorePassword?: string;
  /** The key alias */
  keyAlias?: string;
  /** The key password */
  keyPassword?: string;
  /** The name of the keystore file */
  keystoreFilename?: string;
  /** The keystore encoded value */
  keystoreEncoded?: string;
}

/** Build configuration when React Native, or other JavaScript tech, is part of the build steps */
export interface JavaScriptBranchConfigurationProperties {
  /** Path to package.json file for the main project, e.g. "package.json" or "myapp/package.json" */
  packageJsonPath?: string;
  /** Whether to run Jest unit tests, via npm test, during the build */
  runTests?: boolean;
  /** Version of React Native from package.json files */
  reactNativeVersion?: string;
}

/** Build configuration for Xamarin projects */
export interface XamarinBranchConfigurationProperties {
  slnPath?: string;
  isSimBuild?: boolean;
  args?: string;
  configuration?: string;
  p12File?: string;
  p12Pwd?: string;
  provProfile?: string;
  monoVersion?: string;
  sdkBundle?: string;
  /**
   * Symlink of the SDK Bundle and Mono installation.
   * The build will use the associated Mono bundled with related Xamarin SDK. If both symlink and monoVersion or sdkBundle are passed, the symlink is taking precedence. If non-existing symlink is passed, the current stable Mono version will be configured for building.
   *
   */
  symlink?: string;
}

export interface Branch {
  /** The branch name */
  name: string;
  commit: BranchCommit;
}

export interface BranchCommit {
  /** The commit SHA */
  sha?: string;
  /** The URL to the commit */
  url?: string;
}

export interface Commit {
  /** The commit SHA */
  sha?: string;
  /** The URL to the commit */
  url?: string;
}

export interface CommitDetails {
  commit?: CommitDetailsCommit;
}

export interface CommitDetailsCommit {
  /** Commit message */
  message?: string;
  author?: CommitDetailsCommitAuthor;
}

export interface CommitDetailsCommitAuthor {
  /** Date and time of the commit */
  date?: string;
  /** Author name */
  name?: string;
  /** Author's email */
  email?: string;
}

export interface ComponentsAs4RyuSchemasCommitdetailslistItemsAllof0 {
  /** The commit SHA */
  sha?: string;
  /** The URL to the commit */
  url?: string;
}

export interface Components1Ivp89ASchemasCommitdetailslistItemsAllof1 {
  commit?: ComponentsE7Urq7SchemasCommitdetailslistItemsAllof1PropertiesCommit;
}

export interface ComponentsE7Urq7SchemasCommitdetailslistItemsAllof1PropertiesCommit {
  /** Commit message */
  message?: string;
  author?: ComponentsB4Hn9JSchemasCommitdetailslistItemsAllof1PropertiesCommitPropertiesAuthor;
}

export interface ComponentsB4Hn9JSchemasCommitdetailslistItemsAllof1PropertiesCommitPropertiesAuthor {
  /** Date and time of the commit */
  date?: string;
  /** Author name */
  name?: string;
  /** Author's email */
  email?: string;
}

export interface ComponentsTfhuzwSchemasRepoconfigAllof0 {
  /** The repository's git url, must be a HTTPS URL */
  repoUrl?: string;
  /** The repository id from the repository provider. Required for repositories connected from GitHub App and GitLab.com */
  repoId?: string;
  /** The external user id from the repository provider. Required for GitLab.com repositories */
  externalUserId?: string;
  /** The id of the service connection (private). Required for GitLab self-hosted repositories */
  serviceConnectionId?: string;
}

export interface Components1Lrnp2USchemasRepoconfigpostrequestAllof0 {
  /** The repository's git url, must be a HTTPS URL */
  repoUrl?: string;
  /** The repository id from the repository provider. Required for repositories connected from GitHub App and GitLab.com */
  repoId?: string;
  /** The external user id from the repository provider. Required for GitLab.com repositories */
  externalUserId?: string;
  /** The id of the service connection (private). Required for GitLab self-hosted repositories */
  serviceConnectionId?: string;
}

export interface RepoConfigCommon {
  /** The repository's git url, must be a HTTPS URL */
  repoUrl?: string;
  /** The repository id from the repository provider. Required for repositories connected from GitHub App and GitLab.com */
  repoId?: string;
  /** The external user id from the repository provider. Required for GitLab.com repositories */
  externalUserId?: string;
  /** The id of the service connection (private). Required for GitLab self-hosted repositories */
  serviceConnectionId?: string;
}

export interface ComponentsTqa8P8SchemasRepoconfigsItemsAllof0 {
  /** The repository's git url, must be a HTTPS URL */
  repoUrl?: string;
  /** The repository id from the repository provider. Required for repositories connected from GitHub App and GitLab.com */
  repoId?: string;
  /** The external user id from the repository provider. Required for GitLab.com repositories */
  externalUserId?: string;
  /** The id of the service connection (private). Required for GitLab self-hosted repositories */
  serviceConnectionId?: string;
}

export interface RepoInfo {
  /** The repository url */
  repoUrl: string;
  /** The external user ID */
  externalUserId?: string;
}

export interface PatchRepoInfo {
  /** The external user ID */
  externalUserId?: string;
}

/** Set of toolsets available for app */
export interface Toolsets {
  /** A list of Xamarin SDK bundles */
  xamarin?: ToolsetsXamarinItem[];
  /** A list of Xcode versions */
  xcode?: ToolsetsXcodeItem[];
  /** A list of Node versions */
  node?: ToolsetsNodeItem[];
}

/** The Xamarin SDK bundle */
export interface ToolsetsXamarinItem {
  /** The Mono version */
  monoVersion?: string;
  /** The Xamarin SDK version */
  sdkBundle?: string;
  /** If the SDK is latest stable */
  current?: boolean;
  /** If the SDK is stable */
  stable?: boolean;
  /** Specific for iOS SDK. A list of Xcode versions supported by current SDK version */
  xcodeVersions?: string[];
}

/** The Xcode version */
export interface ToolsetsXcodeItem {
  /** The version name */
  name?: string;
  /** If the Xcode is latest stable */
  current?: boolean;
}

/** The Node version */
export interface ToolsetsNodeItem {
  /** The version name */
  name?: string;
  /** If the Node version is default for AppCenter */
  current?: boolean;
}

/** The Xcode version */
export interface XcodeVersionsItem {
  /** The version name */
  name?: string;
  /** If the Xcode is latest stable */
  current?: boolean;
}

/** The Xcode version */
export interface XcodeVersion {
  /** The version name */
  name?: string;
  /** If the Xcode is latest stable */
  current?: boolean;
}

/** The Xamarin SDK bundle */
export interface XamarinSDKBundlesItem {
  /** The Mono version */
  monoVersion?: string;
  /** The Xamarin SDK version */
  sdkBundle?: string;
  /** If the SDK is latest stable */
  current?: boolean;
  /** If the SDK is stable */
  stable?: boolean;
  /** Specific for iOS SDK. A list of Xcode versions supported by current SDK version */
  xcodeVersions?: string[];
}

/** The Xamarin SDK bundle */
export interface XamarinSDKBundle {
  /** The Mono version */
  monoVersion?: string;
  /** The Xamarin SDK version */
  sdkBundle?: string;
  /** If the SDK is latest stable */
  current?: boolean;
  /** If the SDK is stable */
  stable?: boolean;
  /** Specific for iOS SDK. A list of Xcode versions supported by current SDK version */
  xcodeVersions?: string[];
}

/** The Node version */
export interface NodeVersionsItem {
  /** The version name */
  name?: string;
  /** If the Node version is default for AppCenter */
  current?: boolean;
}

/** The Node version */
export interface NodeVersion {
  /** The version name */
  name?: string;
  /** If the Node version is default for AppCenter */
  current?: boolean;
}

export interface BuildsItem {
  /** The build ID */
  id: number;
  /** The build number */
  buildNumber: string;
  /** The time the build was queued */
  queueTime: string;
  /** The time the build was started */
  startTime?: string;
  /** The time the build was finished */
  finishTime?: string;
  /** The time the build status was last changed */
  lastChangedDate?: string;
  /** The build status */
  status: string;
  /** The build result */
  result: string;
  /** The source branch name */
  sourceBranch: string;
  /** The source SHA */
  sourceVersion: string;
}

export interface BuildParams {
  /** Version to build which represents the full Git commit reference */
  sourceVersion?: string;
  /** Run build in debug mode */
  debug?: boolean;
}

export interface Build {
  /** The build ID */
  id: number;
  /** The build number */
  buildNumber: string;
  /** The time the build was queued */
  queueTime: string;
  /** The time the build was started */
  startTime?: string;
  /** The time the build was finished */
  finishTime?: string;
  /** The time the build status was last changed */
  lastChangedDate?: string;
  /** The build status */
  status: string;
  /** The build result */
  result: string;
  /** The source branch name */
  sourceBranch: string;
  /** The source SHA */
  sourceVersion: string;
}

export interface BuildPatch {
  /** The build status; used to cancel builds */
  status?: "cancelling";
}

export interface BuildLog {
  value?: string[];
}

export interface BuildTimeline {
  id?: string;
  records?: BuildTimelineRecordsItem[];
}

export interface BuildTimelineRecordsItem {
  id?: string;
  name?: string;
  order?: number;
  percentComplete?: number;
  currentOperation?: string;
  state?: string;
  result?: string;
  errorCount?: number;
  warningCount?: number;
  issues?: BuildTimelineRecordsPropertiesItemsItem[];
  startTime?: string;
  finishTime?: string;
  type?: string;
}

export interface BuildTimelineRecordsPropertiesItemsItem {
  category?: string;
  message?: string;
  type?: string;
}

export interface BuildTimelineRecord {
  id?: string;
  name?: string;
  order?: number;
  percentComplete?: number;
  currentOperation?: string;
  state?: string;
  result?: string;
  errorCount?: number;
  warningCount?: number;
  issues?: BuildTimelineRecordIssuesItem[];
  startTime?: string;
  finishTime?: string;
  type?: string;
}

export interface BuildTimelineRecordIssuesItem {
  category?: string;
  message?: string;
  type?: string;
}

export interface BuildIssue {
  category?: string;
  message?: string;
  type?: string;
}

export interface DistributionRequest {
  /** Array of objects {id:string, type:string} with "id" being the distribution group ID, store ID, or tester email, and "type" being "group", "store", or "tester" */
  destinations?: DistributionRequestDestinationsItem[];
  /** The release notes */
  releaseNotes?: string;
  mandatoryUpdate?: boolean;
  notifyTesters?: boolean;
}

/** Destination details for distributing build releases */
export interface DistributionRequestDestinationsItem {
  id: string;
  type: DistributionRequestDestinationsItemType;
}

export interface DistributionResponse {
  /** Status of the Request */
  status?: string;
  /** A unique ID of the upload */
  uploadId?: string;
}

export interface BuildServiceStatus {
  status?: string;
  service?: string;
  message?: string;
  url?: string;
  validUntil?: number;
  os?: string;
}

export interface BuildAgentQueue {
  queue: string;
}

export interface ValidationErrorResponse {
  id: string;
  code: string;
  message: string;
}

/** Queue configured in build definition */
export interface BuildAgentQueuesResponseItem {
  /** Name of the build definition */
  buildDefinition?: string;
  /** Name of the queue */
  name?: string;
}

/** Queue configured in build definition */
export interface BuildAgentQueueResponse {
  /** Name of the build definition */
  buildDefinition?: string;
  /** Name of the queue */
  name?: string;
}

/** Agent queue */
export interface AgentQueuesResponseItem {
  id?: number;
  name?: string;
}

/** Agent queue */
export interface AgentQueueResponse {
  id?: number;
  name?: string;
}

/** supported feature */
export interface AppBuildFeaturesItem {
  name?: string;
  value?: boolean;
}

/** supported feature */
export interface AppBuildFeature {
  name?: string;
  value?: boolean;
}

/** Destination details for distributing build releases */
export interface DestinationDetails {
  id: string;
  type: DestinationDetailsType;
}

/** Additional details required for file validation */
export interface FileValidationDetails {
  p12Password: string;
  certificateUploadId?: string;
}

/** Number of pipelines */
export interface BuildConcurrencyResponse {
  /** The number of pipelines set by the billing plan */
  quantity?: number;
  /** The number of pipelines committed, which can be equal or greater than the number from the billing plan */
  committedQuantity?: number;
}

export interface CreateReleaseUploadResponse {
  /** The ID for the newly created upload. It is going to be required later in the process. */
  id: string;
  /** The URL domain used to upload the release. */
  uploadDomain: string;
  /** The access token used for upload permissions. */
  token: string;
  /** The access token used for upload permissions (URL encoded to use as a single query parameter). */
  urlEncodedToken: string;
  /** The associated asset ID in the file management service associated with this uploaded. */
  packageAssetId: string;
}

export interface GetReleaseStatusResponse {
  /** The ID for the upload. */
  id: string;
  /** The current upload status. */
  uploadStatus: GetReleaseStatusResponseUploadStatus;
  /** Details describing what went wrong processing the upload. Will only be set if status = 'error'. */
  errorDetails?: string;
  /** The distinct ID of the release. Will only be set when the status = 'readyToBePublished'. */
  releaseDistinctId?: number;
  /** The URL of the release. Will only be set when the status = 'readyToBePublished'. */
  releaseUrl?: any;
}

export interface PatchReleaseUploadStatusRequest {
  /** The new status of the release upload */
  uploadStatus: PatchReleaseUploadStatusRequestUploadStatus;
}

export interface PostCreateReleaseUploadRequest {
  /** User defined build version */
  buildVersion?: string;
  /** User defined build number */
  buildNumber?: string;
}

export interface PatchReleaseUploadStatusResponse {
  /** The ID for the upload. */
  id: string;
  /** The current upload status. */
  uploadStatus: PatchReleaseUploadStatusResponseUploadStatus;
}

export interface TesterAppWithReleaseResponse {
  /** The unique ID (UUID) of the app */
  id?: string;
  release?: TesterAppWithReleaseResponseRelease;
  /** The app's name. */
  name?: string;
  /** The app's display name. */
  displayName?: string;
  /** The description of the app */
  description?: string;
  /** A URL to the app's icon. */
  iconUrl?: string;
  /** The app's os. */
  os?: string;
  /** The information about the app's owner */
  owner?: TesterAppWithReleaseResponseOwner;
}

/** Response for getting a list of releases in a distribution group */
export interface Components14MqnwvSchemasTesterappwithreleaseresponsePropertiesReleaseAllof0 {
  /** ID identifying this unique release. */
  id: number;
  /**
   * The release's version.<br>
   * For iOS: CFBundleVersion from info.plist.<br>
   * For Android: android:versionCode from AppManifest.xml.
   *
   */
  version: string;
  /** The release's origin */
  origin?: TesterAppWithReleaseResponseRelease0Origin;
  /**
   * The release's short version.<br>
   * For iOS: CFBundleShortVersionString from info.plist.<br>
   * For Android: android:versionName from AppManifest.xml.
   *
   */
  shortVersion: string;
  /** A boolean which determines whether the release is a mandatory update or not. */
  mandatoryUpdate: boolean;
  /** UTC time in ISO 8601 format of the uploaded time. */
  uploadedAt: string;
  /** This value determines the whether a release currently is enabled or disabled. */
  enabled: boolean;
  /** This value determines if a release is external or not. */
  isExternalBuild?: boolean;
}

export interface ComponentsIemtnqSchemasTesterappwithreleaseresponsePropertiesReleaseAllof1 {
  /** The release's size in bytes. */
  size: number;
  /** The href required to install a release on a mobile device. On iOS devices will be prefixed with `itms-services://?action=download-manifest&url=` */
  installUrl?: string;
  /** The release's release notes. */
  releaseNotes?: string;
}

/** The information about the app's owner */
export interface TesterAppWithReleaseResponseOwner {
  /** The unique id (UUID) of the owner */
  id?: string;
  /** The avatar URL of the owner */
  avatarUrl?: string;
  /** The owner's display name */
  displayName?: string;
  /** The owner's email address */
  email?: string;
  /** The unique name that used to identify the owner */
  name?: string;
  /** The owner type. Can either be 'org' or 'user' */
  type?: TesterAppWithReleaseResponseOwnerType;
}

/** Response for getting a list of releases in a distribution group */
export interface TesterAppRelease {
  /** The release's size in bytes. */
  size: number;
  /** The href required to install a release on a mobile device. On iOS devices will be prefixed with `itms-services://?action=download-manifest&url=` */
  installUrl?: string;
  /** The release's release notes. */
  releaseNotes?: string;
}

export interface SendNotificationRequest {
  /** user list to send email notification */
  userIds: string[];
}

/** Response for retrieving user interaction metrics. */
export interface UserInteractionMetricsResponse {
  /** check if the user has less than 100 apps. */
  lessThan100Apps?: boolean;
  /** check if the user's whole apps has more than 1 releases. */
  hasMoreThan1Release?: boolean;
}

/** Response for updating a release */
export interface ReleaseUpdateResponse {
  enabled?: boolean;
  mandatoryUpdate?: boolean;
  releaseNotes?: string;
  provisioningStatusUrl?: string;
  destinations?: ReleaseUpdateResponseDestinationsItem[];
}

export interface ReleaseUpdateResponseDestinationsItem {
  id?: string;
  name?: string;
}

/** Response for updating release details */
export interface ReleaseDetailsUpdateResponse {
  releaseNotes?: string;
}

/** Response for updating release external url */
export interface ReleaseExternalUrlUpdateResponse {
  externalDownloadUrl?: string;
}

/** Response for provisioning a release */
export interface ReleaseProvisionResponse {
  /** The url to check provisioning status. */
  statusUrl?: string;
}

/** Details of an uploaded release */
export interface PrivateReleaseDetailsResponse {
  /** ID identifying this unique release. */
  id?: number;
  /**
   * OBSOLETE. Will be removed in next version. The availability concept is now replaced with distributed. Any 'available' release will be associated with the default distribution group of an app.</br>
   * The release state.<br>
   * <b>available</b>: The uploaded release has been distributed.<br>
   * <b>unavailable</b>: The uploaded release is not visible to the user. <br>
   *
   */
  status?: PrivateReleaseDetailsResponseStatus;
  /** The app's name (extracted from the uploaded release). */
  appName?: string;
  /** The app's display name. */
  appDisplayName?: string;
  /**
   * The release's version.<br>
   * For iOS: CFBundleVersion from info.plist.
   * For Android: android:versionCode from AppManifest.xml.
   *
   */
  version?: string;
  /** The release's origin */
  origin?: PrivateReleaseDetailsResponseOrigin;
  /**
   * The release's short version.<br>
   * For iOS: CFBundleShortVersionString from info.plist.
   * For Android: android:versionName from AppManifest.xml.
   *
   */
  shortVersion?: string;
  /** The release's release notes. */
  releaseNotes?: string;
  /** The release's provisioning profile name. */
  provisioningProfileName?: string;
  /** The type of the provisioning profile for the requested app version. */
  provisioningProfileType?: PrivateReleaseDetailsResponseProvisioningProfileType;
  /** A flag that determines whether the release's provisioning profile is still extracted or not. */
  isProvisioningProfileSyncing?: boolean;
  /** The release's size in bytes. */
  size?: number;
  /** The release's minimum required operating system. */
  minOs?: string;
  /** The release's device family. */
  deviceFamily?: string;
  /** The release's minimum required Android API level. */
  androidMinApiLevel?: string;
  /** The identifier of the apps bundle. */
  bundleIdentifier?: string;
  /** MD5 checksum of the release binary. */
  fingerprint?: string;
  /** UTC time in ISO 8601 format of the uploaded time. */
  uploadedAt?: string;
  /** The URL that hosts the binary for this release. */
  downloadUrl?: string;
  /** A URL to the app's icon. */
  appIconUrl?: string;
  /** The href required to install a release on a mobile device. On iOS devices will be prefixed with `itms-services://?action=download-manifest&url=` */
  installUrl?: string;
  /** the destination where release is distributed */
  distributionGroupId?: string;
  /** the publishing status of the distributed release */
  publishingStatus?: string;
  /**
   * The destination type.<br>
   * <b>group</b>: The release distributed to internal groups and distribution_groups details will be returned.<br>
   * <b>store</b>: The release distributed to external stores and distribution_stores details will be returned. <br>
   *
   */
  destinationType?: PrivateReleaseDetailsResponseDestinationType;
  /** This value determines if a release is external or not. */
  isExternalBuild?: boolean;
}

/** Basic information on a release for private apis */
export interface PrivateBasicReleaseDetailsResponse {
  /** ID identifying this unique release. */
  id?: number;
  /**
   * The release's version.<br>
   * For iOS: CFBundleVersion from info.plist.<br>
   * For Android: android:versionCode from AppManifest.xml.
   *
   */
  version?: string;
  /** The release's origin */
  origin?: PrivateBasicReleaseDetailsResponseOrigin;
  /**
   * The release's short version.<br>
   * For iOS: CFBundleShortVersionString from info.plist.<br>
   * For Android: android:versionName from AppManifest.xml.
   *
   */
  shortVersion?: string;
  /** UTC time in ISO 8601 format of the uploaded time. */
  uploadedAt?: string;
  /** the destination id of release where it is distributed. */
  distributionGroupId?: string;
  /**
   * The destination type.<br>
   * <b>group</b>: The release distributed to internal groups and distribution_groups details will be returned.<br>
   * <b>store</b>: The release distributed to external stores and distribution_stores details will be returned. <br>
   *
   */
  destinationType?: PrivateBasicReleaseDetailsResponseDestinationType;
  /** Indicates if this is the latest release in the group. */
  isLatest?: boolean;
  /** A boolean which determines whether the release is a mandatory update or not. */
  mandatoryUpdate?: boolean;
  /** the publishing status of the distributed release */
  publishingStatus?: string;
  /** This value determines if a release is external or not. */
  isExternalBuild?: boolean;
}

/** Response for getting a list of releases in a distribution group */
export interface DistributionGroupReleasesResponseItem {
  /** ID identifying this unique release. */
  id: number;
  /**
   * The release's version.<br>
   * For iOS: CFBundleVersion from info.plist.<br>
   * For Android: android:versionCode from AppManifest.xml.
   *
   */
  version: string;
  /** The release's origin */
  origin?: DistributionGroupReleasesResponseItemOrigin;
  /**
   * The release's short version.<br>
   * For iOS: CFBundleShortVersionString from info.plist.<br>
   * For Android: android:versionName from AppManifest.xml.
   *
   */
  shortVersion: string;
  /** A boolean which determines whether the release is a mandatory update or not. */
  mandatoryUpdate: boolean;
  /** UTC time in ISO 8601 format of the uploaded time. */
  uploadedAt: string;
  /** This value determines the whether a release currently is enabled or disabled. */
  enabled: boolean;
  /** This value determines if a release is external or not. */
  isExternalBuild?: boolean;
}

/** Response for getting a list of releases in a distribution group */
export interface DistributionGroupRelease {
  /** ID identifying this unique release. */
  id: number;
  /**
   * The release's version.<br>
   * For iOS: CFBundleVersion from info.plist.<br>
   * For Android: android:versionCode from AppManifest.xml.
   *
   */
  version: string;
  /** The release's origin */
  origin?: DistributionGroupReleaseOrigin;
  /**
   * The release's short version.<br>
   * For iOS: CFBundleShortVersionString from info.plist.<br>
   * For Android: android:versionName from AppManifest.xml.
   *
   */
  shortVersion: string;
  /** A boolean which determines whether the release is a mandatory update or not. */
  mandatoryUpdate: boolean;
  /** UTC time in ISO 8601 format of the uploaded time. */
  uploadedAt: string;
  /** This value determines the whether a release currently is enabled or disabled. */
  enabled: boolean;
  /** This value determines if a release is external or not. */
  isExternalBuild?: boolean;
}

/** Basic information on a release */
export interface BasicReleaseDetailsResponse {
  /** ID identifying this unique release. */
  id: number;
  /**
   * The release's version.<br>
   * For iOS: CFBundleVersion from info.plist.<br>
   * For Android: android:versionCode from AppManifest.xml.
   *
   */
  version: string;
  /** The release's origin */
  origin?: BasicReleaseDetailsResponseOrigin;
  /**
   * The release's short version.<br>
   * For iOS: CFBundleShortVersionString from info.plist.<br>
   * For Android: android:versionName from AppManifest.xml.
   *
   */
  shortVersion: string;
  /** This value determines the whether a release currently is enabled or disabled. */
  enabled: boolean;
  /** UTC time in ISO 8601 format of the uploaded time. */
  uploadedAt: string;
  /**
   * OBSOLETE. Will be removed in next version. The destination type.<br>
   * <b>group</b>: The release distributed to internal groups and distribution_groups details will be returned.<br>
   * <b>store</b>: The release distributed to external stores and distribution_stores details will be returned. <br>
   *
   */
  destinationType?: BasicReleaseDetailsResponseDestinationType;
  /** OBSOLETE. Will be removed in next version. A list of distribution groups that are associated with this release. */
  distributionGroups?: BasicReleaseDetailsResponseDistributionGroupsItem[];
  /** OBSOLETE. Will be removed in next version. A list of distribution stores that are associated with this release. */
  distributionStores?: BasicReleaseDetailsResponseDistributionStoresItem[];
  /** A list of distribution groups or stores. */
  destinations?: BasicReleaseDetailsResponseDestinationsItem[];
  /**
   * Build information for the release
   *
   */
  build?: BasicReleaseDetailsResponseBuild;
  /** This value determines if a release is external or not. */
  isExternalBuild?: boolean;
}

export interface Components13SebpjSchemasBasicreleasedetailsresponsePropertiesDistributionGroupsItemsAllof0 {
  /** ID identifying a unique distribution group. */
  id: string;
  /** A name identifying a unique distribution group. */
  name?: string;
}

export interface Components7B8Q6ZSchemasBasicreleasedetailsresponsePropertiesDistributionGroupsItemsAllof1 {
  /** Is the containing release the latest one in this distribution group. */
  isLatest?: boolean;
}

export interface ComponentsYvfuboSchemasBasicreleasedetailsresponsePropertiesDistributionStoresItemsAllof0 {
  /** ID identifying a unique distribution store. */
  id: string;
  /** A name identifying a unique distribution store. */
  name?: string;
  /** type of the distribution store currently stores type can be intune, googleplay or windows. */
  type?: Enum800;
  /** publishing status of the release in the store. */
  publishingStatus?: string;
}

export interface Components1B3DilbSchemasBasicreleasedetailsresponsePropertiesDistributionStoresItemsAllof1 {
  /** Is the containing release the latest one in this distribution store. */
  isLatest?: boolean;
}

export interface Components1Leu8U7SchemasBasicreleasedetailsresponsePropertiesDestinationsItemsAllof0 {
  /** type of the distribution store currently stores type can be intune, googleplay or windows. */
  type?: BasicReleaseDetailsResponseDestinationsAllOfProperties;
  /** publishing status of the release in the store. */
  publishingStatus?: string;
}

export interface ComponentsV2IcyqSchemasBasicreleasedetailsresponsePropertiesDestinationsItemsAllof0Allof1 {
  /** Is the containing release the latest one in this distribution store. */
  isLatest?: boolean;
}

/** A unique identifier for a destination. A destination can be identified by an ID (guid) or by a name. DestinationId encapsulates both options. A destination can be either a distribution group or a store. */
export interface ComponentsNe0Qx0SchemasBasicreleasedetailsresponsePropertiesDestinationsItemsAllof1 {
  /** Name of a distribution group / distribution store. The release will be associated with this distribution group or store. If the distribution group / store doesn't exist a 400 is returned. If both distribution group / store name and id are passed, the id is taking precedence. */
  name?: string;
  /** Id of a distribution group / store. The release will be associated with this distribution group / store. If the distribution group / store doesn't exist a 400 is returned. If both distribution group / store name and id are passed, the id is taking precedence. */
  id: string;
}

export interface ComponentsM4TepnSchemasBasicreleasedetailsresponsePropertiesDestinationsItemsAllof2 {
  /** Destination can be either store or group. */
  destinationType?: Enum802;
  /** Display name for the group or tester */
  displayName?: string;
}

/**
 * Build information for the release
 *
 */
export interface BasicReleaseDetailsResponseBuild {
  /** The branch name of the build producing the release */
  branchName?: string;
  /** The commit hash of the build producing the release */
  commitHash?: string;
  /** The commit message of the build producing the release */
  commitMessage?: string;
}

/** Details of an uploaded release */
export interface ReleaseDetailsResponse {
  /** ID identifying this unique release. */
  id: number;
  /** The app's name (extracted from the uploaded release). */
  appName: string;
  /** The app's display name. */
  appDisplayName: string;
  /** The app's OS. */
  appOs?: string;
  /**
   * The release's version.<br>
   * For iOS: CFBundleVersion from info.plist.
   * For Android: android:versionCode from AppManifest.xml.
   *
   */
  version: string;
  /** The release's origin */
  origin?: ReleaseDetailsResponseOrigin;
  /**
   * The release's short version.<br>
   * For iOS: CFBundleShortVersionString from info.plist.
   * For Android: android:versionName from AppManifest.xml.
   *
   */
  shortVersion: string;
  /** The release's release notes. */
  releaseNotes?: string;
  /** The release's provisioning profile name. */
  provisioningProfileName?: string;
  /** The type of the provisioning profile for the requested app version. */
  provisioningProfileType?: ReleaseDetailsResponseProvisioningProfileType;
  /** expiration date of provisioning profile in UTC format. */
  provisioningProfileExpiryDate?: string;
  /** A flag that determines whether the release's provisioning profile is still extracted or not. */
  isProvisioningProfileSyncing?: boolean;
  /** The release's size in bytes. */
  size?: number;
  /** The release's minimum required operating system. */
  minOs?: string;
  /** The release's device family. */
  deviceFamily?: string;
  /** The release's minimum required Android API level. */
  androidMinApiLevel?: string;
  /** The identifier of the apps bundle. */
  bundleIdentifier?: string;
  /** Hashes for the packages. */
  packageHashes?: string[];
  /** MD5 checksum of the release binary. */
  fingerprint?: string;
  /** UTC time in ISO 8601 format of the uploaded time. */
  uploadedAt: string;
  /** The URL that hosts the binary for this release. */
  downloadUrl?: string;
  /** A URL to the app's icon. */
  appIconUrl: string;
  /** The href required to install a release on a mobile device. On iOS devices will be prefixed with `itms-services://?action=download-manifest&url=` */
  installUrl?: string;
  /**
   * OBSOLETE. Will be removed in next version. The destination type.<br>
   * <b>group</b>: The release distributed to internal groups and distribution_groups details will be returned.<br>
   * <b>store</b>: The release distributed to external stores and distribution_stores details will be returned.<br>
   * <b>tester</b>: The release distributed testers details will be returned.<br>
   *
   */
  destinationType?: ReleaseDetailsResponseDestinationType;
  /** OBSOLETE. Will be removed in next version. A list of distribution groups that are associated with this release. */
  distributionGroups?: ReleaseDetailsResponseDistributionGroupsItem[];
  /** OBSOLETE. Will be removed in next version. A list of distribution stores that are associated with this release. */
  distributionStores?: ReleaseDetailsResponseDistributionStoresItem[];
  /** A list of distribution groups or stores. */
  destinations?: ReleaseDetailsResponseDestinationsItem[];
  /** In calls that allow passing `udid` in the query string, this value will hold the provisioning status of that UDID in this release. Will be ignored for non-iOS platforms. */
  isUdidProvisioned?: boolean;
  /** In calls that allow passing `udid` in the query string, this value determines if a release can be re-signed. When true, after a re-sign, the tester will be able to install the release from his registered devices. Will not be returned for non-iOS platforms. */
  canResign?: boolean;
  /** Contains metadata about the build that produced the release being uploaded */
  build?: ReleaseDetailsResponseBuild;
  /** This value determines the whether a release currently is enabled or disabled. */
  enabled: boolean;
  /** Status of the release. */
  status?: string;
  /** This value determines if a release is external or not. */
  isExternalBuild?: boolean;
}

export interface ReleaseDetailsResponseDistributionGroupsItem {
  /** ID identifying a unique distribution group. */
  id: string;
  /** A name identifying a unique distribution group. */
  name?: string;
}

export interface ReleaseDetailsResponseDistributionStoresItem {
  /** ID identifying a unique distribution store. */
  id: string;
  /** A name identifying a unique distribution store. */
  name?: string;
  /** type of the distribution store currently stores type can be intune, googleplay or windows. */
  type?: ReleaseDetailsResponseDistributionStoresItemType;
  /** publishing status of the release in the store. */
  publishingStatus?: string;
}

export interface Components1Gq9Sx7SchemasReleasedetailsresponsePropertiesDestinationsItemsAllof0 {
  /** type of the distribution store currently stores type can be intune, googleplay or windows. */
  type?: ReleaseDetailsResponseDestinationsAllOfProperties;
  /** publishing status of the release in the store. */
  publishingStatus?: string;
}

export interface ComponentsQgfcfcSchemasReleasedetailsresponsePropertiesDestinationsItemsAllof0Allof1 {
  /** Is the containing release the latest one in this distribution store. */
  isLatest?: boolean;
}

/** A unique identifier for a destination. A destination can be identified by an ID (guid) or by a name. DestinationId encapsulates both options. A destination can be either a distribution group or a store. */
export interface Components8Xk84RSchemasReleasedetailsresponsePropertiesDestinationsItemsAllof1 {
  /** Name of a distribution group / distribution store. The release will be associated with this distribution group or store. If the distribution group / store doesn't exist a 400 is returned. If both distribution group / store name and id are passed, the id is taking precedence. */
  name?: string;
  /** Id of a distribution group / store. The release will be associated with this distribution group / store. If the distribution group / store doesn't exist a 400 is returned. If both distribution group / store name and id are passed, the id is taking precedence. */
  id: string;
}

export interface ComponentsNj5C4HSchemasReleasedetailsresponsePropertiesDestinationsItemsAllof2 {
  /** Destination can be either store or group. */
  destinationType?: Enum808;
  /** Display name for the group or tester */
  displayName?: string;
}

/** Contains metadata about the build that produced the release being uploaded */
export interface ReleaseDetailsResponseBuild {
  /** The branch name of the build producing the release */
  branchName?: string;
  /** The commit hash of the build producing the release */
  commitHash?: string;
  /** The commit message of the build producing the release */
  commitMessage?: string;
}

/** Details of an uploaded release */
export interface ManagementReleaseDetailsResponse {
  /** ID identifying this unique release. */
  distinctId?: number;
  /** The release's origin */
  origin?: ManagementReleaseDetailsResponseOrigin;
  /**
   * The release's short version.<br>
   * For iOS: CFBundleShortVersionString from info.plist.<br>
   * For Android: android:versionName from AppManifest.xml.
   *
   */
  version?: string;
  /**
   * The release's buildVersion.<br>
   * For iOS: CFBundleVersion from info.plist.<br>
   * For Android: android:versionCode from AppManifest.xml.
   *
   */
  buildVersion?: string;
  /** The release's sortVersion. */
  sortVersion?: string;
  /** UTC time the release was created in ISO 8601 format. */
  createdAt?: string;
  /** This value determines the whether a release currently is enabled or disabled. */
  enabled?: boolean;
  /** UTC time the release was created in ISO 8601 format. */
  deletedAt?: string;
}

/** A response containing information pertaining to starting a release upload process */
export interface ReleaseUploadBeginResponse {
  /** The ID for the current upload */
  uploadId: string;
  /** The URL where the client needs to upload the release to */
  uploadUrl: string;
  /** The ID for the current upload, reserved for future use */
  assetId?: string;
  /** The URL for the current upload, reserved for future use */
  assetDomain?: string;
  /** The token for the current upload, reserved for future use */
  assetToken?: string;
}

/** A request containing a set of release ids to validate */
export interface GdprValidationRequest {
  /** a list of release ids to validate (AC flow) */
  releaseIds: number[];
  /** a list of release ids to validate (HA flow) */
  hockeyappReleaseIds?: number[];
  /** a list of release uploads ids to validate */
  releaseUploadIds?: string[];
}

/** A request containing information pertaining to begin a release upload process */
export interface ReleaseUploadBeginRequest {
  /** Optional value for explicitly specifying the ID of existing release. */
  releaseId?: number;
  /** The build version of the uploaded binary, used for macOS, Windows and Custom app support. */
  buildVersion?: string;
  /** The build number of the uploaded binary, used with build_version for macOS app support. */
  buildNumber?: string;
}

/** A request containing information pertaining to complete a release upload process */
export interface ReleaseUploadEndRequest {
  /** The desired operation for the upload */
  status: ReleaseUploadEndRequestStatus;
}

/** A response containing information about the uploaded release. */
export interface ReleaseUploadEndResponse {
  /** The ID of the release. */
  releaseId?: number;
  /** A URL to the new release. If upload was aborted will be null. */
  releaseUrl?: string;
}

/** A request containing information for creating a release. */
export interface ReleaseCreateRequest {
  /**
   * The release's version.<br>
   * For iOS: CFBundleVersion from info.plist.<br>
   * For Android: android:versionCode from AppManifest.xml.
   *
   */
  version?: string;
  /**
   * The release's short version.<br>
   * For iOS: CFBundleShortVersionString from info.plist.<br>
   * For Android: android:versionName from AppManifest.xml.
   *
   */
  buildVersion?: string;
  /** The identifier of the app's bundle. */
  uniqueIdentifier?: string;
  /** The release's minimum required operating system. */
  minimumOsVersion?: string;
  /** The release's device family. */
  deviceFamily?: string;
  /** The languages supported by the release. Limited to 510 characters in a serialized array. */
  languages?: string[];
  /** MD5 checksum of the release binary. */
  fingerprint: string;
  /** The release's size in bytes. */
  size: number;
  /** The URL to the release's binary. */
  packageUrl?: string;
  /** The file extension of the asset. Does not include the initial period. */
  fileExtension?: string;
  /** The upload id associated with the release, to map to the releases upload table. */
  uploadId: string;
  /** The assetId associated with the icon uploaded to app center file upload service. */
  iconAssetId?: string;
  /** A list of UUIDs for architectures for an iOS app. */
  ipaUuids?: ReleaseCreateRequestIpaUuidsItem[];
  /** An object containing information about an iOS provisioning profile. */
  provision?: ReleaseCreateRequestProvision;
  /** iOS app extension provisioning profiles included in the release. */
  appexProvisioningProfiles?: ReleaseCreateRequestAppexProvisioningProfilesItem[];
  /** If true this release was uploaded to the AKS upload proxy */
  proxyFlow?: boolean;
}

/** An object containing a UUID for an architecture for an iOS app. */
export interface ReleaseCreateRequestIpaUuidsItem {
  /** The architecture that the UUID belongs to, i.e. armv7 or arm64. */
  architecture: string;
  /** The unique identifier. */
  uuid: string;
}

/** An object containing information about an iOS provisioning profile. */
export interface ReleaseCreateRequestProvision {
  /** The name of the provisioning profile. */
  name: string;
  /** The application identifier. */
  applicationIdentifier: string;
  /** The team identifier. */
  teamIdentifier: string;
  profileType: ReleaseCreateRequestProvisionProfileType;
  /** The profile's expiration date in RFC 3339 format, i.e. 2017-07-21T17:32:28Z */
  expiredAt: Date;
  udids?: string[];
}

/** An object containing information about an iOS provisioning profile. */
export interface ReleaseCreateRequestAppexProvisioningProfilesItem {
  /** The name of the provisioning profile. */
  name: string;
  /** The application identifier. */
  applicationIdentifier: string;
  /** The team identifier. */
  teamIdentifier: string;
  profileType: ReleaseCreateRequestAppexProvisioningProfilesItemProfileType;
  /** The profile's expiration date in RFC 3339 format, i.e. 2017-07-21T17:32:28Z */
  expiredAt: Date;
  udids?: string[];
}

/** A request containing information for creating an externally hosted release. */
export interface ExternallyHostedReleaseCreateRequest {
  /** The build version of the uploaded binary */
  buildVersion: string;
  /** The build number of the uploaded binary */
  buildNumber?: string;
  /** The external URL to the release's binary. */
  externalDownloadUrl: string;
}

/** A request containing information for creating an externally hosted release. */
export interface UpdateExternalUrlRequest {
  /** The external URL to the release's binary. */
  externalDownloadUrl: string;
}

/** A request containing information for updating a release. */
export interface ReleaseUpdateRequest {
  /**
   * OBSOLETE. Will be removed in future releases - use destinations instead. Name of a distribution group. The release will be associated with this distribution group. If the distribution group doesn't exist a 400 is returned. If both distribution group name and id are passed, the id is taking precedence.
   *
   */
  distributionGroupName?: string;
  /**
   * OBSOLETE. Will be removed in future releases - use destinations instead. Id of a distribution group. The release will be associated with this distribution group. If the distribution group doesn't exist a 400 is returned. If both distribution group name and id are passed, the id is taking precedence.
   *
   */
  distributionGroupId?: string;
  /**
   * OBSOLETE. Will be removed in future releases - use destinations instead. Name of a destination. The release will be associated with this destination. If the destination doesn't exist a 400 is returned. If both distribution group name and id are passed, the id is taking precedence.
   *
   */
  destinationName?: string;
  /**
   * OBSOLETE. Will be removed in future releases - use destinations instead. Id of a destination. The release will be associated with this destination. If the destination doesn't exist a 400 is returned. If both destination name and id are passed, the id is taking precedence.
   *
   */
  destinationId?: string;
  /** Not used anymore. */
  destinationType?: string;
  /** Release notes for this release. */
  releaseNotes?: string;
  /** A boolean which determines whether this version should be a mandatory update or not. */
  mandatoryUpdate?: boolean;
  /** Distribute this release under the following list of destinations (store groups or distribution groups). */
  destinations?: ReleaseUpdateRequestDestinationsItem[];
  /** Contains metadata about the build that produced the release being uploaded */
  build?: ReleaseUpdateRequestBuild;
  /** A boolean which determines whether to notify testers of a new release, default to true. */
  notifyTesters?: boolean;
  /** An object containing all the release metadata. */
  metadata?: ReleaseUpdateRequestMetadata;
}

/** A unique identifier for a destination. A destination can be identified by an ID (guid) or by a name. DestinationId encapsulates both options. A destination can be either a distribution group or a store. */
export interface ReleaseUpdateRequestDestinationsItem {
  /** Name of a distribution group / distribution store. The release will be associated with this distribution group or store. If the distribution group / store doesn't exist a 400 is returned. If both distribution group / store name and id are passed, the id is taking precedence. */
  name?: string;
  /** Id of a distribution group / store. The release will be associated with this distribution group / store. If the distribution group / store doesn't exist a 400 is returned. If both distribution group / store name and id are passed, the id is taking precedence. */
  id?: string;
}

/** Contains metadata about the build that produced the release being uploaded */
export interface ReleaseUpdateRequestBuild {
  /** The branch name of the build producing the release */
  branchName?: string;
  /** The commit hash of the build producing the release */
  commitHash?: string;
  /** The commit message of the build producing the release */
  commitMessage?: string;
}

/** An object containing all the release metadata. */
export interface ReleaseUpdateRequestMetadata {
  /** dsa signature of the release for the sparkle feed. */
  dsaSignature?: string;
  /** edDSA signature of the release for the sparkle feed. */
  edSignature?: string;
}

/** A request containing information for updating details of a release */
export interface ReleaseDetailsUpdateRequest {
  /** Toggle this release to be enable distribute/download or not. */
  enabled?: boolean;
  /** Release notes for this release. */
  releaseNotes?: string;
  /** Contains metadata about the build that produced the release being uploaded */
  build?: ReleaseDetailsUpdateRequestBuild;
}

/** Contains metadata about the build that produced the release being uploaded */
export interface ReleaseDetailsUpdateRequestBuild {
  /** The branch name of the build producing the release */
  branchName?: string;
  /** The commit hash of the build producing the release */
  commitHash?: string;
  /** The commit message of the build producing the release */
  commitMessage?: string;
}

/** Contains metadata about the build that produced the release being uploaded */
export interface BuildInfo {
  /** The branch name of the build producing the release */
  branchName?: string;
  /** The commit hash of the build producing the release */
  commitHash?: string;
  /** The commit message of the build producing the release */
  commitMessage?: string;
}

/** An object containing all the release metadata. */
export interface ReleaseMetadata {
  /** dsa signature of the release for the sparkle feed. */
  dsaSignature?: string;
  /** edDSA signature of the release for the sparkle feed. */
  edSignature?: string;
}

/** A unique identifier for a destination. A destination can be identified by an ID (guid) or by a name. DestinationId encapsulates both options. A destination can be either a distribution group or a store. */
export interface DestinationId {
  /** Name of a distribution group / distribution store. The release will be associated with this distribution group or store. If the distribution group / store doesn't exist a 400 is returned. If both distribution group / store name and id are passed, the id is taking precedence. */
  name?: string;
  /** Id of a distribution group / store. The release will be associated with this distribution group / store. If the distribution group / store doesn't exist a 400 is returned. If both distribution group / store name and id are passed, the id is taking precedence. */
  id?: string;
}

export interface ReleaseDestinationRequest {
  /** Flag to mark the release for the provided destinations as mandatory */
  mandatoryUpdate?: boolean;
  /** Flag to enable or disable notifications to testers */
  notifyTesters?: boolean;
}

export interface ReleaseStoreDestinationRequest {
  /** Unique id of the release destination */
  id: string;
}

export interface ReleaseTesterDestinationRequest {
  /** Flag to mark the release for the provided destinations as mandatory */
  mandatoryUpdate?: boolean;
  /** Tester's email address */
  email: string;
  /** Flag to enable or disable notifications to testers */
  notifyTesters?: boolean;
}

export interface ReleaseDestinationResponse {
  /** Flag to mark the release for the provided destinations as mandatory */
  mandatoryUpdate: boolean;
  /** The url to check provisioning status. */
  provisioningStatusUrl?: string;
}

export interface ReleaseStoreDestinationResponse {
  /** Unique id for the release destination */
  id: string;
}

export interface Components5Id7CnSchemasDestinationAllof0 {
  /** type of the distribution store currently stores type can be intune, googleplay or windows. */
  type?: Destination0Type;
  /** publishing status of the release in the store. */
  publishingStatus?: string;
}

export interface ComponentsE0Rs9SSchemasDestinationAllof0Allof1 {
  /** Is the containing release the latest one in this distribution store. */
  isLatest?: boolean;
}

/** A request containing information for updating a release. */
export interface PrivateReleaseUpdateRequest {
  /** The store publishing status. */
  publishingStatus?: PrivateReleaseUpdateRequestPublishingStatus;
}

export interface DistributionGroup {
  /** Is the containing release the latest one in this distribution group. */
  isLatest?: boolean;
}

export interface DistributionGroupWithoutIsLatest {
  /** ID identifying a unique distribution group. */
  id: string;
  /** A name identifying a unique distribution group. */
  name?: string;
}

export interface DistributionStore {
  /** Is the containing release the latest one in this distribution store. */
  isLatest?: boolean;
}

export interface DistributionStoreWithoutIsLatest {
  /** ID identifying a unique distribution store. */
  id: string;
  /** A name identifying a unique distribution store. */
  name?: string;
  /** type of the distribution store currently stores type can be intune, googleplay or windows. */
  type?: DistributionStoreWithoutIsLatestType;
  /** publishing status of the release in the store. */
  publishingStatus?: string;
}

/** An object containing a UUID for an architecture for an iOS app. */
export interface ArchIdentifier {
  /** The architecture that the UUID belongs to, i.e. armv7 or arm64. */
  architecture: string;
  /** The unique identifier. */
  uuid: string;
}

/** An object containing information about an iOS provisioning profile. */
export interface ProvisioningProfile {
  /** The name of the provisioning profile. */
  name: string;
  /** The application identifier. */
  applicationIdentifier: string;
  /** The team identifier. */
  teamIdentifier: string;
  profileType: ProvisioningProfileType;
  /** The profile's expiration date in RFC 3339 format, i.e. 2017-07-21T17:32:28Z */
  expiredAt: Date;
  udids?: string[];
}

export interface ReleaseUpdateError {
  releaseNotes?: string;
  mandatoryUpdate?: boolean;
  destinations?: ReleaseUpdateErrorDestinationsItem[];
}

export interface ReleaseUpdateErrorDestinationsItem {
  /**
   * Error Codes:<br>
   * <b>invalid_store_secrets</b>: While distributing to store, secrets provided for store are not valid.<br>
   * <b>store_release_bad_request</b>: Proper package release details for the store is not provided.<br>
   * <b>store_release_unauthorized</b>: User is not authorized to publish to store due to invalid developer credentials.<br>
   * <b>store_release_forbidden</b>: Publish to store is forbidden due to conflicts/errors in the release version and already existing version in the store.<br>
   * <b>store_release_promotion</b>: Release already distributed, promoting a release is not supported.<br>
   * <b>store_track_deactivated</b>: One or more tracks would be deactivated with this release. This is not supported yet.<br>
   * <b>store_release_not_found</b>: App with the given package name is not found in the store.<br>
   * <b>store_release_not_available</b>: The release is not available.<br>
   * <b>internal_server_error</b>: Failed to distribute to a destination due to an internal server error.
   *
   */
  code?: string;
  message?: string;
  id?: string;
  name?: string;
}

export interface DestinationError {
  /**
   * Error Codes:<br>
   * <b>invalid_store_secrets</b>: While distributing to store, secrets provided for store are not valid.<br>
   * <b>store_release_bad_request</b>: Proper package release details for the store is not provided.<br>
   * <b>store_release_unauthorized</b>: User is not authorized to publish to store due to invalid developer credentials.<br>
   * <b>store_release_forbidden</b>: Publish to store is forbidden due to conflicts/errors in the release version and already existing version in the store.<br>
   * <b>store_release_promotion</b>: Release already distributed, promoting a release is not supported.<br>
   * <b>store_track_deactivated</b>: One or more tracks would be deactivated with this release. This is not supported yet.<br>
   * <b>store_release_not_found</b>: App with the given package name is not found in the store.<br>
   * <b>store_release_not_available</b>: The release is not available.<br>
   * <b>internal_server_error</b>: Failed to distribute to a destination due to an internal server error.
   *
   */
  code?: string;
  message?: string;
  id?: string;
  name?: string;
}

/** A request containing information for creating a Auto Provisioning Config. */
export interface AutoProvisioningConfigRequest {
  /** A key to a secret in customer-credential-store. apple_developer_account refers to the user's developer account that is used to log into https://developer.apple.com. Normally the user's email. */
  appleDeveloperAccountKey?: string;
  /** A key to a secret in customer-credential-store. distribution_certificate refers to the customer's certificate (that holds the private key) that will be used to sign the app. */
  appleDistributionCertificateKey?: string;
  /** When *true* enables auto provisioning */
  allowAutoProvisioning?: boolean;
}

/** A response from API containing information for a Auto Provisioning Config. */
export interface AutoProvisioningConfigResponse {
  /** The identifier of the config. */
  id?: number;
  /** The identifier of the App. */
  appId?: string;
  /** The identifier of the destination. */
  destinationId?: string;
  /** A key to a secret in customer-credential-store. apple_developer_account refers to the user's developer account that is used to log into https://developer.apple.com. Normally the user's email. */
  appleDeveloperAccountKey?: string;
  /** A key to a secret in customer-credential-store. distribution_certificate refers to the cusomer's certificate (that holds the private key) that will be used to sign the app. */
  appleDistributionCertificateKey?: string;
  /** When *true* enables auto provisioning */
  allowAutoProvisioning?: boolean;
}

export interface AnalyticsReleasesResponse {
  releases?: AnalyticsReleasesResponseReleasesItem[];
}

export interface AnalyticsReleasesResponseReleasesItem {
  /** release id */
  releaseId: number;
  /** distribution group id */
  distributionGroupId: string;
  /** user id */
  userId: string;
}

export interface AnalyticsReleasesParameter {
  /** release id */
  releaseId: number;
  /** distribution group id */
  distributionGroupId: string;
  /** user id */
  userId: string;
}

export interface HockeyAppCompatibilityReleaseResponse {
  id?: number;
  shortversion?: string;
  version?: string;
  uploadedAt?: Date;
  appsize?: number;
  notes?: string;
  mandatory?: boolean;
  external?: boolean;
  deviceFamily?: string;
  minimumOsVersion?: string;
  installUrl?: string;
  bundleIdentifier?: string;
}

/** Describes the migration schema for a provisioning profile defined in HockeyApp. */
export interface ProvisioningProfileMigration {
  /** The name of the provisioning profile. */
  name: string;
  /** The bundle/application identifier. */
  bundleId: string;
  /** The team identifier. */
  teamIdentifier: string;
  /** The type of provisoning profile. */
  type: ProvisioningProfileMigrationType;
  /** A boolean value that indicates whether the provisioning profile represents an app extension. */
  isAppex: boolean;
  /** The provisioning profile's expiration date in RFC 3339 format, i.e. 2017-07-21T17:32:28Z. */
  expiredAt?: Date;
  /** A list of UDIDs of provisioned devices. */
  udids?: string[];
  /** A provisioning profile URL that indicates where to download it from. */
  url?: string;
}

/** Details of the upload to patch */
export interface PrivateUpdateUploadDetails {
  status: PrivateUpdateUploadDetailsStatus;
  /** Message of the error */
  errorMessage: string;
}

/** Set the download URL of an external build */
export interface PostExternalDownloadUrl {
  /** The new download URL */
  downloadUrl?: string;
}

/** Patch the asset id of a release request body */
export interface PatchReleaseAssetIdRequest {
  /** The release new package id in ACFUS */
  packageAssetId: string;
  /** The release upload id used to upload the release */
  uploadId: string;
  /** The ipa UUIDs for this release, as a serialized JSON array */
  ipaUuids?: string;
}

/** Malware scan result from Malware Scan service */
export interface MalwareScanResultPayload {
  /** Scan request identifier */
  requestId: string;
  /** Scan result */
  result: MalwareScanResultPayloadResult;
}

export interface DistributionSettingsResponse {
  /** Is this app using the "Default to Public Distribution Groups" logic */
  defaultPublic: boolean;
}

export interface PublicDistributionGroupsResponse {
  /** The id of the distribution group */
  id: string;
}

/** A response containing the fully encoded binary blob for a mobileconfig */
export interface DeviceConfigurationResponse {
  /** A data URL containing a signed mobileconfig profile */
  dataUrl: string;
}

/** The information for a single iOS device */
export interface DeviceInfoRequest {
  /** The Unique Device IDentifier of the device */
  udid: string;
  /** The model identifier of the device, in the format iDeviceM,N */
  model: string;
  /** The build number of the last known OS version running on the device */
  osBuild?: string;
  /** The last known OS version running on the device */
  osVersion?: string;
  /** The device's serial number. Always empty or undefined at present. */
  serial?: string;
  /** The device's International Mobile Equipment Identity number. Always empty or undefined at present. */
  imei?: string;
  /** The user ID of the device owner. */
  ownerId?: string;
}

/** The information for a single iOS device */
export interface DeviceInfoResponse {
  /** The Unique Device IDentifier of the device */
  udid: string;
  /** The model identifier of the device, in the format iDeviceM,N */
  model: string;
  /** The device description, in the format "iPhone 7 Plus (A1784)" */
  deviceName: string;
  /** A combination of the device model name and the owner name. */
  fullDeviceName?: string;
  /** The last known OS version running on the device */
  osBuild: string;
  /** The last known OS version running on the device */
  osVersion: string;
  /** The device's serial number. Always empty or undefined at present. */
  serial?: string;
  /** The device's International Mobile Equipment Identity number. Always empty or undefined at present. */
  imei?: string;
  /** The user ID of the device owner. */
  ownerId?: string;
  /** The provisioning status of the device. */
  status: string;
  /** Timestamp of when the device was registered in ISO format. */
  registeredAt?: string;
}

/** The status of the resign operation. */
export interface ResignStatus {
  /** The status of the resign */
  status: string;
  /** Error code for any error that occured during the resigning operation. */
  errorCode?: string;
  /** Error message for any error that occured during the resigning operation. */
  errorMessage?: string;
}

/** The information for a resign attempt. */
export interface ResignInfo {
  /** The group name of the resign attempt */
  groupName?: string;
  /** The provisioning profile name of group for the given resign attempt */
  profileName?: string;
  /** The provisioning profile type of group for the given resign attempt */
  profileType?: string;
  /** The name of the certificate used for the resign attempt */
  certificateName?: string;
  /** The expiration date of the certificate used for the resign attempt */
  certificateExpiration?: string;
}

/** The information for a single distribution group member and their ios device */
export interface MemberDevicesInfoResponse {
  /** The unique id (UUID) of the user */
  id: string;
  /** The avatar URL of the user */
  avatarUrl?: string;
  /** User is required to send an old password in order to change the password. */
  canChangePassword?: boolean;
  /** The full name of the user. Might for example be first and last name */
  displayName?: string;
  /** The email address of the user */
  email: string;
  /** Whether the has accepted the invite. Available when an invite is pending, and the value will be "true". */
  invitePending?: boolean;
  /** The unique name that is used to identify the user. */
  name?: string;
  /** The Unique Device IDentifier of the device */
  udid: string;
  /** The model identifier of the device, in the format iDeviceM,N */
  model: string;
  /** The device description, in the format "iPhone 7 Plus (A1784)" */
  deviceName: string;
  /** A combination of the device model name and the owner name. */
  fullDeviceName?: string;
  /** The last known OS version running on the device */
  osBuild: string;
  /** The last known OS version running on the device */
  osVersion: string;
  /** The device's serial number. Always empty or undefined at present. */
  serial?: string;
  /** The device's International Mobile Equipment Identity number. Always empty or undefined at present. */
  imei?: string;
  /** The user ID of the device owner. */
  ownerId?: string;
  /** The provisioning status of the device. */
  status: string;
  /** Timestamp of when the device was registered in ISO format. */
  registeredAt?: string;
}

/** The publising information. */
export interface PublishDevicesRequest {
  /** The username for the Apple Developer account to publish the devices to. */
  username?: string;
  /** The password for the Apple Developer account to publish the devices to. */
  password?: string;
  /** The service_connection_id of the stored Apple credentials instead of username, password. */
  accountServiceConnectionId?: string;
  /** When set to true, all unprovisioned devices will be published to the Apple Developer account.  When false, only the provided devices will be published to the Apple Developer account. */
  publishAllDevices?: boolean;
  /** Array of device UDID's to be published to the Apple Developer account. */
  devices?: string[];
}

/** The information for a single iOS device */
export interface PublishDevicesResponse {
  /** The file name for the provisioning profile. */
  profileFileName?: string;
  /** The updated provisioning profiles zip base64 encoded. */
  profilesZipBase64: string;
}

/** Apple credentials needed to log into the Apple Developer Portal */
export interface AppleLoginRequest {
  /** The username for the Apple Developer account. */
  username: string;
  /** The password for the Apple Developer account. */
  password: string;
  /** Identifier of the team to use when logged in. */
  teamIdentifier?: string;
  /** The 30-day session cookie for multi-factor authentication backed accounts. */
  cookie?: string;
}

/** Indicates if login was successful. */
export interface AppleLoginResponse {
  /** True when login was successful. */
  successful?: boolean;
}

/** Apple credentials needed to log into the Apple Developer Portal */
export interface AppleMutifactorLoginRequest {
  /** The username for the Apple Developer account. */
  username: string;
  /** This is the six digit OTP used for completing the multi-factor authentication */
  authcode: string;
}

/** The response of Multifactor login. This is a 30 day session token generated by apple. */
export interface AppleMultifactorLoginResponse {
  /** the apple developer account. */
  username?: string;
  /** The 30-day session Token generated by apple after successfully logging in with Multifactor authentication. */
  cookie?: string;
  /** The expiry date of the cookie generated by apple */
  expires?: string;
}

/** The information needed to fetch the status of an application */
export interface ApplicationStatusRequest {
  /** The username for the Apple Developer account. */
  username: string;
  /** The password for the Apple Developer account. */
  password: string;
  /** Bundle Identifier of application in Apple Itunes portal. */
  bundleIdentifier: string;
  /** Track Identifier for which the status is to be fetched. */
  trackIdentifier: string;
  /** The version of build for which real time status is to be fetched. */
  buildVersion?: string;
  /** Identifier of the team to use when logged in. */
  teamIdentifier?: string;
  /** The Train version for which the status is to be fetched. */
  trainVersion?: string;
}

/** The status information from Itunes portal */
export interface ApplicationStatusResponse {
  /** The type of version being returned (production/edit/test flight). */
  versionType: string;
  /** The version of the application */
  version?: string;
}

/** Apple credentials with username, password or service_connection_id of the stored credentials is needed along with team_identifier. */
export interface ItunesAppsRequest {
  /** The username for the Apple Developer account. */
  username?: string;
  /** The password for the Apple Developer account. */
  password?: string;
  /** The service_connection_id of the stored Apple credentials instead of username, password. */
  serviceConnectionId?: string;
  /** Identifier of the team to use when logged in. */
  teamIdentifier?: string;
  /** The 30-day session cookie for multi-factor authentication backed accounts. */
  cookie?: string;
}

/** Apple credentials with username, password or service_connection_id of the stored credentials is needed. */
export interface ItunesTeamsRequest {
  /** The username for the Apple Developer account. */
  username?: string;
  /** The password for the Apple Developer account. */
  password?: string;
  /** The service_connection_id of the stored Apple credentials instead of username, password. */
  serviceConnectionId?: string;
  /** The 30-day session cookie for multi-factor authentication backed accounts. */
  cookie?: string;
}

/** Itunes teams details . */
export interface ItunesTeamsResponse {
  /** Itunes team id. */
  teamId?: string;
  /** Itunes Team Name */
  teamName?: string;
}

/** Itunes teams details . */
export interface AllItunesAppsResponse {
  /** apple id for app team id. */
  appleId?: string;
  /** bundle identifier of app */
  bundleId?: string;
  /** App Name */
  name?: string;
  /** url for the app icon from app store */
  iconUrl?: string;
}

/** Apple details for fetching test flight groups from Apple Developer Portal. pass either apple_id or bundle_identifier to get the test flight groups. if both are passed than apple_id will take preference */
export interface AppleTestFlightGroupRequest {
  /** The username for the Apple Developer account. */
  username?: string;
  /** The password for the Apple Developer account. */
  password?: string;
  /** apple_id of the app for which test flight groups need to be fetched. */
  appleId?: string;
  /** apple_id of the app for which test flight groups need to be fetched. */
  bundleIdentifier?: string;
  /** Identifier of the team to use when logged in. */
  teamIdentifier?: string;
  /** The 30-day session cookie for multi-factor authentication backed accounts. */
  cookie?: string;
  /** The service_connection_id of the stored Apple credentials instead of username, password. */
  serviceConnectionId?: string;
}

/** test flight group details for the app. */
export interface AppleTestFlightGroupResponse {
  /** id of the group. */
  id?: string;
  /** provider id of the group. */
  providerId?: number;
  /** apple id of the group. */
  appAdamId?: number;
  /** name of the group. */
  name?: string;
  /** true if group is in active state. */
  active?: boolean;
  /** true if the group is an internal group. */
  isInternalGroup?: boolean;
}

/** Apple credentials needed to log into the Apple Developer Portal and access provisioning profiles */
export interface AvailabilityOfDevicesRequest {
  /** The username for the Apple Developer account. */
  username?: string;
  /** The password for the Apple Developer account. */
  password?: string;
  /** The service_connection_id of the stored Apple credentials instad of username, password. */
  serviceConnectionId?: string;
}

/** ... */
export interface DeviceAvailability {
  registered: number;
  available: number;
  maximum: number;
}

/** The current device availability (registered, available and maxmimum) for iPhones, iPads, iPods and Watches from Apple Developer Portal */
export interface AvailabilityOfDevicesResponse {
  /** ... */
  iphones: AvailabilityOfDevicesResponseIphones;
  /** ... */
  ipads: AvailabilityOfDevicesResponseIpads;
  /** ... */
  ipods: AvailabilityOfDevicesResponseIpods;
  /** ... */
  watches: AvailabilityOfDevicesResponseWatches;
}

/** ... */
export interface AvailabilityOfDevicesResponseIphones {
  registered: number;
  available: number;
  maximum: number;
}

/** ... */
export interface AvailabilityOfDevicesResponseIpads {
  registered: number;
  available: number;
  maximum: number;
}

/** ... */
export interface AvailabilityOfDevicesResponseIpods {
  registered: number;
  available: number;
  maximum: number;
}

/** ... */
export interface AvailabilityOfDevicesResponseWatches {
  registered: number;
  available: number;
  maximum: number;
}

/** Information required to publish devices to the Apple Developer account and resign the application. */
export interface UpdateDevicesRequest {
  /** When provided, will update the provided release with the new set of devices. By default the latest release of the distribution group is used when this property is omitted. If `release_id` is passed in the path, there is no need to pass in the body as well. */
  releaseId?: number;
  /** The username for the Apple Developer account to publish the devices to. */
  username?: string;
  /** The password for the Apple Developer account to publish the devices to. */
  password?: string;
  /** The service_connection_id of the stored Apple credentials instead of username, password. */
  accountServiceConnectionId?: string;
  /** The certificate to use for resigning the application with the updated provisioning profiles. */
  p12Base64?: string;
  /** The service_connection_id of the stored Apple certificate instead of p12_base64 value. */
  p12ServiceConnectionId?: string;
  /** The password certificate if one is needed. */
  p12Password?: string;
  /** When set to true, all unprovisioned devices will be published to the Apple Developer account.  When false, only the provided devices will be published to the Apple Developer account. */
  publishAllDevices?: boolean;
  /** Array of device UDID's to be published to the Apple Developer account. */
  devices?: string[];
  /** Array of distribution groups that the devices should be provisioned from. */
  destinations?: UpdateDevicesRequestDestinationsItem[];
}

export interface UpdateDevicesRequestDestinationsItem {
  name?: string;
}

/** URL that can be used to check the status of the update devices operation and the updated profiles. */
export interface UpdateDevicesResponse {
  /** URL that can be used to check the status of the update devices operation. */
  statusUrl: string;
}

/** Updates the status of the resign request */
export interface UpdateResignStatusRequest {
  /** The updated status for the resigning request. */
  status: string;
  /** Error code if an error occured in the resigning operation. */
  errorCode?: string;
  /** Error message if an error occured in the resigning operation. */
  errorMessage?: string;
}

/** URL that can be used to check the status of the update devices operation and the updated profiles. */
export interface UpdateResignStatusResponse {
  /** The status. */
  status: string;
  /** A zip of the updated provisioning profiles. Base64 encoded. */
  profilesZipBase64?: string;
}

/** The url that can be navigated to in order to start the device registration process. */
export interface DeviceRegistrationUrl {
  /** The url that can be navigated to in order to start the device registration process. */
  registrationUrl: string;
}

/** URL that can be used to check the status of the update devices operation and the updated profiles. */
export interface ResignAttemptResponse {
  /** The status of the resigning operation. */
  status: string;
  /** ID of the user performing the resign operaiton. */
  userId: string;
  /** App ID that the resign operation is being performed against. */
  appId: string;
  /** ID of the release which is being resigned. */
  originalReleaseId: number;
  /** ID of the resign operation. */
  resignId: string;
  /** Context ID for the resigning operation. */
  contextId: string;
  /** The time that the resign operation was started. */
  startTime: number;
  /** List of destinations that the resign operation is being performed against. */
  destinations?: Record<string, unknown>[];
  /** Error code associated with the exception. */
  errorCode?: string;
  /** Error message associated with the exception. */
  errorMessage?: string;
}

/** Details of an uploaded release */
export interface StoresReleaseDetails {
  /** ID identifying this unique release. */
  id?: number;
  /**
   * OBSOLETE. Will be removed in next version. The availability concept is now replaced with distributed. Any 'available' release will be associated with the default distribution group of an app.</br>
   * The release state.<br>
   * <b>available</b>: The uploaded release has been distributed.<br>
   * <b>unavailable</b>: The uploaded release is not visible to the user. <br>
   *
   */
  status?: StoresReleaseDetailsStatus;
  /** The app's name (extracted from the uploaded release). */
  appName?: string;
  /** The app's display name. */
  appDisplayName?: string;
  /**
   * The release's version.<br>
   * For iOS: CFBundleVersion from info.plist.
   * For Android: android:versionCode from AppManifest.xml.
   *
   */
  version?: string;
  /**
   * The release's short version.<br>
   * For iOS: CFBundleShortVersionString from info.plist.
   * For Android: android:versionName from AppManifest.xml.
   *
   */
  shortVersion?: string;
  /** The release's release notes. */
  releaseNotes?: string;
  /** The release's size in bytes. */
  size?: number;
  /** The release's minimum required operating system. */
  minOs?: string;
  /** The release's minimum required Android API level. */
  androidMinApiLevel?: string;
  /** The identifier of the apps bundle. */
  bundleIdentifier?: string;
  /** MD5 checksum of the release binary. */
  fingerprint?: string;
  /** UTC time in ISO 8601 format of the uploaded time. */
  uploadedAt?: string;
  /** The URL that hosts the binary for this release. */
  downloadUrl?: string;
  /** The href required to install a release on a mobile device. On iOS devices will be prefixed with `itms-services://?action=download-manifest&url=` */
  installUrl?: StoresReleaseDetailsInstallUrl;
  /** a list of distribution stores that are associated with this release. */
  distributionStores?: StoresReleaseDetailsDistributionStoresItem[];
}

export interface StoresReleaseDetailsDistributionStoresItem {
  /** ID identifying a unique distribution store. */
  id?: string;
  /** A name identifying a unique distribution store. */
  name?: string;
  /** type of the distribution store currently stores type can be intune or googleplay. */
  type?: StoresReleaseDetailsDistributionStoresItemType;
  /** publishing status of the release in the store. */
  publishingStatus?: string;
}

export interface StorePatchRequest {
  /** Service connection id to updated. */
  serviceConnectionId: string;
}

/** ExternalStoreRequest */
export interface ExternalStoreRequest {
  /** store Type */
  type?: ExternalStoreRequestType;
  /** name of the store. In case of googleplay, and Apple store this is fixed to Production. */
  name?: string;
  /** track of the store. Can be production, alpha & beta for googleplay. Can be production, testflight-internal & testflight-external for Apple Store. */
  track?: ExternalStoreRequestTrack;
  intuneDetails?: ExternalStoreRequestIntuneDetails;
  /** Id for the shared service connection. In case of Apple AppStore, this connection will be used to create and connect to the Apple AppStore in Mobile Center. */
  serviceConnectionId?: string;
}

export interface ExternalStoreRequestIntuneDetails {
  secretJson?: ExternalStoreRequestIntuneDetailsSecretJson;
  targetAudience?: ExternalStoreRequestIntuneDetailsTargetAudience;
  appCategory?: ExternalStoreRequestIntuneDetailsAppCategory;
  /** tenant id of the intune store */
  tenantId?: string;
}

export interface ExternalStoreRequestIntuneDetailsSecretJson {
  /** the id token of user */
  idToken?: string;
  /** the refresh token for user */
  refreshToken?: string;
  /** the expiry of refresh token */
  refreshTokenExpiry?: string;
}

export interface ExternalStoreRequestIntuneDetailsTargetAudience {
  /** display name for the target audience/group */
  name?: string;
}

export interface ExternalStoreRequestIntuneDetailsAppCategory {
  /** display name for the app category */
  name?: string;
}

/** Apple Mapping Request Type */
export interface AppleMappingRequest {
  /** Id for the shared service connection. In case of Apple AppStore, this connection will be used to create and connect to the Apple AppStore in Mobile Center. */
  serviceConnectionId: string;
  /** ID of the apple application in apple store, takes precedence over bundle_identifier when both are provided */
  appleId?: string;
  /** Bundle Identifier of the apple package */
  bundleIdentifier?: string;
  /** ID of the Team associated with the app in apple store */
  teamIdentifier: string;
}

/** Apple Mapping Request Type */
export interface AppleMappingResponse {
  /** ID of the apple application in Mobile Center */
  appId?: string;
  /** Id for the shared service connection. In case of Apple AppStore, this connection will be used to create and connect to the Apple AppStore in Mobile Center. */
  serviceConnectionId?: string;
  /** ID of the apple application in apple store */
  appleId?: string;
  /** ID of the Team associated with the app in apple store */
  teamIdentifier?: string;
}

/** Apple Test Flight Groups Response Type */
export interface AppleTestFlightGroupsResponse {
  /** id of the group. */
  id?: string;
  /** provider id of the group. */
  providerId?: number;
  /** apple id of the group. */
  appleId?: number;
  /** name of the group. */
  name?: string;
}

/** create the store through private API. Used by UI. */
export interface PrivateCreateStoreRequest {
  /** store Type */
  type?: "intune";
  /** name of the store. */
  name?: string;
  intuneDetails?: PrivateCreateStoreRequestIntuneDetails;
}

export interface PrivateCreateStoreRequestIntuneDetails {
  targetAudience?: PrivateCreateStoreRequestIntuneDetailsTargetAudience;
  appCategory?: PrivateCreateStoreRequestIntuneDetailsAppCategory;
  /** tenant id of the intune store */
  tenantId?: string;
}

export interface PrivateCreateStoreRequestIntuneDetailsTargetAudience {
  /** display name for the target audience/group */
  name?: string;
}

export interface PrivateCreateStoreRequestIntuneDetailsAppCategory {
  /** display name for the app category */
  name?: string;
}

export interface IntuneSecretDetails {
  /** the id token of user */
  idToken?: string;
  /** the refresh token for user */
  refreshToken?: string;
  /** the expiry of refresh token */
  refreshTokenExpiry?: string;
}

export interface IntuneCategories {
  /** context */
  odataContext?: string;
  /** categories for intune app */
  value?: IntuneCategoriesValueItem[];
}

export interface IntuneCategoriesValueItem {
  /** the id of the category */
  id?: string;
  /** the display name for the category */
  displayName?: string;
  /** modified date for category */
  lastModifiedDateTime?: string;
}

export interface IntuneCategoryValue {
  /** the id of the category */
  id?: string;
  /** the display name for the category */
  displayName?: string;
  /** modified date for category */
  lastModifiedDateTime?: string;
}

export interface IntuneGroups {
  /** context */
  odataContext?: string;
  /** categories for intune app */
  value?: IntuneGroupsValueItem[];
}

export interface IntuneGroupsValueItem {
  /** the id of the Group */
  id?: string;
  /** the display name of the group */
  displayName?: string;
}

export interface IntuneGroupValue {
  /** the id of the Group */
  id?: string;
  /** the display name of the group */
  displayName?: string;
}

export interface IntuneGroup {
  /** the id of the Group */
  id?: string;
  /** the display name of the group */
  displayName?: string;
  /** species if it is a security group */
  securityEnabled?: boolean;
}

export interface CreateStoreSecretRequest {
  secretJson?: CreateStoreSecretRequestSecretJson;
  /** the tenant id for user */
  tenantId?: string;
}

export interface CreateStoreSecretRequestSecretJson {
  /** the id token of user */
  idToken?: string;
  /** the refresh token for user */
  refreshToken?: string;
  /** the expiry of refresh token */
  refreshTokenExpiry?: string;
}

export interface CreateStoreSecretResponse {
  /** the secret id for store secret */
  secretId?: string;
}

export interface SecretDetails {
  /** the id token of user */
  idToken?: string;
  /** the refresh token for user */
  refreshToken?: string;
  /** the expiry of refresh token */
  refreshTokenExpiry?: string;
}

/** ReleasePublishErrorResponse */
export interface ReleasePublishErrorResponse {
  /** error Details */
  message?: string;
  /** boolean property to tell if logs are available for download */
  isLogAvailable?: boolean;
}

/** status of the app from store */
export interface ReleaseRealTimeStatusResponse {
  /** release id */
  releaseId?: string;
  /** app id */
  appId?: string;
  /** Status Data from store */
  status?: ReleaseRealTimeStatusResponseStatus;
}

/** Status Data from store */
export interface ReleaseRealTimeStatusResponseStatus {
  /** status from store */
  status?: string;
  /** store type */
  storetype?: string;
  /** track information from store */
  track?: string;
  /** version of the app from store */
  version?: string;
}

/** The response which contains the validation data that the connection is valid. */
export interface ValidationResponse {
  /** app id */
  appId?: string;
  /** Status Data from store */
  status?: ValidationResponseStatus;
}

/** Status Data from store */
export interface ValidationResponseStatus {
  /** status from store */
  status?: string;
  /** store type */
  storetype?: string;
  /** track information from store */
  track?: string;
  /** version of the app from store */
  version?: string;
}

/** The response for the build uploaded check. */
export interface HasBuildUploadedResponse {
  /** true if a build has been uploaded, false otherwise */
  hasBuildUploaded?: boolean;
}

/** The response for the testflight metadata check. */
export interface HasTestflightMetadataResponse {
  /** true if the app has the testflight metadata, false otherwise */
  hasTestflightMetadata?: boolean;
}

/** Wheither or not to skip the validation for this release */
export interface SkipValidationRequest {
  /** true if we want to skip the validation, false otherwise */
  skipValidation?: boolean;
}

/** Status Data from store */
export interface StatusData {
  /** status from store */
  status?: string;
  /** store type */
  storetype?: string;
  /** track information from store */
  track?: string;
  /** version of the app from store */
  version?: string;
}

/** ExternalStoreResponse */
export interface ExternalStoreResponse {
  /** Store id */
  id?: string;
  /** Store Name */
  name?: string;
  /** Store Type */
  type?: string;
  /** Store track */
  track?: ExternalStoreResponseTrack;
  /** Store details for intune */
  intuneDetails?: ExternalStoreResponseIntuneDetails;
  /** Id for the shared service connection. In case of Apple / GooglePlay stores, this connection will be used to connect to the Apple / Google stores in App Center. */
  serviceConnectionId?: string;
  /** The ID of the principal that created the store. */
  createdBy?: string;
  /** The type of the principal that created the store. */
  createdByPrincipalType?: string;
}

/** Store details for intune */
export interface ExternalStoreResponseIntuneDetails {
  targetAudience?: ExternalStoreResponseIntuneDetailsTargetAudience;
  appCategory?: ExternalStoreResponseIntuneDetailsAppCategory;
}

export interface ExternalStoreResponseIntuneDetailsTargetAudience {
  /** display name for the target audience/group */
  name?: string;
  /** ID for the target audience/group. */
  id?: string;
}

export interface ExternalStoreResponseIntuneDetailsAppCategory {
  /** display name for the app category */
  name?: string;
  /** ID for the category. */
  id?: string;
}

/** StoreSecretResponse */
export interface StoreSecretResponse {
  /** Store id */
  id?: string;
  /** Store Name */
  name?: string;
  /** Store Type */
  type?: string;
  /** Secret Json */
  secret?: string;
  /** Tenant Id for Intune */
  tenantId?: string;
}

export interface IntuneStoreResponse {
  targetAudience?: IntuneStoreResponseTargetAudience;
  appCategory?: IntuneStoreResponseAppCategory;
}

export interface IntuneStoreResponseTargetAudience {
  /** display name for the target audience/group */
  name?: string;
  /** ID for the target audience/group. */
  id?: string;
}

export interface IntuneStoreResponseAppCategory {
  /** display name for the app category */
  name?: string;
  /** ID for the category. */
  id?: string;
}

export interface IntuneStoreRequest {
  secretJson?: IntuneStoreRequestSecretJson;
  targetAudience?: IntuneStoreRequestTargetAudience;
  appCategory?: IntuneStoreRequestAppCategory;
  /** tenant id of the intune store */
  tenantId?: string;
}

export interface IntuneStoreRequestSecretJson {
  /** the id token of user */
  idToken?: string;
  /** the refresh token for user */
  refreshToken?: string;
  /** the expiry of refresh token */
  refreshTokenExpiry?: string;
}

export interface IntuneStoreRequestTargetAudience {
  /** display name for the target audience/group */
  name?: string;
}

export interface IntuneStoreRequestAppCategory {
  /** display name for the app category */
  name?: string;
}

export interface PrivateIntuneStoreRequest {
  targetAudience?: PrivateIntuneStoreRequestTargetAudience;
  appCategory?: PrivateIntuneStoreRequestAppCategory;
  /** tenant id of the intune store */
  tenantId?: string;
}

export interface PrivateIntuneStoreRequestTargetAudience {
  /** display name for the target audience/group */
  name?: string;
}

export interface PrivateIntuneStoreRequestAppCategory {
  /** display name for the app category */
  name?: string;
}

export interface IntuneTargetAudience {
  /** display name for the target audience/group */
  name?: string;
}

export interface IntuneAppCategory {
  /** display name for the app category */
  name?: string;
}

export interface IntuneTargetAudienceResponse {
  /** display name for the target audience/group */
  name?: string;
  /** ID for the target audience/group. */
  id?: string;
}

export interface IntuneAppCategoryResponse {
  /** display name for the app category */
  name?: string;
  /** ID for the category. */
  id?: string;
}

export interface PatchReleaseRequest {
  /** updated status of release */
  status?: string;
  /** Destination Publish Id */
  destPublishId?: string;
  /** failure error details from store */
  errorDetails?: string;
  /** contextId for failed error message */
  errorContextId?: string;
  /** package url for wrapping request */
  wrapPackageUrl?: string;
  /** request is for wrapping or not */
  isWrapperRequest?: boolean;
}

/** Basic information on a release */
export interface StoresBasicReleaseDetails {
  /** ID identifying this unique release. */
  id?: number;
  /**
   * The release's version.
   * For iOS: CFBundleVersion from info.plist.
   * For Android: android:versionCode from AppManifest.xml.
   *
   */
  version?: string;
  /**
   * The release's short version.
   * For iOS: CFBundleShortVersionString from info.plist.
   * For Android: android:versionName from AppManifest.xml.
   *
   */
  shortVersion?: string;
  /** UTC time in ISO 8601 format of the uploaded time. */
  uploadedAt?: string;
  /** Destination for this release. */
  destinationType?: StoresBasicReleaseDetailsDestinationType;
  /** a list of distribution stores that are associated with this release. */
  distributionStores?: StoresBasicReleaseDetailsDistributionStoresItem[];
}

export interface StoresBasicReleaseDetailsDistributionStoresItem {
  /** ID identifying a unique distribution store. */
  id?: string;
  /** A name identifying a unique distribution store. */
  name?: string;
  /** A type identifying the type of distribution store. */
  type?: StoresBasicReleaseDetailsDistributionStoresItemType;
  /** A status identifying the status of release in the distribution store. */
  publishingStatus?: string;
  /** Is the containing release the latest one in this distribution store. */
  isLatest?: boolean;
}

export interface StoresDetails {
  /** ID identifying a unique distribution store. */
  id?: string;
  /** A name identifying a unique distribution store. */
  name?: string;
  /** A type identifying the type of distribution store. */
  type?: StoresDetailsType;
  /** A status identifying the status of release in the distribution store. */
  publishingStatus?: string;
  /** Is the containing release the latest one in this distribution store. */
  isLatest?: boolean;
}

export interface StoreDestinationDetails {
  /** destination ID identifying a unique id in distribution store. */
  destPublishId?: string;
  /** type of store. */
  storeType?: "intune";
  /** app id of application. */
  appId?: string;
}

export interface StoresBasicDetails {
  /** ID identifying a unique distribution store. */
  id?: string;
  /** A name identifying a unique distribution store. */
  name?: string;
  /** type of the distribution store currently stores type can be intune or googleplay. */
  type?: StoresBasicDetailsType;
  /** publishing status of the release in the store. */
  publishingStatus?: string;
}

/** IntuneAppsRequest */
export interface IntuneAppsRequest {
  /** PartitionKey year-month */
  createdMonth?: string;
}

/** IntuneAppsResponse */
export interface IntuneAppsResponse {
  /** PartitionKey year-month */
  createdMonth?: string;
  /** App id */
  appId?: string;
  /** Refresh Status */
  refreshStatus?: string;
}

/** org settings Request */
export interface OrgComplianceSettingsRequest {
  /** certificate connection id to wrap and resign the app after wrapping */
  certificateConnectionId: string;
}

/** org settings response */
export interface OrgComplianceSettingsResponse {
  /** The internal unique id (UUID) of the organization compliance setting */
  id: string;
  /** The internal unique id (UUID) of the organization. */
  orgId: string;
  /** certificate connection id to wrap and resign the app after wrapping */
  certificateConnectionId: string;
  /** flag to tell if mam warpping is enabled on the Org */
  isMamEnabled?: boolean;
}

export interface StoreNotification {
  service?: string;
  status?: string;
  validUntil?: number;
}

/** The diagnostic id for the given publish action */
export interface DiagnosticIdResponse {
  /** diagnostic id */
  diagnosticId?: string;
}

export interface SymbolModel {
  /** The unique id for this symbol (uuid) */
  symbolId: string;
  /** The type of the symbol for the current symbol upload */
  type: SymbolType;
  /** The application that this symbol belongs to */
  appId: string;
  /** The platform that this symbol is associated with */
  platform: string;
  /** The path name of the symbol file in blob storage */
  url: string;
  /** The origin of the symbol file */
  origin: SymbolOrigin;
  /** The other symbols in the same file */
  alternateSymbolIds: string[];
  /** Whether the symbol is ignored. */
  status: SymbolStatus;
  /** The version number. Optional for Apple. Required for Android. */
  version?: string;
  /** The build number. Optional for Apple. Required for Android. */
  build?: string;
  /** The id of the symbol upload this symbol belongs to. */
  symbolUploadId: string;
}

export interface SymbolsItem {
  /** The unique id for this symbol (uuid) */
  symbolId: string;
  /** The type of the symbol for the current symbol upload */
  type: SymbolsItemType;
  /** The application that this symbol belongs to */
  appId: string;
  /** The platform that this symbol is associated with */
  platform: string;
  /** The path name of the symbol file in blob storage */
  url: string;
  /** The origin of the symbol file */
  origin: SymbolsItemOrigin;
  /** The other symbols in the same file */
  alternateSymbolIds: string[];
  /** Whether the symbol is ignored. */
  status: SymbolsItemStatus;
  /** The version number. Optional for Apple. Required for Android. */
  version?: string;
  /** The build number. Optional for Apple. Required for Android. */
  build?: string;
  /** The id of the symbol upload this symbol belongs to. */
  symbolUploadId: string;
}

/** A response containing information pertaining to a symbol status */
export interface SymbolStatusResponse {
  /** The unique id for this symbol (uuid) */
  symbolId: string;
  /** The application that this symbol belongs to */
  appId: string;
  /** Whether the symbol is ignored. */
  status: SymbolStatusResponseStatus;
}

/** A single symbol upload entity */
export interface SymbolUpload {
  /** The id for the current symbol upload */
  symbolUploadId: string;
  /** The application that this symbol upload belongs to */
  appId: string;
  /** User information of the one who intitiated the symbol upload */
  user?: SymbolUploadUser;
  /** The current status for the symbol upload */
  status: SymbolUploadStatus;
  /** The type of the symbol for the current symbol upload */
  symbolType: SymbolUploadSymbolType;
  /** The symbols found in the upload. This may be empty until the status is indexed */
  symbolsUploaded?: SymbolUploadSymbolsUploadedItem[];
  /** The origin of the symbol upload */
  origin?: SymbolUploadOrigin;
  /** The file name for the symbol upload */
  fileName?: string;
  /** The size of the file in Mebibytes. This may be 0 until the status is indexed */
  fileSize?: number;
  /** When the symbol upload was committed, or last transaction time if not committed */
  timestamp?: Date;
}

/** User information of the one who intitiated the symbol upload */
export interface SymbolUploadUser {
  /** The email of the user */
  email?: string;
  /** The full name of the user. Might for example be first and last name */
  displayName?: string;
}

export interface SymbolUploadSymbolsUploadedItem {
  /** The symbol id of the symbol binary */
  symbolId: string;
  /** The platform the symbol is associated with */
  platform: string;
}

/** A single symbol upload entity */
export interface SymbolUploadsItem {
  /** The id for the current symbol upload */
  symbolUploadId: string;
  /** The application that this symbol upload belongs to */
  appId: string;
  /** User information of the one who intitiated the symbol upload */
  user?: SymbolUploadsItemUser;
  /** The current status for the symbol upload */
  status: SymbolUploadsItemStatus;
  /** The type of the symbol for the current symbol upload */
  symbolType: SymbolUploadsItemSymbolType;
  /** The symbols found in the upload. This may be empty until the status is indexed */
  symbolsUploaded?: SymbolUploadsPropertiesItemsItem[];
  /** The origin of the symbol upload */
  origin?: SymbolUploadsItemOrigin;
  /** The file name for the symbol upload */
  fileName?: string;
  /** The size of the file in Mebibytes. This may be 0 until the status is indexed */
  fileSize?: number;
  /** When the symbol upload was committed, or last transaction time if not committed */
  timestamp?: Date;
}

/** User information of the one who intitiated the symbol upload */
export interface SymbolUploadsItemUser {
  /** The email of the user */
  email?: string;
  /** The full name of the user. Might for example be first and last name */
  displayName?: string;
}

export interface SymbolUploadsPropertiesItemsItem {
  /** The symbol id of the symbol binary */
  symbolId: string;
  /** The platform the symbol is associated with */
  platform: string;
}

/** Location for downloading symbol */
export interface SymbolLocation {
  uri: string;
}

/** Location for downloading symbol upload */
export interface SymbolUploadLocation {
  uri: string;
}

/** A request containing information pertaining to starting a symbol upload process */
export interface SymbolUploadBeginRequest {
  /** The type of the symbol for the current symbol upload */
  symbolType: SymbolUploadBeginRequestSymbolType;
  /** The callback URL that the client can optionally provide to get status updates for the current symbol upload */
  clientCallback?: string;
  /** The file name for the symbol upload */
  fileName?: string;
  /** The build number. Optional for Apple. Required for Android. */
  build?: string;
  /** The version number. Optional for Apple. Required for Android. */
  version?: string;
}

/** A response containing information pertaining to starting a symbol upload process */
export interface SymbolUploadBeginResponse {
  /** The id for the current upload */
  symbolUploadId: string;
  /** The URL where the client needs to upload the symbol blob to */
  uploadUrl: string;
  /** Describes how long the upload_url is valid */
  expirationDate: Date;
}

/** A request containing information pertaining to completing a symbol upload process */
export interface SymbolUploadEndRequest {
  /** The desired operation for the symbol upload */
  status: SymbolUploadEndRequestStatus;
}

export interface SymbolUploadUserInfo {
  /** The email of the user */
  email?: string;
  /** The full name of the user. Might for example be first and last name */
  displayName?: string;
}

export interface UploadedSymbolInfo {
  /** The symbol id of the symbol binary */
  symbolId: string;
  /** The platform the symbol is associated with */
  platform: string;
}

/** A response represents information about symbol name group */
export interface SystemVersionNameGroup {
  /** Name of version group */
  name?: string;
  versions?: string[];
}

/** A response represents information about symbol name group */
export interface SystemVersionNameGroupsItem {
  /** Name of version group */
  name?: string;
  versions?: string[];
}

export interface AppCrashesInfo {
  hasCrashes: boolean;
  features: AppCrashesInfoFeatures;
}

export interface AppCrashesInfoFeatures {
  /** App supports modification of crashgroup status */
  crashgroupModifyStatus?: boolean;
  /** App supports modification of crashgroup annotation */
  crashgroupModifyAnnotation?: boolean;
  /** App supports search API */
  search?: boolean;
  /** App supports the 'crash free user' metric */
  crashgroupAnalyticsCrashfreeusers?: boolean;
  /** App supports the 'impacted users' metric */
  crashgroupAnalyticsImpactedusers?: boolean;
  /** App supports download of raw crashes */
  crashDownloadRaw?: boolean;
}

export interface AppFeatures {
  /** App supports modification of crashgroup status */
  crashgroupModifyStatus?: boolean;
  /** App supports modification of crashgroup annotation */
  crashgroupModifyAnnotation?: boolean;
  /** App supports search API */
  search?: boolean;
  /** App supports the 'crash free user' metric */
  crashgroupAnalyticsCrashfreeusers?: boolean;
  /** App supports the 'impacted users' metric */
  crashgroupAnalyticsImpactedusers?: boolean;
  /** App supports download of raw crashes */
  crashDownloadRaw?: boolean;
}

export interface AppVersion {
  appVersionId: string;
  appId: string;
  displayName: string;
  appVersion: string;
  buildNumber?: string;
}

/** a single frame of a stack trace */
export interface StackFrame {
  /** address of the frame */
  address?: string;
  /** name of the class */
  className?: string;
  /** name of the method */
  method?: string;
  /** is a class method */
  classMethod?: boolean;
  /** name of the file */
  file?: string;
  /** line number */
  line?: number;
  /** this line isn't from any framework */
  appCode: boolean;
  /** Name of the framework */
  frameworkName?: string;
  /** Raw frame string */
  codeRaw: string;
  /** Formatted frame string */
  codeFormatted: string;
  /** programming language of the frame */
  language?: StackFrameLanguage;
  /** frame should be shown always */
  relevant?: boolean;
  /** parameters of the frames method */
  methodParams?: string;
}

/** frame belonging to the reason of the crash */
export interface ReasonStackFrame {
  /** name of the class */
  className?: string;
  /** name of the method */
  method?: string;
  /** is a class method */
  classMethod?: boolean;
  /** name of the file */
  file?: string;
  /** line number */
  line?: number;
  /** this line isn't from any framework */
  appCode?: boolean;
  /** Name of the framework */
  frameworkName?: string;
  /** Formatted frame string */
  codeFormatted?: string;
  /** Unformatted Frame string */
  codeRaw?: string;
  /** programming language of the frame */
  language?: ReasonStackFrameLanguage;
  /** parameters of the frames method */
  methodParams?: string;
  /** Exception type. */
  exceptionType?: string;
  /** OS exception type. (aka. SIGNAL) */
  osExceptionType?: string;
}

export interface RetentionSettings {
  retentionInDays: RetentionSettingsRetentionInDays;
}

export interface CrashAttachment {
  appId: string;
  attachmentId: string;
  crashId: string;
  blobLocation: string;
  contentType: string;
  fileName: string;
  createdTime: Date;
  size: number;
}

/** Location for downloading crash raw */
export interface CrashRawLocation {
  uri: string;
}

/** Location for downloading crash attachment */
export interface CrashAttachmentLocation {
  uri: string;
}

export interface CrashGroupsContainer {
  limitedResultSet: boolean;
  /** Cassandra request continuation token. The token is used for pagination. */
  continuationToken?: string;
  crashGroups: CrashGroupsContainerCrashGroupsItem[];
}

export interface CrashGroupsContainerCrashGroupsItem {
  crashGroupId: string;
  newCrashGroupId: string;
  displayId: string;
  appVersion: string;
  build: string;
  status: CrashGroupsContainerCrashGroupsItemStatus;
  count: number;
  impactedUsers?: number;
  firstOccurrence: Date;
  lastOccurrence: Date;
  exception?: string;
  crashReason: string;
  /** frame belonging to the reason of the crash */
  reasonFrame?: CrashGroupsContainerCrashGroupsItemReasonFrame;
  /** Crash or handled exception */
  fatal: boolean;
  annotation: string;
}

/** frame belonging to the reason of the crash */
export interface CrashGroupsContainerCrashGroupsItemReasonFrame {
  /** name of the class */
  className?: string;
  /** name of the method */
  method?: string;
  /** is a class method */
  classMethod?: boolean;
  /** name of the file */
  file?: string;
  /** line number */
  line?: number;
  /** this line isn't from any framework */
  appCode?: boolean;
  /** Name of the framework */
  frameworkName?: string;
  /** Formatted frame string */
  codeFormatted?: string;
  /** Unformatted Frame string */
  codeRaw?: string;
  /** programming language of the frame */
  language?: Enum850;
  /** parameters of the frames method */
  methodParams?: string;
  /** Exception type. */
  exceptionType?: string;
  /** OS exception type. (aka. SIGNAL) */
  osExceptionType?: string;
}

export interface CrashGroup {
  crashGroupId: string;
  newCrashGroupId: string;
  displayId: string;
  appVersion: string;
  build: string;
  status: CrashGroupStatus;
  count: number;
  impactedUsers?: number;
  firstOccurrence: Date;
  lastOccurrence: Date;
  exception?: string;
  crashReason: string;
  /** frame belonging to the reason of the crash */
  reasonFrame?: CrashGroupReasonFrame;
  /** Crash or handled exception */
  fatal: boolean;
  annotation: string;
}

/** frame belonging to the reason of the crash */
export interface CrashGroupReasonFrame {
  /** name of the class */
  className?: string;
  /** name of the method */
  method?: string;
  /** is a class method */
  classMethod?: boolean;
  /** name of the file */
  file?: string;
  /** line number */
  line?: number;
  /** this line isn't from any framework */
  appCode?: boolean;
  /** Name of the framework */
  frameworkName?: string;
  /** Formatted frame string */
  codeFormatted?: string;
  /** Unformatted Frame string */
  codeRaw?: string;
  /** programming language of the frame */
  language?: CrashGroupReasonFrameLanguage;
  /** parameters of the frames method */
  methodParams?: string;
  /** Exception type. */
  exceptionType?: string;
  /** OS exception type. (aka. SIGNAL) */
  osExceptionType?: string;
}

export interface CrashGroupChange {
  status?: CrashGroupChangeStatus;
  annotation?: string;
}

export interface AlertingCrashGroup {
  url?: string;
  appDisplayName?: string;
  /** SDK/Platform this thread is beeing generated from */
  appPlatform?: AlertingCrashGroupAppPlatform;
  appVersion?: string;
  id?: string;
  name?: string;
  reason?: string;
  stackTrace?: string[];
}

export interface CrashDeleteCounter {
  appId?: string;
  crashGroupId?: string;
  crashId?: string;
  crashesDeleted?: number;
  attachmentsDeleted?: number;
  blobsSucceeded?: number;
  blobsFailed?: number;
}

/** missing symbol */
export interface V2MissingSymbol {
  /** symbol id */
  symbolId: string;
  /** symbol name */
  name: string;
  /** symbol plarform */
  platform?: string;
  /** symbol status */
  status: V2MissingSymbolStatus;
}

/** missing symbol */
export interface V2MissingSymbolsItem {
  /** symbol id */
  symbolId: string;
  /** symbol name */
  name: string;
  /** symbol plarform */
  platform?: string;
  /** symbol status */
  status: V2MissingSymbolsItemStatus;
}

/** symbol update message */
export interface V2SymbolUpdateInfo {
  /** UUID of the symbol */
  symbolId: string;
  /** application id */
  appId: string;
  /** symbol upload status */
  status: V2SymbolUpdateInfoStatus;
}

/** missing symbol crash group object */
export interface V2MissingSymbolCrashGroup {
  /** id of the symbol group */
  symbolGroupId: string;
  /** number of crashes that belong to this group */
  crashCount?: number;
  /** number of errors that belong to this group */
  errorCount?: number;
  /** application id */
  appId: string;
  /** application version */
  appVer: string;
  /** application build */
  appBuild: string;
  /** last update date for the group */
  lastModified: Date;
  /** list of missing symbols */
  missingSymbols: V2MissingSymbolCrashGroupMissingSymbolsItem[];
  /** group status */
  status: V2MissingSymbolCrashGroupStatus;
}

/** missing symbol */
export interface V2MissingSymbolCrashGroupMissingSymbolsItem {
  /** symbol id */
  symbolId: string;
  /** symbol name */
  name: string;
  /** symbol plarform */
  platform?: string;
  /** symbol status */
  status: V2MissingSymbolCrashGroupMissingSymbolsItemStatus;
}

/** missing symbol crash group object */
export interface V2MissingSymbolCrashGroupsItem {
  /** id of the symbol group */
  symbolGroupId: string;
  /** number of crashes that belong to this group */
  crashCount?: number;
  /** number of errors that belong to this group */
  errorCount?: number;
  /** application id */
  appId: string;
  /** application version */
  appVer: string;
  /** application build */
  appBuild: string;
  /** last update date for the group */
  lastModified: Date;
  /** list of missing symbols */
  missingSymbols: V2MissingSymbolCrashGroupsPropertiesItemsItem[];
  /** group status */
  status: V2MissingSymbolCrashGroupsItemStatus;
}

/** missing symbol */
export interface V2MissingSymbolCrashGroupsPropertiesItemsItem {
  /** symbol id */
  symbolId: string;
  /** symbol name */
  name: string;
  /** symbol plarform */
  platform?: string;
  /** symbol status */
  status: V2MissingSymbolCrashGroupsItemMissingSymbolsItemStatus;
}

/** grouped by missing symbols crashes response object */
export interface V2MissingSymbolCrashGroupsResponse {
  /** total number of crashes for all the groups */
  totalCrashCount: number;
  /** list of crash groups formed by missing symbols combination */
  groups: V2MissingSymbolCrashGroupsResponseGroupsItem[];
}

/** missing symbol crash group object */
export interface V2MissingSymbolCrashGroupsResponseGroupsItem {
  /** id of the symbol group */
  symbolGroupId: string;
  /** number of crashes that belong to this group */
  crashCount?: number;
  /** number of errors that belong to this group */
  errorCount?: number;
  /** application id */
  appId: string;
  /** application version */
  appVer: string;
  /** application build */
  appBuild: string;
  /** last update date for the group */
  lastModified: Date;
  /** list of missing symbols */
  missingSymbols: V2MissingSymbolCrashGroupsResponseGroupsPropertiesItemsItem[];
  /** group status */
  status: V2MissingSymbolCrashGroupsResponseGroupsItemStatus;
}

/** missing symbol */
export interface V2MissingSymbolCrashGroupsResponseGroupsPropertiesItemsItem {
  /** symbol id */
  symbolId: string;
  /** symbol name */
  name: string;
  /** symbol plarform */
  platform?: string;
  /** symbol status */
  status: V2MissingSymbolCrashGroupsResponseGroupsItemMissingSymbolsItemStatus;
}

/** missing symbol groups */
export interface V2MissingSymbolCrashGroupsInfoResponse {
  /** total number of crashes for all missing symbol groups */
  totalCrashCount: number;
}

/** status response object */
export interface V2StatusResponse {
  status: string;
}

/** failure response object */
export interface V2FailureResponse {
  code: string;
  message: string;
}

export interface ActiveCrashingAppDetails {
  nextLink?: string;
  /** details of the apps with crashes */
  appsWithCrashes?: ActiveCrashingAppDetailsAppsWithCrashesItem[];
}

export interface ActiveCrashingAppDetailsAppsWithCrashesItem {
  /** application identifier */
  appId?: string;
  /** application version */
  appVersion?: string;
  /** crash group identifier */
  crashGroupId?: string;
}

export interface LogTraceDefinition {
  appSecret: string;
  installId?: string;
  expiration?: Date;
}

export interface CrashingAppDetail {
  /** application identifier */
  appId?: string;
  /** application version */
  appVersion?: string;
  /** crash group identifier */
  crashGroupId?: string;
}

export interface LogContainer {
  /** indicates if the number of available logs are more than the max allowed return limit(100). */
  exceededMaxLimit?: boolean;
  /** the timestamp of the last log received. This value can be used as the start time parameter in the consecutive API call. */
  lastReceivedLogTimestamp?: Date;
  /** the list of logs */
  logs: LogContainerLogsItem[];
}

export interface LogContainerLogsItem {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "LogContainerLogsItem";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: LogContainerLogsItemDevice;
}

/** Device characteristics. */
export interface LogContainerLogsItemDevice {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface GenericLogContainer {
  /** indicates if the number of available logs are more than the max allowed return limit(100). */
  exceededMaxLimit?: boolean;
  /** the timestamp of the last log received. This value can be used as the start time parameter in the consecutive API call. */
  lastReceivedLogTimestamp?: Date;
  /** the list of logs */
  logs: GenericLogContainerLogsItem[];
}

/** Generic log. */
export interface GenericLogContainerLogsItem {
  /**
   * Log type.
   *
   */
  type: GenericLogContainerLogsItemType;
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /**
   * Session ID.
   *
   */
  sessionId?: string;
  /**
   * Event ID.
   *
   */
  eventId?: string;
  /**
   * Event name.
   *
   */
  eventName?: string;
  /**
   * Message ID.
   *
   */
  messageId?: string;
  /**
   * event specific properties.
   *
   */
  properties?: { [propertyName: string]: string };
  /** Device characteristics. */
  device: GenericLogContainerLogsItemDevice;
  /**
   * Auth service provider.
   *
   */
  authProvider?: string;
  /**
   * Account ID of the authenticated user.
   *
   */
  accountId?: string;
}

/** Device characteristics. */
export interface GenericLogContainerLogsItemDevice {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

/** Generic log. */
export interface GenericLog {
  /**
   * Log type.
   *
   */
  type: GenericLogType;
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /**
   * Session ID.
   *
   */
  sessionId?: string;
  /**
   * Event ID.
   *
   */
  eventId?: string;
  /**
   * Event name.
   *
   */
  eventName?: string;
  /**
   * Message ID.
   *
   */
  messageId?: string;
  /**
   * event specific properties.
   *
   */
  properties?: { [propertyName: string]: string };
  /** Device characteristics. */
  device: GenericLogDevice;
  /**
   * Auth service provider.
   *
   */
  authProvider?: string;
  /**
   * Account ID of the authenticated user.
   *
   */
  accountId?: string;
}

/** Device characteristics. */
export interface GenericLogDevice {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface Log {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "Log";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: LogDevice;
}

/** Device characteristics. */
export interface LogDevice {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface Components1Eosn49SchemasLogwithpropertiesAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "LogWithProperties";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: LogWithProperties0Device;
}

/** Device characteristics. */
export interface LogWithProperties0Device {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

/** Device characteristics. */
export interface Device {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface Components264NqgSchemasStartsessionlogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "start_session";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: StartSessionLog0Device;
}

/** Device characteristics. */
export interface StartSessionLog0Device {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface ComponentsO0SzfoSchemasDistributionstartsessionlogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "distribution_start_session";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: DistributionStartSessionLog0Device;
}

/** Device characteristics. */
export interface DistributionStartSessionLog0Device {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface Components84YphlSchemasHandlederrorlogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "handled_error";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: HandledErrorLog0Device;
}

/** Device characteristics. */
export interface HandledErrorLog0Device {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface Components1Vpcf5FSchemasUnhandlederrorlogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "unhandled_error";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: UnhandledErrorLog0Device;
}

/** Device characteristics. */
export interface UnhandledErrorLog0Device {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface Components1Rh9N66SchemasStartservicelogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "start_service";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: StartServiceLog0Device;
}

/** Device characteristics. */
export interface StartServiceLog0Device {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface CustomPropertyLogPropertiesItem {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "CustomPropertyLogPropertiesItem";
  name: string;
}

export interface ComponentsCzhkplSchemasCustompropertylogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "custom_properties";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: CustomPropertyLog0Device;
}

/** Device characteristics. */
export interface CustomPropertyLog0Device {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface CustomProperty {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "CustomProperty";
  name: string;
}

export interface Components1HtupicSchemasStringpropertyAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "string";
  name: string;
}

export interface Components3Is1CjSchemasNumberpropertyAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "number";
  name: string;
}

export interface ComponentsIduba0SchemasBooleanpropertyAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "boolean";
  name: string;
}

export interface ComponentsLyvfq5SchemasDatetimepropertyAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "date_time";
  name: string;
}

/** Clear an existing property. */
export interface ClearProperty {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "ClearProperty";
  name: string;
}

export interface Components1Wno2Z2SchemasPagelogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "components·4kro3m·schemas·pagelog·allof·0" | "page";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: PageLog0Device;
}

/** Device characteristics. */
export interface PageLog0Device {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface ComponentsMa5HoxSchemasEventlogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "components·498zbb·schemas·eventlog·allof·0" | "event";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: EventLog0Device;
}

/** Device characteristics. */
export interface EventLog0Device {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface ComponentsNch8AzSchemasPushinstallationlogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "push_installation";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: PushInstallationLog0Device;
}

/** Device characteristics. */
export interface PushInstallationLog0Device {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface Components1Aigpj3SchemasErrorlogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "error";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: ErrorLog0Device;
}

/** Device characteristics. */
export interface ErrorLog0Device {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

/** List of audiences. */
export interface AudienceListResult {
  /** List of audiences. */
  values: AudienceListResultValuesItem[];
  nextLink?: string;
}

/** Audience definition. */
export interface AudienceListResultValuesItem {
  /** Audience name. */
  name?: string;
  /** Audience description. */
  description?: string;
  /** Estimated audience size. */
  estimatedCount?: number;
  /** Audience definition in OData format. */
  definition?: string;
  /** Audience state. */
  state?: AudienceProcessingState;
}

/** Audience definition. */
export interface AudienceSummary {
  /** Audience name. */
  name?: string;
  /** Audience description. */
  description?: string;
  /** Estimated audience size. */
  estimatedCount?: number;
  /** Audience definition in OData format. */
  definition?: string;
  /** Audience state. */
  state?: AudienceProcessingState;
}

/** Audience definition. */
export interface Components46VdxoSchemasAudienceAllof0 {
  /** Audience name. */
  name?: string;
  /** Audience description. */
  description?: string;
  /** Estimated audience size. */
  estimatedCount?: number;
  /** Audience definition in OData format. */
  definition?: string;
  /** Audience state. */
  state?: AudienceProcessingState;
}

/** Audience test result. */
export interface AudienceTestResult {
  /** Audience definition in OData format. */
  definition?: string;
  /** Custom properties used in the definition. */
  customProperties?: { [propertyName: string]: DevicePropertyType };
  /** Estimated audience size. */
  estimatedCount?: number;
  /** Estimated total audience size. */
  estimatedTotalCount?: number;
}

/** Token query result. */
export interface TokenQueryResult {
  /** List of tokens. */
  tokens?: string[];
}

/** Audience definition. */
export interface AudienceDefinition {
  /** Audience description. */
  description?: string;
  /** Audience definition in OData format. */
  definition: string;
  enabled?: boolean;
  /** Custom properties used in the definition. */
  customProperties?: { [propertyName: string]: DevicePropertyType };
}

/** Audience Query definition. */
export interface AudienceQueryDefinition {
  /** Audience Query Type */
  queryType: AudienceQueryType;
  /** List of identifiers. */
  identifiers?: string[];
}

/** Audience definition. */
export interface AudienceBlobResult {
  /** Location of the audience blob. */
  url?: string;
}

/** List of device properties. */
export interface AudienceDevicePropertiesListResult {
  /** List of device properties. */
  values: { [propertyName: string]: DevicePropertyType };
}

/** List of device property values. */
export interface AudienceDevicePropertyValuesListResult {
  /** List of device property values. */
  values: string[];
}

export interface CrashCounts {
  /** Total crash count. */
  count?: number;
  /** The total crash count for day. */
  crashes?: CrashCountsCrashesItem[];
}

export interface CrashCountsCrashesItem {
  /** The ISO 8601 datetime. */
  datetime?: string;
  /** Count of the object. */
  count?: number;
}

export interface ActiveDeviceCounts {
  /** The active device count for each interval. */
  daily?: ActiveDeviceCountsDailyItem[];
  /** The active device count for each interval with a week's retention. */
  weekly?: ActiveDeviceCountsWeeklyItem[];
  /** The active device count for each interval with a month's retention. */
  monthly?: ActiveDeviceCountsMonthlyItem[];
}

export interface ActiveDeviceCountsDailyItem {
  /** The ISO 8601 datetime. */
  datetime?: string;
  /** Count of the object. */
  count?: number;
}

export interface ActiveDeviceCountsWeeklyItem {
  /** The ISO 8601 datetime. */
  datetime?: string;
  /** Count of the object. */
  count?: number;
}

export interface ActiveDeviceCountsMonthlyItem {
  /** The ISO 8601 datetime. */
  datetime?: string;
  /** Count of the object. */
  count?: number;
}

/** Places and count during the time range in descending order. */
export interface Places {
  total?: number;
  places?: PlacesItem[];
}

/** The place code and the count. */
export interface PlacesItem {
  /** The place code. */
  code?: string;
  /** The count of the this place. */
  count?: number;
  /** The count of previous time range of the place. */
  previousCount?: number;
}

/** The place code and the count. */
export interface Place {
  /** The place code. */
  code?: string;
  /** The count of the this place. */
  count?: number;
  /** The count of previous time range of the place. */
  previousCount?: number;
}

/** Error */
export interface ErrorModel {
  error?: ErrorError;
}

export interface ErrorError {
  /** The status code return by the API. It can be 400 or 403 or 500. */
  code?: ErrorCode;
  /** The reason for the request failed. */
  message?: string;
}

export interface SessionDurationsDistribution {
  /** The count of sessions in these buckets. */
  distribution?: SessionDurationsDistributionItem[];
  /** The previous average session duration for previous time range. */
  previousAverageDuration?: string;
  /** The average session duration for current time range. */
  averageDuration?: string;
}

export interface SessionDurationsDistributionItem {
  /** The bucket name. */
  bucket?: string;
  /** The count of sessions in current bucket. */
  count?: number;
}

export interface Versions {
  /** List of version count. */
  versions?: VersionsItem[];
  /** The total count of versions. */
  total?: number;
}

export interface VersionsItem {
  /** Version. */
  version?: string;
  /** Version count. */
  count?: number;
  /** The count of previous time range of the version. */
  previousCount?: number;
}

export interface Version {
  /** Version. */
  version?: string;
  /** Version count. */
  count?: number;
  /** The count of previous time range of the version. */
  previousCount?: number;
}

export interface SessionCountsItem {
  /** The ISO 8601 datetime. */
  datetime?: string;
  /** Count of the object. */
  count?: number;
}

export interface SessionsPerDevice {
  /** Average seesion per user. */
  averageSessionsPerUser?: number;
  /** Previous average session per user. */
  previousAverageSessionsPerUser?: number;
  /** Total session per device count. */
  totalCount?: number;
  /** Previous total count. */
  previousTotalCount?: number;
  /** The session count for each interval per device. */
  sessionsPerUser?: SessionsPerDeviceSessionsPerUserItem[];
}

export interface SessionsPerDeviceSessionsPerUserItem {
  /** The ISO 8601 datetime. */
  datetime?: string;
  /** Count. */
  count?: number;
}

export interface AnalyticsModels {
  total?: number;
  models?: AnalyticsModelsItem[];
}

export interface AnalyticsModelsItem {
  /** Model's name. */
  modelName?: string;
  /** Count current of model. */
  count?: number;
  /** Count of previous model. */
  previousCount?: number;
}

export interface Model {
  /** Model's name. */
  modelName?: string;
  /** Count current of model. */
  count?: number;
  /** Count of previous model. */
  previousCount?: number;
}

export interface Languages {
  total?: number;
  languages?: LanguagesItem[];
}

export interface LanguagesItem {
  /** Language's name. */
  languageName?: string;
  /** Count current of language. */
  count?: number;
  /** Count of previous lanugage. */
  previousCount?: number;
}

export interface Language {
  /** Language's name. */
  languageName?: string;
  /** Count current of language. */
  count?: number;
  /** Count of previous lanugage. */
  previousCount?: number;
}

export interface OSes {
  total?: number;
  oses?: OSesOsesItem[];
}

export interface OSesOsesItem {
  /** OS name. */
  osName?: string;
  /** Count current of OS. */
  count?: number;
  /** Count of previous OS. */
  previousCount?: number;
}

export interface Os {
  /** OS name. */
  osName?: string;
  /** Count current of OS. */
  count?: number;
  /** Count of previous OS. */
  previousCount?: number;
}

export interface DateTimeCounts {
  /** The ISO 8601 datetime. */
  datetime?: string;
  /** Count of the object. */
  count?: number;
}

export interface DateTimeDecimalCounts {
  /** The ISO 8601 datetime. */
  datetime?: string;
  /** Decimal count of the object. */
  count?: number;
}

export interface AvailableVersions {
  /** List of available versions. */
  versions?: string[];
  /** The full number of versions across all pages. */
  totalCount?: number;
}

export interface AvailableAppBuilds {
  /** List of available app builds. */
  appBuilds?: string[];
}

export interface CrashFreeDevicePercentages {
  /** Average percentage. */
  averagePercentage?: number;
  /** The crash-free percentage per day. */
  dailyPercentages?: CrashFreeDevicePercentagesDailyPercentagesItem[];
}

export interface CrashFreeDevicePercentagesDailyPercentagesItem {
  /** The ISO 8601 datetime. */
  datetime?: string;
  /** Percentage of the object. */
  percentage?: number;
}

export interface Modules {
  /** Dictionary of <components·1jake71·schemas·modules·properties·modules·additionalproperties> */
  modules?: { [propertyName: string]: { [propertyName: string]: boolean } };
}

export interface DateTimePercentages {
  /** The ISO 8601 datetime. */
  datetime?: string;
  /** Percentage of the object. */
  percentage?: number;
}

export interface CrashesOverallItem {
  crashGroupId?: string;
  appVersion?: string;
  overall?: CrashesOverallItemOverall;
}

export interface CrashesOverallItemOverall {
  crashCount?: number;
  deviceCount?: number;
}

export interface CrashOverall {
  crashCount?: number;
  deviceCount?: number;
}

export interface CrashGroupModels {
  crashCount?: number;
  models?: CrashGroupModelsItem[];
}

export interface CrashGroupModelsItem {
  /** Model's name. */
  modelName?: string;
  /** Count of model. */
  crashCount?: number;
}

export interface CrashGroupModel {
  /** Model's name. */
  modelName?: string;
  /** Count of model. */
  crashCount?: number;
}

export interface CrashGroupOperatingSystems {
  crashCount?: number;
  operatingSystems?: CrashGroupOperatingSystemsItem[];
}

export interface CrashGroupOperatingSystemsItem {
  /** OS name. */
  operatingSystemName?: string;
  /** Count of OS. */
  crashCount?: number;
}

export interface CrashGroupOperatingSystem {
  /** OS name. */
  operatingSystemName?: string;
  /** Count of OS. */
  crashCount?: number;
}

export interface CrashGroupPlaces {
  crashCount?: number;
  places?: CrashGroupPlacesItem[];
}

export interface CrashGroupPlacesItem {
  /** Place name. */
  placeName?: string;
  /** Count of places. */
  crashCount?: number;
}

export interface CrashGroupPlace {
  /** Place name. */
  placeName?: string;
  /** Count of places. */
  crashCount?: number;
}

export interface CrashGroupLanguages {
  crashCount?: number;
  languages?: CrashGroupLanguagesItem[];
}

export interface CrashGroupLanguagesItem {
  /** Language name. */
  languageName?: string;
  /** Count of languages. */
  crashCount?: number;
}

export interface CrashGroupLanguage {
  /** Language name. */
  languageName?: string;
  /** Count of languages. */
  crashCount?: number;
}

export interface CrashGroupCarriers {
  crashCount?: number;
  carriers?: CrashGroupCarriersItem[];
}

export interface CrashGroupCarriersItem {
  /** Carrier name. */
  carrierName?: string;
  /** Crash count of carrier. */
  crashCount?: number;
}

export interface CrashGroupCarrier {
  /** Carrier name. */
  carrierName?: string;
  /** Crash count of carrier. */
  crashCount?: number;
}

export interface CrashGroupContainer {
  crashGroups: CrashGroupContainerCrashGroupsItem[];
}

export interface CrashGroupContainerCrashGroupsItem {
  crashGroupId?: string;
  appVersion?: string;
}

export interface CrashGroupAndVersion {
  crashGroupId?: string;
  appVersion?: string;
}

export interface Events {
  events?: EventsItem[];
  /** The total count of events. */
  total?: number;
  /** The active device over this period. */
  totalDevices?: number;
}

export interface EventsItem {
  id?: string;
  name?: string;
  deviceCount?: number;
  /** The device count of previous time range of the event. */
  previousDeviceCount?: number;
  count?: number;
  /** The event count of previous time range of the event. */
  previousCount?: number;
  countPerDevice?: number;
  countPerSession?: number;
}

export interface Event {
  id?: string;
  name?: string;
  deviceCount?: number;
  /** The device count of previous time range of the event. */
  previousDeviceCount?: number;
  count?: number;
  /** The event count of previous time range of the event. */
  previousCount?: number;
  countPerDevice?: number;
  countPerSession?: number;
}

export interface EventCount {
  totalCount?: number;
  previousTotalCount?: number;
  count?: EventCountItem[];
}

export interface EventCountItem {
  /** The ISO 8601 datetime. */
  datetime?: string;
  /** Count of the object. */
  count?: number;
}

export interface EventDeviceCount {
  totalDevices?: number;
  totalDevicesWithEvent?: number;
  previousTotalDevicesWithEvent?: number;
  devicesCount?: EventDeviceCountDevicesCountItem[];
}

export interface EventDeviceCountDevicesCountItem {
  /** The ISO 8601 datetime. */
  datetime?: string;
  /** Count of the object. */
  count?: number;
}

export interface EventCountPerDevice {
  avgCountPerDevice?: number;
  previousAvgCountPerDevice?: number;
  countPerDevice?: EventCountPerDeviceCountPerDeviceItem[];
}

export interface EventCountPerDeviceCountPerDeviceItem {
  /** The ISO 8601 datetime. */
  datetime?: string;
  /** Decimal count of the object. */
  count?: number;
}

export interface EventCountPerSession {
  avgCountPerSession?: number;
  previousAvgCountPerSession?: number;
  countPerSession?: EventCountPerSessionCountPerSessionItem[];
}

export interface EventCountPerSessionCountPerSessionItem {
  /** The ISO 8601 datetime. */
  datetime?: string;
  /** Decimal count of the object. */
  count?: number;
}

/** Event properties during the time range. */
export interface EventProperties {
  eventProperties?: string[];
}

/** Event property value counts during the time range in descending order. */
export interface EventPropertyValues {
  /** The total property value counts. */
  total?: number;
  /** The event property values. */
  values?: EventPropertyValuesItem[];
}

/** An event property value with counts. */
export interface EventPropertyValuesItem {
  /** The event property value name. */
  name?: string;
  /** The count of the the event property value. */
  count?: number;
  /** The count of previous time range of the event property value. */
  previousCount?: number;
}

/** An event property value with counts. */
export interface EventPropertyValue {
  /** The event property value name. */
  name?: string;
  /** The count of the the event property value. */
  count?: number;
  /** The count of previous time range of the event property value. */
  previousCount?: number;
}

export interface NotifyReleasesContainer {
  releases: NotifyReleasesContainerReleasesItem[];
}

export interface Components1Ynaqb8SchemasNotifyreleasescontainerPropertiesReleasesItemsAllof0 {
  /**
   * Release Id.
   *
   */
  release: string;
}

export interface DeleteReleasesContainer {
  releases: DeleteReleasesContainerReleasesItem[];
}

export interface DeleteReleasesContainerReleasesItem {
  /**
   * Release Id.
   *
   */
  release: string;
}

export interface GetReleasesContainer {
  releases: GetReleasesContainerReleasesItem[];
}

export interface ComponentsOqh4QzSchemasGetreleasescontainerPropertiesReleasesItemsAllof0 {
  /**
   * Release Id.
   *
   */
  release: string;
}

export interface FilterReleasesContainer {
  releases?: FilterReleasesContainerReleasesItem[];
}

export interface FilterReleasesContainerReleasesItem {
  /**
   * Release Id.
   *
   */
  release: string;
}

export interface FilterVersionsContainer {
  versions?: FilterVersionsContainerVersionsItem[];
}

export interface FilterVersionsContainerVersionsItem {
  /**
   * App version.
   *
   */
  version: string;
  /**
   * App build number.
   *
   */
  build: string;
}

export interface Release {
  /**
   * Release Id.
   *
   */
  release: string;
}

export interface Components1Udh21GSchemasReleasewithdistributiongroupAllof0 {
  /**
   * Release Id.
   *
   */
  release: string;
}

export interface Components1Go150KSchemasReleasewithdistributiongroupanduseridAllof0 {
  /**
   * Release Id.
   *
   */
  release: string;
}

export interface ReleaseCounts {
  total?: number;
  counts: ReleaseCountsItem[];
}

export interface ReleaseCountsItem {
  releaseId: string;
  /**
   * Distribution group queried.
   *
   */
  distributionGroup?: string;
  /**
   * Count of unique downloads against user id.
   *
   */
  uniqueCount: number;
  /**
   * Total count of downloads.
   *
   */
  totalCount: number;
}

export interface ReleaseDailySessions {
  totalSessionCounts?: number;
  avgSessionsPerDay?: number;
  /** Sessions per day. */
  sessions?: ReleaseDailySessionsItem[];
}

export interface ReleaseDailySessionsItem {
  /** The ISO 8601 datetime. */
  datetime?: string;
  count?: number;
}

export interface DailySession {
  /** The ISO 8601 datetime. */
  datetime?: string;
  count?: number;
}

export interface DateTimeDownloadReleaseCounts {
  total?: number;
  unique?: number;
  /** Release counts per day. */
  counts?: DateTimeDownloadReleaseCountsItem[];
}

export interface DateTimeDownloadReleaseCountsItem {
  /** The ISO 8601 datetime. */
  datetime?: string;
  total?: number;
  unique?: number;
}

export interface DateTimeDownloadReleaseCount {
  /** The ISO 8601 datetime. */
  datetime?: string;
  total?: number;
  unique?: number;
}

export interface ReleaseCount {
  releaseId: string;
  /**
   * Distribution group queried.
   *
   */
  distributionGroup?: string;
  /**
   * Count of unique downloads against user id.
   *
   */
  uniqueCount: number;
  /**
   * Total count of downloads.
   *
   */
  totalCount: number;
}

export interface LogFlowLogContainer {
  /** indicates if the number of available logs are more than the max allowed return limit(100). */
  exceededMaxLimit?: boolean;
  /** the timestamp of the last log received. This value can be used as the start time parameter in the consecutive API call. */
  lastReceivedLogTimestamp?: Date;
  /** the list of logs */
  logs: LogFlowLogContainerLogsItem[];
}

export interface LogFlowLogContainerLogsItem {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "LogFlowLogContainerLogsItem";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: LogFlowLogContainerLogsItemDevice;
}

/** Device characteristics. */
export interface LogFlowLogContainerLogsItemDevice {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface LogFlowGenericLogContainer {
  /** indicates if the number of available logs are more than the max allowed return limit(100). */
  exceededMaxLimit?: boolean;
  /** the timestamp of the last log received. This value can be used as the start time parameter in the consecutive API call. */
  lastReceivedLogTimestamp?: Date;
  /** the list of logs */
  logs: LogFlowGenericLogContainerLogsItem[];
}

/** Generic log. */
export interface LogFlowGenericLogContainerLogsItem {
  /**
   * Log type.
   *
   */
  type: LogFlowGenericLogContainerLogsItemType;
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /**
   * Session ID.
   *
   */
  sessionId?: string;
  /**
   * Event ID.
   *
   */
  eventId?: string;
  /**
   * Event name.
   *
   */
  eventName?: string;
  /**
   * Message ID.
   *
   */
  messageId?: string;
  /**
   * event specific properties.
   *
   */
  properties?: { [propertyName: string]: string };
  /** Device characteristics. */
  device: LogFlowGenericLogContainerLogsItemDevice;
  /**
   * Auth service provider.
   *
   */
  authProvider?: string;
  /**
   * Account ID of the authenticated user.
   *
   */
  accountId?: string;
}

/** Device characteristics. */
export interface LogFlowGenericLogContainerLogsItemDevice {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

/** Generic log. */
export interface LogFlowGenericLog {
  /**
   * Log type.
   *
   */
  type: LogFlowGenericLogType;
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /**
   * Session ID.
   *
   */
  sessionId?: string;
  /**
   * Event ID.
   *
   */
  eventId?: string;
  /**
   * Event name.
   *
   */
  eventName?: string;
  /**
   * Message ID.
   *
   */
  messageId?: string;
  /**
   * event specific properties.
   *
   */
  properties?: { [propertyName: string]: string };
  /** Device characteristics. */
  device: LogFlowGenericLogDevice;
  /**
   * Auth service provider.
   *
   */
  authProvider?: string;
  /**
   * Account ID of the authenticated user.
   *
   */
  accountId?: string;
}

/** Device characteristics. */
export interface LogFlowGenericLogDevice {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface LogFlowLog {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "LogFlowLog";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: LogFlowLogDevice;
}

/** Device characteristics. */
export interface LogFlowLogDevice {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface ComponentsAdvxd9SchemasLogflowlogwithpropertiesAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "LogFlowLogWithProperties";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: LogFlowLogWithProperties0Device;
}

/** Device characteristics. */
export interface LogFlowLogWithProperties0Device {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

/** Device characteristics. */
export interface LogFlowDevice {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface Components1F0KdpnSchemasLogflowstartsessionlogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "start_session";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: LogFlowStartSessionLog0Device;
}

/** Device characteristics. */
export interface LogFlowStartSessionLog0Device {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface Components11CfsbmSchemasLogflowstartservicelogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "start_service";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: LogFlowStartServiceLog0Device;
}

/** Device characteristics. */
export interface LogFlowStartServiceLog0Device {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface LogFlowCustomPropertyLogPropertiesItem {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "LogFlowCustomPropertyLogPropertiesItem";
  name: string;
}

export interface ComponentsXnezrhSchemasLogflowcustompropertylogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "custom_properties";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: LogFlowCustomPropertyLog0Device;
}

/** Device characteristics. */
export interface LogFlowCustomPropertyLog0Device {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface LogFlowCustomProperty {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "LogFlowCustomProperty";
  name: string;
}

export interface Components1G242RdSchemasLogflowstringpropertyAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "string";
  name: string;
}

export interface ComponentsTkf1YnSchemasLogflownumberpropertyAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "number";
  name: string;
}

export interface ComponentsCwosetSchemasLogflowbooleanpropertyAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "boolean";
  name: string;
}

export interface Components127VkznSchemasLogflowdatetimepropertyAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "date_time";
  name: string;
}

/** Clear an existing property. */
export interface LogFlowClearProperty {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "LogFlowClearProperty";
  name: string;
}

export interface Components10Oj24WSchemasLogflowpagelogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "components·11mk7tb·schemas·logflowpagelog·allof·0" | "page";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: LogFlowPageLog0Device;
}

/** Device characteristics. */
export interface LogFlowPageLog0Device {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface Components1Ctri9VSchemasLogfloweventlogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "components·bzcad5·schemas·logfloweventlog·allof·0" | "event";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: LogFlowEventLog0Device;
}

/** Device characteristics. */
export interface LogFlowEventLog0Device {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface Components1Yqphd0SchemasLogflowpushinstallationlogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "push_installation";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: LogFlowPushInstallationLog0Device;
}

/** Device characteristics. */
export interface LogFlowPushInstallationLog0Device {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface ComponentsPcles3SchemasLogflowerrorlogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "error";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: LogFlowErrorLog0Device;
}

/** Device characteristics. */
export interface LogFlowErrorLog0Device {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface ErrorGroups {
  nextLink?: string;
  errorGroups?: ErrorGroupsItem[];
}

export interface ErrorGroupsAllOfPropertiesItemsItem {
  /** name of the class */
  className?: string;
  /** name of the method */
  method?: string;
  /** is a class method */
  classMethod?: boolean;
  /** name of the file */
  file?: string;
  /** line number */
  line?: number;
  /** this line isn't from any framework */
  appCode?: boolean;
  /** Name of the framework */
  frameworkName?: string;
  /** Formatted frame string */
  codeFormatted?: string;
  /** Unformatted Frame string */
  codeRaw?: string;
  /** programming language of the frame */
  language?: ErrorGroupsItemAllOf0ReasonFramesItemLanguage;
  /** parameters of the frames method */
  methodParams?: string;
  /** Exception type. */
  exceptionType?: string;
  /** OS exception type. (aka. SIGNAL) */
  osExceptionType?: string;
}

export interface Components18G140XSchemasErrorgroupsPropertiesErrorgroupsItemsAllof0 {
  state: ErrorGroupsAllOfProperties;
  annotation?: string;
}

export interface ErrorGroupsSearchResult {
  hasMoreResults?: boolean;
  errorGroups?: ErrorGroupsSearchResultErrorGroupsItem[];
}

export interface ErrorGroupsSearchResultErrorGroupsAllOfPropertiesItemsItem {
  /** name of the class */
  className?: string;
  /** name of the method */
  method?: string;
  /** is a class method */
  classMethod?: boolean;
  /** name of the file */
  file?: string;
  /** line number */
  line?: number;
  /** this line isn't from any framework */
  appCode?: boolean;
  /** Name of the framework */
  frameworkName?: string;
  /** Formatted frame string */
  codeFormatted?: string;
  /** Unformatted Frame string */
  codeRaw?: string;
  /** programming language of the frame */
  language?: ErrorGroupsSearchResultErrorGroupsItemAllOf0ReasonFramesItemLanguage;
  /** parameters of the frames method */
  methodParams?: string;
  /** Exception type. */
  exceptionType?: string;
  /** OS exception type. (aka. SIGNAL) */
  osExceptionType?: string;
}

export interface Components1Bte8TvSchemasErrorgroupssearchresultPropertiesErrorgroupsItemsAllof0 {
  state: ErrorGroupsSearchResultErrorGroupsAllOfProperties;
  annotation?: string;
}

export interface ErrorCounts {
  /** total error count */
  count?: number;
  /** the total error count for day */
  errors?: ErrorCountsErrorsItem[];
}

export interface ErrorCountsErrorsItem {
  /** the ISO 8601 datetime */
  datetime?: string;
  /** count of the object */
  count?: number;
}

export interface ErrorGroupListItem0ReasonFramesItem {
  /** name of the class */
  className?: string;
  /** name of the method */
  method?: string;
  /** is a class method */
  classMethod?: boolean;
  /** name of the file */
  file?: string;
  /** line number */
  line?: number;
  /** this line isn't from any framework */
  appCode?: boolean;
  /** Name of the framework */
  frameworkName?: string;
  /** Formatted frame string */
  codeFormatted?: string;
  /** Unformatted Frame string */
  codeRaw?: string;
  /** programming language of the frame */
  language?: ErrorGroupListItemAllOf0ReasonFramesItemLanguage;
  /** parameters of the frames method */
  methodParams?: string;
  /** Exception type. */
  exceptionType?: string;
  /** OS exception type. (aka. SIGNAL) */
  osExceptionType?: string;
}

export interface Components12LbtiSchemasErrorgrouplistitemAllof0 {
  state: ErrorGroupListItem0State;
  annotation?: string;
}

export interface ErrorGroupReasonFramesItem {
  /** name of the class */
  className?: string;
  /** name of the method */
  method?: string;
  /** is a class method */
  classMethod?: boolean;
  /** name of the file */
  file?: string;
  /** line number */
  line?: number;
  /** this line isn't from any framework */
  appCode?: boolean;
  /** Name of the framework */
  frameworkName?: string;
  /** Formatted frame string */
  codeFormatted?: string;
  /** Unformatted Frame string */
  codeRaw?: string;
  /** programming language of the frame */
  language?: ErrorGroupReasonFramesItemLanguage;
  /** parameters of the frames method */
  methodParams?: string;
  /** Exception type. */
  exceptionType?: string;
  /** OS exception type. (aka. SIGNAL) */
  osExceptionType?: string;
}

export interface ComponentsHbqu9KSchemasErrorgroupAllof0 {
  state: ErrorGroup0State;
  annotation?: string;
}

export interface ErrorDateTimePercentages {
  /** the ISO 8601 datetime */
  datetime?: string;
  /** percentage of the object */
  percentage?: number;
}

export interface ErrorDateTimeCounts {
  /** the ISO 8601 datetime */
  datetime?: string;
  /** count of the object */
  count?: number;
}

export interface ErrorGroupState {
  state: ErrorGroupStateState;
  annotation?: string;
}

export interface ErrorDownloadLink {
  link: string;
}

/** a single frame of a stack trace */
export interface DiagnosticsStackFrame {
  /** address of the frame */
  address?: string;
  /** name of the class */
  className?: string;
  /** name of the method */
  method?: string;
  /** is a class method */
  classMethod?: boolean;
  /** name of the file */
  file?: string;
  /** line number */
  line?: number;
  /** this line isn't from any framework */
  appCode: boolean;
  /** Name of the framework */
  frameworkName?: string;
  /** Raw frame string */
  codeRaw: string;
  /** Formatted frame string */
  codeFormatted: string;
  /** programming language of the frame */
  language?: DiagnosticsStackFrameLanguage;
  /** frame should be shown always */
  relevant?: boolean;
  /** parameters of the frames method */
  methodParams?: string;
}

export interface HandledErrorReasonFrame {
  /** name of the class */
  className?: string;
  /** name of the method */
  method?: string;
  /** is a class method */
  classMethod?: boolean;
  /** name of the file */
  file?: string;
  /** line number */
  line?: number;
  /** this line isn't from any framework */
  appCode?: boolean;
  /** Name of the framework */
  frameworkName?: string;
  /** Formatted frame string */
  codeFormatted?: string;
  /** Unformatted Frame string */
  codeRaw?: string;
  /** programming language of the frame */
  language?: HandledErrorReasonFrameLanguage;
  /** parameters of the frames method */
  methodParams?: string;
  /** Exception type. */
  exceptionType?: string;
  /** OS exception type. (aka. SIGNAL) */
  osExceptionType?: string;
}

export interface ErrorFreeDevicePercentages {
  /** Average percentage */
  averagePercentage?: number;
  /** The error-free percentage per day. */
  dailyPercentages?: ErrorFreeDevicePercentagesDailyPercentagesItem[];
}

export interface ErrorFreeDevicePercentagesDailyPercentagesItem {
  /** the ISO 8601 datetime */
  datetime?: string;
  /** percentage of the object */
  percentage?: number;
}

export interface HandledErrors {
  nextLink?: string;
  /** Errors list. */
  errors?: HandledErrorsItem[];
}

export interface HandledErrorsItem {
  errorId?: string;
  timestamp?: Date;
  deviceName?: string;
  osVersion?: string;
  osType?: string;
  country?: string;
  language?: string;
  userId?: string;
  hasBreadcrumbs?: boolean;
  hasAttachments?: boolean;
}

export interface ErrorsSearchResult {
  hasMoreResults?: boolean;
  errors?: ErrorsSearchResultErrorsItem[];
}

export interface ErrorsSearchResultErrorsItem {
  errorId?: string;
  timestamp?: Date;
  deviceName?: string;
  osVersion?: string;
  osType?: string;
  country?: string;
  language?: string;
  userId?: string;
  hasBreadcrumbs?: boolean;
  hasAttachments?: boolean;
}

export interface HandledError {
  errorId?: string;
  timestamp?: Date;
  deviceName?: string;
  osVersion?: string;
  osType?: string;
  country?: string;
  language?: string;
  userId?: string;
  hasBreadcrumbs?: boolean;
  hasAttachments?: boolean;
}

export interface HandledErrorDetailsReasonFramesItem {
  /** name of the class */
  className?: string;
  /** name of the method */
  method?: string;
  /** is a class method */
  classMethod?: boolean;
  /** name of the file */
  file?: string;
  /** line number */
  line?: number;
  /** this line isn't from any framework */
  appCode?: boolean;
  /** Name of the framework */
  frameworkName?: string;
  /** Formatted frame string */
  codeFormatted?: string;
  /** Unformatted Frame string */
  codeRaw?: string;
  /** programming language of the frame */
  language?: HandledErrorDetailsReasonFramesItemLanguage;
  /** parameters of the frames method */
  methodParams?: string;
  /** Exception type. */
  exceptionType?: string;
  /** OS exception type. (aka. SIGNAL) */
  osExceptionType?: string;
}

export interface Components16C15OnSchemasHandlederrordetailsAllof0 {
  errorId?: string;
  timestamp?: Date;
  deviceName?: string;
  osVersion?: string;
  osType?: string;
  country?: string;
  language?: string;
  userId?: string;
  hasBreadcrumbs?: boolean;
  hasAttachments?: boolean;
}

export interface ErrorDeleteCounter {
  appId?: string;
  errorGroupId?: string;
  errorId?: string;
  errorsDeleted?: number;
  attachmentsDeleted?: number;
  blobsSucceeded?: number;
  blobsFailed?: number;
}

export interface ErrorLocation {
  uri?: string;
}

export interface ErrorAttachmentsItem {
  appId?: string;
  attachmentId?: string;
  crashId?: string;
  blobLocation?: string;
  contentType?: string;
  fileName?: string;
  createdTime?: Date;
  size?: number;
}

export interface ErrorAttachment {
  appId?: string;
  attachmentId?: string;
  crashId?: string;
  blobLocation?: string;
  contentType?: string;
  fileName?: string;
  createdTime?: Date;
  size?: number;
}

export interface ErrorAppBuilds {
  appBuilds?: string[];
}

export interface ErrorAttachmentText {
  content?: string;
}

export interface ErrorAttachmentLocation {
  uri?: string;
}

export interface ErrorGroupModels {
  errorCount?: number;
  models?: ErrorGroupModelsItem[];
}

export interface ErrorGroupModelsItem {
  /** model name */
  modelName?: string;
  /** model code */
  modelCode?: string;
  /** count of errors in a model */
  errorCount?: number;
}

export interface ErrorGroupModel {
  /** model name */
  modelName?: string;
  /** model code */
  modelCode?: string;
  /** count of errors in a model */
  errorCount?: number;
}

export interface ErrorGroupOperatingSystems {
  errorCount?: number;
  operatingSystems?: ErrorGroupOperatingSystemsItem[];
}

export interface ErrorGroupOperatingSystemsItem {
  /** OS name */
  operatingSystemName?: string;
  /** count of OS */
  errorCount?: number;
}

export interface ErrorGroupOperatingSystem {
  /** OS name */
  operatingSystemName?: string;
  /** count of OS */
  errorCount?: number;
}

export interface GenericLogContainerDiagnostics {
  /** indicates if the number of available logs are more than the max allowed return limit(100). */
  exceededMaxLimit?: boolean;
  /** the timestamp of the last log received. This value can be used as the start time parameter in the consecutive API call. */
  lastReceivedLogTimestamp?: Date;
  /** the list of logs */
  logs: GenericLogContainerDiagnosticsLogsItem[];
}

/** Generic log. */
export interface GenericLogContainerDiagnosticsLogsItem {
  /**
   * Log type.
   *
   */
  type: GenericLogContainerDiagnosticsLogsItemType;
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /**
   * Session ID.
   *
   */
  sessionId?: string;
  /**
   * Event ID.
   *
   */
  eventId?: string;
  /**
   * Event name.
   *
   */
  eventName?: string;
  /**
   * Message ID.
   *
   */
  messageId?: string;
  /**
   * event specific properties.
   *
   */
  properties?: { [propertyName: string]: string };
  /** Device characteristics. */
  device: GenericLogContainerDiagnosticsLogsItemDevice;
}

/** Device characteristics. */
export interface GenericLogContainerDiagnosticsLogsItemDevice {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

/** Generic log. */
export interface GenericLogDiagnostics {
  /**
   * Log type.
   *
   */
  type: GenericLogDiagnosticsType;
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /**
   * Session ID.
   *
   */
  sessionId?: string;
  /**
   * Event ID.
   *
   */
  eventId?: string;
  /**
   * Event name.
   *
   */
  eventName?: string;
  /**
   * Message ID.
   *
   */
  messageId?: string;
  /**
   * event specific properties.
   *
   */
  properties?: { [propertyName: string]: string };
  /** Device characteristics. */
  device: GenericLogDiagnosticsDevice;
}

/** Device characteristics. */
export interface GenericLogDiagnosticsDevice {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface LogDiagnostics {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "LogDiagnostics";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: LogDiagnosticsDevice;
}

/** Device characteristics. */
export interface LogDiagnosticsDevice {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface Components45LjntSchemasLogwithpropertiesDiagnosticsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "LogWithProperties_Diagnostics";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: LogWithPropertiesDiagnostics0Device;
}

/** Device characteristics. */
export interface LogWithPropertiesDiagnostics0Device {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

/** Device characteristics. */
export interface DeviceDiagnostics {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface ComponentsZ650E9SchemasStartsessionlogDiagnosticsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "start_session";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: StartSessionLogDiagnostics0Device;
}

/** Device characteristics. */
export interface StartSessionLogDiagnostics0Device {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface ComponentsNa1EysSchemasHanlederrorlogDiagnosticsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "handled_error";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: HanledErrorLogDiagnostics0Device;
}

/** Device characteristics. */
export interface HanledErrorLogDiagnostics0Device {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface ComponentsL1Kfc1SchemasStartservicelogDiagnosticsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "start_service";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: StartServiceLogDiagnostics0Device;
}

/** Device characteristics. */
export interface StartServiceLogDiagnostics0Device {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface CustomPropertyLogDiagnosticsPropertiesItem {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "CustomPropertyLogDiagnosticsPropertiesItem";
  name: string;
}

export interface Components1XuemrlSchemasCustompropertylogDiagnosticsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "custom_properties";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: CustomPropertyLogDiagnostics0Device;
}

/** Device characteristics. */
export interface CustomPropertyLogDiagnostics0Device {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface CustomPropertyDiagnostics {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "CustomPropertyDiagnostics";
  name: string;
}

export interface Components1MplcxdSchemasStringpropertyDiagnosticsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "string";
  name: string;
}

export interface Components15Tz3ErSchemasNumberpropertyDiagnosticsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "number";
  name: string;
}

export interface Components1H9UedtSchemasBooleanpropertyDiagnosticsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "boolean";
  name: string;
}

export interface ComponentsYx2AaeSchemasDatetimepropertyDiagnosticsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "date_time";
  name: string;
}

/** Clear an existing property. */
export interface ClearPropertyDiagnostics {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "ClearPropertyDiagnostics";
  name: string;
}

export interface ComponentsEffwicSchemasPagelogDiagnosticsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "components·1121esf·schemas·pagelog_diagnostics·allof·0" | "page";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: PageLogDiagnostics0Device;
}

/** Device characteristics. */
export interface PageLogDiagnostics0Device {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface Components1Vmj2OdSchemasEventlogDiagnosticsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "components·wa2cwf·schemas·eventlog_diagnostics·allof·0" | "event";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: EventLogDiagnostics0Device;
}

/** Device characteristics. */
export interface EventLogDiagnostics0Device {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface Components1Pvlx64SchemasPushinstallationlogDiagnosticsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "push_installation";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: PushInstallationLogDiagnostics0Device;
}

/** Device characteristics. */
export interface PushInstallationLogDiagnostics0Device {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface Components1Nf3DuuSchemasErrorlogDiagnosticsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "error";
  /**
   * Log creation timestamp.
   *
   */
  timestamp: Date;
  /**
   * Install ID.
   *
   */
  installId: string;
  /** Device characteristics. */
  device: ErrorLogDiagnostics0Device;
}

/** Device characteristics. */
export interface ErrorLogDiagnostics0Device {
  /**
   * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
   *
   */
  sdkName: string;
  /**
   * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
   *
   */
  sdkVersion: string;
  /**
   * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
   *
   */
  wrapperSdkVersion?: string;
  /**
   * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
   *
   */
  wrapperSdkName?: string;
  /**
   * Device model (example: iPad2,3).
   *
   */
  model?: string;
  /**
   * Device manufacturer (example: HTC).
   *
   */
  oemName?: string;
  /**
   * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
   *
   */
  osName: string;
  /**
   * OS version (example: 9.3.0).
   *
   */
  osVersion: string;
  /**
   * OS build code (example: LMY47X).
   *
   */
  osBuild?: string;
  /**
   * API level when applicable like in Android (example: 15).
   *
   */
  osApiLevel?: number;
  /**
   * Language code (example: en_US).
   *
   */
  locale: string;
  /**
   * The offset in minutes from UTC for the device time zone, including daylight savings time.
   *
   */
  timeZoneOffset: number;
  /**
   * Screen size of the device in pixels (example: 640x480).
   *
   */
  screenSize?: string;
  /**
   * Application version name, e.g. 1.1.0
   *
   */
  appVersion: string;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Carrier country code (for mobile devices).
   *
   */
  carrierCode?: string;
  /**
   * Carrier country.
   *
   */
  carrierCountry?: string;
  /**
   * The app's build number, e.g. 42.
   *
   */
  appBuild: string;
  /**
   * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
   *
   */
  appNamespace?: string;
  /**
   * Label that is used to identify application code 'version' released via Live Update beacon running on device
   *
   */
  liveUpdateReleaseLabel?: string;
  /**
   * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
   *
   */
  liveUpdateDeploymentKey?: string;
  /**
   * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
   *
   */
  liveUpdatePackageHash?: string;
  /**
   * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
   *
   */
  wrapperRuntimeVersion?: string;
}

export interface VersionsDiagnostics {
  /** list of version count */
  versions?: VersionsDiagnosticsVersionsItem[];
  /** the total count of versions */
  total?: number;
}

export interface VersionsDiagnosticsVersionsItem {
  /** version */
  version?: string;
  /** version count */
  count?: number;
  /** the count of previous time range of the version */
  previousCount?: number;
}

export interface VersionDiagnostics {
  /** version */
  version?: string;
  /** version count */
  count?: number;
  /** the count of previous time range of the version */
  previousCount?: number;
}

export interface AvailableVersionsDiagnostics {
  /** List of available versions. */
  versions?: string[];
  /** The full number of versions across all pages. */
  totalCount?: number;
}

export interface ErrorRetentionSettings {
  retentionInDays: ErrorRetentionSettingsRetentionInDays;
}

/** Export configuration */
export interface ExportConfiguration {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "ExportConfiguration";
  exportEntities?: ExportEntity[];
  /** The resource name on azure */
  resourceName?: string;
  /** The resource group name on azure */
  resourceGroup?: string;
  /** Field to determine if backfilling should occur. The default value is true. If set to false export starts from date and time of config creation. */
  backfill?: boolean;
}

/** Export configuration */
export interface Components130AlsfSchemasExportblobconfigurationAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "export_blob_configuration";
  exportEntities?: ExportEntity[];
  /** The resource name on azure */
  resourceName?: string;
  /** The resource group name on azure */
  resourceGroup?: string;
  /** Field to determine if backfilling should occur. The default value is true. If set to false export starts from date and time of config creation. */
  backfill?: boolean;
}

/** Export configuration */
export interface ComponentsQ5DjesSchemasExportconfigurationblobstorageconnectionstringAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "export_blob_configuration" | "blob_storage_connection_string";
  exportEntities?: ExportEntity[];
  /** The resource name on azure */
  resourceName?: string;
  /** The resource group name on azure */
  resourceGroup?: string;
  /** Field to determine if backfilling should occur. The default value is true. If set to false export starts from date and time of config creation. */
  backfill?: boolean;
}

/** Export configuration */
export interface Components125ZssSchemasExportconfigurationappinsightskeyAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "application_insights_instrumentation_key";
  exportEntities?: ExportEntity[];
  /** The resource name on azure */
  resourceName?: string;
  /** The resource group name on azure */
  resourceGroup?: string;
  /** Field to determine if backfilling should occur. The default value is true. If set to false export starts from date and time of config creation. */
  backfill?: boolean;
}

/** Export configuration */
export interface Components4JcwkhSchemasExportconfigurationblobstoragelinkedsubscriptionAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "export_blob_configuration" | "blob_storage_linked_subscription";
  exportEntities?: ExportEntity[];
  /** The resource name on azure */
  resourceName?: string;
  /** The resource group name on azure */
  resourceGroup?: string;
  /** Field to determine if backfilling should occur. The default value is true. If set to false export starts from date and time of config creation. */
  backfill?: boolean;
}

/** Export configuration */
export interface Components1Jvk04KSchemasExportconfigurationappinsightslinkedsubscriptionAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "application_insights_linked_subscription";
  exportEntities?: ExportEntity[];
  /** The resource name on azure */
  resourceName?: string;
  /** The resource group name on azure */
  resourceGroup?: string;
  /** Field to determine if backfilling should occur. The default value is true. If set to false export starts from date and time of config creation. */
  backfill?: boolean;
}

/** Export configuration result */
export interface ExportConfigurationResult {
  /** Export configuration id */
  id: string;
  /** Target resource type of export configuration */
  exportType: ExportType;
  /** Creation time in ISO 8601 format */
  creationTime: string;
  /** Latest time in ISO 8601 format when export completed successfully */
  lastRunTime?: string;
  exportEntities?: ExportEntity[];
  /** State of the export job */
  state: ExportState;
  /** Additional information about export configuration state */
  stateInfo?: string;
  /** resource group for the storage account/App Insights resource */
  resourceGroup?: string;
  /** Storage accout or Appinsights resource name */
  resourceName?: string;
  /** Export configuration */
  exportConfiguration?: ExportConfigurationResultExportConfiguration;
}

/** Export configuration */
export interface ExportConfigurationResultExportConfiguration {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "ExportConfigurationResultExportConfiguration";
  exportEntities?: ExportEntity[];
  /** The resource name on azure */
  resourceName?: string;
  /** The resource group name on azure */
  resourceGroup?: string;
  /** Field to determine if backfilling should occur. The default value is true. If set to false export starts from date and time of config creation. */
  backfill?: boolean;
}

/** List of export configurations */
export interface ExportConfigurationListResult {
  values: ExportConfigurationListResultValuesItem[];
  /** the total count of exports */
  total?: number;
  nextLink?: string;
}

/** Export configuration result */
export interface ExportConfigurationListResultValuesItem {
  /** Export configuration id */
  id: string;
  /** Target resource type of export configuration */
  exportType: ExportType;
  /** Creation time in ISO 8601 format */
  creationTime: string;
  /** Latest time in ISO 8601 format when export completed successfully */
  lastRunTime?: string;
  exportEntities?: ExportEntity[];
  /** State of the export job */
  state: ExportState;
  /** Additional information about export configuration state */
  stateInfo?: string;
  /** resource group for the storage account/App Insights resource */
  resourceGroup?: string;
  /** Storage accout or Appinsights resource name */
  resourceName?: string;
  /** Export configuration */
  exportConfiguration?: ExportConfigurationListResultValuesItemExportConfiguration;
}

/** Export configuration */
export interface ExportConfigurationListResultValuesItemExportConfiguration {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "ExportConfigurationListResultValuesItemExportConfiguration";
  exportEntities?: ExportEntity[];
  /** The resource name on azure */
  resourceName?: string;
  /** The resource group name on azure */
  resourceGroup?: string;
  /** Field to determine if backfilling should occur. The default value is true. If set to false export starts from date and time of config creation. */
  backfill?: boolean;
}

/** List of notifications */
export interface NotificationsListResult {
  values: NotificationsListResultValuesItem[];
  /** the total count of notifications */
  total?: number;
  nextLink?: string;
}

/** Notification statistics */
export interface NotificationsListResultValuesItem {
  /** Notification id. */
  notificationId: string;
  /** Notification name */
  name?: string;
  /** Type of Notification target (audiences, devices, user ids, account ids or broadcast). The object must include the correct properties for the specified target type except for broadcast. */
  notificationTarget?: NotificationsListResultValuesItemNotificationTarget;
  /** Notification send time */
  sendTime?: Date;
  /** Number of the notifications failed to send to the push provider. */
  pnsSendFailure?: number;
  /** Number of the notifications successfully sent to push the provider. */
  pnsSendSuccess?: number;
  /** State of the notification. */
  state: NotificationStates;
}

/** Type of Notification target (audiences, devices, user ids, account ids or broadcast). The object must include the correct properties for the specified target type except for broadcast. */
export interface NotificationsListResultValuesItemNotificationTarget {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "NotificationsListResultValuesItemNotificationTarget";
}

/** Notification statistics */
export interface NotificationOverviewResult {
  /** Notification id. */
  notificationId: string;
  /** Notification name */
  name?: string;
  /** Type of Notification target (audiences, devices, user ids, account ids or broadcast). The object must include the correct properties for the specified target type except for broadcast. */
  notificationTarget?: NotificationOverviewResultNotificationTarget;
  /** Notification send time */
  sendTime?: Date;
  /** Number of the notifications failed to send to the push provider. */
  pnsSendFailure?: number;
  /** Number of the notifications successfully sent to push the provider. */
  pnsSendSuccess?: number;
  /** State of the notification. */
  state: NotificationStates;
}

/** Type of Notification target (audiences, devices, user ids, account ids or broadcast). The object must include the correct properties for the specified target type except for broadcast. */
export interface NotificationOverviewResultNotificationTarget {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "NotificationOverviewResultNotificationTarget";
}

/** Notification definition object */
export interface NotificationDetailsResultNotificationContent {
  /** Notification name */
  name: string;
  /** Notification title */
  title?: string;
  /** Notification body */
  body?: string;
  /** Notification custom data (such as badge, color, sound, etc.) */
  customData?: { [propertyName: string]: string };
}

/** Notification failure outcome count */
export interface NotificationDetailsResultFailureOutcomesItem {
  /** The reason of the notification failure */
  failureReason?: string;
  /** count of this type of failure */
  count?: number;
}

/** Notification statistics */
export interface ComponentsZqakt2SchemasNotificationdetailsresultAllof0 {
  /** Notification id. */
  notificationId: string;
  /** Notification name */
  name?: string;
  /** Type of Notification target (audiences, devices, user ids, account ids or broadcast). The object must include the correct properties for the specified target type except for broadcast. */
  notificationTarget?: NotificationDetailsResult0NotificationTarget;
  /** Notification send time */
  sendTime?: Date;
  /** Number of the notifications failed to send to the push provider. */
  pnsSendFailure?: number;
  /** Number of the notifications successfully sent to push the provider. */
  pnsSendSuccess?: number;
  /** State of the notification. */
  state: NotificationStates;
}

/** Type of Notification target (audiences, devices, user ids, account ids or broadcast). The object must include the correct properties for the specified target type except for broadcast. */
export interface NotificationDetailsResult0NotificationTarget {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "NotificationDetailsResult0NotificationTarget";
}

/** List of notification Ids */
export interface NotificationIdList {
  /** List of notification Ids. */
  values: string[];
}

/** Notification definition object */
export interface NotificationDefinition {
  /** Type of Notification target (audiences, devices, user ids, account ids or broadcast). The object must include the correct properties for the specified target type except for broadcast. */
  notificationTarget?: NotificationDefinitionNotificationTarget;
  /** Notification definition object */
  notificationContent: NotificationDefinitionNotificationContent;
}

/** Type of Notification target (audiences, devices, user ids, account ids or broadcast). The object must include the correct properties for the specified target type except for broadcast. */
export interface NotificationDefinitionNotificationTarget {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "NotificationDefinitionNotificationTarget";
}

/** Notification definition object */
export interface NotificationDefinitionNotificationContent {
  /** Notification name */
  name: string;
  /** Notification title */
  title?: string;
  /** Notification body */
  body?: string;
  /** Notification custom data (such as badge, color, sound, etc.) */
  customData?: { [propertyName: string]: string };
}

/** Notification definition object */
export interface NotificationContent {
  /** Notification name */
  name: string;
  /** Notification title */
  title?: string;
  /** Notification body */
  body?: string;
  /** Notification custom data (such as badge, color, sound, etc.) */
  customData?: { [propertyName: string]: string };
}

/** Notification send succeeded. */
export interface NotificationSendSucceededResult {
  /** The unique notification identifier. */
  notificationId: string;
}

/** Type of Notification target (audiences, devices, user ids, account ids or broadcast). The object must include the correct properties for the specified target type except for broadcast. */
export interface NotificationTarget {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "NotificationTarget";
}

/** Type of Notification target (audiences, devices, user ids, account ids or broadcast). The object must include the correct properties for the specified target type except for broadcast. */
export interface NotificationTargetBroadcast {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "NotificationTargetBroadcast";
}

/** Type of Notification target (audiences, devices, user ids, account ids or broadcast). The object must include the correct properties for the specified target type except for broadcast. */
export interface Components1KhyfnaSchemasNotificationtargetuseridsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "user_ids_target";
}

/** Type of Notification target (audiences, devices, user ids, account ids or broadcast). The object must include the correct properties for the specified target type except for broadcast. */
export interface Components19Nr381SchemasNotificationtargetaccountidsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "account_ids_target";
}

/** Type of Notification target (audiences, devices, user ids, account ids or broadcast). The object must include the correct properties for the specified target type except for broadcast. */
export interface Components17Ef5OgSchemasNotificationtargetaudiencesAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "audiences_target";
}

/** Type of Notification target (audiences, devices, user ids, account ids or broadcast). The object must include the correct properties for the specified target type except for broadcast. */
export interface Components2Yio13SchemasNotificationtargetdevicesAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "devices_target";
}

/** Type of notification config (NotificationConfigAppleToken, NotificationConfigGoogle, NotificationConfigWindows). The 'type' property must be set to a valid value and the object must include the correct properties for the specified type. */
export interface NotificationConfig {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "NotificationConfig";
}

/** Type of notification config (NotificationConfigAppleToken, NotificationConfigGoogle, NotificationConfigWindows). The 'type' property must be set to a valid value and the object must include the correct properties for the specified type. */
export interface Components1Ozxbv2SchemasNotificationconfigappleAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "apns_config";
}

/** Type of notification config (NotificationConfigAppleToken, NotificationConfigGoogle, NotificationConfigWindows). The 'type' property must be set to a valid value and the object must include the correct properties for the specified type. */
export interface Components1PpfareSchemasNotificationconfigappletokenAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "apns_token_config";
}

/** Type of notification config (NotificationConfigAppleToken, NotificationConfigGoogle, NotificationConfigWindows). The 'type' property must be set to a valid value and the object must include the correct properties for the specified type. */
export interface ComponentsQ2Qee2SchemasNotificationconfiggoogleAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "gcm_config";
}

/** Type of notification config (NotificationConfigAppleToken, NotificationConfigGoogle, NotificationConfigWindows). The 'type' property must be set to a valid value and the object must include the correct properties for the specified type. */
export interface ComponentsA3A5NfSchemasNotificationconfigwindowsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "wns_config";
}

/** Generic notification configuration result. */
export interface NotificationConfigResult {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "NotificationConfigResult";
}

/** Generic notification configuration result. */
export interface ComponentsF4F1P6SchemasNotificationconfigappleresultAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "apns_config";
}

/** Generic notification configuration result. */
export interface Components1Cl3FgbSchemasNotificationconfigappletokenresultAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "apns_token_config";
}

/** Generic notification configuration result. */
export interface Components1L6Ua1RSchemasNotificationconfiggoogleresultAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "gcm_config";
}

/** Generic notification configuration result. */
export interface Components1Rkqr84SchemasNotificationconfigwindowsresultAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "wns_config";
}

/** Notification failure outcome count */
export interface NotificationFailureOutcomeCount {
  /** The reason of the notification failure */
  failureReason?: string;
  /** count of this type of failure */
  count?: number;
}

/** Generic export configuration. */
export interface ExportConfig {
  /** A shared access signature (SAS) URI with Read, Write and Delete permissions on a container. */
  blobContainerSasUri: string;
}

/** Export started. */
export interface ExportStartedResult {
  /** The unique export identifier. */
  exportId: string;
}

/** Export status */
export interface ExportStatusResult {
  /** The unique export identifier. */
  exportId: string;
  /** Status of the export. */
  status: ExportStatus;
}

export interface AppId {
  /** the id of the app */
  id?: string;
}

export interface DeviceConfiguration {
  /** The name of the device model and OS version */
  name?: string;
  /** The unique id of the device configuration */
  id?: string;
  /** The tier */
  tier?: number;
  image?: DeviceConfigurationImage;
  model?: DeviceConfigurationModel;
  os?: string;
  osName?: string;
  marketShare?: number;
}

export interface DeviceConfigurationImage {
  full?: string;
  thumb?: string;
}

export interface DeviceConfigurationModel {
  name?: string;
  manufacturer?: string;
  model?: string;
  platform?: string;
  /** Physical device dimensions */
  dimensions?: DeviceConfigurationModelDimensions;
  /** Device screen resolution */
  resolution?: DeviceConfigurationModelResolution;
  releaseDate?: string;
  formFactor?: string;
  /** Physical device screen dimensions */
  screenSize?: DeviceConfigurationModelScreenSize;
  /** CPU data for device */
  cpu?: DeviceConfigurationModelCpu;
  /** Memory data for device */
  memory?: DeviceConfigurationModelMemory;
  screenRotation?: number;
  deviceFrame?: DeviceConfigurationModelDeviceFrame;
  availabilityCount?: number;
}

/** Physical device dimensions */
export interface DeviceConfigurationModelDimensions {
  /** Any object */
  depth?: Record<string, unknown>;
  /** Any object */
  height?: Record<string, unknown>;
  /** Any object */
  width?: Record<string, unknown>;
}

/** Device screen resolution */
export interface DeviceConfigurationModelResolution {
  height?: string;
  width?: string;
  ppi?: string;
}

/** Physical device screen dimensions */
export interface DeviceConfigurationModelScreenSize {
  cm?: string;
  in?: string;
}

/** CPU data for device */
export interface DeviceConfigurationModelCpu {
  frequency?: string;
  core?: string;
  text?: string;
}

/** Memory data for device */
export interface DeviceConfigurationModelMemory {
  formattedSize?: string;
}

export interface DeviceConfigurationModelDeviceFrame {
  grid?: DeviceConfigurationModelDeviceFrameGrid;
  full?: DeviceConfigurationModelDeviceFrameFull;
}

export interface DeviceConfigurationModelDeviceFrameGrid {
  width?: number;
  height?: number;
  frameUrl?: string;
  screen?: number[];
}

export interface DeviceConfigurationModelDeviceFrameFull {
  width?: number;
  height?: number;
  frameUrl?: string;
  screen?: number[];
}

export interface DeviceSetConfiguration {
  /** The unique id of the device configuration */
  id?: string;
  image?: DeviceSetConfigurationImage;
  model?: DeviceSetConfigurationModel;
  os?: string;
  osName?: string;
}

export interface DeviceSetConfigurationImage {
  thumb?: string;
}

export interface DeviceSetConfigurationModel {
  name?: string;
  manufacturer?: string;
  releaseDate?: string;
  formFactor?: string;
}

export interface DeviceModel {
  name?: string;
  manufacturer?: string;
  model?: string;
  platform?: string;
  /** Physical device dimensions */
  dimensions?: DeviceModelDimensions;
  /** Device screen resolution */
  resolution?: DeviceModelResolution;
  releaseDate?: string;
  formFactor?: string;
  /** Physical device screen dimensions */
  screenSize?: DeviceModelScreenSize;
  /** CPU data for device */
  cpu?: DeviceModelCpu;
  /** Memory data for device */
  memory?: DeviceModelMemory;
  screenRotation?: number;
  deviceFrame?: DeviceModelDeviceFrame;
  availabilityCount?: number;
}

/** Physical device dimensions */
export interface DeviceModelDimensions {
  /** Any object */
  depth?: Record<string, unknown>;
  /** Any object */
  height?: Record<string, unknown>;
  /** Any object */
  width?: Record<string, unknown>;
}

/** Device screen resolution */
export interface DeviceModelResolution {
  height?: string;
  width?: string;
  ppi?: string;
}

/** Physical device screen dimensions */
export interface DeviceModelScreenSize {
  cm?: string;
  in?: string;
}

/** CPU data for device */
export interface DeviceModelCpu {
  frequency?: string;
  core?: string;
  text?: string;
}

/** Memory data for device */
export interface DeviceModelMemory {
  formattedSize?: string;
}

export interface DeviceModelDeviceFrame {
  grid?: DeviceModelDeviceFrameGrid;
  full?: DeviceModelDeviceFrameFull;
}

export interface DeviceModelDeviceFrameGrid {
  width?: number;
  height?: number;
  frameUrl?: string;
  screen?: number[];
}

export interface DeviceModelDeviceFrameFull {
  width?: number;
  height?: number;
  frameUrl?: string;
  screen?: number[];
}

export interface DeviceSetModel {
  name?: string;
  manufacturer?: string;
  releaseDate?: string;
  formFactor?: string;
}

/** Physical device screen dimensions */
export interface DeviceScreenSize {
  cm?: string;
  in?: string;
}

/** Device screen resolution */
export interface DeviceResolution {
  height?: string;
  width?: string;
  ppi?: string;
}

/** Physical device dimensions */
export interface DeviceDimensions {
  /** Any object */
  depth?: Record<string, unknown>;
  /** Any object */
  height?: Record<string, unknown>;
  /** Any object */
  width?: Record<string, unknown>;
}

/** CPU data for device */
export interface DeviceCpu {
  frequency?: string;
  core?: string;
  text?: string;
}

/** Memory data for device */
export interface DeviceMemory {
  formattedSize?: string;
}

export interface DeviceFrame {
  grid?: DeviceFrameGrid;
  full?: DeviceFrameFull;
}

export interface DeviceFrameGrid {
  width?: number;
  height?: number;
  frameUrl?: string;
  screen?: number[];
}

export interface DeviceFrameFull {
  width?: number;
  height?: number;
  frameUrl?: string;
  screen?: number[];
}

export interface DeviceFrameDefinition {
  width?: number;
  height?: number;
  frameUrl?: string;
  screen?: number[];
}

/** Summary single test run on Xamarin Test Cloud */
export interface TestRunStatistics {
  /** Number of devices running the test */
  devices?: number;
  /** Number of finished devices */
  devicesFinished?: number;
  /** Number of failed devices */
  devicesFailed?: number;
  /** Number of tests in total */
  total?: number;
  /** Number of passed tests */
  passed?: number;
  /** Number of failed tests */
  failed?: number;
  /** Number of skipped tests */
  skipped?: number;
  /** The max amount of MB used during the test run */
  peakMemory?: number;
  /** The number of minutes of device time the test has been runnign */
  totalDeviceMinutes?: number;
}

/** Name of the test series */
export interface TestSeriesName {
  /** Name of the new test series */
  name: string;
}

/** Most important information about a test run. */
export interface TestRunSummary {
  /** Date of the test run. */
  date?: string;
  /** Human-readable status of the test run. */
  statusDescription?: string;
  /** Number of failed tests */
  failed?: number;
  /** Number of passed tests */
  passed?: number;
  /** Tells whether the test run has completed */
  completed?: boolean;
}

/** The name of the device set and the list of device IDs */
export interface DeviceSetUpdate {
  /** List of device IDs */
  devices: string[];
  /** The name of the device set */
  name: string;
}

/** Subscription information */
export interface Subscription {
  /** The date the subscription began */
  startsAt?: string;
  /** The date the subscription will end or ended */
  endsAt?: string;
  /** The number of days left in the subscription */
  daysLeft?: number;
  /** Subscription Tier */
  tier?: SubscriptionTier;
  /** Is the subscription currently active? */
  active?: boolean;
  /** Id of the subscription */
  id?: string;
}

/** Subscription Tier */
export interface SubscriptionTier {
  /** The name of the tier */
  name?: string;
}

/** Subscription Tier */
export interface Tier {
  /** The name of the tier */
  name?: string;
}

export interface TestReport {
  appUploadId: string;
  date: string;
  testType: string;
  platform: string;
  stats: TestReportStats;
  id: string;
  schemaVersion: number;
  revision: number;
  features: TestReportFeaturesItem[];
  finishedDeviceSnapshots: string[];
  deviceLogs: TestReportDeviceLogsItem[];
  dateFinished: string;
  errorMessage?: string;
  snapshotFatalErrors?: TestReportSnapshotFatalErrorsItem[];
}

export interface TestReportStats {
  os: number;
  devices: number;
  filesize: number;
  totalDeviceMinutes: number;
  devicesNotRunned: number;
  failed: number;
  skipped: number;
  passed: number;
  total: number;
  devicesFinished: number;
  devicesFailed: number;
  devicesSkipped: number;
  stepCount: number;
  /** Dictionary of <string> */
  artifacts?: { [propertyName: string]: string };
}

export interface TestReportFeaturesItem {
  name?: string;
  tests?: TestReportFeaturesPropertiesItemsItem[];
  failed?: number;
  skipped?: number;
  peakMemory?: number;
  peakDuration?: number;
}

export interface TestReportFeaturesPropertiesItemsItem {
  testName?: string;
  runs?: TestReportFeaturesPropertiesItemsRunsItem[];
  peakMemory?: number;
  peakDuration?: number;
}

export interface TestReportFeaturesPropertiesItemsRunsItem {
  number?: number;
  steps?: TestReportFeaturesPropertiesItemsRunsPropertiesItemsItem[];
  failed?: number;
  skipped?: number;
  reportUrl?: string;
  id?: string;
}

export interface TestReportFeaturesPropertiesItemsRunsPropertiesItemsItem {
  stepName?: string;
  id?: string;
  stepExecutions?: TestReportFeaturesPropertiesItemsRunsPropertiesItemsStepExecutionsItem[];
  failed?: number;
  skipped?: number;
  stepReportUrl?: string;
}

export interface TestReportFeaturesPropertiesItemsRunsPropertiesItemsStepExecutionsItem {
  deviceSnapshotId?: string;
  status?: string;
  timestamp?: number;
}

export interface TestReportDeviceLogsItem {
  deviceSnapshotId?: string;
  deviceLog?: string;
  testLog?: string;
  appiumLog?: string;
}

export interface TestReportSnapshotFatalErrorsItem {
  deviceSnapshotId?: string;
  errorMessage?: string;
  errorTitle?: string;
}

export interface StepReport {
  finishedSnapshots: string[];
  deviceScreenshots: StepReportDeviceScreenshotsItem[];
}

export interface StepReportDeviceScreenshotsItem {
  id?: string;
  deviceSnapshotId?: string;
  stacktrace?: string[];
  crashData?: string[];
  status?: string;
  title?: string;
  screenshot?: StepReportDeviceScreenshotsItemScreenshot;
  logFile?: string;
  appiumLogFile?: string;
  rawCrashData?: string[];
}

export interface StepReportDeviceScreenshotsItemScreenshot {
  urls: StepReportDeviceScreenshotsProperties;
  rotation: number;
  landscape: boolean;
}

export interface StepReportDeviceScreenshotsProperties {
  original: string;
  small: string;
  medium: string;
  large: string;
}

/** Hash, type, path and byte range of a file that is required in test run */
export interface TestCloudFileHashDeprecated {
  /** Type of the file */
  fileType: TestCloudFileHashDeprecatedFileType;
  /** SHA256 hash of the file */
  checksum: string;
  /** Relative path of the file */
  relativePath: string;
  /** Range of bytes required to verify ownership of the file */
  byteRange?: string;
}

/** Response message for single uploaded file hash */
export interface TestCloudFileHashResponse {
  /** Type of the file */
  fileType: TestCloudFileHashResponseFileType;
  /** SHA256 hash of the file */
  checksum: string;
  /** Relative path of the file */
  relativePath?: string;
  /** Status of the upload */
  uploadStatus: TestCloudFileHashResponseUploadStatus;
}

/** Status of the upload */
export interface TestCloudFileHashResponseUploadStatus {
  /** HTTP status code that represent result of upload */
  statusCode: number;
  /** URI that should be used to make POST request if file with given hash doesn't exist. This is set when status_code is equal to 412 */
  location?: string;
}

/** Result of uploading a single file hash */
export interface TestCloudHashUploadStatus {
  /** HTTP status code that represent result of upload */
  statusCode: number;
  /** URI that should be used to make POST request if file with given hash doesn't exist. This is set when status_code is equal to 412 */
  location?: string;
}

/** Result of starting a test run */
export interface TestCloudStartTestRunResult {
  /** List with names of accepted devices */
  acceptedDevices?: string[];
  /** List with names and descriptions of rejected devices */
  rejectedDevices?: string[];
}

/** Report data for a single test (a.k.a. scenario) */
export interface PerformanceReport {
  deviceSnapshotId?: string;
  performanceData?: PerformanceReportPerformanceData;
  video?: PerformanceReportVideo;
}

export interface PerformanceReportPerformanceData {
  steps: PerformanceReportPerformanceDataStepsItem[];
  elapsedSecsEnd: number;
  elapsedSecsStart: number;
  elapsedSecs: number;
  id: string;
}

export interface PerformanceReportPerformanceDataStepsItem {
  avgCpu?: number;
  avgMem?: number;
  samples?: PerformanceReportPerformanceDataStepsPropertiesItemsItem[];
  elapsedSecsEnd?: number;
  elapsedSecsStart?: number;
  elapsedSecs?: number;
  name?: string;
  id?: string;
}

export interface PerformanceReportPerformanceDataStepsPropertiesItemsItem {
  cpu?: number;
  mem?: number;
  elapsedSecs?: number;
}

export interface PerformanceReportVideo {
  videoMetadata: PerformanceReportVideoMetadata;
  videoUrl: string;
}

export interface PerformanceReportVideoMetadata {
  events?: PerformanceReportVideoMetadataEventsItem[];
}

export interface PerformanceReportVideoMetadataEventsItem {
  id?: string;
  millis?: number;
  name?: string;
  type?: string;
}

export interface SubmitDsrOperationRequest {
  request?: SubmitDsrOperationRequestRequest;
  accountId?: string;
  appId?: string;
  /** The DSR operation ID provided by the GDPR coordinator. Used for tracking only. */
  operationId?: string;
  /** Request ID provided by the GDPR coordinator. Used for tracking. */
  requestId?: string;
}

export interface SubmitDsrOperationResponse {
  /** The status of the DSR operation */
  status?: SubmitDsrOperationResponseStatus;
}

export interface CreateGdprTestData {
  appId?: string;
  accountId?: string;
  userName?: string;
  userEmail?: string;
  appName?: string;
}

export interface TestGdprAccount {
  id?: string;
}

export interface TestGdprFeatureFlag {
  name?: string;
  targetId?: string;
}

export interface TestGdprResourceList {
  resources?: TestGdprResourceListResourcesItem[];
}

export interface TestGdprResourceListResourcesItem {
  rel?: string;
  path?: string;
}

export interface TestGdprApp {
  hashFilesUrl?: string;
}

export interface TestGdprHashFile {
  id?: string;
  filename?: string;
}

export interface TestGdprTestRun {
  id?: string;
  appHashFileId?: string;
  locale?: string;
  dsymHashFileId?: string;
  appHashFileUrl?: string;
  dsymHashFileUrl?: string;
  appIconUrl?: string;
}

export interface TestGdprPipelineTest {
  appUploadId?: string;
  /** Any object */
  testParameters?: Record<string, unknown>;
}

export interface TestGdprFileSetFile {
  path?: string;
  hashFileId?: string;
  appUploadId?: string;
  hashFileUrl?: string;
}

export interface CodePushUploadedRelease {
  /** The upload metadata from the release initialization step. */
  releaseUpload: CodePushUploadedReleaseUpload;
  /** the binary version of the application */
  targetBinaryVersion: string;
  /** This specifies which deployment you want to release the update to. Default is Staging. */
  deploymentName?: string;
  /** This provides an optional "change log" for the deployment. */
  description?: string;
  /** This specifies whether an update should be downloadable by end users or not. */
  disabled?: boolean;
  /** This specifies whether the update should be considered mandatory or not (e.g. it includes a critical security fix). */
  mandatory?: boolean;
  /** This specifies that if the update is identical to the latest release on the deployment, the CLI should generate a warning instead of an error. */
  noDuplicateReleaseError?: boolean;
  /** This specifies the percentage of users (as an integer between 1 and 100) that should be eligible to receive this update. */
  rollout?: number;
}

/** The upload metadata from the release initialization step. */
export interface CodePushUploadedReleaseUpload {
  /** The ID for the newly created upload. It is going to be required later in the process. */
  id: string;
  /** The URL domain used to upload the release. */
  uploadDomain: string;
  /** The URL encoded token used for upload permissions. */
  token: string;
}

export interface CodePushReleaseUpload {
  /** The ID for the newly created upload. It is going to be required later in the process. */
  id: string;
  /** The URL domain used to upload the release. */
  uploadDomain: string;
  /** The URL encoded token used for upload permissions. */
  token: string;
}

export interface Deployment {
  key?: string;
  name: string;
  latestRelease?: DeploymentLatestRelease;
}

export interface Components1T8CjynSchemasDeploymentPropertiesLatestReleaseAllof0 {
  targetBinaryRange?: string;
  description?: string;
  isDisabled?: boolean;
  isMandatory?: boolean;
  rollout?: number;
}

export interface Components6Ap7FdSchemasDeploymentPropertiesLatestReleaseAllof1 {
  label?: string;
  packageHash?: string;
  blobUrl?: string;
  /** Dictionary of <components·1fku7op·schemas·deployment·properties·latest_release·allof·1·properties·diff_package_map·additionalproperties> */
  diffPackageMap?: {
    [propertyName: string]: Components1Fku7OpSchemasDeploymentPropertiesLatestReleaseAllof1PropertiesDiffPackageMapAdditionalproperties;
  };
  /** Set on 'Promote' */
  originalDeployment?: string;
  /** Set on 'Promote' and 'Rollback' */
  originalLabel?: string;
  releasedBy?: string;
  /** The release method is unknown if unspecified */
  releaseMethod?: DeploymentLatestRelease1ReleaseMethod;
  size?: number;
  uploadTime?: number;
}

export interface Components1Fku7OpSchemasDeploymentPropertiesLatestReleaseAllof1PropertiesDiffPackageMapAdditionalproperties {
  size: number;
  url: string;
}

export interface ComponentsLtrglSchemasDeploymentinternalAllof0 {
  key?: string;
  name: string;
  latestRelease?: DeploymentInternal0LatestRelease;
}

export interface ComponentsLvsishSchemasDeploymentinternalAllof0PropertiesLatestReleaseAllof0 {
  targetBinaryRange?: string;
  description?: string;
  isDisabled?: boolean;
  isMandatory?: boolean;
  rollout?: number;
}

export interface ComponentsP3Dh42SchemasDeploymentinternalAllof0PropertiesLatestReleaseAllof1 {
  label?: string;
  packageHash?: string;
  blobUrl?: string;
  /** Dictionary of <components·1nx8kb1·schemas·deploymentinternal·allof·0·properties·latest_release·allof·1·properties·diff_package_map·additionalproperties> */
  diffPackageMap?: {
    [propertyName: string]: Components1Nx8Kb1SchemasDeploymentinternalAllof0PropertiesLatestReleaseAllof1PropertiesDiffPackageMapAdditionalproperties;
  };
  /** Set on 'Promote' */
  originalDeployment?: string;
  /** Set on 'Promote' and 'Rollback' */
  originalLabel?: string;
  releasedBy?: string;
  /** The release method is unknown if unspecified */
  releaseMethod?: DeploymentInternal0LatestRelease1ReleaseMethod;
  size?: number;
  uploadTime?: number;
}

export interface Components1Nx8Kb1SchemasDeploymentinternalAllof0PropertiesLatestReleaseAllof1PropertiesDiffPackageMapAdditionalproperties {
  size: number;
  url: string;
}

export interface DeploymentModification {
  name: string;
}

export interface CodePushReleaseLabel {
  label?: string;
}

export interface BlobInfo {
  size: number;
  url: string;
}

export interface Components11Pd21BSchemasPackagehashtoblobinfomapAdditionalproperties {
  size: number;
  url: string;
}

export interface CodePushReleaseInfo {
  targetBinaryRange?: string;
  description?: string;
  isDisabled?: boolean;
  isMandatory?: boolean;
  rollout?: number;
}

export interface LegacyCodePushReleaseInfo {
  appVersion?: string;
  description?: string;
  isDisabled?: boolean;
  isMandatory?: boolean;
  rollout?: number;
}

export interface CodePushRelease {
  label?: string;
  packageHash?: string;
  blobUrl?: string;
  /** Dictionary of <components·1elacdo·schemas·codepushrelease·properties·diff_package_map·additionalproperties> */
  diffPackageMap?: {
    [propertyName: string]: Components1ElacdoSchemasCodepushreleasePropertiesDiffPackageMapAdditionalproperties;
  };
  /** Set on 'Promote' */
  originalDeployment?: string;
  /** Set on 'Promote' and 'Rollback' */
  originalLabel?: string;
  releasedBy?: string;
  /** The release method is unknown if unspecified */
  releaseMethod?: CodePushReleaseMethod;
  size?: number;
  uploadTime?: number;
}

export interface Components1ElacdoSchemasCodepushreleasePropertiesDiffPackageMapAdditionalproperties {
  size: number;
  url: string;
}

export interface CodePushReleaseModification {
  targetBinaryRange?: string;
  description?: string;
  isDisabled?: boolean;
  isMandatory?: boolean;
  rollout?: number;
}

export interface CodePushReleasePromote {
  label?: string;
}

export interface CodePushReleaseMetric {
  label: string;
  active: number;
  downloaded?: number;
  failed?: number;
  installed?: number;
}

export interface CodePushStatusMetricMetadata {
  deploymentKey: string;
  label?: string;
  appVersion?: string;
  previousDeploymentKey?: string;
  previousLabelOrAppVersion?: string;
  status?: string;
  clientUniqueId?: string;
}

export interface LegacyCodePushStatusMetricMetadata {
  deploymentKey?: string;
  label?: string;
  appVersion?: string;
  previousDeploymentKey?: string;
  previousLabelOrAppVersion?: string;
  status?: string;
  clientUniqueId?: string;
}

export interface UpdateCheckResponse {
  updateInfo: UpdateCheckResponseUpdateInfo;
}

export interface ComponentsSa59JcSchemasUpdatecheckresponsePropertiesUpdateInfoAllof0 {
  targetBinaryRange?: string;
  description?: string;
  isDisabled?: boolean;
  isMandatory?: boolean;
  rollout?: number;
}

export interface ComponentsWyjzn3SchemasUpdatecheckresponsePropertiesUpdateInfoAllof1 {
  downloadUrl?: string;
  isAvailable?: boolean;
  packageSize?: number;
  shouldRunBinaryVersion?: boolean;
  updateAppVersion?: boolean;
  packageHash?: string;
  label?: string;
}

export interface LegacyUpdateCheckResponse {
  updateInfo: LegacyUpdateCheckResponseUpdateInfo;
}

export interface ComponentsIr4N92SchemasLegacyupdatecheckresponsePropertiesUpdateinfoAllof0 {
  appVersion?: string;
  description?: string;
  isDisabled?: boolean;
  isMandatory?: boolean;
  rollout?: number;
}

export interface ComponentsPllys8SchemasLegacyupdatecheckresponsePropertiesUpdateinfoAllof1 {
  downloadURL?: string;
  isAvailable?: boolean;
  packageSize?: number;
  shouldRunBinaryVersion?: boolean;
  updateAppVersion?: boolean;
  packageHash?: string;
  label?: string;
}

export interface UpdateInfoData {
  downloadUrl?: string;
  isAvailable: boolean;
  packageSize?: number;
  shouldRunBinaryVersion?: boolean;
  updateAppVersion?: boolean;
  packageHash?: string;
  label?: string;
}

export interface LegacyUpdateInfoData {
  downloadURL?: string;
  isAvailable: boolean;
  packageSize?: number;
  shouldRunBinaryVersion?: boolean;
  updateAppVersion?: boolean;
  packageHash?: string;
  label?: string;
}

export interface AppName {
  name: string;
}

export interface AcquisitionStatusSuccessResponse {
  /** The code indicating the status */
  code: string;
  /** The message indicating the status */
  message: string;
}

export interface GdprPurgeVerifyRequest {
  /** deployment id */
  id: string;
  /** deployment key */
  key: string;
}

export interface GdprPurgeVerifyResponse {
  /** indicate whether GDPR purge operation succeeds or not */
  success: boolean;
}

export interface LegacyDeploymentsResponse {
  deployments?: LegacyDeploymentsResponseDeploymentsItem[];
}

export interface LegacyDeploymentsResponseDeploymentsItem {
  /** Time at which the deployment was created as a Unix timestamp. */
  createdTime?: number;
  /** The ID of the deployment (internal use only). */
  id?: string;
  /** Deployment key (aka Deployment Id) */
  key?: string;
  /** Updated deployment name */
  name: string;
  package?: LegacyDeploymentsResponseDeploymentsItemPackage;
}

export interface LegacyDeploymentsResponseDeploymentsItemPackage {
  /** The version of the release */
  appVersion?: string;
  /** Flag used to determine if release is disabled */
  isDisabled?: boolean;
  /** Flag used to determine if release is mandatory */
  isMandatory?: boolean;
  /** Percentage (out of 100) that release is deployed to */
  rollout?: number;
  /** Location (URL) of release package */
  blobUrl?: string;
  /** Size of release package */
  size?: number;
  /** Method used to deploy release */
  releaseMethod?: string;
  /** Release upload time as epoch Unix timestamp */
  uploadTime?: number;
  /** Release label (aka release name) */
  label?: string;
  /** User ID that triggered most recent release */
  releasedByUserId?: string;
  /** The URL location of the package's manifest file. */
  manifestBlobUrl?: string;
  /** Object containing URL and size of changed package hashes contained in the release */
  diffPackageMap?: Record<string, unknown>;
}

export interface LegacyDeploymentResponse {
  /** Dictionary of <components·1fo2g15·schemas·legacydeploymentresponse·properties·deployment·additionalproperties> */
  deployment?: {
    [propertyName: string]: Components1Fo2G15SchemasLegacydeploymentresponsePropertiesDeploymentAdditionalproperties;
  };
}

export interface Components1Fo2G15SchemasLegacydeploymentresponsePropertiesDeploymentAdditionalproperties {
  /** Time at which the deployment was created as a Unix timestamp. */
  createdTime?: number;
  /** The ID of the deployment (internal use only). */
  id?: string;
  /** Deployment key (aka Deployment Id) */
  key?: string;
  /** Updated deployment name */
  name: string;
  package?: Components1V99QmiSchemasLegacydeploymentresponsePropertiesDeploymentAdditionalpropertiesPropertiesPackage;
}

export interface Components1V99QmiSchemasLegacydeploymentresponsePropertiesDeploymentAdditionalpropertiesPropertiesPackage {
  /** The version of the release */
  appVersion?: string;
  /** Flag used to determine if release is disabled */
  isDisabled?: boolean;
  /** Flag used to determine if release is mandatory */
  isMandatory?: boolean;
  /** Percentage (out of 100) that release is deployed to */
  rollout?: number;
  /** Location (URL) of release package */
  blobUrl?: string;
  /** Size of release package */
  size?: number;
  /** Method used to deploy release */
  releaseMethod?: string;
  /** Release upload time as epoch Unix timestamp */
  uploadTime?: number;
  /** Release label (aka release name) */
  label?: string;
  /** User ID that triggered most recent release */
  releasedByUserId?: string;
  /** The URL location of the package's manifest file. */
  manifestBlobUrl?: string;
  /** Object containing URL and size of changed package hashes contained in the release */
  diffPackageMap?: Record<string, unknown>;
}

export interface LegacyDeployment {
  /** Time at which the deployment was created as a Unix timestamp. */
  createdTime?: number;
  /** The ID of the deployment (internal use only). */
  id?: string;
  /** Deployment key (aka Deployment Id) */
  key?: string;
  /** Updated deployment name */
  name: string;
  package?: LegacyDeploymentPackage;
}

export interface LegacyDeploymentPackage {
  /** The version of the release */
  appVersion?: string;
  /** Flag used to determine if release is disabled */
  isDisabled?: boolean;
  /** Flag used to determine if release is mandatory */
  isMandatory?: boolean;
  /** Percentage (out of 100) that release is deployed to */
  rollout?: number;
  /** Location (URL) of release package */
  blobUrl?: string;
  /** Size of release package */
  size?: number;
  /** Method used to deploy release */
  releaseMethod?: string;
  /** Release upload time as epoch Unix timestamp */
  uploadTime?: number;
  /** Release label (aka release name) */
  label?: string;
  /** User ID that triggered most recent release */
  releasedByUserId?: string;
  /** The URL location of the package's manifest file. */
  manifestBlobUrl?: string;
  /** Object containing URL and size of changed package hashes contained in the release */
  diffPackageMap?: Record<string, unknown>;
}

export interface LegacyDeploymentHistoryResponse {
  /** Array containing the deployment's package history. */
  history?: LegacyDeploymentHistoryResponseHistoryItem[];
}

/** Information about a specific release. */
export interface LegacyDeploymentHistoryResponseHistoryItem {
  allOf?: LegacyDeploymentHistoryResponseHistoryItemAllOf;
  /** The description of the release. */
  description?: string;
  /** The original deployment of the release, if it's ever been promoted. */
  originalDeployment?: string;
  /** The original label of the release, if it's ever been updated. */
  originalLabel?: string;
  /** The package's hash value (internal use). */
  packageHash?: string;
}

export interface LegacyDeploymentHistoryResponseHistoryItemAllOf {
  /** The version of the release */
  appVersion?: string;
  /** Flag used to determine if release is disabled */
  isDisabled?: boolean;
  /** Flag used to determine if release is mandatory */
  isMandatory?: boolean;
  /** Percentage (out of 100) that release is deployed to */
  rollout?: number;
  /** Location (URL) of release package */
  blobUrl?: string;
  /** Size of release package */
  size?: number;
  /** Method used to deploy release */
  releaseMethod?: string;
  /** Release upload time as epoch Unix timestamp */
  uploadTime?: number;
  /** Release label (aka release name) */
  label?: string;
  /** User ID that triggered most recent release */
  releasedByUserId?: string;
  /** The URL location of the package's manifest file. */
  manifestBlobUrl?: string;
  /** Object containing URL and size of changed package hashes contained in the release */
  diffPackageMap?: Record<string, unknown>;
}

/** Information about a specific release. */
export interface LegacyDeploymentHistory {
  allOf?: LegacyDeploymentHistoryAllOf;
  /** The description of the release. */
  description?: string;
  /** The original deployment of the release, if it's ever been promoted. */
  originalDeployment?: string;
  /** The original label of the release, if it's ever been updated. */
  originalLabel?: string;
  /** The package's hash value (internal use). */
  packageHash?: string;
}

export interface LegacyDeploymentHistoryAllOf {
  /** The version of the release */
  appVersion?: string;
  /** Flag used to determine if release is disabled */
  isDisabled?: boolean;
  /** Flag used to determine if release is mandatory */
  isMandatory?: boolean;
  /** Percentage (out of 100) that release is deployed to */
  rollout?: number;
  /** Location (URL) of release package */
  blobUrl?: string;
  /** Size of release package */
  size?: number;
  /** Method used to deploy release */
  releaseMethod?: string;
  /** Release upload time as epoch Unix timestamp */
  uploadTime?: number;
  /** Release label (aka release name) */
  label?: string;
  /** User ID that triggered most recent release */
  releasedByUserId?: string;
  /** The URL location of the package's manifest file. */
  manifestBlobUrl?: string;
  /** Object containing URL and size of changed package hashes contained in the release */
  diffPackageMap?: Record<string, unknown>;
}

export interface LegacyDeploymentMetricsResponse {
  /** Object containing a property named after each release label, which contains an object that contains that release's metrics. */
  metrics?: {
    [propertyName: string]: ComponentsNazfawSchemasLegacydeploymentmetricsresponsePropertiesMetricsAdditionalproperties;
  };
}

export interface ComponentsNazfawSchemasLegacydeploymentmetricsresponsePropertiesMetricsAdditionalproperties {
  /** The number of devices that have this release installed currently */
  active: number;
  /** The number of times this release has been installed on a device */
  installed?: number;
  /** The number of times this release has been downloaded */
  downloaded?: number;
  /** The number of times this release has failed to be installed on a device */
  failed?: number;
}

export interface LegacyDeploymentMetric {
  /** The number of devices that have this release installed currently */
  active: number;
  /** The number of times this release has been installed on a device */
  installed?: number;
  /** The number of times this release has been downloaded */
  downloaded?: number;
  /** The number of times this release has failed to be installed on a device */
  failed?: number;
}

export interface LegacyCodePushRelease {
  /** The version of the release */
  appVersion?: string;
  /** Flag used to determine if release is disabled */
  isDisabled?: boolean;
  /** Flag used to determine if release is mandatory */
  isMandatory?: boolean;
  /** Percentage (out of 100) that release is deployed to */
  rollout?: number;
  /** Location (URL) of release package */
  blobUrl?: string;
  /** Size of release package */
  size?: number;
  /** Method used to deploy release */
  releaseMethod?: string;
  /** Release upload time as epoch Unix timestamp */
  uploadTime?: number;
  /** Release label (aka release name) */
  label?: string;
  /** User ID that triggered most recent release */
  releasedByUserId?: string;
  /** The URL location of the package's manifest file. */
  manifestBlobUrl?: string;
  /** Object containing URL and size of changed package hashes contained in the release */
  diffPackageMap?: Record<string, unknown>;
}

export interface LegacyCodePushReleaseModification {
  /** The release package information */
  packageInfo: Record<string, unknown>;
}

export interface LegacyCodePushReleaseResponse {
  package: LegacyCodePushReleaseResponsePackage;
}

export interface LegacyCodePushReleaseResponsePackage {
  /** The version of the release */
  appVersion?: string;
  /** Flag used to determine if release is disabled */
  isDisabled?: boolean;
  /** Flag used to determine if release is mandatory */
  isMandatory?: boolean;
  /** Percentage (out of 100) that release is deployed to */
  rollout?: number;
  /** Location (URL) of release package */
  blobUrl?: string;
  /** Size of release package */
  size?: number;
  /** Method used to deploy release */
  releaseMethod?: string;
  /** Release upload time as epoch Unix timestamp */
  uploadTime?: number;
  /** Release label (aka release name) */
  label?: string;
  /** User ID that triggered most recent release */
  releasedByUserId?: string;
  /** The URL location of the package's manifest file. */
  manifestBlobUrl?: string;
  /** Object containing URL and size of changed package hashes contained in the release */
  diffPackageMap?: Record<string, unknown>;
}

export interface LegacyAuthenticationResponse {
  /** The authentication status of the user. */
  authenticated?: boolean;
}

export interface LegacyAccountResponse {
  /** Object containing the account information. */
  account?: {
    [propertyName: string]: Components750L8USchemasLegacyaccountresponsePropertiesAccountAdditionalproperties;
  };
}

export interface Components750L8USchemasLegacyaccountresponsePropertiesAccountAdditionalproperties {
  /** The account name of the calling user. */
  name?: string;
  /** The calling user's email. */
  email?: string;
  /** Array of linked authentication providers associated with the account. */
  linkedProviders?: string[];
}

export interface LegacyAccount {
  /** The account name of the calling user. */
  name?: string;
  /** The calling user's email. */
  email?: string;
  /** Array of linked authentication providers associated with the account. */
  linkedProviders?: string[];
}

export interface LegacyAppListResponse {
  apps?: LegacyAppListResponseAppsItem[];
}

export interface LegacyAppListResponseAppsItem {
  /** The app name. */
  name?: string;
  /** Dictionary of <components·zponlv·schemas·legacyapplistresponse·properties·apps·items·properties·collaborators·additionalproperties> */
  collaborators?: {
    [propertyName: string]: ComponentsZponlvSchemasLegacyapplistresponsePropertiesAppsItemsPropertiesCollaboratorsAdditionalproperties;
  };
  deployments?: string[];
}

export interface ComponentsZponlvSchemasLegacyapplistresponsePropertiesAppsItemsPropertiesCollaboratorsAdditionalproperties {
  /** Is current collaborator the same as current account. */
  isCurrentAccount?: boolean;
  /** Which permission does current account has. */
  permission?: string;
}

export interface LegacyAppResponse {
  app?: LegacyAppResponseApp;
}

export interface LegacyAppResponseApp {
  /** The app name. */
  name?: string;
  /** Dictionary of <components·1m5t2av·schemas·legacyappresponse·properties·app·properties·collaborators·additionalproperties> */
  collaborators?: {
    [propertyName: string]: Components1M5T2AvSchemasLegacyappresponsePropertiesAppPropertiesCollaboratorsAdditionalproperties;
  };
  deployments?: string[];
}

export interface Components1M5T2AvSchemasLegacyappresponsePropertiesAppPropertiesCollaboratorsAdditionalproperties {
  /** Is current collaborator the same as current account. */
  isCurrentAccount?: boolean;
  /** Which permission does current account has. */
  permission?: string;
}

export interface LegacyApp {
  /** The app name. */
  name?: string;
  /** Dictionary of <components·oyha9f·schemas·legacyapp·properties·collaborators·additionalproperties> */
  collaborators?: {
    [propertyName: string]: ComponentsOyha9FSchemasLegacyappPropertiesCollaboratorsAdditionalproperties;
  };
  deployments?: string[];
}

export interface ComponentsOyha9FSchemasLegacyappPropertiesCollaboratorsAdditionalproperties {
  /** Is current collaborator the same as current account. */
  isCurrentAccount?: boolean;
  /** Which permission does current account has. */
  permission?: string;
}

export interface LegacyCollaborator {
  /** Is current collaborator the same as current account. */
  isCurrentAccount?: boolean;
  /** Which permission does current account has. */
  permission?: string;
}

export interface LegacyCollaborators {
  /** Dictionary of <components·nlnkje·schemas·legacycollaborators·properties·collaborators·additionalproperties> */
  collaborators?: {
    [propertyName: string]: ComponentsNlnkjeSchemasLegacycollaboratorsPropertiesCollaboratorsAdditionalproperties;
  };
}

export interface ComponentsNlnkjeSchemasLegacycollaboratorsPropertiesCollaboratorsAdditionalproperties {
  /** Is current collaborator the same as current account. */
  isCurrentAccount?: boolean;
  /** Which permission does current account has. */
  permission?: string;
}

export interface LegacyCodePushApp {
  /** The app name. */
  name: string;
  /** The app os. */
  os?: string;
  /** The app platform. */
  platform?: string;
  /** Whether the user provided their own deployments. Not currently in use. */
  manuallyProvisionDeployments?: boolean;
}

export interface CreateAccessKeyRequest {
  /** Name of creator current access key */
  createdBy?: string;
  /** Friendly name of the access key */
  friendlyName?: string;
  /** Time to live of the access key */
  ttl?: number;
}

export interface CreateAccessKeyResponse {
  accessKey?: CreateAccessKeyResponseAccessKey;
}

export interface CreateAccessKeyResponseAccessKey {
  /** Key of access key */
  name?: string;
  /** Account name of creator. */
  createdBy?: string;
  /** Description of access key */
  description?: string;
  /** Friendly name of access key */
  friendlyName?: string;
  /** Created time of access key */
  createdTime?: number;
  /** Time of expiry of access key */
  expires?: number;
  /** Id of accessKey */
  id?: string;
  /** Legacy property which indicate if accessKey was created from session */
  isSession?: boolean;
}

export interface AccessKey {
  /** Key of access key */
  name?: string;
  /** Account name of creator. */
  createdBy?: string;
  /** Description of access key */
  description?: string;
  /** Friendly name of access key */
  friendlyName?: string;
  /** Created time of access key */
  createdTime?: number;
  /** Time of expiry of access key */
  expires?: number;
  /** Id of accessKey */
  id?: string;
  /** Legacy property which indicate if accessKey was created from session */
  isSession?: boolean;
}

export interface AccessKeyListResponse {
  /** Array containing the list of existing AccessKeys */
  accessKeys?: AccessKeyListResponseAccessKeysItem[];
}

export interface AccessKeyListResponseAccessKeysItem {
  /** Key of access key */
  name?: string;
  /** Account name of creator. */
  createdBy?: string;
  /** Description of access key */
  description?: string;
  /** Friendly name of access key */
  friendlyName?: string;
  /** Created time of access key */
  createdTime?: number;
  /** Time of expiry of access key */
  expires?: number;
  /** Id of accessKey */
  id?: string;
  /** Legacy property which indicate if accessKey was created from session */
  isSession?: boolean;
}

/** Generic result for any alerting API operation */
export interface AlertOperationResult {
  /** Unique request identifier for tracking */
  requestId: string;
}

/** Alerting webhook */
export interface AlertWebhook {
  /** The unique id (UUID) of the webhook */
  id?: string;
  /** display name of the webhook */
  name: string;
  /** target url of the webhook */
  url: string;
  /** Allows eanble/disable webhook */
  enabled?: boolean;
  /** Event types enabled for webhook */
  eventTypes: AlertWebhookEventTypesItem[];
}

/** List of alerting webhooks wrapped as operation result */
export interface AlertWebhookListResult {
  values: AlertWebhookListResultValuesItem[];
}

/** Alerting webhook */
export interface AlertWebhookListResultValuesItem {
  /** The unique id (UUID) of the webhook */
  id?: string;
  /** display name of the webhook */
  name: string;
  /** target url of the webhook */
  url: string;
  /** Allows eanble/disable webhook */
  enabled?: boolean;
  /** Event types enabled for webhook */
  eventTypes: AlertWebhookListResultValuesPropertiesItemsItem[];
}

/** Generic result for any alerting API operation */
export interface AlertWebhookPingResult {
  /** HTTP status code returned in response from calling webhook */
  responseStatusCode: number;
  /** Reason returned in response from calling webhook */
  responseReason?: string;
}

/** Alerting Email Settings */
export interface AlertEmailSettings {
  /** The settings the user has for the app */
  settings: AlertEmailSettingsItem[];
}

/** Event Setting */
export interface AlertEmailSettingsItem {
  /** Event Name */
  eventType: "crash_newCrashGroupCreated";
  /** Frequency of event */
  value: AlertEmailSettingsItemValue;
  /** Default frequency of event */
  defaultValue?: AlertEmailSettingsItemDefaultValue;
}

/** Generic result for any alerting API operation */
export interface AlertUserEmailSettingsResult {
  /** The ETag of the entity */
  eTag?: string;
  /** Allows to forcefully disable emails on app or user level */
  enabled: boolean;
  /** The unique id (UUID) of the user */
  userId?: string;
  /** The settings the user has for the app */
  settings: AlertUserEmailSettingsResultSettingsItem[];
}

/** Event Setting */
export interface AlertUserEmailSettingsResultSettingsItem {
  /** Event Name */
  eventType: "crash_newCrashGroupCreated";
  /** Frequency of event */
  value: AlertUserEmailSettingsResultSettingsItemValue;
  /** Default frequency of event */
  defaultValue?: AlertUserEmailSettingsResultSettingsItemDefaultValue;
}

/** Generic result for any alerting API operation */
export interface ComponentsDzu91ISchemasAlertuserappemailsettingsresultAllof0 {
  /** Unique request identifier for tracking */
  requestId: string;
}

export interface Components1Cg98M4SchemasAlertuserappemailsettingsresultAllof0Allof1 {
  /** The ETag of the entity */
  eTag?: string;
  /** Allows to forcefully disable emails on app or user level */
  enabled: boolean;
  /** The unique id (UUID) of the user */
  userId?: string;
  /** The settings the user has for the app */
  settings: AlertUserAppEmailSettingsResult01SettingsItem[];
}

/** Event Setting */
export interface AlertUserAppEmailSettingsResult01SettingsItem {
  /** Event Name */
  eventType: "crash_newCrashGroupCreated";
  /** Frequency of event */
  value: AlertUserAppEmailSettingsResultAllOf0AllOf1SettingsItemValue;
  /** Default frequency of event */
  defaultValue?: AlertUserAppEmailSettingsResultAllOf0AllOf1SettingsItemDefaultValue;
}

/** Bugtracker specific settings */
export interface ComponentsU99EdzSchemasAlertingvstsbugtrackersettingsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "vsts";
  callbackUrl?: string;
  ownerName: string;
}

/** Bugtracker specific settings */
export interface ComponentsG0MwtxSchemasAlertinggithubbugtrackersettingsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "github";
  callbackUrl?: string;
  ownerName: string;
}

/** Bugtracker specific settings */
export interface ComponentsL2Xf6RSchemasAlertingjirabugtrackersettingsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "jira";
  callbackUrl?: string;
  ownerName: string;
}

/** Alerting bugtracker resource */
export interface AlertingBugtracker {
  /** type of bugtracker */
  type?: AlertingBugtrackerType;
  /** bugtracker state */
  state?: AlertingBugtrackerState;
  /** ID of OAuth token */
  tokenId?: string;
  /** Event types enabled for bugtracker */
  eventTypes?: AlertingBugtrackerEventTypesItem[];
  /** Bugtracker specific settings */
  settings?: AlertingBugtrackerSettings;
}

/** Bugtracker specific settings */
export interface AlertingBugtrackerSettings {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "AlertingBugtrackerSettings";
  callbackUrl?: string;
  ownerName: string;
}

/** Contains the token ID for a bug tracker */
export interface BugTrackerTokenId {
  tokenId?: string;
}

/** List of bug tracker repositories */
export interface AlertBugTrackerReposResult {
  repoType?: AlertBugTrackerReposResultRepoType;
  repositories: AlertBugTrackerReposResultRepositoriesItem[];
}

/** Repostiory object */
export interface AlertBugTrackerReposResultRepositoriesItem {
  name: string;
  url: string;
  id: string;
  description?: string;
  private?: boolean;
  /** Repository owner object */
  owner?: AlertBugTrackerReposResultRepositoriesItemOwner;
}

/** Repository owner object */
export interface AlertBugTrackerReposResultRepositoriesItemOwner {
  name?: string;
  id?: string;
  login?: string;
}

/** Repostiory object */
export interface AlertBugTrackerRepo {
  name: string;
  url: string;
  id: string;
  description?: string;
  private?: boolean;
  /** Repository owner object */
  owner?: AlertBugTrackerRepoOwner;
}

/** Repository owner object */
export interface AlertBugTrackerRepoOwner {
  name?: string;
  id?: string;
  login?: string;
}

/** AlertCrashGroup patching parameter */
export interface AlertCrashGroupStateChange {
  state?: AlertCrashGroupStateChangeState;
}

/** Access token details */
export interface AlertingAccessTokenResponse {
  /** ID of the access token */
  accessTokenId: string;
  /** External provider name */
  externalProviderName: AlertingAccessTokenResponseExternalProviderName;
  /** The email of external user that used to authenticate aginst the external oauth provider */
  externalUserEmail: string;
  /** The account name of external user that used to authenticate against the external oauth provider or basic auth */
  externalAccountName: string;
}

/** Event Setting */
export interface EventSetting {
  /** Event Name */
  eventType: "crash_newCrashGroupCreated";
  /** Frequency of event */
  value: EventSettingValue;
  /** Default frequency of event */
  defaultValue?: EventSettingDefaultValue;
}

/** Alerting event */
export interface AlertingEvent {
  /** ISO 8601 date time when event was generated */
  eventTimestamp: string;
  /** A unique identifier for this event instance. Useful for deduplication */
  eventId: string;
  /** Obsolete. Use emailProperties. */
  properties?: Record<string, unknown>;
}

/** Alerting event */
export interface NewCrashGroupAlertingEvent {
  /** Properties of new crash group */
  crashGroupProperties?: NewCrashGroupAlertingEventCrashGroupProperties;
}

/** Properties of new crash group */
export interface NewCrashGroupAlertingEventCrashGroupProperties {
  id: string;
  name: string;
  reason: string;
  url: string;
  appDisplayName: string;
  appPlatform: string;
  appVersion: string;
  stackTrace: string[];
}

/** Alerting event */
export interface NewAppReleaseAlertingEvent {
  /** List of users who need to receive an email notification. If this is not null, then only sending emails will be triggered even if the event requires calling webhooks or doing other actions. */
  userIds?: string[];
  /** indicate whether notify via webhook or not */
  disableWebhook?: boolean;
  /** Properties of new application release */
  appReleaseProperties?: NewAppReleaseAlertingEventAppReleaseProperties;
}

/** Properties of new application release */
export interface NewAppReleaseAlertingEventAppReleaseProperties {
  appName: string;
  appDisplayName: string;
  releaseId: string;
  platform: string;
  /** Date and time in ISO 8601 format */
  uploadedAt: string;
  fingerprint?: string;
  releaseNotes?: string;
  version: string;
  shortVersion: string;
  minOs?: string;
  mandatoryUpdate?: boolean;
  size: number;
  provisioningProfileName?: string;
  provisioningProfileType?: string;
  bundleIdentifier: string;
  installLink: string;
  iconLink?: string;
  distributionGroupId?: string;
  installable?: boolean;
}

/** Returns a list of all issues associated with a repo */
export interface BugTrackerIssuesResult {
  issues?: BugTrackerIssuesResultIssuesItem[];
}

/** Object returned in response to getting a bug tracker issue related to a crash group id */
export interface BugTrackerIssuesResultIssuesItem {
  id?: string;
  url?: string;
  title?: string;
  bugTrackerType?: BugTrackerIssuesResultIssuesItemBugTrackerType;
  repoName?: string;
  mobileCenterId?: string;
  eventType?: string;
}

/** Object returned in response to getting a bug tracker issue related to a crash group id */
export interface BugTrackerIssueResult {
  id?: string;
  url?: string;
  title?: string;
  bugTrackerType?: BugTrackerIssueResultBugTrackerType;
  repoName?: string;
  mobileCenterId?: string;
  eventType?: string;
}

/** Object returned in response to getting or updating the state of a bugtracker */
export interface BugTrackerStateResult {
  /** bugtracker state */
  state?: BugTrackerStateResultState;
}

/** Generic result for any alerting API operation */
export interface EventResponseResult {
  /** Unique request identifier for tracking */
  requestId: string;
}

/** Generic result for any alerting API operation */
export interface AlertingError {
  /** The status code return by the API. It can be 400 or 404 or 409 or 500. */
  code: AlertingErrorCode;
  /** The reason for the request failed */
  message?: string;
}

/** Aggregated Billing Information for a user or an organization */
export interface AggregatedBillingInformation {
  /** Version of the Billing Information schema */
  version?: string;
  /** The ISO 8601 datetime of last modification */
  timestamp?: string;
  /** ID of the user or organization */
  id?: string;
  /** Billing Plans section in the Billing Information */
  billingPlans?: AggregatedBillingInformationBillingPlans;
  /** Usage section in the Billing Information */
  usage?: AggregatedBillingInformationUsage;
  /** Unique identifier for the Azure subscription used for billing */
  azureSubscriptionId?: string;
  /** State of the Azure subscription used for billing */
  azureSubscriptionState?: AggregatedBillingInformationAzureSubscriptionState;
}

/** Billing Plans section in the Billing Information */
export interface AggregatedBillingInformationBillingPlans {
  /** Billing Plans for a single service */
  buildService?: AggregatedBillingInformationBillingPlansBuildService;
  /** Billing Plans for a single service */
  testService?: AggregatedBillingInformationBillingPlansTestService;
}

/** Billing Plans for a single service */
export interface AggregatedBillingInformationBillingPlansBuildService {
  /** Can customer select trial plan for that service (if it exists)? */
  canSelectTrialPlan?: boolean;
  /** Expiration time of the last selected trial plan. Will be null if trial plan was not used. */
  lastTrialPlanExpirationTime?: string;
  /** Billing plans for a given period */
  currentBillingPeriod?: AggregatedBillingInformationBillingPlansBuildServiceCurrentBillingPeriod;
}

/** Billing plans for a given period */
export interface AggregatedBillingInformationBillingPlansBuildServiceCurrentBillingPeriod {
  /** Inclusive start of the period */
  startTime?: string;
  /** Exclusive end of the period. */
  endTime?: string;
  /** Selection of a billing plan */
  byAccount?: AggregatedBillingInformationBillingPlansBuildServiceCurrentBillingPeriodByAccount;
}

/** Selection of a billing plan */
export interface AggregatedBillingInformationBillingPlansBuildServiceCurrentBillingPeriodByAccount {
  /** Number of instances of the billing plan. */
  count?: number;
  /** Billing Plan */
  plan?: AggregatedBillingInformationBillingPlansBuildServiceCurrentBillingPeriodByAccountPlan;
}

/** Billing Plan */
export interface AggregatedBillingInformationBillingPlansBuildServiceCurrentBillingPeriodByAccountPlan {
  /** The Billing Plan ID */
  id?: string;
  /** Version of the Billing Plan schema */
  version?: string;
  /** Price of the Billing Plan */
  price?: number;
  /** Service that receives payments for this billing plan. */
  paymentSource?: AggregatedBillingInformationBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSource;
  /** Name of the service that the plan applies to. */
  service?: AggregatedBillingInformationBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanService;
  /** A collection of named numeric values */
  limits?: { [propertyName: string]: number };
  /** Collection of attribute values. */
  attributes?: { [propertyName: string]: Record<string, unknown> };
  parentId?: string;
}

/** Billing Plans for a single service */
export interface AggregatedBillingInformationBillingPlansTestService {
  /** Can customer select trial plan for that service (if it exists)? */
  canSelectTrialPlan?: boolean;
  /** Expiration time of the last selected trial plan. Will be null if trial plan was not used. */
  lastTrialPlanExpirationTime?: string;
  /** Billing plans for a given period */
  currentBillingPeriod?: AggregatedBillingInformationBillingPlansTestServiceCurrentBillingPeriod;
}

/** Billing plans for a given period */
export interface AggregatedBillingInformationBillingPlansTestServiceCurrentBillingPeriod {
  /** Inclusive start of the period */
  startTime?: string;
  /** Exclusive end of the period. */
  endTime?: string;
  /** Selection of a billing plan */
  byAccount?: AggregatedBillingInformationBillingPlansTestServiceCurrentBillingPeriodByAccount;
}

/** Selection of a billing plan */
export interface AggregatedBillingInformationBillingPlansTestServiceCurrentBillingPeriodByAccount {
  /** Number of instances of the billing plan. */
  count?: number;
  /** Billing Plan */
  plan?: AggregatedBillingInformationBillingPlansTestServiceCurrentBillingPeriodByAccountPlan;
}

/** Billing Plan */
export interface AggregatedBillingInformationBillingPlansTestServiceCurrentBillingPeriodByAccountPlan {
  /** The Billing Plan ID */
  id?: string;
  /** Version of the Billing Plan schema */
  version?: string;
  /** Price of the Billing Plan */
  price?: number;
  /** Service that receives payments for this billing plan. */
  paymentSource?: AggregatedBillingInformationBillingPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSource;
  /** Name of the service that the plan applies to. */
  service?: AggregatedBillingInformationBillingPlansTestServiceCurrentBillingPeriodByAccountPlanService;
  /** A collection of named numeric values */
  limits?: { [propertyName: string]: number };
  /** Collection of attribute values. */
  attributes?: { [propertyName: string]: Record<string, unknown> };
  parentId?: string;
}

/** Usage section in the Billing Information */
export interface AggregatedBillingInformationUsage {
  /** Resource usage for a single Mobile Center service */
  buildService?: AggregatedBillingInformationUsageBuildService;
  /** Resource usage for a single Mobile Center service */
  testService?: AggregatedBillingInformationUsageTestService;
}

/** Resource usage for a single Mobile Center service */
export interface AggregatedBillingInformationUsageBuildService {
  /** Usage for a single period */
  currentUsagePeriod?: AggregatedBillingInformationUsageBuildServiceCurrentUsagePeriod;
}

/** Usage for a single period */
export interface AggregatedBillingInformationUsageBuildServiceCurrentUsagePeriod {
  /** Inclusive start time of the usage period */
  startTime?: string;
  /** Exclusive end time of the usage period. */
  endTime?: string;
  /** A collection of named numeric values */
  byAccount?: { [propertyName: string]: number };
  /** A collection of  named numeric values grouped by app */
  byApp?: { [propertyName: string]: { [propertyName: string]: number } };
}

/** Resource usage for a single Mobile Center service */
export interface AggregatedBillingInformationUsageTestService {
  /** Usage for a single period */
  currentUsagePeriod?: AggregatedBillingInformationUsageTestServiceCurrentUsagePeriod;
}

/** Usage for a single period */
export interface AggregatedBillingInformationUsageTestServiceCurrentUsagePeriod {
  /** Inclusive start time of the usage period */
  startTime?: string;
  /** Exclusive end time of the usage period. */
  endTime?: string;
  /** A collection of named numeric values */
  byAccount?: { [propertyName: string]: number };
  /** A collection of  named numeric values grouped by app */
  byApp?: { [propertyName: string]: { [propertyName: string]: number } };
}

/** Aggregated Billing Information for a user an the organizations in which the user is an admin. */
export interface AllAccountsAggregatedBillingInformation {
  /** Aggregated Billing Information for a user or an organization */
  aggregatedBillings?: AllAccountsAggregatedBillingInformationAggregatedBillings;
}

/** Aggregated Billing Information for a user or an organization */
export interface AllAccountsAggregatedBillingInformationAggregatedBillings {
  /** Version of the Billing Information schema */
  version?: string;
  /** The ISO 8601 datetime of last modification */
  timestamp?: string;
  /** ID of the user or organization */
  id?: string;
  /** Billing Plans section in the Billing Information */
  billingPlans?: AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlans;
  /** Usage section in the Billing Information */
  usage?: AllAccountsAggregatedBillingInformationAggregatedBillingsUsage;
  /** Unique identifier for the Azure subscription used for billing */
  azureSubscriptionId?: string;
  /** State of the Azure subscription used for billing */
  azureSubscriptionState?: AllAccountsAggregatedBillingInformationAggregatedBillingsAzureSubscriptionState;
}

/** Billing Plans section in the Billing Information */
export interface AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlans {
  /** Billing Plans for a single service */
  buildService?: AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildService;
  /** Billing Plans for a single service */
  testService?: AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestService;
}

/** Billing Plans for a single service */
export interface AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildService {
  /** Can customer select trial plan for that service (if it exists)? */
  canSelectTrialPlan?: boolean;
  /** Expiration time of the last selected trial plan. Will be null if trial plan was not used. */
  lastTrialPlanExpirationTime?: string;
  /** Billing plans for a given period */
  currentBillingPeriod?: AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildServiceCurrentBillingPeriod;
}

/** Billing plans for a given period */
export interface AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildServiceCurrentBillingPeriod {
  /** Inclusive start of the period */
  startTime?: string;
  /** Exclusive end of the period. */
  endTime?: string;
  /** Selection of a billing plan */
  byAccount?: AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildServiceCurrentBillingPeriodByAccount;
}

/** Selection of a billing plan */
export interface AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildServiceCurrentBillingPeriodByAccount {
  /** Number of instances of the billing plan. */
  count?: number;
  /** Billing Plan */
  plan?: AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildServiceCurrentBillingPeriodByAccountPlan;
}

/** Billing Plan */
export interface AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildServiceCurrentBillingPeriodByAccountPlan {
  /** The Billing Plan ID */
  id?: string;
  /** Version of the Billing Plan schema */
  version?: string;
  /** Price of the Billing Plan */
  price?: number;
  /** Service that receives payments for this billing plan. */
  paymentSource?: AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSource;
  /** Name of the service that the plan applies to. */
  service?: AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanService;
  /** A collection of named numeric values */
  limits?: { [propertyName: string]: number };
  /** Collection of attribute values. */
  attributes?: { [propertyName: string]: Record<string, unknown> };
  parentId?: string;
}

/** Billing Plans for a single service */
export interface AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestService {
  /** Can customer select trial plan for that service (if it exists)? */
  canSelectTrialPlan?: boolean;
  /** Expiration time of the last selected trial plan. Will be null if trial plan was not used. */
  lastTrialPlanExpirationTime?: string;
  /** Billing plans for a given period */
  currentBillingPeriod?: AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestServiceCurrentBillingPeriod;
}

/** Billing plans for a given period */
export interface AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestServiceCurrentBillingPeriod {
  /** Inclusive start of the period */
  startTime?: string;
  /** Exclusive end of the period. */
  endTime?: string;
  /** Selection of a billing plan */
  byAccount?: AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestServiceCurrentBillingPeriodByAccount;
}

/** Selection of a billing plan */
export interface AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestServiceCurrentBillingPeriodByAccount {
  /** Number of instances of the billing plan. */
  count?: number;
  /** Billing Plan */
  plan?: AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestServiceCurrentBillingPeriodByAccountPlan;
}

/** Billing Plan */
export interface AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestServiceCurrentBillingPeriodByAccountPlan {
  /** The Billing Plan ID */
  id?: string;
  /** Version of the Billing Plan schema */
  version?: string;
  /** Price of the Billing Plan */
  price?: number;
  /** Service that receives payments for this billing plan. */
  paymentSource?: AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSource;
  /** Name of the service that the plan applies to. */
  service?: AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestServiceCurrentBillingPeriodByAccountPlanService;
  /** A collection of named numeric values */
  limits?: { [propertyName: string]: number };
  /** Collection of attribute values. */
  attributes?: { [propertyName: string]: Record<string, unknown> };
  parentId?: string;
}

/** Usage section in the Billing Information */
export interface AllAccountsAggregatedBillingInformationAggregatedBillingsUsage {
  /** Resource usage for a single Mobile Center service */
  buildService?: AllAccountsAggregatedBillingInformationAggregatedBillingsUsageBuildService;
  /** Resource usage for a single Mobile Center service */
  testService?: AllAccountsAggregatedBillingInformationAggregatedBillingsUsageTestService;
}

/** Resource usage for a single Mobile Center service */
export interface AllAccountsAggregatedBillingInformationAggregatedBillingsUsageBuildService {
  /** Usage for a single period */
  currentUsagePeriod?: AllAccountsAggregatedBillingInformationAggregatedBillingsUsageBuildServiceCurrentUsagePeriod;
}

/** Usage for a single period */
export interface AllAccountsAggregatedBillingInformationAggregatedBillingsUsageBuildServiceCurrentUsagePeriod {
  /** Inclusive start time of the usage period */
  startTime?: string;
  /** Exclusive end time of the usage period. */
  endTime?: string;
  /** A collection of named numeric values */
  byAccount?: { [propertyName: string]: number };
  /** A collection of  named numeric values grouped by app */
  byApp?: { [propertyName: string]: { [propertyName: string]: number } };
}

/** Resource usage for a single Mobile Center service */
export interface AllAccountsAggregatedBillingInformationAggregatedBillingsUsageTestService {
  /** Usage for a single period */
  currentUsagePeriod?: AllAccountsAggregatedBillingInformationAggregatedBillingsUsageTestServiceCurrentUsagePeriod;
}

/** Usage for a single period */
export interface AllAccountsAggregatedBillingInformationAggregatedBillingsUsageTestServiceCurrentUsagePeriod {
  /** Inclusive start time of the usage period */
  startTime?: string;
  /** Exclusive end time of the usage period. */
  endTime?: string;
  /** A collection of named numeric values */
  byAccount?: { [propertyName: string]: number };
  /** A collection of  named numeric values grouped by app */
  byApp?: { [propertyName: string]: { [propertyName: string]: number } };
}

/** Error */
export interface BillingError {
  error?: BillingErrorError;
}

export interface BillingErrorError {
  /** The status code return by the API. It can be 400 or 403 or 500. */
  code?: BillingErrorCode;
  /** The reason for the request failed */
  message?: string;
}

/** Billing Plans section in the Billing Information */
export interface BillingInformationPlans {
  /** Billing Plans for a single service */
  buildService?: BillingInformationPlansBuildService;
  /** Billing Plans for a single service */
  testService?: BillingInformationPlansTestService;
}

/** Billing Plans for a single service */
export interface BillingInformationPlansBuildService {
  /** Can customer select trial plan for that service (if it exists)? */
  canSelectTrialPlan?: boolean;
  /** Expiration time of the last selected trial plan. Will be null if trial plan was not used. */
  lastTrialPlanExpirationTime?: string;
  /** Billing plans for a given period */
  currentBillingPeriod?: BillingInformationPlansBuildServiceCurrentBillingPeriod;
}

/** Billing plans for a given period */
export interface BillingInformationPlansBuildServiceCurrentBillingPeriod {
  /** Inclusive start of the period */
  startTime?: string;
  /** Exclusive end of the period. */
  endTime?: string;
  /** Selection of a billing plan */
  byAccount?: BillingInformationPlansBuildServiceCurrentBillingPeriodByAccount;
}

/** Selection of a billing plan */
export interface BillingInformationPlansBuildServiceCurrentBillingPeriodByAccount {
  /** Number of instances of the billing plan. */
  count?: number;
  /** Billing Plan */
  plan?: BillingInformationPlansBuildServiceCurrentBillingPeriodByAccountPlan;
}

/** Billing Plan */
export interface BillingInformationPlansBuildServiceCurrentBillingPeriodByAccountPlan {
  /** The Billing Plan ID */
  id?: string;
  /** Version of the Billing Plan schema */
  version?: string;
  /** Price of the Billing Plan */
  price?: number;
  /** Service that receives payments for this billing plan. */
  paymentSource?: BillingInformationPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSource;
  /** Name of the service that the plan applies to. */
  service?: BillingInformationPlansBuildServiceCurrentBillingPeriodByAccountPlanService;
  /** A collection of named numeric values */
  limits?: { [propertyName: string]: number };
  /** Collection of attribute values. */
  attributes?: { [propertyName: string]: Record<string, unknown> };
  parentId?: string;
}

/** Billing Plans for a single service */
export interface BillingInformationPlansTestService {
  /** Can customer select trial plan for that service (if it exists)? */
  canSelectTrialPlan?: boolean;
  /** Expiration time of the last selected trial plan. Will be null if trial plan was not used. */
  lastTrialPlanExpirationTime?: string;
  /** Billing plans for a given period */
  currentBillingPeriod?: BillingInformationPlansTestServiceCurrentBillingPeriod;
}

/** Billing plans for a given period */
export interface BillingInformationPlansTestServiceCurrentBillingPeriod {
  /** Inclusive start of the period */
  startTime?: string;
  /** Exclusive end of the period. */
  endTime?: string;
  /** Selection of a billing plan */
  byAccount?: BillingInformationPlansTestServiceCurrentBillingPeriodByAccount;
}

/** Selection of a billing plan */
export interface BillingInformationPlansTestServiceCurrentBillingPeriodByAccount {
  /** Number of instances of the billing plan. */
  count?: number;
  /** Billing Plan */
  plan?: BillingInformationPlansTestServiceCurrentBillingPeriodByAccountPlan;
}

/** Billing Plan */
export interface BillingInformationPlansTestServiceCurrentBillingPeriodByAccountPlan {
  /** The Billing Plan ID */
  id?: string;
  /** Version of the Billing Plan schema */
  version?: string;
  /** Price of the Billing Plan */
  price?: number;
  /** Service that receives payments for this billing plan. */
  paymentSource?: BillingInformationPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSource;
  /** Name of the service that the plan applies to. */
  service?: BillingInformationPlansTestServiceCurrentBillingPeriodByAccountPlanService;
  /** A collection of named numeric values */
  limits?: { [propertyName: string]: number };
  /** Collection of attribute values. */
  attributes?: { [propertyName: string]: Record<string, unknown> };
  parentId?: string;
}

export interface BillingInformationSearchResultsItem {
  /** The Account ID */
  accountId?: string;
  /** The Account Name */
  accountName?: string;
  /** The Billing Internal Account ID */
  billingInternalAccountId?: string;
  /** The ID of the Build Billing Plan */
  buildPlan?: string;
  /** The ID of the Test Billing Plan */
  testPlan?: string;
}

/** Billing plans for a given period */
export interface BillingPeriod {
  /** Inclusive start of the period */
  startTime?: string;
  /** Exclusive end of the period. */
  endTime?: string;
  /** Selection of a billing plan */
  byAccount?: BillingPeriodByAccount;
}

/** Selection of a billing plan */
export interface BillingPeriodByAccount {
  /** Number of instances of the billing plan. */
  count?: number;
  /** Billing Plan */
  plan?: BillingPeriodByAccountPlan;
}

/** Billing Plan */
export interface BillingPeriodByAccountPlan {
  /** The Billing Plan ID */
  id?: string;
  /** Version of the Billing Plan schema */
  version?: string;
  /** Price of the Billing Plan */
  price?: number;
  /** Service that receives payments for this billing plan. */
  paymentSource?: BillingPeriodByAccountPlanPaymentSource;
  /** Name of the service that the plan applies to. */
  service?: BillingPeriodByAccountPlanService;
  /** A collection of named numeric values */
  limits?: { [propertyName: string]: number };
  /** Collection of attribute values. */
  attributes?: { [propertyName: string]: Record<string, unknown> };
  parentId?: string;
}

/** Billing Plan */
export interface BillingPlan {
  /** The Billing Plan ID */
  id?: string;
  /** Version of the Billing Plan schema */
  version?: string;
  /** Price of the Billing Plan */
  price?: number;
  /** Service that receives payments for this billing plan. */
  paymentSource?: BillingPlanPaymentSource;
  /** Name of the service that the plan applies to. */
  service?: BillingPlanService;
  /** A collection of named numeric values */
  limits?: { [propertyName: string]: number };
  /** Collection of attribute values. */
  attributes?: { [propertyName: string]: Record<string, unknown> };
  parentId?: string;
}

/** Responses for requests that detect billing plans change type */
export interface BillingPlansChangeTypeResponse {
  result?: BillingPlansChangeTypeResponseResult;
}

/** Selection of a billing plan */
export interface BillingPlanSelection {
  /** Number of instances of the billing plan. */
  count?: number;
  /** Billing Plan */
  plan?: BillingPlanSelectionPlan;
}

/** Billing Plan */
export interface BillingPlanSelectionPlan {
  /** The Billing Plan ID */
  id?: string;
  /** Version of the Billing Plan schema */
  version?: string;
  /** Price of the Billing Plan */
  price?: number;
  /** Service that receives payments for this billing plan. */
  paymentSource?: BillingPlanSelectionPlanPaymentSource;
  /** Name of the service that the plan applies to. */
  service?: BillingPlanSelectionPlanService;
  /** A collection of named numeric values */
  limits?: { [propertyName: string]: number };
  /** Collection of attribute values. */
  attributes?: { [propertyName: string]: Record<string, unknown> };
  parentId?: string;
}

/** Selection of a billing plan for one or more services */
export interface BillingPlansSelection {
  /** Selection of a billing plan */
  buildService?: BillingPlansSelectionBuildService;
  /** Selection of a billing plan */
  testService?: BillingPlansSelectionTestService;
}

/** Selection of a billing plan */
export interface BillingPlansSelectionBuildService {
  /** Number of instances of the billing plan. */
  count?: number;
  /** Billing Plan */
  plan?: BillingPlansSelectionBuildServicePlan;
}

/** Billing Plan */
export interface BillingPlansSelectionBuildServicePlan {
  /** The Billing Plan ID */
  id?: string;
  /** Version of the Billing Plan schema */
  version?: string;
  /** Price of the Billing Plan */
  price?: number;
  /** Service that receives payments for this billing plan. */
  paymentSource?: BillingPlansSelectionBuildServicePlanPaymentSource;
  /** Name of the service that the plan applies to. */
  service?: BillingPlansSelectionBuildServicePlanService;
  /** A collection of named numeric values */
  limits?: { [propertyName: string]: number };
  /** Collection of attribute values. */
  attributes?: { [propertyName: string]: Record<string, unknown> };
  parentId?: string;
}

/** Selection of a billing plan */
export interface BillingPlansSelectionTestService {
  /** Number of instances of the billing plan. */
  count?: number;
  /** Billing Plan */
  plan?: BillingPlansSelectionTestServicePlan;
}

/** Billing Plan */
export interface BillingPlansSelectionTestServicePlan {
  /** The Billing Plan ID */
  id?: string;
  /** Version of the Billing Plan schema */
  version?: string;
  /** Price of the Billing Plan */
  price?: number;
  /** Service that receives payments for this billing plan. */
  paymentSource?: BillingPlansSelectionTestServicePlanPaymentSource;
  /** Name of the service that the plan applies to. */
  service?: BillingPlansSelectionTestServicePlanService;
  /** A collection of named numeric values */
  limits?: { [propertyName: string]: number };
  /** Collection of attribute values. */
  attributes?: { [propertyName: string]: Record<string, unknown> };
  parentId?: string;
}

/** Usage section in the Billing Information */
export interface BillingResourceUsage {
  /** Resource usage for a single Mobile Center service */
  buildService?: BillingResourceUsageBuildService;
  /** Resource usage for a single Mobile Center service */
  testService?: BillingResourceUsageTestService;
}

/** Resource usage for a single Mobile Center service */
export interface BillingResourceUsageBuildService {
  /** Usage for a single period */
  currentUsagePeriod?: BillingResourceUsageBuildServiceCurrentUsagePeriod;
}

/** Usage for a single period */
export interface BillingResourceUsageBuildServiceCurrentUsagePeriod {
  /** Inclusive start time of the usage period */
  startTime?: string;
  /** Exclusive end time of the usage period. */
  endTime?: string;
  /** A collection of named numeric values */
  byAccount?: { [propertyName: string]: number };
  /** A collection of  named numeric values grouped by app */
  byApp?: { [propertyName: string]: { [propertyName: string]: number } };
}

/** Resource usage for a single Mobile Center service */
export interface BillingResourceUsageTestService {
  /** Usage for a single period */
  currentUsagePeriod?: BillingResourceUsageTestServiceCurrentUsagePeriod;
}

/** Usage for a single period */
export interface BillingResourceUsageTestServiceCurrentUsagePeriod {
  /** Inclusive start time of the usage period */
  startTime?: string;
  /** Exclusive end time of the usage period. */
  endTime?: string;
  /** A collection of named numeric values */
  byAccount?: { [propertyName: string]: number };
  /** A collection of  named numeric values grouped by app */
  byApp?: { [propertyName: string]: { [propertyName: string]: number } };
}

/** GDPR tests verification result */
export interface GdprVerificationResult {
  /** Verification status. True means that the verification was successfull. */
  status?: boolean;
  /** Optional error message if the verification failed. */
  message?: string;
}

/** GitHub account information */
export interface GitHubAccount {
  /** Id of GitHub account */
  id?: number;
  /** Type of GitHub account */
  accountType?: GitHubAccountType;
}

/** GitHub Marketplace plan */
export interface GitHubMarketplacePlan {
  /** Id of the GitHub plan */
  id?: number;
}

/** GitHub Marketplace purchase */
export interface GitHubMarketplacePurchase {
  /** GitHub account information */
  account?: GitHubMarketplacePurchaseAccount;
  /** GitHub Marketplace plan */
  plan?: GitHubMarketplacePurchasePlan;
}

/** GitHub account information */
export interface GitHubMarketplacePurchaseAccount {
  /** Id of GitHub account */
  id?: number;
  /** Type of GitHub account */
  accountType?: GitHubMarketplacePurchaseAccountType;
}

/** GitHub Marketplace plan */
export interface GitHubMarketplacePurchasePlan {
  /** Id of the GitHub plan */
  id?: number;
}

/** Billing Plans for a single service */
export interface ServiceBillingPlans {
  /** Can customer select trial plan for that service (if it exists)? */
  canSelectTrialPlan?: boolean;
  /** Expiration time of the last selected trial plan. Will be null if trial plan was not used. */
  lastTrialPlanExpirationTime?: string;
  /** Billing plans for a given period */
  currentBillingPeriod?: ServiceBillingPlansCurrentBillingPeriod;
}

/** Billing plans for a given period */
export interface ServiceBillingPlansCurrentBillingPeriod {
  /** Inclusive start of the period */
  startTime?: string;
  /** Exclusive end of the period. */
  endTime?: string;
  /** Selection of a billing plan */
  byAccount?: ServiceBillingPlansCurrentBillingPeriodByAccount;
}

/** Selection of a billing plan */
export interface ServiceBillingPlansCurrentBillingPeriodByAccount {
  /** Number of instances of the billing plan. */
  count?: number;
  /** Billing Plan */
  plan?: ServiceBillingPlansCurrentBillingPeriodByAccountPlan;
}

/** Billing Plan */
export interface ServiceBillingPlansCurrentBillingPeriodByAccountPlan {
  /** The Billing Plan ID */
  id?: string;
  /** Version of the Billing Plan schema */
  version?: string;
  /** Price of the Billing Plan */
  price?: number;
  /** Service that receives payments for this billing plan. */
  paymentSource?: ServiceBillingPlansCurrentBillingPeriodByAccountPlanPaymentSource;
  /** Name of the service that the plan applies to. */
  service?: ServiceBillingPlansCurrentBillingPeriodByAccountPlanService;
  /** A collection of named numeric values */
  limits?: { [propertyName: string]: number };
  /** Collection of attribute values. */
  attributes?: { [propertyName: string]: Record<string, unknown> };
  parentId?: string;
}

/** Resource usage for a single Mobile Center service */
export interface ServiceResourceUsage {
  /** Usage for a single period */
  currentUsagePeriod?: ServiceResourceUsageCurrentUsagePeriod;
}

/** Usage for a single period */
export interface ServiceResourceUsageCurrentUsagePeriod {
  /** Inclusive start time of the usage period */
  startTime?: string;
  /** Exclusive end time of the usage period. */
  endTime?: string;
  /** A collection of named numeric values */
  byAccount?: { [propertyName: string]: number };
  /** A collection of  named numeric values grouped by app */
  byApp?: { [propertyName: string]: { [propertyName: string]: number } };
}

/** Usage for a single period */
export interface UsagePeriod {
  /** Inclusive start time of the usage period */
  startTime?: string;
  /** Exclusive end time of the usage period. */
  endTime?: string;
  /** A collection of named numeric values */
  byAccount?: { [propertyName: string]: number };
  /** A collection of  named numeric values grouped by app */
  byApp?: { [propertyName: string]: { [propertyName: string]: number } };
}

/** Status of the usage record creation */
export interface UsageRecordStatus {
  /** Is the age of the most recent Build service usage record within expected limits */
  expectedLatestBuildExists?: boolean;
  /** Is the age of the most recent Test service usage record within expected limits */
  expectedLatestTestExists?: boolean;
  /** The time of the most recent Build service usage record */
  latestBuildUsageRecordTime?: string;
  /** The time of the most recent Test service usage record */
  latestTestUsageRecordTime?: string;
}

/** Billing Plan with a version */
export interface VersionedBillingPlan {
  /** Billing Plan */
  document?: VersionedBillingPlanDocument;
  /** The version of the object */
  etag?: string;
}

/** Billing Plan */
export interface VersionedBillingPlanDocument {
  /** The Billing Plan ID */
  id?: string;
  /** Version of the Billing Plan schema */
  version?: string;
  /** Price of the Billing Plan */
  price?: number;
  /** Service that receives payments for this billing plan. */
  paymentSource?: VersionedBillingPlanDocumentPaymentSource;
  /** Name of the service that the plan applies to. */
  service?: VersionedBillingPlanDocumentService;
  /** A collection of named numeric values */
  limits?: { [propertyName: string]: number };
  /** Collection of attribute values. */
  attributes?: { [propertyName: string]: Record<string, unknown> };
  parentId?: string;
}

/** Envelope for messages sent to actors */
export interface MessageEnvelope {
  /** Unique id of the message */
  messageId?: string;
  /** Type of the message */
  messageType?: string;
  /** Body of the message */
  message?: Record<string, unknown>;
}

export interface DataSubjectRightCustomerIdRequest {
  /** customer account id (b2c identifier) / customer user id (free form text) depending on the value of the fied `type` */
  dataSubjectIdentifier?: string;
  /** type of the customer dataSubjectIdentifier */
  type?: CustomerIdentifierType;
}

export interface DataSubjectRightEmailRequest {
  /** Email used for cancel delete with x-authz-bypass headers */
  email: string;
}

export interface DataSubjectRightResponse {
  /** Unique request identifier */
  token: string;
  /** ISO 8601 format timestamp of when request was created. */
  createdAt: Date;
}

export interface DataSubjectRightStatusResponse {
  /** Azure Storage shared access signature (SAS) URL for exported user data. */
  sasUrl?: string;
  /** Whether Azure Storage shared access signature (SAS) URL has expired or not. */
  sasUrlExpired?: boolean;
  /** Status of data subject right request */
  status: DataSubjectRightStatusResponseStatus;
  /** explanation message of the status */
  message: string;
}

export interface DataSubjectRightUpdateStatusOperation {
  /** Request identifier of the operation */
  requestId: string;
  /** Operation status */
  status: OperationStatus;
  /** String field to be used by participant for any intermediate statuses or data they need to save */
  participantData?: string;
}

export interface DataSubjectRightOperation {
  /** Unique request identifier */
  requestId: string;
  /** Unique operation identifier */
  operationId: string;
  /** Request type */
  requestType: RequestType;
  /** Operation status */
  status: OperationStatus;
  /** Participant to execute the response */
  participant: string;
  /** JSON object decribing what to delete (TODO - make separate definition?) */
  context: string;
  /** Application identifier if applicable */
  appId?: string;
  /** String field to be used by participant for any intermediate statuses or data they need to save */
  participantData?: string;
}

export interface DataSubjectRightQueueInfo {
  sasUri: string;
  queueName: string;
  expiresAt: Date;
}

export interface DataSubjectRighBlobContainerInfo {
  sasUri: string;
  blobPath: string;
}

/** This response contains the Azure AD B2C client ID for an application. */
export interface ClientIdResponse {
  clientId?: string;
}

export interface InnerError {
  code?: string;
}

export interface AuthTenantsResponse {
  value?: AuthTenantsResponseValueItem[];
}

export interface AuthTenantsResponseValueItem {
  id: string;
  name: string;
}

export interface AuthTenant {
  id: string;
  name: string;
}

export interface ApplicationsResponse {
  value?: ApplicationsResponseValueItem[];
}

export interface ApplicationsResponseValueItem {
  id?: string;
  createdAt?: Date;
  name?: string;
  signInAudience?: string;
}

export interface ApplicationResponse {
  id?: string;
  createdAt?: Date;
  name?: string;
  signInAudience?: string;
}

export interface ScopesResponse {
  value?: ScopesResponseValueItem[];
}

export interface ScopesResponseValueItem {
  id?: string;
  appName?: string;
  scope?: string;
  url?: string;
}

export interface ScopeResponse {
  id?: string;
  appName?: string;
  scope?: string;
  url?: string;
}

export interface AuthApplicationResponse {
  id: string;
  provider: AuthApplicationResponseProvider;
  tenantId?: string;
  tenantName?: string;
  policyId?: string;
  scopeId?: string;
  scopeUrl?: string;
  signInAudience?: string;
}

export interface AuthApplicationPatchRequest {
  policyId?: string;
  scopeId?: string;
  scopeUrl?: string;
  id?: string;
  provider?: AuthApplicationPatchRequestProvider;
}

export interface ExistingAuthApplicationPostRequest {
  tenantId?: string;
  tenantName?: string;
  provider?: ExistingAuthApplicationPostRequestProvider;
  id: string;
  policyId?: string;
  scopeId?: string;
  scopeUrl?: string;
  signInAudience?: string;
}

export interface TrustFrameworkPoliciesResponse {
  value?: TrustFrameworkPoliciesResponseValueItem[];
}

export interface TrustFrameworkPoliciesResponseValueItem {
  id?: string;
}

export interface TrustFrameworkPolicyResponse {
  id?: string;
}

export interface MetricsResponse {
  databaseLocation?: MetricsResponseDatabaseLocation;
  accountName?: string;
  databaseId?: string;
  /** Represents database usage metrics. */
  metrics?: MetricsResponseMetrics;
}

/** Represents database usage metrics. */
export interface MetricsResponseMetrics {
  interval?: number;
  totalRequests?: number;
  totalRequestUnits?: number;
  dataUsage?: number;
  indexUsage?: number;
  latencyMetrics?: MetricsResponseMetricsLatencyMetrics;
}

export interface MetricsResponseMetricsLatencyMetrics {
  readLatencyMetrics?: MetricsResponseMetricsLatencyMetricsReadLatencyMetrics;
  writeLatencyMetrics?: MetricsResponseMetricsLatencyMetricsWriteLatencyMetrics;
}

export interface MetricsResponseMetricsLatencyMetricsReadLatencyMetrics {
  name?: string;
  unit?: string;
  startTime?: Date;
  endTime?: Date;
  metricValues?: MetricsResponseMetricsLatencyMetricsReadLatencyMetricsMetricValuesItem[];
}

export interface MetricsResponseMetricsLatencyMetricsReadLatencyMetricsMetricValuesItem {
  timestamp?: Date;
  average?: number;
}

export interface MetricsResponseMetricsLatencyMetricsWriteLatencyMetrics {
  name?: string;
  unit?: string;
  startTime?: Date;
  endTime?: Date;
  metricValues?: MetricsResponseMetricsLatencyMetricsWriteLatencyMetricsMetricValuesItem[];
}

export interface MetricsResponseMetricsLatencyMetricsWriteLatencyMetricsMetricValuesItem {
  timestamp?: Date;
  average?: number;
}

/** Represents database usage metrics. */
export interface DatabaseMetrics {
  interval?: number;
  totalRequests?: number;
  totalRequestUnits?: number;
  dataUsage?: number;
  indexUsage?: number;
  latencyMetrics?: DatabaseMetricsLatencyMetrics;
}

export interface DatabaseMetricsLatencyMetrics {
  readLatencyMetrics?: DatabaseMetricsLatencyMetricsReadLatencyMetrics;
  writeLatencyMetrics?: DatabaseMetricsLatencyMetricsWriteLatencyMetrics;
}

export interface DatabaseMetricsLatencyMetricsReadLatencyMetrics {
  name?: string;
  unit?: string;
  startTime?: Date;
  endTime?: Date;
  metricValues?: DatabaseMetricsLatencyMetricsReadLatencyMetricsMetricValuesItem[];
}

export interface DatabaseMetricsLatencyMetricsReadLatencyMetricsMetricValuesItem {
  timestamp?: Date;
  average?: number;
}

export interface DatabaseMetricsLatencyMetricsWriteLatencyMetrics {
  name?: string;
  unit?: string;
  startTime?: Date;
  endTime?: Date;
  metricValues?: DatabaseMetricsLatencyMetricsWriteLatencyMetricsMetricValuesItem[];
}

export interface DatabaseMetricsLatencyMetricsWriteLatencyMetricsMetricValuesItem {
  timestamp?: Date;
  average?: number;
}

export interface LatencyMetrics {
  readLatencyMetrics?: LatencyMetricsReadLatencyMetrics;
  writeLatencyMetrics?: LatencyMetricsWriteLatencyMetrics;
}

export interface LatencyMetricsReadLatencyMetrics {
  name?: string;
  unit?: string;
  startTime?: Date;
  endTime?: Date;
  metricValues?: LatencyMetricsReadLatencyMetricsMetricValuesItem[];
}

export interface LatencyMetricsReadLatencyMetricsMetricValuesItem {
  timestamp?: Date;
  average?: number;
}

export interface LatencyMetricsWriteLatencyMetrics {
  name?: string;
  unit?: string;
  startTime?: Date;
  endTime?: Date;
  metricValues?: LatencyMetricsWriteLatencyMetricsMetricValuesItem[];
}

export interface LatencyMetricsWriteLatencyMetricsMetricValuesItem {
  timestamp?: Date;
  average?: number;
}

export interface LatencyData {
  name?: string;
  unit?: string;
  startTime?: Date;
  endTime?: Date;
  metricValues?: LatencyDataMetricValuesItem[];
}

export interface LatencyDataMetricValuesItem {
  timestamp?: Date;
  average?: number;
}

export interface MetricsData {
  timestamp?: Date;
  average?: number;
}

export interface OverviewResponse {
  databaseLocation?: OverviewResponseDatabaseLocation;
  accountName?: string;
  databaseId?: string;
  throughput?: number;
}

/** This response contains an estimated price-per-RU denominated in a given currency. */
export interface EstimatedPricingResponse {
  pricePerHour?: number;
  currency?: EstimatedPricingResponseCurrency;
}

export interface DataInstancesResponse {
  value?: DataInstancesResponseValueItem[];
}

export interface DataInstancesResponseValueItem {
  id: string;
  name: string;
}

export interface DataInstance {
  id: string;
  name: string;
}

export interface InstanceDatabasesResponse {
  value?: InstanceDatabasesResponseValueItem[];
}

export interface InstanceDatabasesResponseValueItem {
  id: string;
  name: string;
}

export interface InstanceDatabase {
  id: string;
  name: string;
}

export interface DatabaseCollectionsResponse {
  value?: DatabaseCollectionsResponseValueItem[];
}

export interface DatabaseCollectionsResponseValueItem {
  id: string;
  name: string;
}

export interface DatabaseCollection {
  id: string;
  name: string;
}

export interface NotificationConfiguration {
  appId?: string;
  state?: NotificationConfigurationState;
  reason?: NotificationConfigurationReason;
}

export interface DataResourceTokenResponse {
  databaseId?: string;
  databaseName?: string;
  collectionName?: string;
  accountName?: string;
  token?: string;
  expiresOn?: Date;
  isReadOnlyToken?: boolean;
}

export interface UsersResponse {
  value: UsersResponseValueItem[];
}

export interface UsersResponseValueItem {
  accountId: string;
  mail?: string;
  displayName: string;
}

export interface UserResponse {
  accountId: string;
  mail?: string;
  displayName: string;
}

export interface DataProvisioningParameters {
  subscriptionId?: string;
  databaseConnectionString?: string;
  resourceRegion?: DataProvisioningParametersResourceRegion;
  database?: string;
  collection?: string;
  requestUnits?: number;
  accountName?: string;
}

export interface ProvisionStatusResponse {
  status: ProvisionStatusResponseStatus;
  message?: string;
}

/** The Api response model for Cosmos Db Cors status */
export interface CosmosDbCorsStatusResponse {
  status: CosmosDbCorsStatusResponseStatus;
  message?: string;
}

export interface PathsSn2L3JV01OrgsOrgNameAvatarPostRequestbodyContentApplicationXWwwFormUrlencodedSchema {
  /** The image for an Organization avatar to upload. */
  avatar?: coreRestPipeline.RequestBodyType;
}

export interface Paths1M2YkscV01AppsOwnerNameAppNameAvatarPostRequestbodyContentApplicationXWwwFormUrlencodedSchema {
  /** The image for an app avatar to upload. */
  avatar?: coreRestPipeline.RequestBodyType;
}

/** Alerting Default Email Settings of the user */
export interface Paths1GbpowzV01UserNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchema
  extends Paths182SsxvV01UserNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchemaAllof0,
    PathsKu8GnbV01UserNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchemaAllof1 {}

/** Alerting service error */
export interface Paths3OiijqV01UserNotificationsEmailsettingsGetResponsesDefaultContentApplicationJsonSchema
  extends Paths1O95A70V01UserNotificationsEmailsettingsGetResponsesDefaultContentApplicationJsonSchemaAllof0,
    Paths1E5Yhn2V01UserNotificationsEmailsettingsGetResponsesDefaultContentApplicationJsonSchemaAllof1 {}

export interface GetResponses200ContentApplicationJsonSchemaItemRelease
  extends Paths1R53U2ZV01TesterAppsGetResponses200ContentApplicationJsonSchemaItemsPropertiesReleaseAllof0,
    Paths4Gr131V01TesterAppsGetResponses200ContentApplicationJsonSchemaItemsPropertiesReleaseAllof1 {}

export interface PathsP0YmppV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0
  extends Paths1PavtpvV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0,
    Paths8M1UckV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0Allof1 {}

export interface PathsSelih9V01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItems
  extends PathsP0YmppV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0,
    PathsJ4K1S8V01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof1,
    PathsR7Mx7PV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof2 {}

export interface PathsAkcpaxV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0
  extends Paths90FqqhV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0,
    PathsBq45MpV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0Allof1 {}

export interface Paths2H2GfhV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItems
  extends PathsAkcpaxV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0,
    Paths17Mq2NrV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof1,
    Paths7UlnvnV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof2 {}

export interface Paths1CionenV01OrgsOrgNameUsersUserNameAppsGetResponses200ContentApplicationJsonSchemaItems
  extends Paths1Cvct4XV01OrgsOrgNameUsersUserNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0,
    Paths4IoilmV01OrgsOrgNameUsersUserNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof1 {}

export interface Paths1XazmcgV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchemaAllof0
  extends PathsX6KtmiV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchemaAllof0,
    Paths1G7Kvy1V01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchemaAllof0Allof1 {}

export interface Paths6Yr3JV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchema
  extends Paths1XazmcgV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchemaAllof0,
    PathsF63NbmV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchemaAllof1 {}

export interface Paths1TnbktoV01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchemaAllof0
  extends PathsT7Lg34V01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchemaAllof0,
    PathsJ34NfmV01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchemaAllof0Allof1 {}

export interface PathsQkzmz3V01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchema
  extends Paths1TnbktoV01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchemaAllof0,
    Paths1H4Oj8KV01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchemaAllof1 {}

export interface Paths14I2OveV01OrgsOrgNameTeamsTeamNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0
  extends PathsV1407RV01OrgsOrgNameTeamsTeamNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0,
    PathsO3Iv87V01OrgsOrgNameTeamsTeamNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0Allof1 {}

export interface PathsS2AazoV01OrgsOrgNameTeamsTeamNameAppsGetResponses200ContentApplicationJsonSchemaItems
  extends Paths14I2OveV01OrgsOrgNameTeamsTeamNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0,
    Paths73QlfV01OrgsOrgNameTeamsTeamNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof1 {}

export interface PathsN5ZsaaV01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItems
  extends Paths1AbdgaoV01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItemsAllof0,
    Paths128BpnsV01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItemsAllof1 {}

export interface Get200ApplicationJsonItems1AppsItem
  extends Paths1Mb8UcrV01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesAppsItemsAllof0,
    Paths1E6JkmgV01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesAppsItemsAllof1 {}

export interface Paths1FzizdmV01OrgsOrgNameDistributionGroupsDistributionGroupNameAppsGetResponses200ContentApplicationJsonSchemaItems
  extends PathsK6Tv9V01OrgsOrgNameDistributionGroupsDistributionGroupNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0,
    PathsVbaitqV01OrgsOrgNameDistributionGroupsDistributionGroupNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof1 {}

export interface PathsZsi63SV01OrgsOrgNameAppsPostResponses200ContentApplicationJsonSchema
  extends Paths1Dw0Mx6V01OrgsOrgNameAppsPostResponses200ContentApplicationJsonSchemaAllof0,
    Paths1S1MjxkV01OrgsOrgNameAppsPostResponses200ContentApplicationJsonSchemaAllof1 {}

export interface Paths15X4K8OV01OrgsOrgNameAppsPostResponses201ContentApplicationJsonSchema
  extends Paths1Khm1L1V01OrgsOrgNameAppsPostResponses201ContentApplicationJsonSchemaAllof0,
    Paths1RmugtV01OrgsOrgNameAppsPostResponses201ContentApplicationJsonSchemaAllof1 {}

export interface PathsPmjc9ZV01OrgsOrgNameAppsGetResponses200ContentApplicationJsonSchemaItems
  extends Paths1H84Up2V01OrgsOrgNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0,
    Paths9U0PvjV01OrgsOrgNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof1 {}

export interface Paths1Y9EjsmV01LegacyUpdatecheckGetResponses200ContentApplicationJsonSchemaPropertiesUpdateinfo
  extends Paths13Ux7UhV01LegacyUpdatecheckGetResponses200ContentApplicationJsonSchemaPropertiesUpdateinfoAllof0,
    Paths1Gf0E4FV01LegacyUpdatecheckGetResponses200ContentApplicationJsonSchemaPropertiesUpdateinfoAllof1 {}

export interface GetResponses200ContentApplicationJsonSchemaItemApp
  extends PathsC6NjndV01InvitationsSentGetResponses200ContentApplicationJsonSchemaItemsPropertiesAppAllof0,
    PathsGjcam3V01InvitationsSentGetResponses200ContentApplicationJsonSchemaItemsPropertiesAppAllof1 {}

/** Alerting service error */
export interface PathsYzqp66V01AppsOwnerNameAppNameWebhooksGetResponsesDefaultContentApplicationJsonSchema
  extends Paths16Kfo10V01AppsOwnerNameAppNameWebhooksGetResponsesDefaultContentApplicationJsonSchemaAllof0,
    PathsIss5SmV01AppsOwnerNameAppNameWebhooksGetResponsesDefaultContentApplicationJsonSchemaAllof1 {}

export interface Paths17Wfdp6V01AppsOwnerNameAppNameTransferDestinationOwnerNamePostResponses200ContentApplicationJsonSchema
  extends Paths1V9Hz9HV01AppsOwnerNameAppNameTransferDestinationOwnerNamePostResponses200ContentApplicationJsonSchemaAllof0,
    Paths1Uuv6QgV01AppsOwnerNameAppNameTransferDestinationOwnerNamePostResponses200ContentApplicationJsonSchemaAllof1 {}

export interface Paths1Sq4J2RV01AppsOwnerNameAppNameTeamsGetResponses200ContentApplicationJsonSchemaItems
  extends Paths1Sla7TvV01AppsOwnerNameAppNameTeamsGetResponses200ContentApplicationJsonSchemaItemsAllof0,
    Paths1Qevyq4V01AppsOwnerNameAppNameTeamsGetResponses200ContentApplicationJsonSchemaItemsAllof1 {}

export interface Paths131DtitV01AppsOwnerNameAppNameRepoConfigGetResponses200ContentApplicationJsonSchemaItemsAllof0
  extends PathsT02O1YV01AppsOwnerNameAppNameRepoConfigGetResponses200ContentApplicationJsonSchemaItemsAllof0 {
  /** The GitHub App Installation id. Required for repositories connected from GitHub App */
  installationId?: string;
}

export interface Paths1P54ZxdV01AppsOwnerNameAppNameRepoConfigPostRequestbodyContentApplicationJsonSchema
  extends PathsAqvv1UV01AppsOwnerNameAppNameRepoConfigPostRequestbodyContentApplicationJsonSchemaAllof0 {
  /** The GitHub App Installation id. Required for repositories connected from GitHub App */
  installationId?: string;
}

export interface Paths5WvwkdV01AppsOwnerNameAppNameReleasesReleaseIdTestersPostResponses201ContentApplicationJsonSchema
  extends PathsKdtsm0V01AppsOwnerNameAppNameReleasesReleaseIdTestersPostResponses201ContentApplicationJsonSchemaAllof0,
    Paths12D41JpV01AppsOwnerNameAppNameReleasesReleaseIdTestersPostResponses201ContentApplicationJsonSchemaAllof1 {}

export interface Paths1Jif7RyV01AppsOwnerNameAppNameReleasesReleaseIdGroupsPostRequestbodyContentApplicationJsonSchema
  extends Paths17Lp2JiV01AppsOwnerNameAppNameReleasesReleaseIdGroupsPostRequestbodyContentApplicationJsonSchemaAllof0,
    Paths17MosqV01AppsOwnerNameAppNameReleasesReleaseIdGroupsPostRequestbodyContentApplicationJsonSchemaAllof1 {}

export interface PathsFv6EorV01AppsOwnerNameAppNameReleasesReleaseIdGroupsPostResponses201ContentApplicationJsonSchema
  extends Paths14K4HpV01AppsOwnerNameAppNameReleasesReleaseIdGroupsPostResponses201ContentApplicationJsonSchemaAllof0,
    Paths1489G45V01AppsOwnerNameAppNameReleasesReleaseIdGroupsPostResponses201ContentApplicationJsonSchemaAllof1 {}

export interface Paths11QpltwV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0
  extends Paths13SftyjV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0,
    PathsWkq29YV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0Allof1 {}

export interface PathsEgsmktV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItems
  extends Paths11QpltwV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0,
    Paths13J8DbyV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof1,
    Paths1Pu9X8V01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof2 {}

export interface Paths1Ufxd2QV01AppsOwnerNameAppNameReleasesReleaseIdPutResponses400ContentApplicationJsonSchema
  extends Paths17Qi9DpV01AppsOwnerNameAppNameReleasesReleaseIdPutResponses400ContentApplicationJsonSchemaAllof0,
    Paths1Y3IqbjV01AppsOwnerNameAppNameReleasesReleaseIdPutResponses400ContentApplicationJsonSchemaAllof1 {}

export interface Paths5XfktV01AppsOwnerNameAppNameReleasesReleaseIdPatchResponses400ContentApplicationJsonSchema
  extends PathsRtr6U2V01AppsOwnerNameAppNameReleasesReleaseIdPatchResponses400ContentApplicationJsonSchemaAllof0,
    PathsP5E57AV01AppsOwnerNameAppNameReleasesReleaseIdPatchResponses400ContentApplicationJsonSchemaAllof1 {}

export interface Get200ApplicationJsonItemsDistributionGroupsItem
  extends Paths10J5Pj9V01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItemsAllof0,
    PathsW3XrsbV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItemsAllof1 {}

export interface Get200ApplicationJsonItemsDistributionStoresItem
  extends PathsP9RqxrV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItemsAllof0,
    Paths7Pkkp8V01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItemsAllof1 {}

export interface Paths19JzgxhV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0
  extends Paths18Irl7JV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0,
    PathsJ60E2EV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0Allof1 {}

export interface Get200ApplicationJsonItemsDestinationsItem
  extends Paths19JzgxhV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0,
    PathsLdmfwzV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof1,
    Paths1F6N8B4V01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof2 {}

export interface PathsQc9WyxV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItems
  extends Paths1Fwr664V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItemsAllof0,
    PathsOjwcvoV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItemsAllof1 {}

export interface Paths15Ddi2KV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItems
  extends PathsUii8Z4V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItemsAllof0,
    PathsGd6D92V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItemsAllof1 {}

export interface Paths1DmquncV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0
  extends Paths1612Hh6V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0,
    Paths12Nyzp4V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0Allof1 {}

export interface Paths2S32RgV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItems
  extends Paths1DmquncV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0,
    Paths16Wfds7V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof1,
    Paths2Wsk71V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof2 {}

export interface Paths14BtkccV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItems
  extends Paths1S10KqwV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItemsAllof0,
    PathsWb4NtlV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItemsAllof1 {}

export interface Paths1Yxm0T8V01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItems
  extends Paths1UjvvjlV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItemsAllof0,
    Paths11O5OrcV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItemsAllof1 {}

export interface PathsUhrfh7V01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0
  extends PathsG3O3KxV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0,
    Paths1LkdigmV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0Allof1 {}

export interface PathsM69GgsV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItems
  extends PathsUhrfh7V01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0,
    Paths1Os0Y5OV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof1,
    Paths1Qd7R1NV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof2 {}

/** Notification statistics */
export interface Paths1NjrudiV01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponses200ContentApplicationJsonSchema
  extends PathsM85ZfmV01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponses200ContentApplicationJsonSchemaAllof0 {
  /** Notification definition object */
  notificationContent: PathsX4Uqn0V01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponses200ContentApplicationJsonSchemaPropertiesNotificationContent;
  /** Failture outcome counts */
  failureOutcomes?: Paths1V4Or6MV01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponses200ContentApplicationJsonSchemaPropertiesFailureOutcomesItems[];
}

/** Alerting Default Email Settings of the user */
export interface PathsTejspdV01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchemaAllof0
  extends Paths1Lv5TgxV01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchemaAllof0,
    Paths1Exn54RV01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchemaAllof0Allof1 {}

/** Alerting Email Settings of the user for a particular app */
export interface Paths19Z9V3IV01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchema
  extends PathsTejspdV01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchemaAllof0,
    Paths12H1WryV01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchemaAllof1 {}

/** Alerting service error */
export interface Paths1Jg75I3V01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponsesDefaultContentApplicationJsonSchema
  extends PathsMyxjuqV01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponsesDefaultContentApplicationJsonSchemaAllof0,
    PathsLinqw9V01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponsesDefaultContentApplicationJsonSchemaAllof1 {}

export interface Paths1R5Rn5OV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesApp
  extends PathsR19UixV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesAppAllof0,
    Paths39Q34WV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesAppAllof1 {}

export interface Paths1GvcgvwV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridGetResponses200ContentApplicationJsonSchema
  extends Paths1A0E8RfV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridGetResponses200ContentApplicationJsonSchemaAllof0 {
  name?: string;
  reasonFrames?: PathsIus8TpV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridGetResponses200ContentApplicationJsonSchemaPropertiesReasonframesItems[];
  /**
   * Timestamp when the app was launched, example: '2017-03-13T18:05:42Z'.
   *
   */
  appLaunchTimestamp?: Date;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Flag indicating if device is jailbroken
   *
   */
  jailbreak?: boolean;
  /** Dictionary of <string> */
  properties?: { [propertyName: string]: string };
}

export interface Paths134SdxmV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsLatestGetResponses200ContentApplicationJsonSchema
  extends Paths1W62YatV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsLatestGetResponses200ContentApplicationJsonSchemaAllof0 {
  name?: string;
  reasonFrames?: Paths4M2P0UV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsLatestGetResponses200ContentApplicationJsonSchemaPropertiesReasonframesItems[];
  /**
   * Timestamp when the app was launched, example: '2017-03-13T18:05:42Z'.
   *
   */
  appLaunchTimestamp?: Date;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Flag indicating if device is jailbroken
   *
   */
  jailbreak?: boolean;
  /** Dictionary of <string> */
  properties?: { [propertyName: string]: string };
}

export interface Paths1Xy5MxmV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidGetResponses200ContentApplicationJsonSchema
  extends PathsUg1W4GV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidGetResponses200ContentApplicationJsonSchemaAllof0 {
  errorGroupId: string;
  appVersion: string;
  appBuild?: string;
  count: number;
  deviceCount: number;
  firstOccurrence: Date;
  lastOccurrence: Date;
  exceptionType?: string;
  exceptionMessage?: string;
  exceptionClassName?: string;
  exceptionClassMethod?: boolean;
  exceptionMethod?: string;
  exceptionAppCode?: boolean;
  exceptionFile?: string;
  exceptionLine?: string;
  codeRaw?: string;
  reasonFrames?: PathsHk1U21V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidGetResponses200ContentApplicationJsonSchemaPropertiesReasonframesItems[];
  hidden?: boolean;
}

export interface Paths1W42Yn6V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidPatchResponses200ContentApplicationJsonSchema
  extends Paths13AsklyV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidPatchResponses200ContentApplicationJsonSchemaAllof0 {
  errorGroupId: string;
  appVersion: string;
  appBuild?: string;
  count: number;
  deviceCount: number;
  firstOccurrence: Date;
  lastOccurrence: Date;
  exceptionType?: string;
  exceptionMessage?: string;
  exceptionClassName?: string;
  exceptionClassMethod?: boolean;
  exceptionMethod?: string;
  exceptionAppCode?: boolean;
  exceptionFile?: string;
  exceptionLine?: string;
  codeRaw?: string;
  reasonFrames?: PathsMvkf3KV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidPatchResponses200ContentApplicationJsonSchemaPropertiesReasonframesItems[];
  hidden?: boolean;
}

export interface Paths1HondamV01AppsOwnerNameAppNameErrorsErrorgroupsSearchGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItemsAllof0
  extends PathsGpexkdV01AppsOwnerNameAppNameErrorsErrorgroupsSearchGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItemsAllof0 {
  errorGroupId: string;
  appVersion: string;
  appBuild?: string;
  count: number;
  deviceCount: number;
  firstOccurrence: Date;
  lastOccurrence: Date;
  exceptionType?: string;
  exceptionMessage?: string;
  exceptionClassName?: string;
  exceptionClassMethod?: boolean;
  exceptionMethod?: string;
  exceptionAppCode?: boolean;
  exceptionFile?: string;
  exceptionLine?: string;
  codeRaw?: string;
  reasonFrames?: Get200ApplicationJsonPropertiesItems0ReasonFramesItem[];
  hidden?: boolean;
}

export interface Paths73P5FlV01AppsOwnerNameAppNameErrorsErrorgroupsGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItemsAllof0
  extends Paths9Zowz3V01AppsOwnerNameAppNameErrorsErrorgroupsGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItemsAllof0 {
  errorGroupId: string;
  appVersion: string;
  appBuild?: string;
  count: number;
  deviceCount: number;
  firstOccurrence: Date;
  lastOccurrence: Date;
  exceptionType?: string;
  exceptionMessage?: string;
  exceptionClassName?: string;
  exceptionClassMethod?: boolean;
  exceptionMethod?: string;
  exceptionAppCode?: boolean;
  exceptionFile?: string;
  exceptionLine?: string;
  codeRaw?: string;
  reasonFrames?: Paths6YokraV01AppsOwnerNameAppNameErrorsErrorgroupsGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItemsAllof0PropertiesReasonframesItems[];
  hidden?: boolean;
}

export interface Paths2Uu9MkV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0
  extends PathsJ2Qqa3V01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0,
    Paths12P7F7IV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0Allof1 {}

export interface Paths141Gsz2V01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItems
  extends Paths2Uu9MkV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0,
    Paths18M4XcxV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof1,
    Paths8Byq2JV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof2 {}

export interface PathsCv4Vu0V01AppsOwnerNameAppNameDeploymentsDeploymentNameRollbackReleasePostResponses201ContentApplicationJsonSchema
  extends PathsQ8034WV01AppsOwnerNameAppNameDeploymentsDeploymentNameRollbackReleasePostResponses201ContentApplicationJsonSchemaAllof0,
    Paths50Kz7V01AppsOwnerNameAppNameDeploymentsDeploymentNameRollbackReleasePostResponses201ContentApplicationJsonSchemaAllof1 {}

export interface PathsZjw2F1V01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesReleaseLabelPatchRequestbodyContentApplicationJsonSchema
  extends PathsK12I6HV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesReleaseLabelPatchRequestbodyContentApplicationJsonSchemaAllof0 {}

export interface PathsIvaackV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesReleaseLabelPatchResponses200ContentApplicationJsonSchema
  extends Paths1Yea874V01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesReleaseLabelPatchResponses200ContentApplicationJsonSchemaAllof0,
    PathsYibmhkV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesReleaseLabelPatchResponses200ContentApplicationJsonSchemaAllof1 {}

export interface PathsJ4L197V01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesGetResponses200ContentApplicationJsonSchemaItems
  extends Paths1FevdlzV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesGetResponses200ContentApplicationJsonSchemaItemsAllof0,
    PathsLr93OtV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesGetResponses200ContentApplicationJsonSchemaItemsAllof1 {}

export interface Paths1N68We7V01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesPostResponses201ContentApplicationJsonSchema
  extends Paths1Vd5IukV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesPostResponses201ContentApplicationJsonSchemaAllof0,
    Paths17WmuvlV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesPostResponses201ContentApplicationJsonSchemaAllof1 {}

export interface PathsOn7Se0V01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostRequestbodyContentApplicationJsonSchema
  extends Paths622D52V01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostRequestbodyContentApplicationJsonSchemaAllof0,
    Paths17F39DpV01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostRequestbodyContentApplicationJsonSchemaAllof1 {}

export interface Paths1Ou643ZV01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostResponses200ContentApplicationJsonSchema
  extends Paths1Ublt1UV01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostResponses200ContentApplicationJsonSchemaAllof0,
    Paths17Kc85CV01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostResponses200ContentApplicationJsonSchemaAllof1 {}

export interface PathsI5Bj4DV01AppsOwnerNameAppNameDeploymentsDeploymentNameGetResponses200ContentApplicationJsonSchemaPropertiesLatestRelease
  extends PathsCr0BufV01AppsOwnerNameAppNameDeploymentsDeploymentNameGetResponses200ContentApplicationJsonSchemaPropertiesLatestReleaseAllof0,
    PathsGw9MspV01AppsOwnerNameAppNameDeploymentsDeploymentNameGetResponses200ContentApplicationJsonSchemaPropertiesLatestReleaseAllof1 {}

export interface GetResponses200ContentApplicationJsonSchemaItemLatestRelease
  extends Paths1Bf3DjfV01AppsOwnerNameAppNameDeploymentsGetResponses200ContentApplicationJsonSchemaItemsPropertiesLatestReleaseAllof0,
    PathsNsdjsyV01AppsOwnerNameAppNameDeploymentsGetResponses200ContentApplicationJsonSchemaItemsPropertiesLatestReleaseAllof1 {}

export interface PostContentSchemaLatestRelease
  extends PathsZehv0UV01AppsOwnerNameAppNameDeploymentsPostRequestbodyContentApplicationJsonSchemaPropertiesLatestReleaseAllof0,
    Paths9Kw16BV01AppsOwnerNameAppNameDeploymentsPostRequestbodyContentApplicationJsonSchemaPropertiesLatestReleaseAllof1 {}

export interface PathsKc6I0MV01AppsOwnerNameAppNameDeploymentsPostResponses201ContentApplicationJsonSchemaPropertiesLatestRelease
  extends Paths1Kdzg16V01AppsOwnerNameAppNameDeploymentsPostResponses201ContentApplicationJsonSchemaPropertiesLatestReleaseAllof0,
    PathsX1HeibV01AppsOwnerNameAppNameDeploymentsPostResponses201ContentApplicationJsonSchemaPropertiesLatestReleaseAllof1 {}

export interface PathsCbr4BhV01AppsOwnerNameAppNameCommitsBatchGetResponses200ContentApplicationJsonSchemaItems
  extends PathsCg3UfaV01AppsOwnerNameAppNameCommitsBatchGetResponses200ContentApplicationJsonSchemaItemsAllof0,
    Paths9M4LhgV01AppsOwnerNameAppNameCommitsBatchGetResponses200ContentApplicationJsonSchemaItemsAllof1 {}

/** Alerting service error */
export interface Paths1F8VktkV01AppsOwnerNameAppNameBugtrackerCrashgroupCrashGroupIdGetResponsesDefaultContentApplicationJsonSchema
  extends Paths1Xg1Y27V01AppsOwnerNameAppNameBugtrackerCrashgroupCrashGroupIdGetResponsesDefaultContentApplicationJsonSchemaAllof0,
    PathsNmpisgV01AppsOwnerNameAppNameBugtrackerCrashgroupCrashGroupIdGetResponsesDefaultContentApplicationJsonSchemaAllof1 {}

/** Alerting service error */
export interface Paths3CngdnV01AppsOwnerNameAppNameBugtrackerGetResponsesDefaultContentApplicationJsonSchema
  extends Paths1Ar0SvjV01AppsOwnerNameAppNameBugtrackerGetResponsesDefaultContentApplicationJsonSchemaAllof0,
    Paths1KnyufoV01AppsOwnerNameAppNameBugtrackerGetResponsesDefaultContentApplicationJsonSchemaAllof1 {}

export interface PathsRuhky8V01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchema
  extends Paths13VettcV01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0,
    Paths4Y3LpwV01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof1 {}

export interface PathsYdemoiV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchema
  extends Paths1Kbv5LpV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0,
    Paths1PqezhuV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof1 {}

export interface PathsRa6DxlV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchema
  extends PathsXp75IdV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof0,
    Paths1Mp73R1V01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof1 {}

export interface Paths1X598I8V01AppsOwnerNameAppNameAvatarPostResponses200ContentApplicationJsonSchema
  extends Paths1R8EjleV01AppsOwnerNameAppNameAvatarPostResponses200ContentApplicationJsonSchemaAllof0,
    PathsTl8K7SV01AppsOwnerNameAppNameAvatarPostResponses200ContentApplicationJsonSchemaAllof1 {}

export interface Paths1Jhcvh4V01AppsOwnerNameAppNameAvatarDeleteResponses200ContentApplicationJsonSchema
  extends Paths1D6EjcuV01AppsOwnerNameAppNameAvatarDeleteResponses200ContentApplicationJsonSchemaAllof0,
    PathsJ1Qwc6V01AppsOwnerNameAppNameAvatarDeleteResponses200ContentApplicationJsonSchemaAllof1 {}

export interface PostContentSchemaReleasesItem
  extends Paths1D756ChV01AppsOwnerNameAppNameAnalyticsDistributionReleaseCountsPostRequestbodyContentApplicationJsonSchemaPropertiesReleasesItemsAllof0 {
  /**
   * Distribution group Id.
   *
   */
  distributionGroup?: string;
}

/** Audience with details. */
export interface Paths1Tl18ZeV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNameGetResponses200ContentApplicationJsonSchema
  extends Paths4Tfj7FV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNameGetResponses200ContentApplicationJsonSchemaAllof0 {
  enabled?: boolean;
  /** Custom properties used in the definition. */
  customProperties?: { [propertyName: string]: DevicePropertyType };
  /** Estimated total audience size. */
  estimatedTotalCount?: number;
  /** Date the audience was last refreshed. */
  timestamp?: Date;
}

/** Audience with details. */
export interface PathsAem3LcV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNamePutResponses200ContentApplicationJsonSchema
  extends PathsIokya3V01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNamePutResponses200ContentApplicationJsonSchemaAllof0 {
  enabled?: boolean;
  /** Custom properties used in the definition. */
  customProperties?: { [propertyName: string]: DevicePropertyType };
  /** Estimated total audience size. */
  estimatedTotalCount?: number;
  /** Date the audience was last refreshed. */
  timestamp?: Date;
}

export interface PathsRv9AxzV01AppsOwnerNameAppNameGetResponses200ContentApplicationJsonSchema
  extends PathsGwup8BV01AppsOwnerNameAppNameGetResponses200ContentApplicationJsonSchemaAllof0,
    PathsYhp60MV01AppsOwnerNameAppNameGetResponses200ContentApplicationJsonSchemaAllof1 {}

export interface PathsPcp6H8V01AppsOwnerNameAppNamePatchResponses200ContentApplicationJsonSchema
  extends Paths1UogsreV01AppsOwnerNameAppNamePatchResponses200ContentApplicationJsonSchemaAllof0,
    Paths176RmcwV01AppsOwnerNameAppNamePatchResponses200ContentApplicationJsonSchemaAllof1 {}

export interface Paths1Xn0TpgV01AppsPostResponses201ContentApplicationJsonSchema
  extends Paths1Mhfa1V01AppsPostResponses201ContentApplicationJsonSchemaAllof0,
    Paths1KwnvogV01AppsPostResponses201ContentApplicationJsonSchemaAllof1 {}

export interface PathsEh92XyV01AppsGetResponses200ContentApplicationJsonSchemaItems
  extends Paths2I85NV01AppsGetResponses200ContentApplicationJsonSchemaItemsAllof0,
    Paths1Rjy06FV01AppsGetResponses200ContentApplicationJsonSchemaItemsAllof1 {}

export interface AppInvitationDetailResponseApp
  extends ComponentsI5EjcmSchemasAppinvitationdetailresponsePropertiesAppAllof0,
    Components1Fe01MdSchemasAppinvitationdetailresponsePropertiesAppAllof1 {}

export interface Components10Yzej3SchemasAppresponseinternalAllof0
  extends ComponentsXf12WkSchemasAppresponseinternalAllof0,
    Components1V5My88SchemasAppresponseinternalAllof0Allof1 {}

export interface Components1C6VjoySchemasAppwithteampermissionsresponseAllof0
  extends Components1QyxhbgSchemasAppwithteampermissionsresponseAllof0,
    Components1Lu2Z3SchemasAppwithteampermissionsresponseAllof0Allof1 {}

export interface OrgDistributionGroupDetailsResponseAppsItem
  extends Components81FkqhSchemasOrgdistributiongroupdetailsresponsePropertiesAppsItemsAllof0,
    ComponentsL6FpkwSchemasOrgdistributiongroupdetailsresponsePropertiesAppsItemsAllof1 {}

export interface InvitationDetailResponseApp
  extends Components1Jkno23SchemasInvitationdetailresponsePropertiesAppAllof0,
    Components1SdfznqSchemasInvitationdetailresponsePropertiesAppAllof1 {}

export interface GdprInvitationDetailResponseApp
  extends ComponentsJ73B5WSchemasGdprinvitationdetailresponsePropertiesAppAllof0,
    Components116Ns0HSchemasGdprinvitationdetailresponsePropertiesAppAllof1 {}

export interface ComponentsR6Bc9OSchemasOrganizationresponsemanagementAllof0
  extends ComponentsG3G8Y3SchemasOrganizationresponsemanagementAllof0,
    Components1Rgq5DkSchemasOrganizationresponsemanagementAllof0Allof1 {}

export interface ComponentsAvwdpgSchemasUserprofileresponsemanagementAllof0
  extends Components1AlcexuSchemasUserprofileresponsemanagementAllof0,
    Components42S30FSchemasUserprofileresponsemanagementAllof0Allof1 {}

/** Apple connection secrets */
export interface Components3Sb7Y4SchemasApplecredentialsmultifactorsecretrequestAllof0
  extends Components8Iu7RuSchemasApplecredentialsmultifactorsecretrequestAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "apple" | "credentials";
}

/** Apple connection secrets */
export interface Components5Dyv8CSchemasApplecredentialssecretrequestAllof0
  extends Components5A5L2ESchemasApplecredentialssecretrequestAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "apple" | "credentials";
}

/** Apple connection secrets */
export interface ComponentsKnowtpSchemasApplecertificatesecretrequestAllof0
  extends Components13S9A4RSchemasApplecertificatesecretrequestAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "apple" | "certificate";
}

/** private Apple connection secrets response */
export interface ComponentsEay2HoSchemasPrivateapplecredentialssecretresponseAllof0
  extends ComponentsS0Rbt7SchemasPrivateapplecredentialssecretresponseAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "apple" | "certificate";
}

/** private Apple connection secrets response */
export interface ComponentsZqm0VqSchemasPrivateapplecertificatesecretresponseAllof0
  extends ComponentsHw7AncSchemasPrivateapplecertificatesecretresponseAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "apple" | "certificate";
}

/** Apple connection secrets */
export interface AppleConnectionSecretResponse
  extends Components1Yflo3CSchemasAppleconnectionsecretresponseAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "apple";
  /** apple secret details */
  data: AppleConnectionSecretResponseData;
}

/** Apple connection secrets */
export interface Components1BxvcioSchemasApplecredentialnonsecretdetailsresponseAllof0
  extends Components8D2JkjSchemasApplecredentialnonsecretdetailsresponseAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "apple" | "credentials";
}

/** Apple connection secrets */
export interface Components18Y2Ef6SchemasApplecertificatenonsecretdetailsresponseAllof0
  extends ComponentsUk3N19SchemasApplecertificatenonsecretdetailsresponseAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "apple" | "certificate";
}

/** Apple connection secrets */
export interface AppleCertificateSecretDetailsResponse
  extends Components1Hfba82SchemasApplecertificatesecretdetailsresponseAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "apple";
  /** apple certificate secret details. */
  data: AppleCertificateSecretDetailsResponseData;
}

/** Jira connection secrets */
export interface JiraConnectionSecretRequest
  extends Components1VirfwpSchemasJiraconnectionsecretrequestAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "jira";
  /** jira secret details */
  data: JiraConnectionSecretRequestData;
}

/** Jira connection secrets */
export interface JiraConnectionSecretResponse
  extends Components1TsjhacSchemasJiraconnectionsecretresponseAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "jira";
  /** jira secret details */
  data: JiraConnectionSecretResponseData;
}

/** private Jira connection secrets response */
export interface PrivateJiraConnectionSecretResponse
  extends Components1Rn2982SchemasPrivatejiraconnectionsecretresponseAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "jira";
  /** jira secret details */
  data: PrivateJiraConnectionSecretResponseData;
}

/** Google Play connection secrets this should be the JSON file data which is provided by google play */
export interface GooglePlayConnectionSecretRequest
  extends ComponentsDtnm3YSchemasGoogleplayconnectionsecretrequestAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "googleplay";
  /** google secret details */
  data: Record<string, unknown>;
}

/** Google Play connection secrets */
export interface GooglePlayConnectionSecretResponse
  extends Components1T4OuyrSchemasGoogleplayconnectionsecretresponseAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "googleplay";
  /** google play secret details */
  data: Record<string, unknown>;
}

/** private google connection secrets response */
export interface PrivateGooglePlayConnectionSecretResponse
  extends Components8R88R5SchemasPrivategoogleplayconnectionsecretresponseAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "googleplay";
  /** google secret details */
  data: Record<string, unknown>;
}

/** Google Play non-secret data */
export interface Components1Qvpk8VSchemasGoogleplaycredentialnonsecretdetailsresponseAllof0
  extends ComponentsH0D4WySchemasGoogleplaycredentialnonsecretdetailsresponseAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "googleplay" | "credentials";
}

/** Google Play non-secret data */
export interface ComponentsBrcgsgSchemasJiracredentialnonsecretdetailsresponseAllof0
  extends ComponentsOj73MvSchemasJiracredentialnonsecretdetailsresponseAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "googleplay" | "credentials";
}

export interface CommitDetailsListItem
  extends ComponentsAs4RyuSchemasCommitdetailslistItemsAllof0,
    Components1Ivp89ASchemasCommitdetailslistItemsAllof1 {}

export interface Components1Wuan9LSchemasRepoconfigAllof0
  extends ComponentsTfhuzwSchemasRepoconfigAllof0 {
  /** The GitHub App Installation id. Required for repositories connected from GitHub App */
  installationId?: string;
}

export interface RepoConfigPostRequest
  extends Components1Lrnp2USchemasRepoconfigpostrequestAllof0 {
  /** The GitHub App Installation id. Required for repositories connected from GitHub App */
  installationId?: string;
}

export interface Components1Uijx7XSchemasRepoconfigsItemsAllof0
  extends ComponentsTqa8P8SchemasRepoconfigsItemsAllof0 {
  /** The GitHub App Installation id. Required for repositories connected from GitHub App */
  installationId?: string;
}

export interface TesterAppWithReleaseResponseRelease
  extends Components14MqnwvSchemasTesterappwithreleaseresponsePropertiesReleaseAllof0,
    ComponentsIemtnqSchemasTesterappwithreleaseresponsePropertiesReleaseAllof1 {}

export interface BasicReleaseDetailsResponseDistributionGroupsItem
  extends Components13SebpjSchemasBasicreleasedetailsresponsePropertiesDistributionGroupsItemsAllof0,
    Components7B8Q6ZSchemasBasicreleasedetailsresponsePropertiesDistributionGroupsItemsAllof1 {}

export interface BasicReleaseDetailsResponseDistributionStoresItem
  extends ComponentsYvfuboSchemasBasicreleasedetailsresponsePropertiesDistributionStoresItemsAllof0,
    Components1B3DilbSchemasBasicreleasedetailsresponsePropertiesDistributionStoresItemsAllof1 {}

export interface Components80KumpSchemasBasicreleasedetailsresponsePropertiesDestinationsItemsAllof0
  extends Components1Leu8U7SchemasBasicreleasedetailsresponsePropertiesDestinationsItemsAllof0,
    ComponentsV2IcyqSchemasBasicreleasedetailsresponsePropertiesDestinationsItemsAllof0Allof1 {}

export interface BasicReleaseDetailsResponseDestinationsItem
  extends Components80KumpSchemasBasicreleasedetailsresponsePropertiesDestinationsItemsAllof0,
    ComponentsNe0Qx0SchemasBasicreleasedetailsresponsePropertiesDestinationsItemsAllof1,
    ComponentsM4TepnSchemasBasicreleasedetailsresponsePropertiesDestinationsItemsAllof2 {}

export interface ComponentsX16LppSchemasReleasedetailsresponsePropertiesDestinationsItemsAllof0
  extends Components1Gq9Sx7SchemasReleasedetailsresponsePropertiesDestinationsItemsAllof0,
    ComponentsQgfcfcSchemasReleasedetailsresponsePropertiesDestinationsItemsAllof0Allof1 {}

export interface ReleaseDetailsResponseDestinationsItem
  extends ComponentsX16LppSchemasReleasedetailsresponsePropertiesDestinationsItemsAllof0,
    Components8Xk84RSchemasReleasedetailsresponsePropertiesDestinationsItemsAllof1,
    ComponentsNj5C4HSchemasReleasedetailsresponsePropertiesDestinationsItemsAllof2 {}

export interface Components1Elftw1SchemasDestinationAllof0
  extends Components5Id7CnSchemasDestinationAllof0,
    ComponentsE0Rs9SSchemasDestinationAllof0Allof1 {}

export interface LogWithProperties
  extends Components1Eosn49SchemasLogwithpropertiesAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "LogWithProperties";
  /**
   * Additional key/value pair parameters.
   *
   */
  properties?: { [propertyName: string]: string };
}

/** Required explicit begin session log (a marker event for analytics service). */
export interface StartSessionLog
  extends Components264NqgSchemasStartsessionlogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "start_session";
  /**
   * Session ID.
   *
   */
  sessionId: string;
}

/** Log is used to update distribution group identifier for session (a marker event for analytics service). */
export interface DistributionStartSessionLog
  extends ComponentsO0SzfoSchemasDistributionstartsessionlogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "distribution_start_session";
  /**
   * Distribution Group ID.
   *
   */
  distributionGroupId: string;
}

/** Required explicit begin session log (a marker event for analytics service). */
export interface HandledErrorLog
  extends Components84YphlSchemasHandlederrorlogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "handled_error";
  /**
   * Error ID.
   *
   */
  errorId: string;
}

/** Required explicit begin session log (a marker event for analytics service). */
export interface UnhandledErrorLog
  extends Components1Vpcf5FSchemasUnhandlederrorlogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "unhandled_error";
  /**
   * Error ID.
   *
   */
  errorId: string;
}

/** Describe a AppCenter.Start API call from the SDK. */
export interface StartServiceLog
  extends Components1Rh9N66SchemasStartservicelogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "start_service";
  /** The list of services of the AppCenter Start API call. */
  services?: string[];
}

/** Set or remove custom properties. */
export interface CustomPropertyLog
  extends ComponentsCzhkplSchemasCustompropertylogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "custom_properties";
  /** Custom property changes. */
  properties?: CustomPropertyLogPropertiesItem[];
}

/** String property. */
export interface StringProperty
  extends Components1HtupicSchemasStringpropertyAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "string";
  /** String property value. */
  value: string;
}

/** Number property. */
export interface NumberProperty
  extends Components3Is1CjSchemasNumberpropertyAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "number";
  /** Number property value. */
  value: number;
}

/** Boolean property. */
export interface BooleanProperty
  extends ComponentsIduba0SchemasBooleanpropertyAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "boolean";
  /** Boolean property value. */
  value: boolean;
}

/** Date and time property. */
export interface DateTimeProperty
  extends ComponentsLyvfq5SchemasDatetimepropertyAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "date_time";
  /** Date time property value. */
  value: Date;
}

export interface Components4Kro3MSchemasPagelogAllof0
  extends Components1Wno2Z2SchemasPagelogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "components·4kro3m·schemas·pagelog·allof·0" | "page";
  /**
   * Additional key/value pair parameters.
   *
   */
  properties?: { [propertyName: string]: string };
}

export interface Components498ZbbSchemasEventlogAllof0
  extends ComponentsMa5HoxSchemasEventlogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "components·498zbb·schemas·eventlog·allof·0" | "event";
  /**
   * Additional key/value pair parameters.
   *
   */
  properties?: { [propertyName: string]: string };
}

/** Push installation Information. */
export interface PushInstallationLog
  extends ComponentsNch8AzSchemasPushinstallationlogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "push_installation";
  /**
   * The PNS handle for this installation.
   *
   */
  pushToken: string;
}

/** Error log. */
export interface ErrorLog extends Components1Aigpj3SchemasErrorlogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "error";
  /**
   * Session ID.
   *
   */
  sessionId: string;
  /** Error identifier. */
  id: string;
  /**
   * Corresponds to the number of milliseconds elapsed between the time the error occurred and the app was launched.
   *
   */
  appLaunchToffset?: number;
}

/** Audience with details. */
export interface Audience extends Components46VdxoSchemasAudienceAllof0 {
  enabled?: boolean;
  /** Custom properties used in the definition. */
  customProperties?: { [propertyName: string]: DevicePropertyType };
  /** Estimated total audience size. */
  estimatedTotalCount?: number;
  /** Date the audience was last refreshed. */
  timestamp?: Date;
}

export interface Components1QhhniqSchemasNotifyreleasescontainerPropertiesReleasesItemsAllof0
  extends Components1Ynaqb8SchemasNotifyreleasescontainerPropertiesReleasesItemsAllof0 {
  /**
   * Distribution group Id.
   *
   */
  distributionGroup?: string;
}

export interface GetReleasesContainerReleasesItem
  extends ComponentsOqh4QzSchemasGetreleasescontainerPropertiesReleasesItemsAllof0 {
  /**
   * Distribution group Id.
   *
   */
  distributionGroup?: string;
}

export interface ReleaseWithDistributionGroup
  extends Components1Udh21GSchemasReleasewithdistributiongroupAllof0 {
  /**
   * Distribution group Id.
   *
   */
  distributionGroup?: string;
}

export interface ComponentsHgeo9DSchemasReleasewithdistributiongroupanduseridAllof0
  extends Components1Go150KSchemasReleasewithdistributiongroupanduseridAllof0 {
  /**
   * Distribution group Id.
   *
   */
  distributionGroup?: string;
}

export interface LogFlowLogWithProperties
  extends ComponentsAdvxd9SchemasLogflowlogwithpropertiesAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "LogFlowLogWithProperties";
  /**
   * Additional key/value pair parameters.
   *
   */
  properties?: { [propertyName: string]: string };
}

/** Required explicit begin session log (a marker event for analytics service). */
export interface LogFlowStartSessionLog
  extends Components1F0KdpnSchemasLogflowstartsessionlogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "start_session";
  /**
   * Session ID.
   *
   */
  sessionId: string;
}

/** Describe a AppCenter.Start API call from the SDK. */
export interface LogFlowStartServiceLog
  extends Components11CfsbmSchemasLogflowstartservicelogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "start_service";
  /** The list of services of the AppCenter Start API call. */
  services?: string[];
}

/** Set or remove custom properties. */
export interface LogFlowCustomPropertyLog
  extends ComponentsXnezrhSchemasLogflowcustompropertylogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "custom_properties";
  /** Custom property changes. */
  properties?: LogFlowCustomPropertyLogPropertiesItem[];
}

/** String property. */
export interface LogFlowStringProperty
  extends Components1G242RdSchemasLogflowstringpropertyAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "string";
  /** String property value. */
  value: string;
}

/** Number property. */
export interface LogFlowNumberProperty
  extends ComponentsTkf1YnSchemasLogflownumberpropertyAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "number";
  /** Number property value. */
  value: number;
}

/** Boolean property. */
export interface LogFlowBooleanProperty
  extends ComponentsCwosetSchemasLogflowbooleanpropertyAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "boolean";
  /** Boolean property value. */
  value: boolean;
}

/** Date and time property. */
export interface LogFlowDateTimeProperty
  extends Components127VkznSchemasLogflowdatetimepropertyAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "date_time";
  /** Date time property value. */
  value: Date;
}

export interface Components11Mk7TbSchemasLogflowpagelogAllof0
  extends Components10Oj24WSchemasLogflowpagelogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "components·11mk7tb·schemas·logflowpagelog·allof·0" | "page";
  /**
   * Additional key/value pair parameters.
   *
   */
  properties?: { [propertyName: string]: string };
}

export interface ComponentsBzcad5SchemasLogfloweventlogAllof0
  extends Components1Ctri9VSchemasLogfloweventlogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "components·bzcad5·schemas·logfloweventlog·allof·0" | "event";
  /**
   * Additional key/value pair parameters.
   *
   */
  properties?: { [propertyName: string]: string };
}

/** Push installation Information. */
export interface LogFlowPushInstallationLog
  extends Components1Yqphd0SchemasLogflowpushinstallationlogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "push_installation";
  /**
   * The PNS handle for this installation.
   *
   */
  pushToken: string;
}

/** Error log. */
export interface LogFlowErrorLog
  extends ComponentsPcles3SchemasLogflowerrorlogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "error";
  /**
   * Session ID.
   *
   */
  sessionId: string;
  /** Error identifier. */
  id: string;
  /**
   * Corresponds to the number of milliseconds elapsed between the time the error occurred and the app was launched.
   *
   */
  appLaunchToffset?: number;
}

export interface Components65B2B3SchemasErrorgroupsPropertiesErrorgroupsItemsAllof0
  extends Components18G140XSchemasErrorgroupsPropertiesErrorgroupsItemsAllof0 {
  errorGroupId: string;
  appVersion: string;
  appBuild?: string;
  count: number;
  deviceCount: number;
  firstOccurrence: Date;
  lastOccurrence: Date;
  exceptionType?: string;
  exceptionMessage?: string;
  exceptionClassName?: string;
  exceptionClassMethod?: boolean;
  exceptionMethod?: string;
  exceptionAppCode?: boolean;
  exceptionFile?: string;
  exceptionLine?: string;
  codeRaw?: string;
  reasonFrames?: ErrorGroupsAllOfPropertiesItemsItem[];
  hidden?: boolean;
}

export interface Components1Gnwyz6SchemasErrorgroupssearchresultPropertiesErrorgroupsItemsAllof0
  extends Components1Bte8TvSchemasErrorgroupssearchresultPropertiesErrorgroupsItemsAllof0 {
  errorGroupId: string;
  appVersion: string;
  appBuild?: string;
  count: number;
  deviceCount: number;
  firstOccurrence: Date;
  lastOccurrence: Date;
  exceptionType?: string;
  exceptionMessage?: string;
  exceptionClassName?: string;
  exceptionClassMethod?: boolean;
  exceptionMethod?: string;
  exceptionAppCode?: boolean;
  exceptionFile?: string;
  exceptionLine?: string;
  codeRaw?: string;
  reasonFrames?: ErrorGroupsSearchResultErrorGroupsAllOfPropertiesItemsItem[];
  hidden?: boolean;
}

export interface Components1Qil18RSchemasErrorgrouplistitemAllof0
  extends Components12LbtiSchemasErrorgrouplistitemAllof0 {
  errorGroupId: string;
  appVersion: string;
  appBuild?: string;
  count: number;
  deviceCount: number;
  firstOccurrence: Date;
  lastOccurrence: Date;
  exceptionType?: string;
  exceptionMessage?: string;
  exceptionClassName?: string;
  exceptionClassMethod?: boolean;
  exceptionMethod?: string;
  exceptionAppCode?: boolean;
  exceptionFile?: string;
  exceptionLine?: string;
  codeRaw?: string;
  reasonFrames?: ErrorGroupListItem0ReasonFramesItem[];
  hidden?: boolean;
}

export interface ErrorGroup extends ComponentsHbqu9KSchemasErrorgroupAllof0 {
  errorGroupId: string;
  appVersion: string;
  appBuild?: string;
  count: number;
  deviceCount: number;
  firstOccurrence: Date;
  lastOccurrence: Date;
  exceptionType?: string;
  exceptionMessage?: string;
  exceptionClassName?: string;
  exceptionClassMethod?: boolean;
  exceptionMethod?: string;
  exceptionAppCode?: boolean;
  exceptionFile?: string;
  exceptionLine?: string;
  codeRaw?: string;
  reasonFrames?: ErrorGroupReasonFramesItem[];
  hidden?: boolean;
}

export interface HandledErrorDetails
  extends Components16C15OnSchemasHandlederrordetailsAllof0 {
  name?: string;
  reasonFrames?: HandledErrorDetailsReasonFramesItem[];
  /**
   * Timestamp when the app was launched, example: '2017-03-13T18:05:42Z'.
   *
   */
  appLaunchTimestamp?: Date;
  /**
   * Carrier name (for mobile devices).
   *
   */
  carrierName?: string;
  /**
   * Flag indicating if device is jailbroken
   *
   */
  jailbreak?: boolean;
  /** Dictionary of <string> */
  properties?: { [propertyName: string]: string };
}

export interface LogWithPropertiesDiagnostics
  extends Components45LjntSchemasLogwithpropertiesDiagnosticsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "LogWithProperties_Diagnostics";
  /**
   * Additional key/value pair parameters.
   *
   */
  properties?: { [propertyName: string]: string };
}

/** Required explicit begin session log (a marker event for analytics service). */
export interface StartSessionLogDiagnostics
  extends ComponentsZ650E9SchemasStartsessionlogDiagnosticsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "start_session";
  /**
   * Session ID.
   *
   */
  sessionId: string;
}

/** Required explicit begin session log (a marker event for analytics service). */
export interface HanledErrorLogDiagnostics
  extends ComponentsNa1EysSchemasHanlederrorlogDiagnosticsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "handled_error";
  /**
   * Error ID.
   *
   */
  errorId: string;
}

/** Describe a AppCenter.Start API call from the SDK. */
export interface StartServiceLogDiagnostics
  extends ComponentsL1Kfc1SchemasStartservicelogDiagnosticsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "start_service";
  /** The list of services of the AppCenter Start API call. */
  services?: string[];
}

/** Set or remove custom properties. */
export interface CustomPropertyLogDiagnostics
  extends Components1XuemrlSchemasCustompropertylogDiagnosticsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "custom_properties";
  /** Custom property changes. */
  properties?: CustomPropertyLogDiagnosticsPropertiesItem[];
}

/** String property. */
export interface StringPropertyDiagnostics
  extends Components1MplcxdSchemasStringpropertyDiagnosticsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "string";
  /** String property value. */
  value: string;
}

/** Number property. */
export interface NumberPropertyDiagnostics
  extends Components15Tz3ErSchemasNumberpropertyDiagnosticsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "number";
  /** Number property value. */
  value: number;
}

/** Boolean property. */
export interface BooleanPropertyDiagnostics
  extends Components1H9UedtSchemasBooleanpropertyDiagnosticsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "boolean";
  /** Boolean property value. */
  value: boolean;
}

/** Date and time property. */
export interface DateTimePropertyDiagnostics
  extends ComponentsYx2AaeSchemasDatetimepropertyDiagnosticsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "date_time";
  /** Date time property value. */
  value: Date;
}

export interface Components1121EsfSchemasPagelogDiagnosticsAllof0
  extends ComponentsEffwicSchemasPagelogDiagnosticsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "components·1121esf·schemas·pagelog_diagnostics·allof·0" | "page";
  /**
   * Additional key/value pair parameters.
   *
   */
  properties?: { [propertyName: string]: string };
}

export interface ComponentsWa2CwfSchemasEventlogDiagnosticsAllof0
  extends Components1Vmj2OdSchemasEventlogDiagnosticsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "components·wa2cwf·schemas·eventlog_diagnostics·allof·0" | "event";
  /**
   * Additional key/value pair parameters.
   *
   */
  properties?: { [propertyName: string]: string };
}

/** Push installation Information. */
export interface PushInstallationLogDiagnostics
  extends Components1Pvlx64SchemasPushinstallationlogDiagnosticsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "push_installation";
  /**
   * The PNS handle for this installation.
   *
   */
  pushToken: string;
}

/** Error log. */
export interface ErrorLogDiagnostics
  extends Components1Nf3DuuSchemasErrorlogDiagnosticsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "error";
  /**
   * Session ID.
   *
   */
  sessionId: string;
  /** Error identifier. */
  id: string;
  /**
   * Corresponds to the number of milliseconds elapsed between the time the error occurred and the app was launched.
   *
   */
  appLaunchToffset?: number;
}

/** Configuration for export to Blob Storage with blob format */
export interface ExportBlobConfiguration
  extends Components130AlsfSchemasExportblobconfigurationAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "export_blob_configuration";
  /** The path to the blob when enum set to 'WithoutAppId' is 'year/month/day/hour/minute' and when set to 'WithAppId' is 'appId/year/month/day/hour/minute' */
  blobPathFormatKind?: BlobPathFormatKind;
}

/** Configuration for export to Blob Storage with blob format */
export interface Components16J40DuSchemasExportconfigurationblobstorageconnectionstringAllof0
  extends ComponentsQ5DjesSchemasExportconfigurationblobstorageconnectionstringAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "export_blob_configuration" | "blob_storage_connection_string";
  /** The path to the blob when enum set to 'WithoutAppId' is 'year/month/day/hour/minute' and when set to 'WithAppId' is 'appId/year/month/day/hour/minute' */
  blobPathFormatKind?: BlobPathFormatKind;
}

/** Configuration for export to Application Insights resource with customer provided intrumentation key */
export interface ExportConfigurationAppInsightsKey
  extends Components125ZssSchemasExportconfigurationappinsightskeyAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "application_insights_instrumentation_key";
  /** Instrumentation key for Application Insights resource */
  instrumentationKey: string;
}

/** Configuration for export to Blob Storage with blob format */
export interface Components14Lttg8SchemasExportconfigurationblobstoragelinkedsubscriptionAllof0
  extends Components4JcwkhSchemasExportconfigurationblobstoragelinkedsubscriptionAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "export_blob_configuration" | "blob_storage_linked_subscription";
  /** The path to the blob when enum set to 'WithoutAppId' is 'year/month/day/hour/minute' and when set to 'WithAppId' is 'appId/year/month/day/hour/minute' */
  blobPathFormatKind?: BlobPathFormatKind;
}

/** Configuration for export to Application Insights resource with customer linked subscription. */
export interface ExportConfigurationAppInsightsLinkedSubscription
  extends Components1Jvk04KSchemasExportconfigurationappinsightslinkedsubscriptionAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "application_insights_linked_subscription";
  /** Id of customer subscription linked in App Center */
  subscriptionId: string;
}

/** Notification statistics */
export interface NotificationDetailsResult
  extends ComponentsZqakt2SchemasNotificationdetailsresultAllof0 {
  /** Notification definition object */
  notificationContent: NotificationDetailsResultNotificationContent;
  /** Failture outcome counts */
  failureOutcomes?: NotificationDetailsResultFailureOutcomesItem[];
}

/** Notification per User IDs */
export interface NotificationTargetUserIds
  extends Components1KhyfnaSchemasNotificationtargetuseridsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "user_ids_target";
  /** List of user IDs to target */
  userIds: string[];
}

/** Notification per Account IDs */
export interface NotificationTargetAccountIds
  extends Components19Nr381SchemasNotificationtargetaccountidsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "account_ids_target";
  /** List of account IDs to target */
  accountIds: string[];
}

/** Notification target audiences. */
export interface NotificationTargetAudiences
  extends Components17Ef5OgSchemasNotificationtargetaudiencesAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "audiences_target";
  /** List of target audiences. */
  audiences: string[];
}

/** Notification target devices. If null, all devices will be targeted(broadcast). */
export interface NotificationTargetDevices
  extends Components2Yio13SchemasNotificationtargetdevicesAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "devices_target";
  /** List of target devices. */
  devices: string[];
}

/** Apple notification certificate configuration. */
export interface NotificationConfigApple
  extends Components1Ozxbv2SchemasNotificationconfigappleAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "apns_config";
  /** Type of endpoint the certificate or token are associated with */
  endpointType: AppleNotificationEndpointType;
  /** Base64 encoded certificate string. */
  certEncoded: string;
  /** Certificate file name */
  certFilename: string;
  /** Certificate password */
  certKey: string;
}

/** Apple notification auth token configuration. The 'type' property must be set to 'apns_token_config'. */
export interface NotificationConfigAppleToken
  extends Components1PpfareSchemasNotificationconfigappletokenAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "apns_token_config";
  /** A 10-character key identifier (kid). */
  keyId: string;
  /** Application ID. */
  id: string;
  /** Application prefix. */
  prefix: string;
  /** Provider Authentication Token. */
  token: string;
  /** Type of endpoint the certificate or token are associated with */
  endpointType: AppleNotificationEndpointType;
}

/** Google notification configuration. The 'type' property must be set to 'gcm_config' */
export interface NotificationConfigGoogle
  extends ComponentsQ2Qee2SchemasNotificationconfiggoogleAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "gcm_config";
  /** GCM API key. */
  googleApiKey: string;
}

/** WNS notification configuration. The 'type' property must be set to 'wns_config' */
export interface NotificationConfigWindows
  extends ComponentsA3A5NfSchemasNotificationconfigwindowsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "wns_config";
  /** Package security identifier (SID). */
  packageSid: string;
  /** Secret key. */
  secretKey: string;
}

/** Apple notification certificate configuration result. */
export interface NotificationConfigAppleResult
  extends ComponentsF4F1P6SchemasNotificationconfigappleresultAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "apns_config";
  /** Type of endpoint the certificate or token are associated with */
  endpointType: AppleNotificationEndpointType;
  /** Certificate expiration date. */
  certExpiration: Date;
  /** Certificate file name */
  certFilename: string;
}

/** Apple notification auth token configuration result. */
export interface NotificationConfigAppleTokenResult
  extends Components1Cl3FgbSchemasNotificationconfigappletokenresultAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "apns_token_config";
  /** A 10-character key identifier (kid). */
  keyId: string;
  /** Application ID. */
  id: string;
  /** Application Prefix. */
  prefix: string;
  /** Type of endpoint the certificate or token are associated with */
  endpointType: AppleNotificationEndpointType;
}

/** Google notification configuration result. */
export interface NotificationConfigGoogleResult
  extends Components1L6Ua1RSchemasNotificationconfiggoogleresultAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "gcm_config";
  /** GCM API key. */
  googleApiKey: string;
}

/** WNS notification configuration result. */
export interface NotificationConfigWindowsResult
  extends Components1Rkqr84SchemasNotificationconfigwindowsresultAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "wns_config";
  /** Package security identifier (SID). */
  packageSid: string;
  /** windows push configuration secret key. */
  secretKey?: string;
}

export interface DeploymentLatestRelease
  extends Components1T8CjynSchemasDeploymentPropertiesLatestReleaseAllof0,
    Components6Ap7FdSchemasDeploymentPropertiesLatestReleaseAllof1 {}

export interface DeploymentInternal
  extends ComponentsLtrglSchemasDeploymentinternalAllof0 {
  id?: string;
}

export interface DeploymentInternal0LatestRelease
  extends ComponentsLvsishSchemasDeploymentinternalAllof0PropertiesLatestReleaseAllof0,
    ComponentsP3Dh42SchemasDeploymentinternalAllof0PropertiesLatestReleaseAllof1 {}

export interface UpdateCheckResponseUpdateInfo
  extends ComponentsSa59JcSchemasUpdatecheckresponsePropertiesUpdateInfoAllof0,
    ComponentsWyjzn3SchemasUpdatecheckresponsePropertiesUpdateInfoAllof1 {}

export interface LegacyUpdateCheckResponseUpdateInfo
  extends ComponentsIr4N92SchemasLegacyupdatecheckresponsePropertiesUpdateinfoAllof0,
    ComponentsPllys8SchemasLegacyupdatecheckresponsePropertiesUpdateinfoAllof1 {}

/** Alerting Default Email Settings of the user */
export interface Components6M09RqSchemasAlertuserappemailsettingsresultAllof0
  extends ComponentsDzu91ISchemasAlertuserappemailsettingsresultAllof0,
    Components1Cg98M4SchemasAlertuserappemailsettingsresultAllof0Allof1 {}

/** VSTS bugtracker specific settings */
export interface AlertingVstsBugtrackerSettings
  extends ComponentsU99EdzSchemasAlertingvstsbugtrackersettingsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "vsts";
  vstsProjectId: string;
  vstsProjectUri: string;
  vstsProjectName?: string;
  vstsAccountName?: string;
  vstsAreaPath?: string;
  /** Any object */
  vstsDefaultPayload?: Record<string, unknown>;
}

/** Github bugtracker specific settings */
export interface AlertingGithubBugtrackerSettings
  extends ComponentsG0MwtxSchemasAlertinggithubbugtrackersettingsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "github";
  githubRepoId: number;
  githubRepoName: string;
  githubLabel?: string;
}

/** Jira bugtracker specific settings */
export interface AlertingJiraBugtrackerSettings
  extends ComponentsL2Xf6RSchemasAlertingjirabugtrackersettingsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "jira";
  jiraProjectId: number;
  jiraProjectName: string;
}

export interface PathsIxrc01V01AppsOwnerNameAppNameRepoConfigGetResponses200ContentApplicationJsonSchemaItems
  extends Paths131DtitV01AppsOwnerNameAppNameRepoConfigGetResponses200ContentApplicationJsonSchemaItemsAllof0 {
  /** Repository configuration identifier */
  id: string;
  /** Type of repository */
  type: string;
  /** State of the configuration */
  state: Enum235;
  /** Email of the user who linked the repository */
  userEmail?: string;
}

export interface PathsDapaw8V01AppsOwnerNameAppNameErrorsErrorgroupsSearchGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItems
  extends Paths1HondamV01AppsOwnerNameAppNameErrorsErrorgroupsSearchGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItemsAllof0 {}

export interface Paths1X029LnV01AppsOwnerNameAppNameErrorsErrorgroupsGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItems
  extends Paths73P5FlV01AppsOwnerNameAppNameErrorsErrorgroupsGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItemsAllof0 {}

export interface AppResponseInternal
  extends Components10Yzej3SchemasAppresponseinternalAllof0 {
  /** The feature flags that are enabled for this app */
  featureFlags?: string[];
  /** The repositories associated with this app */
  repositories?: AppResponseInternalRepositoriesItem[];
  /** the permissions for the specified app user */
  userPermissions?: AppResponseInternalUserPermissions;
  /** The cutover date of this app */
  cutoverFromHockeyappAt?: string;
}

export interface AppWithTeamPermissionsResponse
  extends Components1C6VjoySchemasAppwithteampermissionsresponseAllof0 {
  /** The permissions the team has for the app */
  teamPermissions?: AppWithTeamPermissionsResponseTeamPermissionsItem[];
}

export interface OrganizationResponseManagement
  extends ComponentsR6Bc9OSchemasOrganizationresponsemanagementAllof0 {
  /** The organization email, if the app was synced from HockeyApp */
  email?: string;
  /** The date when the organization was created */
  createdAt?: string;
}

export interface UserProfileResponseManagement
  extends ComponentsAvwdpgSchemasUserprofileresponsemanagementAllof0 {
  /** The date when the app was last updated */
  updatedAt?: string;
  /** A boolean flag that indicates if the user is already verified */
  verified?: boolean;
  /** The identity providers associated with the user's account */
  identityProviders?: UserProfileResponseManagementIdentityProvidersItem[];
}

/** Apple connection secrets */
export interface AppleCredentialsMultifactorSecretRequest
  extends Components3Sb7Y4SchemasApplecredentialsmultifactorsecretrequestAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "credentials";
  /** apple secret details */
  data: AppleCredentialsMultifactorSecretRequestData;
}

/** Apple connection secrets */
export interface AppleCredentialsSecretRequest
  extends Components5Dyv8CSchemasApplecredentialssecretrequestAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "credentials";
  /** apple secret details */
  data: AppleCredentialsSecretRequestData;
}

/** Apple certificate secrets */
export interface AppleCertificateSecretRequest
  extends ComponentsKnowtpSchemasApplecertificatesecretrequestAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "certificate";
  /** apple secret details */
  data: AppleCertificateSecretRequestData;
}

/** private Apple connection secrets response */
export interface PrivateAppleCredentialsSecretResponse
  extends ComponentsEay2HoSchemasPrivateapplecredentialssecretresponseAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "certificate";
  /** apple secret details */
  data: PrivateAppleCredentialsSecretResponseData;
}

/** private Apple connection secrets response */
export interface PrivateAppleCertificateSecretResponse
  extends ComponentsZqm0VqSchemasPrivateapplecertificatesecretresponseAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "certificate";
  /** apple secret details */
  data: PrivateAppleCertificateSecretResponseData;
}

/** Apple credentials non-secret details */
export interface AppleCredentialNonSecretDetailsResponse
  extends Components1BxvcioSchemasApplecredentialnonsecretdetailsresponseAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "credentials";
  /** Apple credentials non-secret data */
  data: AppleCredentialNonSecretDetailsResponseData;
}

/** Apple certificate non-secret details */
export interface AppleCertificateNonSecretDetailsResponse
  extends Components18Y2Ef6SchemasApplecertificatenonsecretdetailsresponseAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "certificate";
  /** apple certificate non-secret details */
  data: AppleCertificateNonSecretDetailsResponseData;
}

/** Google Play credentials non-secret details */
export interface GooglePlayCredentialNonSecretDetailsResponse
  extends Components1Qvpk8VSchemasGoogleplaycredentialnonsecretdetailsresponseAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "credentials";
  /** Google Play credentials non-secret details */
  data: Record<string, unknown>;
}

/** Jira credentials non-secret details */
export interface JiraCredentialNonSecretDetailsResponse
  extends ComponentsBrcgsgSchemasJiracredentialnonsecretdetailsresponseAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  serviceType: "credentials";
  /** Jira credentials non-secret details */
  data: JiraCredentialNonSecretDetailsResponseData;
}

export interface RepoConfig extends Components1Wuan9LSchemasRepoconfigAllof0 {
  /** Repository configuration identifier */
  id: string;
  /** Type of repository */
  type: string;
  /** State of the configuration */
  state: RepoConfigState;
  /** Email of the user who linked the repository */
  userEmail?: string;
}

export interface RepoConfigsItem
  extends Components1Uijx7XSchemasRepoconfigsItemsAllof0 {
  /** Repository configuration identifier */
  id: string;
  /** Type of repository */
  type: string;
  /** State of the configuration */
  state: RepoConfigsItemState;
  /** Email of the user who linked the repository */
  userEmail?: string;
}

/** A unique identifier for a destination. A destination can be identified by an ID (guid) or by a name. DestinationId encapsulates both options. A destination can be either a distribution group or a store. */
export interface Destination extends Components1Elftw1SchemasDestinationAllof0 {
  /** Destination can be either store or group. */
  destinationType?: DestinationType;
  /** Display name for the group or tester */
  displayName?: string;
}

/** Page view log (as in screens or activities). */
export interface PageLog extends Components4Kro3MSchemasPagelogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "page";
  /**
   * Session ID.
   *
   */
  sessionId: string;
  /**
   * Name of the page.
   *
   */
  name: string;
}

/** Event log. */
export interface EventLog extends Components498ZbbSchemasEventlogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "event";
  /**
   * Session ID.
   *
   */
  sessionId: string;
  /**
   * Unique identifier for this event.
   *
   */
  id: string;
  /**
   * Name of the event.
   *
   */
  name: string;
}

export interface NotifyReleasesContainerReleasesItem
  extends Components1QhhniqSchemasNotifyreleasescontainerPropertiesReleasesItemsAllof0 {
  /**
   * Unique user Id.  Will generate a new user Id if not provided.
   *
   */
  userId?: string;
}

export interface ReleaseWithDistributionGroupAndUserId
  extends ComponentsHgeo9DSchemasReleasewithdistributiongroupanduseridAllof0 {
  /**
   * Unique user Id.  Will generate a new user Id if not provided.
   *
   */
  userId?: string;
}

/** Page view log (as in screens or activities). */
export interface LogFlowPageLog
  extends Components11Mk7TbSchemasLogflowpagelogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "page";
  /**
   * Session ID.
   *
   */
  sessionId: string;
  /**
   * Name of the page.
   *
   */
  name: string;
}

/** Event log. */
export interface LogFlowEventLog
  extends ComponentsBzcad5SchemasLogfloweventlogAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "event";
  /**
   * Session ID.
   *
   */
  sessionId: string;
  /**
   * Unique identifier for this event.
   *
   */
  id: string;
  /**
   * Name of the event.
   *
   */
  name: string;
}

export interface ErrorGroupsItem
  extends Components65B2B3SchemasErrorgroupsPropertiesErrorgroupsItemsAllof0 {}

export interface ErrorGroupsSearchResultErrorGroupsItem
  extends Components1Gnwyz6SchemasErrorgroupssearchresultPropertiesErrorgroupsItemsAllof0 {}

export interface ErrorGroupListItem
  extends Components1Qil18RSchemasErrorgrouplistitemAllof0 {}

/** Page view log (as in screens or activities). */
export interface PageLogDiagnostics
  extends Components1121EsfSchemasPagelogDiagnosticsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "page";
  /**
   * Session ID.
   *
   */
  sessionId: string;
  /**
   * Name of the page.
   *
   */
  name: string;
}

/** Event log. */
export interface EventLogDiagnostics
  extends ComponentsWa2CwfSchemasEventlogDiagnosticsAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "event";
  /**
   * Session ID.
   *
   */
  sessionId: string;
  /**
   * Unique identifier for this event.
   *
   */
  id: string;
  /**
   * Name of the event.
   *
   */
  name: string;
}

/** Configuration for export to Blob Storage with customer provided connection string */
export interface ExportConfigurationBlobStorageConnectionString
  extends Components16J40DuSchemasExportconfigurationblobstorageconnectionstringAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "blob_storage_connection_string";
  /** Connection string for blob storage account */
  connectionString: string;
}

/** Configuration for export to Blob Storage with customer linked subscription. */
export interface ExportConfigurationBlobStorageLinkedSubscription
  extends Components14Lttg8SchemasExportconfigurationblobstoragelinkedsubscriptionAllof0 {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "blob_storage_linked_subscription";
  /** Id of customer subscription linked in App Center */
  subscriptionId: string;
}

/** Alerting Email Settings of the user for a particular app */
export interface AlertUserAppEmailSettingsResult
  extends Components6M09RqSchemasAlertuserappemailsettingsresultAllof0 {
  /** Application ID */
  appId?: string;
  /** A flag indicating if settings are enabled at user/global level */
  userEnabled: boolean;
}

/** Defines headers for DataSubjectRight_cancelExportRequest operation. */
export interface DataSubjectRightCancelExportRequestHeaders {
  /** Link to get details about the cancel export. */
  location?: string;
}

/** Defines headers for DataSubjectRight_exportRequest operation. */
export interface DataSubjectRightExportRequestHeaders {
  /** Link to get details about the export. */
  location?: string;
}

/** Defines headers for DataSubjectRight_cancelDeleteRequest operation. */
export interface DataSubjectRightCancelDeleteRequestHeaders {
  /** Link to get details about the cancel delete. */
  location?: string;
}

/** Defines headers for DataSubjectRight_deleteRequest operation. */
export interface DataSubjectRightDeleteRequestHeaders {
  /** Link to get details about the delete. */
  location?: string;
}

/** Defines headers for Test_uploadHash operation. */
export interface TestUploadHashHeaders {
  /** Byte range required to authenticate the request */
  xChallengeBytes?: string;
}

/** Defines headers for Test_startUploadingFile operation. */
export interface TestStartUploadingFileHeaders {
  /** Relative URL that points to the upload endpoint */
  location?: string;
}

/** Defines headers for Test_createTestRun operation. */
export interface TestCreateTestRunHeaders {
  /** Relative URL that points to the test run */
  location?: string;
}

/** Defines headers for Push_send operation. */
export interface PushSendHeaders {
  /** Link to get details about the notification. */
  location?: string;
}

/** Known values of {@link Post404ApplicationJsonProperties} that the service accepts. */
export enum KnownPost404ApplicationJsonProperties {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Post404ApplicationJsonProperties. \
 * {@link KnownPost404ApplicationJsonProperties} can be used interchangeably with Post404ApplicationJsonProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Post404ApplicationJsonProperties = string;

/** Known values of {@link GetResponses200ContentApplicationJsonSchemaAllOf1SettingsItemValue} that the service accepts. */
export enum KnownGetResponses200ContentApplicationJsonSchemaAllOf1SettingsItemValue {
  /** Disabled */
  Disabled = "Disabled",
  /** Individual */
  Individual = "Individual",
  /** Daily */
  Daily = "Daily",
  /** DailyAndIndividual */
  DailyAndIndividual = "DailyAndIndividual",
  /** Default */
  Default = "Default"
}

/**
 * Defines values for GetResponses200ContentApplicationJsonSchemaAllOf1SettingsItemValue. \
 * {@link KnownGetResponses200ContentApplicationJsonSchemaAllOf1SettingsItemValue} can be used interchangeably with GetResponses200ContentApplicationJsonSchemaAllOf1SettingsItemValue,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Individual** \
 * **Daily** \
 * **DailyAndIndividual** \
 * **Default**
 */
export type GetResponses200ContentApplicationJsonSchemaAllOf1SettingsItemValue = string;

/** Known values of {@link GetResponses200ContentApplicationJsonSchemaAllOf1SettingsItemDefaultValue} that the service accepts. */
export enum KnownGetResponses200ContentApplicationJsonSchemaAllOf1SettingsItemDefaultValue {
  /** Disabled */
  Disabled = "Disabled",
  /** Individual */
  Individual = "Individual",
  /** Daily */
  Daily = "Daily",
  /** DailyAndIndividual */
  DailyAndIndividual = "DailyAndIndividual"
}

/**
 * Defines values for GetResponses200ContentApplicationJsonSchemaAllOf1SettingsItemDefaultValue. \
 * {@link KnownGetResponses200ContentApplicationJsonSchemaAllOf1SettingsItemDefaultValue} can be used interchangeably with GetResponses200ContentApplicationJsonSchemaAllOf1SettingsItemDefaultValue,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Individual** \
 * **Daily** \
 * **DailyAndIndividual**
 */
export type GetResponses200ContentApplicationJsonSchemaAllOf1SettingsItemDefaultValue = string;

/** Known values of {@link Enum3} that the service accepts. */
export enum KnownEnum3 {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredFour */
  FourHundredFour = 404,
  /** FourHundredNine */
  FourHundredNine = 409,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for Enum3. \
 * {@link KnownEnum3} can be used interchangeably with Enum3,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **404** \
 * **409** \
 * **500**
 */
export type Enum3 = number;

/** Known values of {@link GetDefaultApplicationJsonPropertiesProperties} that the service accepts. */
export enum KnownGetDefaultApplicationJsonPropertiesProperties {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized"
}

/**
 * Defines values for GetDefaultApplicationJsonPropertiesProperties. \
 * {@link KnownGetDefaultApplicationJsonPropertiesProperties} can be used interchangeably with GetDefaultApplicationJsonPropertiesProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized**
 */
export type GetDefaultApplicationJsonPropertiesProperties = string;

/** Known values of {@link PostDefaultApplicationJsonPropertiesProperties} that the service accepts. */
export enum KnownPostDefaultApplicationJsonPropertiesProperties {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for PostDefaultApplicationJsonPropertiesProperties. \
 * {@link KnownPostDefaultApplicationJsonPropertiesProperties} can be used interchangeably with PostDefaultApplicationJsonPropertiesProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type PostDefaultApplicationJsonPropertiesProperties = string;

/** Known values of {@link Enum6} that the service accepts. */
export enum KnownEnum6 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum6. \
 * {@link KnownEnum6} can be used interchangeably with Enum6,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum6 = string;

/** Known values of {@link Enum7} that the service accepts. */
export enum KnownEnum7 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum7. \
 * {@link KnownEnum7} can be used interchangeably with Enum7,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum7 = string;

/** Known values of {@link Enum8} that the service accepts. */
export enum KnownEnum8 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum8. \
 * {@link KnownEnum8} can be used interchangeably with Enum8,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum8 = string;

/** Known values of {@link Enum9} that the service accepts. */
export enum KnownEnum9 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum9. \
 * {@link KnownEnum9} can be used interchangeably with Enum9,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum9 = string;

/** Known values of {@link GetResponses200ContentApplicationJsonSchemaItemServiceType} that the service accepts. */
export enum KnownGetResponses200ContentApplicationJsonSchemaItemServiceType {
  /** Apple */
  Apple = "apple",
  /** Jira */
  Jira = "jira",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Gitlab */
  Gitlab = "gitlab"
}

/**
 * Defines values for GetResponses200ContentApplicationJsonSchemaItemServiceType. \
 * {@link KnownGetResponses200ContentApplicationJsonSchemaItemServiceType} can be used interchangeably with GetResponses200ContentApplicationJsonSchemaItemServiceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apple** \
 * **jira** \
 * **googleplay** \
 * **gitlab**
 */
export type GetResponses200ContentApplicationJsonSchemaItemServiceType = string;

/** Known values of {@link GetResponses200ContentApplicationJsonSchemaItemCredentialType} that the service accepts. */
export enum KnownGetResponses200ContentApplicationJsonSchemaItemCredentialType {
  /** Credentials */
  Credentials = "credentials",
  /** Certificate */
  Certificate = "certificate"
}

/**
 * Defines values for GetResponses200ContentApplicationJsonSchemaItemCredentialType. \
 * {@link KnownGetResponses200ContentApplicationJsonSchemaItemCredentialType} can be used interchangeably with GetResponses200ContentApplicationJsonSchemaItemCredentialType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **credentials** \
 * **certificate**
 */
export type GetResponses200ContentApplicationJsonSchemaItemCredentialType = string;

/** Known values of {@link Enum12} that the service accepts. */
export enum KnownEnum12 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum12. \
 * {@link KnownEnum12} can be used interchangeably with Enum12,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum12 = string;

/** Known values of {@link Post503ApplicationJsonPropertiesProperties} that the service accepts. */
export enum KnownPost503ApplicationJsonPropertiesProperties {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Post503ApplicationJsonPropertiesProperties. \
 * {@link KnownPost503ApplicationJsonPropertiesProperties} can be used interchangeably with Post503ApplicationJsonPropertiesProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Post503ApplicationJsonPropertiesProperties = string;

/** Known values of {@link Enum14} that the service accepts. */
export enum KnownEnum14 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum14. \
 * {@link KnownEnum14} can be used interchangeably with Enum14,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum14 = string;

/** Known values of {@link Enum15} that the service accepts. */
export enum KnownEnum15 {
  /** None */
  None = "None",
  /** Created */
  Created = "Created",
  /** Queued */
  Queued = "Queued",
  /** InProgress */
  InProgress = "InProgress",
  /** Completed */
  Completed = "Completed",
  /** Failed */
  Failed = "Failed"
}

/**
 * Defines values for Enum15. \
 * {@link KnownEnum15} can be used interchangeably with Enum15,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **Created** \
 * **Queued** \
 * **InProgress** \
 * **Completed** \
 * **Failed**
 */
export type Enum15 = string;

/** Known values of {@link Enum16} that the service accepts. */
export enum KnownEnum16 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum16. \
 * {@link KnownEnum16} can be used interchangeably with Enum16,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum16 = string;

/** Known values of {@link Enum17} that the service accepts. */
export enum KnownEnum17 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum17. \
 * {@link KnownEnum17} can be used interchangeably with Enum17,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum17 = string;

/** Known values of {@link Enum18} that the service accepts. */
export enum KnownEnum18 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum18. \
 * {@link KnownEnum18} can be used interchangeably with Enum18,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum18 = string;

/** Known values of {@link Enum19} that the service accepts. */
export enum KnownEnum19 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum19. \
 * {@link KnownEnum19} can be used interchangeably with Enum19,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum19 = string;

/** Known values of {@link Enum20} that the service accepts. */
export enum KnownEnum20 {
  /** None */
  None = "None",
  /** Created */
  Created = "Created",
  /** Queued */
  Queued = "Queued",
  /** InProgress */
  InProgress = "InProgress",
  /** Completed */
  Completed = "Completed",
  /** Failed */
  Failed = "Failed"
}

/**
 * Defines values for Enum20. \
 * {@link KnownEnum20} can be used interchangeably with Enum20,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **Created** \
 * **Queued** \
 * **InProgress** \
 * **Completed** \
 * **Failed**
 */
export type Enum20 = string;

/** Known values of {@link Enum21} that the service accepts. */
export enum KnownEnum21 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum21. \
 * {@link KnownEnum21} can be used interchangeably with Enum21,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum21 = string;

/** Known values of {@link Enum22} that the service accepts. */
export enum KnownEnum22 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum22. \
 * {@link KnownEnum22} can be used interchangeably with Enum22,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum22 = string;

/** Known values of {@link Get400ApplicationJsonProperties} that the service accepts. */
export enum KnownGet400ApplicationJsonProperties {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Get400ApplicationJsonProperties. \
 * {@link KnownGet400ApplicationJsonProperties} can be used interchangeably with Get400ApplicationJsonProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Get400ApplicationJsonProperties = string;

/** Known values of {@link Get403ApplicationJsonProperties} that the service accepts. */
export enum KnownGet403ApplicationJsonProperties {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Get403ApplicationJsonProperties. \
 * {@link KnownGet403ApplicationJsonProperties} can be used interchangeably with Get403ApplicationJsonProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Get403ApplicationJsonProperties = string;

/** Known values of {@link Get404ApplicationJsonProperties} that the service accepts. */
export enum KnownGet404ApplicationJsonProperties {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Get404ApplicationJsonProperties. \
 * {@link KnownGet404ApplicationJsonProperties} can be used interchangeably with Get404ApplicationJsonProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Get404ApplicationJsonProperties = string;

/** Known values of {@link Delete403ApplicationJsonProperties} that the service accepts. */
export enum KnownDelete403ApplicationJsonProperties {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Delete403ApplicationJsonProperties. \
 * {@link KnownDelete403ApplicationJsonProperties} can be used interchangeably with Delete403ApplicationJsonProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Delete403ApplicationJsonProperties = string;

/** Known values of {@link Delete404ApplicationJsonProperties} that the service accepts. */
export enum KnownDelete404ApplicationJsonProperties {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Delete404ApplicationJsonProperties. \
 * {@link KnownDelete404ApplicationJsonProperties} can be used interchangeably with Delete404ApplicationJsonProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Delete404ApplicationJsonProperties = string;

/** Known values of {@link Enum28} that the service accepts. */
export enum KnownEnum28 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum28. \
 * {@link KnownEnum28} can be used interchangeably with Enum28,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum28 = string;

/** Known values of {@link Enum29} that the service accepts. */
export enum KnownEnum29 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum29. \
 * {@link KnownEnum29} can be used interchangeably with Enum29,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum29 = string;

/** Known values of {@link Get200ApplicationJsonPropertiesItemsItem} that the service accepts. */
export enum KnownGet200ApplicationJsonPropertiesItemsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Get200ApplicationJsonPropertiesItemsItem. \
 * {@link KnownGet200ApplicationJsonPropertiesItemsItem} can be used interchangeably with Get200ApplicationJsonPropertiesItemsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type Get200ApplicationJsonPropertiesItemsItem = string;

/** Known values of {@link Enum31} that the service accepts. */
export enum KnownEnum31 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for Enum31. \
 * {@link KnownEnum31} can be used interchangeably with Enum31,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type Enum31 = string;

/** Known values of {@link Enum32} that the service accepts. */
export enum KnownEnum32 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum32. \
 * {@link KnownEnum32} can be used interchangeably with Enum32,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum32 = string;

/** Known values of {@link Patch200ApplicationJsonPropertiesItemsItem} that the service accepts. */
export enum KnownPatch200ApplicationJsonPropertiesItemsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Patch200ApplicationJsonPropertiesItemsItem. \
 * {@link KnownPatch200ApplicationJsonPropertiesItemsItem} can be used interchangeably with Patch200ApplicationJsonPropertiesItemsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type Patch200ApplicationJsonPropertiesItemsItem = string;

/** Known values of {@link Enum34} that the service accepts. */
export enum KnownEnum34 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for Enum34. \
 * {@link KnownEnum34} can be used interchangeably with Enum34,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type Enum34 = string;

/** Known values of {@link PatchDefaultApplicationJsonPropertiesProperties} that the service accepts. */
export enum KnownPatchDefaultApplicationJsonPropertiesProperties {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for PatchDefaultApplicationJsonPropertiesProperties. \
 * {@link KnownPatchDefaultApplicationJsonPropertiesProperties} can be used interchangeably with PatchDefaultApplicationJsonPropertiesProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type PatchDefaultApplicationJsonPropertiesProperties = string;

/** Known values of {@link Get200ApplicationJsonItemsRelease0Origin} that the service accepts. */
export enum KnownGet200ApplicationJsonItemsRelease0Origin {
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Appcenter */
  Appcenter = "appcenter"
}

/**
 * Defines values for Get200ApplicationJsonItemsRelease0Origin. \
 * {@link KnownGet200ApplicationJsonItemsRelease0Origin} can be used interchangeably with Get200ApplicationJsonItemsRelease0Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **hockeyapp** \
 * **appcenter**
 */
export type Get200ApplicationJsonItemsRelease0Origin = string;

/** Known values of {@link Get200ApplicationJsonItemsOwnerType} that the service accepts. */
export enum KnownGet200ApplicationJsonItemsOwnerType {
  /** Org */
  Org = "org",
  /** User */
  User = "user"
}

/**
 * Defines values for Get200ApplicationJsonItemsOwnerType. \
 * {@link KnownGet200ApplicationJsonItemsOwnerType} can be used interchangeably with Get200ApplicationJsonItemsOwnerType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **org** \
 * **user**
 */
export type Get200ApplicationJsonItemsOwnerType = string;

/** Known values of {@link Enum38} that the service accepts. */
export enum KnownEnum38 {
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Appcenter */
  Appcenter = "appcenter"
}

/**
 * Defines values for Enum38. \
 * {@link KnownEnum38} can be used interchangeably with Enum38,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **hockeyapp** \
 * **appcenter**
 */
export type Enum38 = string;

/** Known values of {@link Enum39} that the service accepts. */
export enum KnownEnum39 {
  /** Adhoc */
  Adhoc = "adhoc",
  /** Enterprise */
  Enterprise = "enterprise",
  /** Other */
  Other = "other"
}

/**
 * Defines values for Enum39. \
 * {@link KnownEnum39} can be used interchangeably with Enum39,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **adhoc** \
 * **enterprise** \
 * **other**
 */
export type Enum39 = string;

/** Known values of {@link Enum40} that the service accepts. */
export enum KnownEnum40 {
  /** Group */
  Group = "group",
  /** Store */
  Store = "store",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Enum40. \
 * {@link KnownEnum40} can be used interchangeably with Enum40,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **group** \
 * **store** \
 * **tester**
 */
export type Enum40 = string;

/** Known values of {@link GetResponses200ContentApplicationJsonSchemaDistributionStoresItemType} that the service accepts. */
export enum KnownGetResponses200ContentApplicationJsonSchemaDistributionStoresItemType {
  /** Intune */
  Intune = "intune",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Apple */
  Apple = "apple",
  /** None */
  None = "none"
}

/**
 * Defines values for GetResponses200ContentApplicationJsonSchemaDistributionStoresItemType. \
 * {@link KnownGetResponses200ContentApplicationJsonSchemaDistributionStoresItemType} can be used interchangeably with GetResponses200ContentApplicationJsonSchemaDistributionStoresItemType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **intune** \
 * **googleplay** \
 * **apple** \
 * **none**
 */
export type GetResponses200ContentApplicationJsonSchemaDistributionStoresItemType = string;

/** Known values of {@link Get200ApplicationJsonPropertiesItems0Type} that the service accepts. */
export enum KnownGet200ApplicationJsonPropertiesItems0Type {
  /** Intune */
  Intune = "intune",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Apple */
  Apple = "apple",
  /** None */
  None = "none"
}

/**
 * Defines values for Get200ApplicationJsonPropertiesItems0Type. \
 * {@link KnownGet200ApplicationJsonPropertiesItems0Type} can be used interchangeably with Get200ApplicationJsonPropertiesItems0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **intune** \
 * **googleplay** \
 * **apple** \
 * **none**
 */
export type Get200ApplicationJsonPropertiesItems0Type = string;

/** Known values of {@link Get200ApplicationJsonPropertiesItems2DestinationType} that the service accepts. */
export enum KnownGet200ApplicationJsonPropertiesItems2DestinationType {
  /** Group */
  Group = "group",
  /** Store */
  Store = "store",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Get200ApplicationJsonPropertiesItems2DestinationType. \
 * {@link KnownGet200ApplicationJsonPropertiesItems2DestinationType} can be used interchangeably with Get200ApplicationJsonPropertiesItems2DestinationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **group** \
 * **store** \
 * **tester**
 */
export type Get200ApplicationJsonPropertiesItems2DestinationType = string;

/** Known values of {@link Enum44} that the service accepts. */
export enum KnownEnum44 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum44. \
 * {@link KnownEnum44} can be used interchangeably with Enum44,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum44 = string;

/** Known values of {@link Enum45} that the service accepts. */
export enum KnownEnum45 {
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Appcenter */
  Appcenter = "appcenter"
}

/**
 * Defines values for Enum45. \
 * {@link KnownEnum45} can be used interchangeably with Enum45,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **hockeyapp** \
 * **appcenter**
 */
export type Enum45 = string;

/** Known values of {@link Enum46} that the service accepts. */
export enum KnownEnum46 {
  /** Adhoc */
  Adhoc = "adhoc",
  /** Enterprise */
  Enterprise = "enterprise",
  /** Other */
  Other = "other"
}

/**
 * Defines values for Enum46. \
 * {@link KnownEnum46} can be used interchangeably with Enum46,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **adhoc** \
 * **enterprise** \
 * **other**
 */
export type Enum46 = string;

/** Known values of {@link Enum47} that the service accepts. */
export enum KnownEnum47 {
  /** Group */
  Group = "group",
  /** Store */
  Store = "store",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Enum47. \
 * {@link KnownEnum47} can be used interchangeably with Enum47,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **group** \
 * **store** \
 * **tester**
 */
export type Enum47 = string;

/** Known values of {@link Enum48} that the service accepts. */
export enum KnownEnum48 {
  /** Intune */
  Intune = "intune",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Apple */
  Apple = "apple",
  /** None */
  None = "none"
}

/**
 * Defines values for Enum48. \
 * {@link KnownEnum48} can be used interchangeably with Enum48,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **intune** \
 * **googleplay** \
 * **apple** \
 * **none**
 */
export type Enum48 = string;

/** Known values of {@link Enum49} that the service accepts. */
export enum KnownEnum49 {
  /** Intune */
  Intune = "intune",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Apple */
  Apple = "apple",
  /** None */
  None = "none"
}

/**
 * Defines values for Enum49. \
 * {@link KnownEnum49} can be used interchangeably with Enum49,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **intune** \
 * **googleplay** \
 * **apple** \
 * **none**
 */
export type Enum49 = string;

/** Known values of {@link Enum50} that the service accepts. */
export enum KnownEnum50 {
  /** Group */
  Group = "group",
  /** Store */
  Store = "store",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Enum50. \
 * {@link KnownEnum50} can be used interchangeably with Enum50,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **group** \
 * **store** \
 * **tester**
 */
export type Enum50 = string;

/** Known values of {@link Enum51} that the service accepts. */
export enum KnownEnum51 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum51. \
 * {@link KnownEnum51} can be used interchangeably with Enum51,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum51 = string;

/** Known values of {@link Get200ApplicationJsonItems0Os} that the service accepts. */
export enum KnownGet200ApplicationJsonItems0Os {
  /** Android */
  Android = "Android",
  /** IOS */
  IOS = "iOS",
  /** MacOS */
  MacOS = "macOS",
  /** Tizen */
  Tizen = "Tizen",
  /** TvOS */
  TvOS = "tvOS",
  /** Windows */
  Windows = "Windows",
  /** Linux */
  Linux = "Linux",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Get200ApplicationJsonItems0Os. \
 * {@link KnownGet200ApplicationJsonItems0Os} can be used interchangeably with Get200ApplicationJsonItems0Os,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Android** \
 * **iOS** \
 * **macOS** \
 * **Tizen** \
 * **tvOS** \
 * **Windows** \
 * **Linux** \
 * **Custom**
 */
export type Get200ApplicationJsonItems0Os = string;

/** Known values of {@link Get200ApplicationJsonItems0OwnerType} that the service accepts. */
export enum KnownGet200ApplicationJsonItems0OwnerType {
  /** Org */
  Org = "org",
  /** User */
  User = "user"
}

/**
 * Defines values for Get200ApplicationJsonItems0OwnerType. \
 * {@link KnownGet200ApplicationJsonItems0OwnerType} can be used interchangeably with Get200ApplicationJsonItems0OwnerType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **org** \
 * **user**
 */
export type Get200ApplicationJsonItems0OwnerType = string;

/** Known values of {@link Get200ApplicationJsonItems1Platform} that the service accepts. */
export enum KnownGet200ApplicationJsonItems1Platform {
  /** Java */
  Java = "Java",
  /** ObjectiveCSwift */
  ObjectiveCSwift = "Objective-C-Swift",
  /** UWP */
  UWP = "UWP",
  /** Cordova */
  Cordova = "Cordova",
  /** ReactNative */
  ReactNative = "React-Native",
  /** Unity */
  Unity = "Unity",
  /** Electron */
  Electron = "Electron",
  /** Xamarin */
  Xamarin = "Xamarin",
  /** WPF */
  WPF = "WPF",
  /** WinForms */
  WinForms = "WinForms",
  /** Unknown */
  Unknown = "Unknown",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Get200ApplicationJsonItems1Platform. \
 * {@link KnownGet200ApplicationJsonItems1Platform} can be used interchangeably with Get200ApplicationJsonItems1Platform,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Java** \
 * **Objective-C-Swift** \
 * **UWP** \
 * **Cordova** \
 * **React-Native** \
 * **Unity** \
 * **Electron** \
 * **Xamarin** \
 * **WPF** \
 * **WinForms** \
 * **Unknown** \
 * **Custom**
 */
export type Get200ApplicationJsonItems1Platform = string;

/** Known values of {@link Get200ApplicationJsonItems1Origin} that the service accepts. */
export enum KnownGet200ApplicationJsonItems1Origin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for Get200ApplicationJsonItems1Origin. \
 * {@link KnownGet200ApplicationJsonItems1Origin} can be used interchangeably with Get200ApplicationJsonItems1Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type Get200ApplicationJsonItems1Origin = string;

/** Known values of {@link Get200ApplicationJsonItems1MemberPermissionsItem} that the service accepts. */
export enum KnownGet200ApplicationJsonItems1MemberPermissionsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Get200ApplicationJsonItems1MemberPermissionsItem. \
 * {@link KnownGet200ApplicationJsonItems1MemberPermissionsItem} can be used interchangeably with Get200ApplicationJsonItems1MemberPermissionsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type Get200ApplicationJsonItems1MemberPermissionsItem = string;

/** Known values of {@link Enum57} that the service accepts. */
export enum KnownEnum57 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum57. \
 * {@link KnownEnum57} can be used interchangeably with Enum57,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum57 = string;

/** Known values of {@link PatchContentSchemaRole} that the service accepts. */
export enum KnownPatchContentSchemaRole {
  /** Admin */
  Admin = "admin",
  /** Collaborator */
  Collaborator = "collaborator",
  /** Member */
  Member = "member"
}

/**
 * Defines values for PatchContentSchemaRole. \
 * {@link KnownPatchContentSchemaRole} can be used interchangeably with PatchContentSchemaRole,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **admin** \
 * **collaborator** \
 * **member**
 */
export type PatchContentSchemaRole = string;

/** Known values of {@link Enum59} that the service accepts. */
export enum KnownEnum59 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum59. \
 * {@link KnownEnum59} can be used interchangeably with Enum59,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum59 = string;

/** Known values of {@link DeleteDefaultApplicationJsonPropertiesProperties} that the service accepts. */
export enum KnownDeleteDefaultApplicationJsonPropertiesProperties {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for DeleteDefaultApplicationJsonPropertiesProperties. \
 * {@link KnownDeleteDefaultApplicationJsonPropertiesProperties} can be used interchangeably with DeleteDefaultApplicationJsonPropertiesProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type DeleteDefaultApplicationJsonPropertiesProperties = string;

/** Known values of {@link Enum61} that the service accepts. */
export enum KnownEnum61 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum61. \
 * {@link KnownEnum61} can be used interchangeably with Enum61,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum61 = string;

/** Known values of {@link Enum62} that the service accepts. */
export enum KnownEnum62 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum62. \
 * {@link KnownEnum62} can be used interchangeably with Enum62,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum62 = string;

/** Known values of {@link Enum63} that the service accepts. */
export enum KnownEnum63 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum63. \
 * {@link KnownEnum63} can be used interchangeably with Enum63,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum63 = string;

/** Known values of {@link Enum64} that the service accepts. */
export enum KnownEnum64 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum64. \
 * {@link KnownEnum64} can be used interchangeably with Enum64,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum64 = string;

/** Known values of {@link Enum65} that the service accepts. */
export enum KnownEnum65 {
  /** Maintainer */
  Maintainer = "maintainer",
  /** Collaborator */
  Collaborator = "collaborator"
}

/**
 * Defines values for Enum65. \
 * {@link KnownEnum65} can be used interchangeably with Enum65,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **maintainer** \
 * **collaborator**
 */
export type Enum65 = string;

/** Known values of {@link Enum66} that the service accepts. */
export enum KnownEnum66 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum66. \
 * {@link KnownEnum66} can be used interchangeably with Enum66,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum66 = string;

/** Known values of {@link Enum67} that the service accepts. */
export enum KnownEnum67 {
  /** Maintainer */
  Maintainer = "maintainer",
  /** Collaborator */
  Collaborator = "collaborator"
}

/**
 * Defines values for Enum67. \
 * {@link KnownEnum67} can be used interchangeably with Enum67,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **maintainer** \
 * **collaborator**
 */
export type Enum67 = string;

/** Known values of {@link Enum68} that the service accepts. */
export enum KnownEnum68 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum68. \
 * {@link KnownEnum68} can be used interchangeably with Enum68,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum68 = string;

/** Known values of {@link PatchContentSchemaPermissionsItem} that the service accepts. */
export enum KnownPatchContentSchemaPermissionsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer"
}

/**
 * Defines values for PatchContentSchemaPermissionsItem. \
 * {@link KnownPatchContentSchemaPermissionsItem} can be used interchangeably with PatchContentSchemaPermissionsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer**
 */
export type PatchContentSchemaPermissionsItem = string;

/** Known values of {@link Enum70} that the service accepts. */
export enum KnownEnum70 {
  /** Android */
  Android = "Android",
  /** IOS */
  IOS = "iOS",
  /** MacOS */
  MacOS = "macOS",
  /** Tizen */
  Tizen = "Tizen",
  /** TvOS */
  TvOS = "tvOS",
  /** Windows */
  Windows = "Windows",
  /** Linux */
  Linux = "Linux",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Enum70. \
 * {@link KnownEnum70} can be used interchangeably with Enum70,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Android** \
 * **iOS** \
 * **macOS** \
 * **Tizen** \
 * **tvOS** \
 * **Windows** \
 * **Linux** \
 * **Custom**
 */
export type Enum70 = string;

/** Known values of {@link Enum71} that the service accepts. */
export enum KnownEnum71 {
  /** Org */
  Org = "org",
  /** User */
  User = "user"
}

/**
 * Defines values for Enum71. \
 * {@link KnownEnum71} can be used interchangeably with Enum71,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **org** \
 * **user**
 */
export type Enum71 = string;

/** Known values of {@link Enum72} that the service accepts. */
export enum KnownEnum72 {
  /** Java */
  Java = "Java",
  /** ObjectiveCSwift */
  ObjectiveCSwift = "Objective-C-Swift",
  /** UWP */
  UWP = "UWP",
  /** Cordova */
  Cordova = "Cordova",
  /** ReactNative */
  ReactNative = "React-Native",
  /** Unity */
  Unity = "Unity",
  /** Electron */
  Electron = "Electron",
  /** Xamarin */
  Xamarin = "Xamarin",
  /** WPF */
  WPF = "WPF",
  /** WinForms */
  WinForms = "WinForms",
  /** Unknown */
  Unknown = "Unknown",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Enum72. \
 * {@link KnownEnum72} can be used interchangeably with Enum72,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Java** \
 * **Objective-C-Swift** \
 * **UWP** \
 * **Cordova** \
 * **React-Native** \
 * **Unity** \
 * **Electron** \
 * **Xamarin** \
 * **WPF** \
 * **WinForms** \
 * **Unknown** \
 * **Custom**
 */
export type Enum72 = string;

/** Known values of {@link Enum73} that the service accepts. */
export enum KnownEnum73 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for Enum73. \
 * {@link KnownEnum73} can be used interchangeably with Enum73,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type Enum73 = string;

/** Known values of {@link Patch200ApplicationJsonAllOfPropertiesItemsItem} that the service accepts. */
export enum KnownPatch200ApplicationJsonAllOfPropertiesItemsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Patch200ApplicationJsonAllOfPropertiesItemsItem. \
 * {@link KnownPatch200ApplicationJsonAllOfPropertiesItemsItem} can be used interchangeably with Patch200ApplicationJsonAllOfPropertiesItemsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type Patch200ApplicationJsonAllOfPropertiesItemsItem = string;

/** Known values of {@link Enum75} that the service accepts. */
export enum KnownEnum75 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum75. \
 * {@link KnownEnum75} can be used interchangeably with Enum75,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum75 = string;

/** Known values of {@link Enum76} that the service accepts. */
export enum KnownEnum76 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum76. \
 * {@link KnownEnum76} can be used interchangeably with Enum76,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum76 = string;

/** Known values of {@link Enum77} that the service accepts. */
export enum KnownEnum77 {
  /** Android */
  Android = "Android",
  /** IOS */
  IOS = "iOS",
  /** MacOS */
  MacOS = "macOS",
  /** Tizen */
  Tizen = "Tizen",
  /** TvOS */
  TvOS = "tvOS",
  /** Windows */
  Windows = "Windows",
  /** Linux */
  Linux = "Linux",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Enum77. \
 * {@link KnownEnum77} can be used interchangeably with Enum77,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Android** \
 * **iOS** \
 * **macOS** \
 * **Tizen** \
 * **tvOS** \
 * **Windows** \
 * **Linux** \
 * **Custom**
 */
export type Enum77 = string;

/** Known values of {@link Enum78} that the service accepts. */
export enum KnownEnum78 {
  /** Org */
  Org = "org",
  /** User */
  User = "user"
}

/**
 * Defines values for Enum78. \
 * {@link KnownEnum78} can be used interchangeably with Enum78,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **org** \
 * **user**
 */
export type Enum78 = string;

/** Known values of {@link Enum79} that the service accepts. */
export enum KnownEnum79 {
  /** Java */
  Java = "Java",
  /** ObjectiveCSwift */
  ObjectiveCSwift = "Objective-C-Swift",
  /** UWP */
  UWP = "UWP",
  /** Cordova */
  Cordova = "Cordova",
  /** ReactNative */
  ReactNative = "React-Native",
  /** Unity */
  Unity = "Unity",
  /** Electron */
  Electron = "Electron",
  /** Xamarin */
  Xamarin = "Xamarin",
  /** WPF */
  WPF = "WPF",
  /** WinForms */
  WinForms = "WinForms",
  /** Unknown */
  Unknown = "Unknown",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Enum79. \
 * {@link KnownEnum79} can be used interchangeably with Enum79,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Java** \
 * **Objective-C-Swift** \
 * **UWP** \
 * **Cordova** \
 * **React-Native** \
 * **Unity** \
 * **Electron** \
 * **Xamarin** \
 * **WPF** \
 * **WinForms** \
 * **Unknown** \
 * **Custom**
 */
export type Enum79 = string;

/** Known values of {@link Enum80} that the service accepts. */
export enum KnownEnum80 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for Enum80. \
 * {@link KnownEnum80} can be used interchangeably with Enum80,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type Enum80 = string;

/** Known values of {@link Post201ApplicationJsonAllOfPropertiesItemsItem} that the service accepts. */
export enum KnownPost201ApplicationJsonAllOfPropertiesItemsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Post201ApplicationJsonAllOfPropertiesItemsItem. \
 * {@link KnownPost201ApplicationJsonAllOfPropertiesItemsItem} can be used interchangeably with Post201ApplicationJsonAllOfPropertiesItemsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type Post201ApplicationJsonAllOfPropertiesItemsItem = string;

/** Known values of {@link Enum82} that the service accepts. */
export enum KnownEnum82 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum82. \
 * {@link KnownEnum82} can be used interchangeably with Enum82,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum82 = string;

/** Known values of {@link Get200ApplicationJsonItems01Platform} that the service accepts. */
export enum KnownGet200ApplicationJsonItems01Platform {
  /** Java */
  Java = "Java",
  /** ObjectiveCSwift */
  ObjectiveCSwift = "Objective-C-Swift",
  /** UWP */
  UWP = "UWP",
  /** Cordova */
  Cordova = "Cordova",
  /** ReactNative */
  ReactNative = "React-Native",
  /** Unity */
  Unity = "Unity",
  /** Electron */
  Electron = "Electron",
  /** Xamarin */
  Xamarin = "Xamarin",
  /** WPF */
  WPF = "WPF",
  /** WinForms */
  WinForms = "WinForms",
  /** Unknown */
  Unknown = "Unknown",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Get200ApplicationJsonItems01Platform. \
 * {@link KnownGet200ApplicationJsonItems01Platform} can be used interchangeably with Get200ApplicationJsonItems01Platform,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Java** \
 * **Objective-C-Swift** \
 * **UWP** \
 * **Cordova** \
 * **React-Native** \
 * **Unity** \
 * **Electron** \
 * **Xamarin** \
 * **WPF** \
 * **WinForms** \
 * **Unknown** \
 * **Custom**
 */
export type Get200ApplicationJsonItems01Platform = string;

/** Known values of {@link Get200ApplicationJsonItems01Origin} that the service accepts. */
export enum KnownGet200ApplicationJsonItems01Origin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for Get200ApplicationJsonItems01Origin. \
 * {@link KnownGet200ApplicationJsonItems01Origin} can be used interchangeably with Get200ApplicationJsonItems01Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type Get200ApplicationJsonItems01Origin = string;

/** Known values of {@link Get200ApplicationJsonItems01MemberPermissionsItem} that the service accepts. */
export enum KnownGet200ApplicationJsonItems01MemberPermissionsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Get200ApplicationJsonItems01MemberPermissionsItem. \
 * {@link KnownGet200ApplicationJsonItems01MemberPermissionsItem} can be used interchangeably with Get200ApplicationJsonItems01MemberPermissionsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type Get200ApplicationJsonItems01MemberPermissionsItem = string;

/** Known values of {@link Get200ApplicationJsonItems1TeamPermissionsItem} that the service accepts. */
export enum KnownGet200ApplicationJsonItems1TeamPermissionsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer"
}

/**
 * Defines values for Get200ApplicationJsonItems1TeamPermissionsItem. \
 * {@link KnownGet200ApplicationJsonItems1TeamPermissionsItem} can be used interchangeably with Get200ApplicationJsonItems1TeamPermissionsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer**
 */
export type Get200ApplicationJsonItems1TeamPermissionsItem = string;

/** Known values of {@link Enum87} that the service accepts. */
export enum KnownEnum87 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum87. \
 * {@link KnownEnum87} can be used interchangeably with Enum87,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum87 = string;

/** Known values of {@link Enum88} that the service accepts. */
export enum KnownEnum88 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum88. \
 * {@link KnownEnum88} can be used interchangeably with Enum88,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum88 = string;

/** Known values of {@link Enum89} that the service accepts. */
export enum KnownEnum89 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum89. \
 * {@link KnownEnum89} can be used interchangeably with Enum89,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum89 = string;

/** Known values of {@link Enum90} that the service accepts. */
export enum KnownEnum90 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum90. \
 * {@link KnownEnum90} can be used interchangeably with Enum90,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum90 = string;

/** Known values of {@link Enum91} that the service accepts. */
export enum KnownEnum91 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum91. \
 * {@link KnownEnum91} can be used interchangeably with Enum91,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum91 = string;

/** Known values of {@link Enum92} that the service accepts. */
export enum KnownEnum92 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum92. \
 * {@link KnownEnum92} can be used interchangeably with Enum92,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum92 = string;

/** Known values of {@link Enum93} that the service accepts. */
export enum KnownEnum93 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum93. \
 * {@link KnownEnum93} can be used interchangeably with Enum93,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum93 = string;

/** Known values of {@link PostContentSchemaRole} that the service accepts. */
export enum KnownPostContentSchemaRole {
  /** Admin */
  Admin = "admin",
  /** Collaborator */
  Collaborator = "collaborator",
  /** Member */
  Member = "member"
}

/**
 * Defines values for PostContentSchemaRole. \
 * {@link KnownPostContentSchemaRole} can be used interchangeably with PostContentSchemaRole,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **admin** \
 * **collaborator** \
 * **member**
 */
export type PostContentSchemaRole = string;

/** Known values of {@link Enum95} that the service accepts. */
export enum KnownEnum95 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum95. \
 * {@link KnownEnum95} can be used interchangeably with Enum95,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum95 = string;

/** Known values of {@link Enum96} that the service accepts. */
export enum KnownEnum96 {
  /** Admin */
  Admin = "admin",
  /** Collaborator */
  Collaborator = "collaborator",
  /** Member */
  Member = "member"
}

/**
 * Defines values for Enum96. \
 * {@link KnownEnum96} can be used interchangeably with Enum96,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **admin** \
 * **collaborator** \
 * **member**
 */
export type Enum96 = string;

/** Known values of {@link Enum97} that the service accepts. */
export enum KnownEnum97 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum97. \
 * {@link KnownEnum97} can be used interchangeably with Enum97,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum97 = string;

/** Known values of {@link Enum98} that the service accepts. */
export enum KnownEnum98 {
  /** Admin */
  Admin = "admin",
  /** Collaborator */
  Collaborator = "collaborator",
  /** Member */
  Member = "member"
}

/**
 * Defines values for Enum98. \
 * {@link KnownEnum98} can be used interchangeably with Enum98,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **admin** \
 * **collaborator** \
 * **member**
 */
export type Enum98 = string;

/** Known values of {@link Enum99} that the service accepts. */
export enum KnownEnum99 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum99. \
 * {@link KnownEnum99} can be used interchangeably with Enum99,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum99 = string;

/** Known values of {@link Enum100} that the service accepts. */
export enum KnownEnum100 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum100. \
 * {@link KnownEnum100} can be used interchangeably with Enum100,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum100 = string;

/** Known values of {@link Enum101} that the service accepts. */
export enum KnownEnum101 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum101. \
 * {@link KnownEnum101} can be used interchangeably with Enum101,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum101 = string;

/** Known values of {@link Get200ApplicationJsonItems0Origin} that the service accepts. */
export enum KnownGet200ApplicationJsonItems0Origin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp"
}

/**
 * Defines values for Get200ApplicationJsonItems0Origin. \
 * {@link KnownGet200ApplicationJsonItems0Origin} can be used interchangeably with Get200ApplicationJsonItems0Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp**
 */
export type Get200ApplicationJsonItems0Origin = string;

/** Known values of {@link Enum103} that the service accepts. */
export enum KnownEnum103 {
  /** Android */
  Android = "Android",
  /** IOS */
  IOS = "iOS",
  /** MacOS */
  MacOS = "macOS",
  /** Tizen */
  Tizen = "Tizen",
  /** TvOS */
  TvOS = "tvOS",
  /** Windows */
  Windows = "Windows",
  /** Linux */
  Linux = "Linux",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Enum103. \
 * {@link KnownEnum103} can be used interchangeably with Enum103,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Android** \
 * **iOS** \
 * **macOS** \
 * **Tizen** \
 * **tvOS** \
 * **Windows** \
 * **Linux** \
 * **Custom**
 */
export type Enum103 = string;

/** Known values of {@link Enum104} that the service accepts. */
export enum KnownEnum104 {
  /** Org */
  Org = "org",
  /** User */
  User = "user"
}

/**
 * Defines values for Enum104. \
 * {@link KnownEnum104} can be used interchangeably with Enum104,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **org** \
 * **user**
 */
export type Enum104 = string;

/** Known values of {@link Enum105} that the service accepts. */
export enum KnownEnum105 {
  /** Java */
  Java = "Java",
  /** ObjectiveCSwift */
  ObjectiveCSwift = "Objective-C-Swift",
  /** UWP */
  UWP = "UWP",
  /** Cordova */
  Cordova = "Cordova",
  /** ReactNative */
  ReactNative = "React-Native",
  /** Unity */
  Unity = "Unity",
  /** Electron */
  Electron = "Electron",
  /** Xamarin */
  Xamarin = "Xamarin",
  /** WPF */
  WPF = "WPF",
  /** WinForms */
  WinForms = "WinForms",
  /** Unknown */
  Unknown = "Unknown",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Enum105. \
 * {@link KnownEnum105} can be used interchangeably with Enum105,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Java** \
 * **Objective-C-Swift** \
 * **UWP** \
 * **Cordova** \
 * **React-Native** \
 * **Unity** \
 * **Electron** \
 * **Xamarin** \
 * **WPF** \
 * **WinForms** \
 * **Unknown** \
 * **Custom**
 */
export type Enum105 = string;

/** Known values of {@link Enum106} that the service accepts. */
export enum KnownEnum106 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for Enum106. \
 * {@link KnownEnum106} can be used interchangeably with Enum106,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type Enum106 = string;

/** Known values of {@link Get200ApplicationJsonItems1AppsAllOfPropertiesItemsItem} that the service accepts. */
export enum KnownGet200ApplicationJsonItems1AppsAllOfPropertiesItemsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Get200ApplicationJsonItems1AppsAllOfPropertiesItemsItem. \
 * {@link KnownGet200ApplicationJsonItems1AppsAllOfPropertiesItemsItem} can be used interchangeably with Get200ApplicationJsonItems1AppsAllOfPropertiesItemsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type Get200ApplicationJsonItems1AppsAllOfPropertiesItemsItem = string;

/** Known values of {@link Enum108} that the service accepts. */
export enum KnownEnum108 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum108. \
 * {@link KnownEnum108} can be used interchangeably with Enum108,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum108 = string;

/** Known values of {@link Enum109} that the service accepts. */
export enum KnownEnum109 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum109. \
 * {@link KnownEnum109} can be used interchangeably with Enum109,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum109 = string;

/** Known values of {@link Enum110} that the service accepts. */
export enum KnownEnum110 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum110. \
 * {@link KnownEnum110} can be used interchangeably with Enum110,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum110 = string;

/** Known values of {@link Enum111} that the service accepts. */
export enum KnownEnum111 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum111. \
 * {@link KnownEnum111} can be used interchangeably with Enum111,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum111 = string;

/** Known values of {@link Enum112} that the service accepts. */
export enum KnownEnum112 {
  /** Android */
  Android = "Android",
  /** IOS */
  IOS = "iOS",
  /** MacOS */
  MacOS = "macOS",
  /** Tizen */
  Tizen = "Tizen",
  /** TvOS */
  TvOS = "tvOS",
  /** Windows */
  Windows = "Windows",
  /** Linux */
  Linux = "Linux",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Enum112. \
 * {@link KnownEnum112} can be used interchangeably with Enum112,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Android** \
 * **iOS** \
 * **macOS** \
 * **Tizen** \
 * **tvOS** \
 * **Windows** \
 * **Linux** \
 * **Custom**
 */
export type Enum112 = string;

/** Known values of {@link Enum113} that the service accepts. */
export enum KnownEnum113 {
  /** Org */
  Org = "org",
  /** User */
  User = "user"
}

/**
 * Defines values for Enum113. \
 * {@link KnownEnum113} can be used interchangeably with Enum113,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **org** \
 * **user**
 */
export type Enum113 = string;

/** Known values of {@link Enum114} that the service accepts. */
export enum KnownEnum114 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp"
}

/**
 * Defines values for Enum114. \
 * {@link KnownEnum114} can be used interchangeably with Enum114,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp**
 */
export type Enum114 = string;

/** Known values of {@link Enum115} that the service accepts. */
export enum KnownEnum115 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum115. \
 * {@link KnownEnum115} can be used interchangeably with Enum115,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum115 = string;

/** Known values of {@link Enum116} that the service accepts. */
export enum KnownEnum116 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp"
}

/**
 * Defines values for Enum116. \
 * {@link KnownEnum116} can be used interchangeably with Enum116,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp**
 */
export type Enum116 = string;

/** Known values of {@link Enum117} that the service accepts. */
export enum KnownEnum117 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum117. \
 * {@link KnownEnum117} can be used interchangeably with Enum117,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum117 = string;

/** Known values of {@link Enum118} that the service accepts. */
export enum KnownEnum118 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum118. \
 * {@link KnownEnum118} can be used interchangeably with Enum118,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum118 = string;

/** Known values of {@link Enum119} that the service accepts. */
export enum KnownEnum119 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp"
}

/**
 * Defines values for Enum119. \
 * {@link KnownEnum119} can be used interchangeably with Enum119,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp**
 */
export type Enum119 = string;

/** Known values of {@link Enum120} that the service accepts. */
export enum KnownEnum120 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum120. \
 * {@link KnownEnum120} can be used interchangeably with Enum120,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum120 = string;

/** Known values of {@link GetResponses201ContentApplicationJsonSchemaItemOrigin} that the service accepts. */
export enum KnownGetResponses201ContentApplicationJsonSchemaItemOrigin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp"
}

/**
 * Defines values for GetResponses201ContentApplicationJsonSchemaItemOrigin. \
 * {@link KnownGetResponses201ContentApplicationJsonSchemaItemOrigin} can be used interchangeably with GetResponses201ContentApplicationJsonSchemaItemOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp**
 */
export type GetResponses201ContentApplicationJsonSchemaItemOrigin = string;

/** Known values of {@link Enum122} that the service accepts. */
export enum KnownEnum122 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum122. \
 * {@link KnownEnum122} can be used interchangeably with Enum122,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum122 = string;

/** Known values of {@link Enum123} that the service accepts. */
export enum KnownEnum123 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum123. \
 * {@link KnownEnum123} can be used interchangeably with Enum123,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum123 = string;

/** Known values of {@link Enum124} that the service accepts. */
export enum KnownEnum124 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp"
}

/**
 * Defines values for Enum124. \
 * {@link KnownEnum124} can be used interchangeably with Enum124,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp**
 */
export type Enum124 = string;

/** Known values of {@link Enum125} that the service accepts. */
export enum KnownEnum125 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum125. \
 * {@link KnownEnum125} can be used interchangeably with Enum125,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum125 = string;

/** Known values of {@link Enum126} that the service accepts. */
export enum KnownEnum126 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp"
}

/**
 * Defines values for Enum126. \
 * {@link KnownEnum126} can be used interchangeably with Enum126,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp**
 */
export type Enum126 = string;

/** Known values of {@link Enum127} that the service accepts. */
export enum KnownEnum127 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum127. \
 * {@link KnownEnum127} can be used interchangeably with Enum127,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum127 = string;

/** Known values of {@link PostContentSchemaOs} that the service accepts. */
export enum KnownPostContentSchemaOs {
  /** Android */
  Android = "Android",
  /** IOS */
  IOS = "iOS",
  /** MacOS */
  MacOS = "macOS",
  /** Tizen */
  Tizen = "Tizen",
  /** TvOS */
  TvOS = "tvOS",
  /** Windows */
  Windows = "Windows",
  /** Linux */
  Linux = "Linux",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for PostContentSchemaOs. \
 * {@link KnownPostContentSchemaOs} can be used interchangeably with PostContentSchemaOs,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Android** \
 * **iOS** \
 * **macOS** \
 * **Tizen** \
 * **tvOS** \
 * **Windows** \
 * **Linux** \
 * **Custom**
 */
export type PostContentSchemaOs = string;

/** Known values of {@link PostContentSchemaPlatform} that the service accepts. */
export enum KnownPostContentSchemaPlatform {
  /** Java */
  Java = "Java",
  /** ObjectiveCSwift */
  ObjectiveCSwift = "Objective-C-Swift",
  /** UWP */
  UWP = "UWP",
  /** Cordova */
  Cordova = "Cordova",
  /** ReactNative */
  ReactNative = "React-Native",
  /** Xamarin */
  Xamarin = "Xamarin",
  /** Unity */
  Unity = "Unity",
  /** Electron */
  Electron = "Electron",
  /** WPF */
  WPF = "WPF",
  /** WinForms */
  WinForms = "WinForms",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for PostContentSchemaPlatform. \
 * {@link KnownPostContentSchemaPlatform} can be used interchangeably with PostContentSchemaPlatform,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Java** \
 * **Objective-C-Swift** \
 * **UWP** \
 * **Cordova** \
 * **React-Native** \
 * **Xamarin** \
 * **Unity** \
 * **Electron** \
 * **WPF** \
 * **WinForms** \
 * **Custom**
 */
export type PostContentSchemaPlatform = string;

/** Known values of {@link Enum130} that the service accepts. */
export enum KnownEnum130 {
  /** Android */
  Android = "Android",
  /** IOS */
  IOS = "iOS",
  /** MacOS */
  MacOS = "macOS",
  /** Tizen */
  Tizen = "Tizen",
  /** TvOS */
  TvOS = "tvOS",
  /** Windows */
  Windows = "Windows",
  /** Linux */
  Linux = "Linux",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Enum130. \
 * {@link KnownEnum130} can be used interchangeably with Enum130,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Android** \
 * **iOS** \
 * **macOS** \
 * **Tizen** \
 * **tvOS** \
 * **Windows** \
 * **Linux** \
 * **Custom**
 */
export type Enum130 = string;

/** Known values of {@link Enum131} that the service accepts. */
export enum KnownEnum131 {
  /** Org */
  Org = "org",
  /** User */
  User = "user"
}

/**
 * Defines values for Enum131. \
 * {@link KnownEnum131} can be used interchangeably with Enum131,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **org** \
 * **user**
 */
export type Enum131 = string;

/** Known values of {@link Enum132} that the service accepts. */
export enum KnownEnum132 {
  /** Java */
  Java = "Java",
  /** ObjectiveCSwift */
  ObjectiveCSwift = "Objective-C-Swift",
  /** UWP */
  UWP = "UWP",
  /** Cordova */
  Cordova = "Cordova",
  /** ReactNative */
  ReactNative = "React-Native",
  /** Unity */
  Unity = "Unity",
  /** Electron */
  Electron = "Electron",
  /** Xamarin */
  Xamarin = "Xamarin",
  /** WPF */
  WPF = "WPF",
  /** WinForms */
  WinForms = "WinForms",
  /** Unknown */
  Unknown = "Unknown",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Enum132. \
 * {@link KnownEnum132} can be used interchangeably with Enum132,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Java** \
 * **Objective-C-Swift** \
 * **UWP** \
 * **Cordova** \
 * **React-Native** \
 * **Unity** \
 * **Electron** \
 * **Xamarin** \
 * **WPF** \
 * **WinForms** \
 * **Unknown** \
 * **Custom**
 */
export type Enum132 = string;

/** Known values of {@link Enum133} that the service accepts. */
export enum KnownEnum133 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for Enum133. \
 * {@link KnownEnum133} can be used interchangeably with Enum133,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type Enum133 = string;

/** Known values of {@link Post200ApplicationJsonAllOfPropertiesItemsItem} that the service accepts. */
export enum KnownPost200ApplicationJsonAllOfPropertiesItemsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Post200ApplicationJsonAllOfPropertiesItemsItem. \
 * {@link KnownPost200ApplicationJsonAllOfPropertiesItemsItem} can be used interchangeably with Post200ApplicationJsonAllOfPropertiesItemsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type Post200ApplicationJsonAllOfPropertiesItemsItem = string;

/** Known values of {@link Enum135} that the service accepts. */
export enum KnownEnum135 {
  /** Android */
  Android = "Android",
  /** IOS */
  IOS = "iOS",
  /** MacOS */
  MacOS = "macOS",
  /** Tizen */
  Tizen = "Tizen",
  /** TvOS */
  TvOS = "tvOS",
  /** Windows */
  Windows = "Windows",
  /** Linux */
  Linux = "Linux",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Enum135. \
 * {@link KnownEnum135} can be used interchangeably with Enum135,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Android** \
 * **iOS** \
 * **macOS** \
 * **Tizen** \
 * **tvOS** \
 * **Windows** \
 * **Linux** \
 * **Custom**
 */
export type Enum135 = string;

/** Known values of {@link Enum136} that the service accepts. */
export enum KnownEnum136 {
  /** Org */
  Org = "org",
  /** User */
  User = "user"
}

/**
 * Defines values for Enum136. \
 * {@link KnownEnum136} can be used interchangeably with Enum136,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **org** \
 * **user**
 */
export type Enum136 = string;

/** Known values of {@link Enum137} that the service accepts. */
export enum KnownEnum137 {
  /** Java */
  Java = "Java",
  /** ObjectiveCSwift */
  ObjectiveCSwift = "Objective-C-Swift",
  /** UWP */
  UWP = "UWP",
  /** Cordova */
  Cordova = "Cordova",
  /** ReactNative */
  ReactNative = "React-Native",
  /** Unity */
  Unity = "Unity",
  /** Electron */
  Electron = "Electron",
  /** Xamarin */
  Xamarin = "Xamarin",
  /** WPF */
  WPF = "WPF",
  /** WinForms */
  WinForms = "WinForms",
  /** Unknown */
  Unknown = "Unknown",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Enum137. \
 * {@link KnownEnum137} can be used interchangeably with Enum137,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Java** \
 * **Objective-C-Swift** \
 * **UWP** \
 * **Cordova** \
 * **React-Native** \
 * **Unity** \
 * **Electron** \
 * **Xamarin** \
 * **WPF** \
 * **WinForms** \
 * **Unknown** \
 * **Custom**
 */
export type Enum137 = string;

/** Known values of {@link Enum138} that the service accepts. */
export enum KnownEnum138 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for Enum138. \
 * {@link KnownEnum138} can be used interchangeably with Enum138,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type Enum138 = string;

/** Known values of {@link Enum139} that the service accepts. */
export enum KnownEnum139 {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Enum139. \
 * {@link KnownEnum139} can be used interchangeably with Enum139,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type Enum139 = string;

/** Known values of {@link Enum140} that the service accepts. */
export enum KnownEnum140 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum140. \
 * {@link KnownEnum140} can be used interchangeably with Enum140,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum140 = string;

/** Known values of {@link Enum141} that the service accepts. */
export enum KnownEnum141 {
  /** Android */
  Android = "Android",
  /** IOS */
  IOS = "iOS",
  /** MacOS */
  MacOS = "macOS",
  /** Tizen */
  Tizen = "Tizen",
  /** TvOS */
  TvOS = "tvOS",
  /** Windows */
  Windows = "Windows",
  /** Linux */
  Linux = "Linux",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Enum141. \
 * {@link KnownEnum141} can be used interchangeably with Enum141,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Android** \
 * **iOS** \
 * **macOS** \
 * **Tizen** \
 * **tvOS** \
 * **Windows** \
 * **Linux** \
 * **Custom**
 */
export type Enum141 = string;

/** Known values of {@link Enum142} that the service accepts. */
export enum KnownEnum142 {
  /** Org */
  Org = "org",
  /** User */
  User = "user"
}

/**
 * Defines values for Enum142. \
 * {@link KnownEnum142} can be used interchangeably with Enum142,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **org** \
 * **user**
 */
export type Enum142 = string;

/** Known values of {@link Enum143} that the service accepts. */
export enum KnownEnum143 {
  /** Java */
  Java = "Java",
  /** ObjectiveCSwift */
  ObjectiveCSwift = "Objective-C-Swift",
  /** UWP */
  UWP = "UWP",
  /** Cordova */
  Cordova = "Cordova",
  /** ReactNative */
  ReactNative = "React-Native",
  /** Unity */
  Unity = "Unity",
  /** Electron */
  Electron = "Electron",
  /** Xamarin */
  Xamarin = "Xamarin",
  /** WPF */
  WPF = "WPF",
  /** WinForms */
  WinForms = "WinForms",
  /** Unknown */
  Unknown = "Unknown",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Enum143. \
 * {@link KnownEnum143} can be used interchangeably with Enum143,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Java** \
 * **Objective-C-Swift** \
 * **UWP** \
 * **Cordova** \
 * **React-Native** \
 * **Unity** \
 * **Electron** \
 * **Xamarin** \
 * **WPF** \
 * **WinForms** \
 * **Unknown** \
 * **Custom**
 */
export type Enum143 = string;

/** Known values of {@link Enum144} that the service accepts. */
export enum KnownEnum144 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for Enum144. \
 * {@link KnownEnum144} can be used interchangeably with Enum144,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type Enum144 = string;

/** Known values of {@link Enum145} that the service accepts. */
export enum KnownEnum145 {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Enum145. \
 * {@link KnownEnum145} can be used interchangeably with Enum145,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type Enum145 = string;

/** Known values of {@link Enum146} that the service accepts. */
export enum KnownEnum146 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum146. \
 * {@link KnownEnum146} can be used interchangeably with Enum146,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum146 = string;

/** Known values of {@link Enum147} that the service accepts. */
export enum KnownEnum147 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp"
}

/**
 * Defines values for Enum147. \
 * {@link KnownEnum147} can be used interchangeably with Enum147,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp**
 */
export type Enum147 = string;

/** Known values of {@link Enum148} that the service accepts. */
export enum KnownEnum148 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum148. \
 * {@link KnownEnum148} can be used interchangeably with Enum148,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum148 = string;

/** Known values of {@link Enum149} that the service accepts. */
export enum KnownEnum149 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp"
}

/**
 * Defines values for Enum149. \
 * {@link KnownEnum149} can be used interchangeably with Enum149,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp**
 */
export type Enum149 = string;

/** Known values of {@link Enum150} that the service accepts. */
export enum KnownEnum150 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum150. \
 * {@link KnownEnum150} can be used interchangeably with Enum150,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum150 = string;

/** Known values of {@link Enum151} that the service accepts. */
export enum KnownEnum151 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum151. \
 * {@link KnownEnum151} can be used interchangeably with Enum151,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum151 = string;

/** Known values of {@link Enum152} that the service accepts. */
export enum KnownEnum152 {
  /** Test */
  Test = "Test",
  /** Build */
  Build = "Build"
}

/**
 * Defines values for Enum152. \
 * {@link KnownEnum152} can be used interchangeably with Enum152,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Test** \
 * **Build**
 */
export type Enum152 = string;

/** Known values of {@link Enum153} that the service accepts. */
export enum KnownEnum153 {
  /** Previous */
  Previous = "Previous",
  /** Current */
  Current = "Current",
  /** Next */
  Next = "Next"
}

/**
 * Defines values for Enum153. \
 * {@link KnownEnum153} can be used interchangeably with Enum153,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Previous** \
 * **Current** \
 * **Next**
 */
export type Enum153 = string;

/** Known values of {@link Enum154} that the service accepts. */
export enum KnownEnum154 {
  /** None */
  None = "None",
  /** AppCenter */
  AppCenter = "AppCenter",
  /** GitHub */
  GitHub = "GitHub",
  /** Xtc */
  Xtc = "Xtc"
}

/**
 * Defines values for Enum154. \
 * {@link KnownEnum154} can be used interchangeably with Enum154,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **AppCenter** \
 * **GitHub** \
 * **Xtc**
 */
export type Enum154 = string;

/** Known values of {@link Enum155} that the service accepts. */
export enum KnownEnum155 {
  /** Build */
  Build = "Build",
  /** Test */
  Test = "Test"
}

/**
 * Defines values for Enum155. \
 * {@link KnownEnum155} can be used interchangeably with Enum155,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Build** \
 * **Test**
 */
export type Enum155 = string;

/** Known values of {@link Enum156} that the service accepts. */
export enum KnownEnum156 {
  /** None */
  None = "None",
  /** AppCenter */
  AppCenter = "AppCenter",
  /** GitHub */
  GitHub = "GitHub",
  /** Xtc */
  Xtc = "Xtc"
}

/**
 * Defines values for Enum156. \
 * {@link KnownEnum156} can be used interchangeably with Enum156,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **AppCenter** \
 * **GitHub** \
 * **Xtc**
 */
export type Enum156 = string;

/** Known values of {@link Enum157} that the service accepts. */
export enum KnownEnum157 {
  /** Build */
  Build = "Build",
  /** Test */
  Test = "Test"
}

/**
 * Defines values for Enum157. \
 * {@link KnownEnum157} can be used interchangeably with Enum157,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Build** \
 * **Test**
 */
export type Enum157 = string;

/** Known values of {@link Enum158} that the service accepts. */
export enum KnownEnum158 {
  /** Enabled */
  Enabled = "Enabled",
  /** Disabled */
  Disabled = "Disabled",
  /** NotSet */
  NotSet = "NotSet"
}

/**
 * Defines values for Enum158. \
 * {@link KnownEnum158} can be used interchangeably with Enum158,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled** \
 * **NotSet**
 */
export type Enum158 = string;

/** Known values of {@link Enum159} that the service accepts. */
export enum KnownEnum159 {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredThree */
  FourHundredThree = 403,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for Enum159. \
 * {@link KnownEnum159} can be used interchangeably with Enum159,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **403** \
 * **500**
 */
export type Enum159 = number;

/** Known values of {@link Enum160} that the service accepts. */
export enum KnownEnum160 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp"
}

/**
 * Defines values for Enum160. \
 * {@link KnownEnum160} can be used interchangeably with Enum160,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp**
 */
export type Enum160 = string;

/** Known values of {@link Enum161} that the service accepts. */
export enum KnownEnum161 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum161. \
 * {@link KnownEnum161} can be used interchangeably with Enum161,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum161 = string;

/** Known values of {@link GetResponses200ContentApplicationJsonSchemaItemOrigin} that the service accepts. */
export enum KnownGetResponses200ContentApplicationJsonSchemaItemOrigin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp"
}

/**
 * Defines values for GetResponses200ContentApplicationJsonSchemaItemOrigin. \
 * {@link KnownGetResponses200ContentApplicationJsonSchemaItemOrigin} can be used interchangeably with GetResponses200ContentApplicationJsonSchemaItemOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp**
 */
export type GetResponses200ContentApplicationJsonSchemaItemOrigin = string;

/** Known values of {@link Enum163} that the service accepts. */
export enum KnownEnum163 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum163. \
 * {@link KnownEnum163} can be used interchangeably with Enum163,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum163 = string;

/** Known values of {@link Get200ApplicationJsonItemsOrganizationOrigin} that the service accepts. */
export enum KnownGet200ApplicationJsonItemsOrganizationOrigin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp"
}

/**
 * Defines values for Get200ApplicationJsonItemsOrganizationOrigin. \
 * {@link KnownGet200ApplicationJsonItemsOrganizationOrigin} can be used interchangeably with Get200ApplicationJsonItemsOrganizationOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp**
 */
export type Get200ApplicationJsonItemsOrganizationOrigin = string;

/** Known values of {@link Get200ApplicationJsonItemsApp0Os} that the service accepts. */
export enum KnownGet200ApplicationJsonItemsApp0Os {
  /** Android */
  Android = "Android",
  /** IOS */
  IOS = "iOS",
  /** MacOS */
  MacOS = "macOS",
  /** Tizen */
  Tizen = "Tizen",
  /** TvOS */
  TvOS = "tvOS",
  /** Windows */
  Windows = "Windows",
  /** Linux */
  Linux = "Linux",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Get200ApplicationJsonItemsApp0Os. \
 * {@link KnownGet200ApplicationJsonItemsApp0Os} can be used interchangeably with Get200ApplicationJsonItemsApp0Os,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Android** \
 * **iOS** \
 * **macOS** \
 * **Tizen** \
 * **tvOS** \
 * **Windows** \
 * **Linux** \
 * **Custom**
 */
export type Get200ApplicationJsonItemsApp0Os = string;

/** Known values of {@link Get200ApplicationJsonItemsApp0OwnerType} that the service accepts. */
export enum KnownGet200ApplicationJsonItemsApp0OwnerType {
  /** Org */
  Org = "org",
  /** User */
  User = "user"
}

/**
 * Defines values for Get200ApplicationJsonItemsApp0OwnerType. \
 * {@link KnownGet200ApplicationJsonItemsApp0OwnerType} can be used interchangeably with Get200ApplicationJsonItemsApp0OwnerType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **org** \
 * **user**
 */
export type Get200ApplicationJsonItemsApp0OwnerType = string;

/** Known values of {@link Get200ApplicationJsonItemsApp1Platform} that the service accepts. */
export enum KnownGet200ApplicationJsonItemsApp1Platform {
  /** Java */
  Java = "Java",
  /** ObjectiveCSwift */
  ObjectiveCSwift = "Objective-C-Swift",
  /** UWP */
  UWP = "UWP",
  /** Cordova */
  Cordova = "Cordova",
  /** ReactNative */
  ReactNative = "React-Native",
  /** Unity */
  Unity = "Unity",
  /** Electron */
  Electron = "Electron",
  /** Xamarin */
  Xamarin = "Xamarin",
  /** WPF */
  WPF = "WPF",
  /** WinForms */
  WinForms = "WinForms",
  /** Unknown */
  Unknown = "Unknown",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Get200ApplicationJsonItemsApp1Platform. \
 * {@link KnownGet200ApplicationJsonItemsApp1Platform} can be used interchangeably with Get200ApplicationJsonItemsApp1Platform,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Java** \
 * **Objective-C-Swift** \
 * **UWP** \
 * **Cordova** \
 * **React-Native** \
 * **Unity** \
 * **Electron** \
 * **Xamarin** \
 * **WPF** \
 * **WinForms** \
 * **Unknown** \
 * **Custom**
 */
export type Get200ApplicationJsonItemsApp1Platform = string;

/** Known values of {@link Get200ApplicationJsonItemsApp1Origin} that the service accepts. */
export enum KnownGet200ApplicationJsonItemsApp1Origin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for Get200ApplicationJsonItemsApp1Origin. \
 * {@link KnownGet200ApplicationJsonItemsApp1Origin} can be used interchangeably with Get200ApplicationJsonItemsApp1Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type Get200ApplicationJsonItemsApp1Origin = string;

/** Known values of {@link Get200ApplicationJsonItemsApp1MemberPermissionsItem} that the service accepts. */
export enum KnownGet200ApplicationJsonItemsApp1MemberPermissionsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Get200ApplicationJsonItemsApp1MemberPermissionsItem. \
 * {@link KnownGet200ApplicationJsonItemsApp1MemberPermissionsItem} can be used interchangeably with Get200ApplicationJsonItemsApp1MemberPermissionsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type Get200ApplicationJsonItemsApp1MemberPermissionsItem = string;

/** Known values of {@link Enum170} that the service accepts. */
export enum KnownEnum170 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum170. \
 * {@link KnownEnum170} can be used interchangeably with Enum170,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum170 = string;

/** Known values of {@link Enum171} that the service accepts. */
export enum KnownEnum171 {
  /** Test */
  Test = "Test",
  /** Build */
  Build = "Build"
}

/**
 * Defines values for Enum171. \
 * {@link KnownEnum171} can be used interchangeably with Enum171,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Test** \
 * **Build**
 */
export type Enum171 = string;

/** Known values of {@link Enum172} that the service accepts. */
export enum KnownEnum172 {
  /** Previous */
  Previous = "Previous",
  /** Current */
  Current = "Current",
  /** Next */
  Next = "Next"
}

/**
 * Defines values for Enum172. \
 * {@link KnownEnum172} can be used interchangeably with Enum172,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Previous** \
 * **Current** \
 * **Next**
 */
export type Enum172 = string;

/** Known values of {@link Enum173} that the service accepts. */
export enum KnownEnum173 {
  /** None */
  None = "None",
  /** AppCenter */
  AppCenter = "AppCenter",
  /** GitHub */
  GitHub = "GitHub",
  /** Xtc */
  Xtc = "Xtc"
}

/**
 * Defines values for Enum173. \
 * {@link KnownEnum173} can be used interchangeably with Enum173,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **AppCenter** \
 * **GitHub** \
 * **Xtc**
 */
export type Enum173 = string;

/** Known values of {@link Enum174} that the service accepts. */
export enum KnownEnum174 {
  /** Build */
  Build = "Build",
  /** Test */
  Test = "Test"
}

/**
 * Defines values for Enum174. \
 * {@link KnownEnum174} can be used interchangeably with Enum174,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Build** \
 * **Test**
 */
export type Enum174 = string;

/** Known values of {@link Enum175} that the service accepts. */
export enum KnownEnum175 {
  /** None */
  None = "None",
  /** AppCenter */
  AppCenter = "AppCenter",
  /** GitHub */
  GitHub = "GitHub",
  /** Xtc */
  Xtc = "Xtc"
}

/**
 * Defines values for Enum175. \
 * {@link KnownEnum175} can be used interchangeably with Enum175,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **AppCenter** \
 * **GitHub** \
 * **Xtc**
 */
export type Enum175 = string;

/** Known values of {@link Enum176} that the service accepts. */
export enum KnownEnum176 {
  /** Build */
  Build = "Build",
  /** Test */
  Test = "Test"
}

/**
 * Defines values for Enum176. \
 * {@link KnownEnum176} can be used interchangeably with Enum176,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Build** \
 * **Test**
 */
export type Enum176 = string;

/** Known values of {@link Enum177} that the service accepts. */
export enum KnownEnum177 {
  /** Enabled */
  Enabled = "Enabled",
  /** Disabled */
  Disabled = "Disabled",
  /** NotSet */
  NotSet = "NotSet"
}

/**
 * Defines values for Enum177. \
 * {@link KnownEnum177} can be used interchangeably with Enum177,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled** \
 * **NotSet**
 */
export type Enum177 = string;

/** Known values of {@link Enum178} that the service accepts. */
export enum KnownEnum178 {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredThree */
  FourHundredThree = 403,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for Enum178. \
 * {@link KnownEnum178} can be used interchangeably with Enum178,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **403** \
 * **500**
 */
export type Enum178 = number;

/** Known values of {@link Enum179} that the service accepts. */
export enum KnownEnum179 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum179. \
 * {@link KnownEnum179} can be used interchangeably with Enum179,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum179 = string;

/** Known values of {@link Get200ApplicationJsonPropertiesItemsEventTypesItem} that the service accepts. */
export enum KnownGet200ApplicationJsonPropertiesItemsEventTypesItem {
  /** NewCrashGroupCreated */
  NewCrashGroupCreated = "newCrashGroupCreated",
  /** NewAppReleased */
  NewAppReleased = "newAppReleased"
}

/**
 * Defines values for Get200ApplicationJsonPropertiesItemsEventTypesItem. \
 * {@link KnownGet200ApplicationJsonPropertiesItemsEventTypesItem} can be used interchangeably with Get200ApplicationJsonPropertiesItemsEventTypesItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **newCrashGroupCreated** \
 * **newAppReleased**
 */
export type Get200ApplicationJsonPropertiesItemsEventTypesItem = string;

/** Known values of {@link Enum181} that the service accepts. */
export enum KnownEnum181 {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredFour */
  FourHundredFour = 404,
  /** FourHundredNine */
  FourHundredNine = 409,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for Enum181. \
 * {@link KnownEnum181} can be used interchangeably with Enum181,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **404** \
 * **409** \
 * **500**
 */
export type Enum181 = number;

/** Known values of {@link Enum182} that the service accepts. */
export enum KnownEnum182 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum182. \
 * {@link KnownEnum182} can be used interchangeably with Enum182,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum182 = string;

/** Known values of {@link Enum183} that the service accepts. */
export enum KnownEnum183 {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer"
}

/**
 * Defines values for Enum183. \
 * {@link KnownEnum183} can be used interchangeably with Enum183,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer**
 */
export type Enum183 = string;

/** Known values of {@link Enum184} that the service accepts. */
export enum KnownEnum184 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum184. \
 * {@link KnownEnum184} can be used interchangeably with Enum184,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum184 = string;

/** Known values of {@link Get200ApplicationJsonItemsPermissionsItem} that the service accepts. */
export enum KnownGet200ApplicationJsonItemsPermissionsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Get200ApplicationJsonItemsPermissionsItem. \
 * {@link KnownGet200ApplicationJsonItemsPermissionsItem} can be used interchangeably with Get200ApplicationJsonItemsPermissionsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type Get200ApplicationJsonItemsPermissionsItem = string;

/** Known values of {@link Enum186} that the service accepts. */
export enum KnownEnum186 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for Enum186. \
 * {@link KnownEnum186} can be used interchangeably with Enum186,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type Enum186 = string;

/** Known values of {@link Enum187} that the service accepts. */
export enum KnownEnum187 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum187. \
 * {@link KnownEnum187} can be used interchangeably with Enum187,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum187 = string;

/** Known values of {@link Enum188} that the service accepts. */
export enum KnownEnum188 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp"
}

/**
 * Defines values for Enum188. \
 * {@link KnownEnum188} can be used interchangeably with Enum188,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp**
 */
export type Enum188 = string;

/** Known values of {@link Enum189} that the service accepts. */
export enum KnownEnum189 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum189. \
 * {@link KnownEnum189} can be used interchangeably with Enum189,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum189 = string;

/** Known values of {@link Enum190} that the service accepts. */
export enum KnownEnum190 {
  /** Android */
  Android = "Android",
  /** IOS */
  IOS = "iOS",
  /** MacOS */
  MacOS = "macOS",
  /** Tizen */
  Tizen = "Tizen",
  /** TvOS */
  TvOS = "tvOS",
  /** Windows */
  Windows = "Windows",
  /** Linux */
  Linux = "Linux",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Enum190. \
 * {@link KnownEnum190} can be used interchangeably with Enum190,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Android** \
 * **iOS** \
 * **macOS** \
 * **Tizen** \
 * **tvOS** \
 * **Windows** \
 * **Linux** \
 * **Custom**
 */
export type Enum190 = string;

/** Known values of {@link Enum191} that the service accepts. */
export enum KnownEnum191 {
  /** Org */
  Org = "org",
  /** User */
  User = "user"
}

/**
 * Defines values for Enum191. \
 * {@link KnownEnum191} can be used interchangeably with Enum191,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **org** \
 * **user**
 */
export type Enum191 = string;

/** Known values of {@link Enum192} that the service accepts. */
export enum KnownEnum192 {
  /** Java */
  Java = "Java",
  /** ObjectiveCSwift */
  ObjectiveCSwift = "Objective-C-Swift",
  /** UWP */
  UWP = "UWP",
  /** Cordova */
  Cordova = "Cordova",
  /** ReactNative */
  ReactNative = "React-Native",
  /** Unity */
  Unity = "Unity",
  /** Electron */
  Electron = "Electron",
  /** Xamarin */
  Xamarin = "Xamarin",
  /** WPF */
  WPF = "WPF",
  /** WinForms */
  WinForms = "WinForms",
  /** Unknown */
  Unknown = "Unknown",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Enum192. \
 * {@link KnownEnum192} can be used interchangeably with Enum192,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Java** \
 * **Objective-C-Swift** \
 * **UWP** \
 * **Cordova** \
 * **React-Native** \
 * **Unity** \
 * **Electron** \
 * **Xamarin** \
 * **WPF** \
 * **WinForms** \
 * **Unknown** \
 * **Custom**
 */
export type Enum192 = string;

/** Known values of {@link Enum193} that the service accepts. */
export enum KnownEnum193 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for Enum193. \
 * {@link KnownEnum193} can be used interchangeably with Enum193,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type Enum193 = string;

/** Known values of {@link Enum194} that the service accepts. */
export enum KnownEnum194 {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Enum194. \
 * {@link KnownEnum194} can be used interchangeably with Enum194,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type Enum194 = string;

/** Known values of {@link Enum195} that the service accepts. */
export enum KnownEnum195 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum195. \
 * {@link KnownEnum195} can be used interchangeably with Enum195,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum195 = string;

/** Known values of {@link Enum196} that the service accepts. */
export enum KnownEnum196 {
  /** Xamarin */
  Xamarin = "xamarin",
  /** Xcode */
  Xcode = "xcode",
  /** Node */
  Node = "node"
}

/**
 * Defines values for Enum196. \
 * {@link KnownEnum196} can be used interchangeably with Enum196,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **xamarin** \
 * **xcode** \
 * **node**
 */
export type Enum196 = string;

/** Known values of {@link Enum197} that the service accepts. */
export enum KnownEnum197 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum197. \
 * {@link KnownEnum197} can be used interchangeably with Enum197,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum197 = string;

/** Known values of {@link Enum198} that the service accepts. */
export enum KnownEnum198 {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Enum198. \
 * {@link KnownEnum198} can be used interchangeably with Enum198,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type Enum198 = string;

/** Known values of {@link Enum199} that the service accepts. */
export enum KnownEnum199 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for Enum199. \
 * {@link KnownEnum199} can be used interchangeably with Enum199,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type Enum199 = string;

/** Known values of {@link Enum200} that the service accepts. */
export enum KnownEnum200 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum200. \
 * {@link KnownEnum200} can be used interchangeably with Enum200,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum200 = string;

/** Known values of {@link PostRequestBodyContentApplicationJsonSchemaItemFileType} that the service accepts. */
export enum KnownPostRequestBodyContentApplicationJsonSchemaItemFileType {
  /** DsymFile */
  DsymFile = "dsym-file",
  /** AppFile */
  AppFile = "app-file",
  /** TestFile */
  TestFile = "test-file"
}

/**
 * Defines values for PostRequestBodyContentApplicationJsonSchemaItemFileType. \
 * {@link KnownPostRequestBodyContentApplicationJsonSchemaItemFileType} can be used interchangeably with PostRequestBodyContentApplicationJsonSchemaItemFileType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **dsym-file** \
 * **app-file** \
 * **test-file**
 */
export type PostRequestBodyContentApplicationJsonSchemaItemFileType = string;

/** Known values of {@link PostResponses200ContentApplicationJsonSchemaItemFileType} that the service accepts. */
export enum KnownPostResponses200ContentApplicationJsonSchemaItemFileType {
  /** DsymFile */
  DsymFile = "dsym-file",
  /** AppFile */
  AppFile = "app-file",
  /** TestFile */
  TestFile = "test-file"
}

/**
 * Defines values for PostResponses200ContentApplicationJsonSchemaItemFileType. \
 * {@link KnownPostResponses200ContentApplicationJsonSchemaItemFileType} can be used interchangeably with PostResponses200ContentApplicationJsonSchemaItemFileType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **dsym-file** \
 * **app-file** \
 * **test-file**
 */
export type PostResponses200ContentApplicationJsonSchemaItemFileType = string;

/** Known values of {@link PostContentSchemaFileType} that the service accepts. */
export enum KnownPostContentSchemaFileType {
  /** DsymFile */
  DsymFile = "dsym-file",
  /** AppFile */
  AppFile = "app-file",
  /** TestFile */
  TestFile = "test-file"
}

/**
 * Defines values for PostContentSchemaFileType. \
 * {@link KnownPostContentSchemaFileType} can be used interchangeably with PostContentSchemaFileType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **dsym-file** \
 * **app-file** \
 * **test-file**
 */
export type PostContentSchemaFileType = string;

/** Known values of {@link Get200ApplicationJsonItems1PermissionsItem} that the service accepts. */
export enum KnownGet200ApplicationJsonItems1PermissionsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Get200ApplicationJsonItems1PermissionsItem. \
 * {@link KnownGet200ApplicationJsonItems1PermissionsItem} can be used interchangeably with Get200ApplicationJsonItems1PermissionsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type Get200ApplicationJsonItems1PermissionsItem = string;

/** Known values of {@link Enum205} that the service accepts. */
export enum KnownEnum205 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum205. \
 * {@link KnownEnum205} can be used interchangeably with Enum205,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum205 = string;

/** Known values of {@link Enum206} that the service accepts. */
export enum KnownEnum206 {
  /** Available */
  Available = "available",
  /** Ignored */
  Ignored = "ignored",
  /** Missing */
  Missing = "missing"
}

/**
 * Defines values for Enum206. \
 * {@link KnownEnum206} can be used interchangeably with Enum206,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **available** \
 * **ignored** \
 * **missing**
 */
export type Enum206 = string;

/** Known values of {@link Enum207} that the service accepts. */
export enum KnownEnum207 {
  /** Apple */
  Apple = "Apple",
  /** JavaScript */
  JavaScript = "JavaScript",
  /** Breakpad */
  Breakpad = "Breakpad",
  /** AndroidProguard */
  AndroidProguard = "AndroidProguard",
  /** UWP */
  UWP = "UWP"
}

/**
 * Defines values for Enum207. \
 * {@link KnownEnum207} can be used interchangeably with Enum207,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Apple** \
 * **JavaScript** \
 * **Breakpad** \
 * **AndroidProguard** \
 * **UWP**
 */
export type Enum207 = string;

/** Known values of {@link Enum208} that the service accepts. */
export enum KnownEnum208 {
  /** System */
  System = "System",
  /** User */
  User = "User"
}

/**
 * Defines values for Enum208. \
 * {@link KnownEnum208} can be used interchangeably with Enum208,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **System** \
 * **User**
 */
export type Enum208 = string;

/** Known values of {@link Enum209} that the service accepts. */
export enum KnownEnum209 {
  /** Available */
  Available = "available",
  /** Ignored */
  Ignored = "ignored"
}

/**
 * Defines values for Enum209. \
 * {@link KnownEnum209} can be used interchangeably with Enum209,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **available** \
 * **ignored**
 */
export type Enum209 = string;

/** Known values of {@link Enum210} that the service accepts. */
export enum KnownEnum210 {
  /** Apple */
  Apple = "Apple",
  /** JavaScript */
  JavaScript = "JavaScript",
  /** Breakpad */
  Breakpad = "Breakpad",
  /** AndroidProguard */
  AndroidProguard = "AndroidProguard",
  /** UWP */
  UWP = "UWP"
}

/**
 * Defines values for Enum210. \
 * {@link KnownEnum210} can be used interchangeably with Enum210,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Apple** \
 * **JavaScript** \
 * **Breakpad** \
 * **AndroidProguard** \
 * **UWP**
 */
export type Enum210 = string;

/** Known values of {@link Enum211} that the service accepts. */
export enum KnownEnum211 {
  /** System */
  System = "System",
  /** User */
  User = "User"
}

/**
 * Defines values for Enum211. \
 * {@link KnownEnum211} can be used interchangeably with Enum211,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **System** \
 * **User**
 */
export type Enum211 = string;

/** Known values of {@link Enum212} that the service accepts. */
export enum KnownEnum212 {
  /** Available */
  Available = "available",
  /** Ignored */
  Ignored = "ignored"
}

/**
 * Defines values for Enum212. \
 * {@link KnownEnum212} can be used interchangeably with Enum212,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **available** \
 * **ignored**
 */
export type Enum212 = string;

/** Known values of {@link GetResponses200ContentApplicationJsonSchemaItemType} that the service accepts. */
export enum KnownGetResponses200ContentApplicationJsonSchemaItemType {
  /** Apple */
  Apple = "Apple",
  /** JavaScript */
  JavaScript = "JavaScript",
  /** Breakpad */
  Breakpad = "Breakpad",
  /** AndroidProguard */
  AndroidProguard = "AndroidProguard",
  /** UWP */
  UWP = "UWP"
}

/**
 * Defines values for GetResponses200ContentApplicationJsonSchemaItemType. \
 * {@link KnownGetResponses200ContentApplicationJsonSchemaItemType} can be used interchangeably with GetResponses200ContentApplicationJsonSchemaItemType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Apple** \
 * **JavaScript** \
 * **Breakpad** \
 * **AndroidProguard** \
 * **UWP**
 */
export type GetResponses200ContentApplicationJsonSchemaItemType = string;

/** Known values of {@link Enum214} that the service accepts. */
export enum KnownEnum214 {
  /** System */
  System = "System",
  /** User */
  User = "User"
}

/**
 * Defines values for Enum214. \
 * {@link KnownEnum214} can be used interchangeably with Enum214,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **System** \
 * **User**
 */
export type Enum214 = string;

/** Known values of {@link Enum215} that the service accepts. */
export enum KnownEnum215 {
  /** Available */
  Available = "available",
  /** Ignored */
  Ignored = "ignored"
}

/**
 * Defines values for Enum215. \
 * {@link KnownEnum215} can be used interchangeably with Enum215,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **available** \
 * **ignored**
 */
export type Enum215 = string;

/** Known values of {@link Enum216} that the service accepts. */
export enum KnownEnum216 {
  /** Created */
  Created = "created",
  /** Committed */
  Committed = "committed",
  /** Aborted */
  Aborted = "aborted",
  /** Processing */
  Processing = "processing",
  /** Indexed */
  Indexed = "indexed",
  /** Failed */
  Failed = "failed"
}

/**
 * Defines values for Enum216. \
 * {@link KnownEnum216} can be used interchangeably with Enum216,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **created** \
 * **committed** \
 * **aborted** \
 * **processing** \
 * **indexed** \
 * **failed**
 */
export type Enum216 = string;

/** Known values of {@link Enum217} that the service accepts. */
export enum KnownEnum217 {
  /** Apple */
  Apple = "Apple",
  /** JavaScript */
  JavaScript = "JavaScript",
  /** Breakpad */
  Breakpad = "Breakpad",
  /** AndroidProguard */
  AndroidProguard = "AndroidProguard",
  /** UWP */
  UWP = "UWP"
}

/**
 * Defines values for Enum217. \
 * {@link KnownEnum217} can be used interchangeably with Enum217,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Apple** \
 * **JavaScript** \
 * **Breakpad** \
 * **AndroidProguard** \
 * **UWP**
 */
export type Enum217 = string;

/** Known values of {@link Enum218} that the service accepts. */
export enum KnownEnum218 {
  /** User */
  User = "User",
  /** System */
  System = "System"
}

/**
 * Defines values for Enum218. \
 * {@link KnownEnum218} can be used interchangeably with Enum218,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **System**
 */
export type Enum218 = string;

/** Known values of {@link PatchContentSchemaStatus} that the service accepts. */
export enum KnownPatchContentSchemaStatus {
  /** Committed */
  Committed = "committed",
  /** Aborted */
  Aborted = "aborted"
}

/**
 * Defines values for PatchContentSchemaStatus. \
 * {@link KnownPatchContentSchemaStatus} can be used interchangeably with PatchContentSchemaStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **committed** \
 * **aborted**
 */
export type PatchContentSchemaStatus = string;

/** Known values of {@link Enum220} that the service accepts. */
export enum KnownEnum220 {
  /** Created */
  Created = "created",
  /** Committed */
  Committed = "committed",
  /** Aborted */
  Aborted = "aborted",
  /** Processing */
  Processing = "processing",
  /** Indexed */
  Indexed = "indexed",
  /** Failed */
  Failed = "failed"
}

/**
 * Defines values for Enum220. \
 * {@link KnownEnum220} can be used interchangeably with Enum220,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **created** \
 * **committed** \
 * **aborted** \
 * **processing** \
 * **indexed** \
 * **failed**
 */
export type Enum220 = string;

/** Known values of {@link Enum221} that the service accepts. */
export enum KnownEnum221 {
  /** Apple */
  Apple = "Apple",
  /** JavaScript */
  JavaScript = "JavaScript",
  /** Breakpad */
  Breakpad = "Breakpad",
  /** AndroidProguard */
  AndroidProguard = "AndroidProguard",
  /** UWP */
  UWP = "UWP"
}

/**
 * Defines values for Enum221. \
 * {@link KnownEnum221} can be used interchangeably with Enum221,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Apple** \
 * **JavaScript** \
 * **Breakpad** \
 * **AndroidProguard** \
 * **UWP**
 */
export type Enum221 = string;

/** Known values of {@link Enum222} that the service accepts. */
export enum KnownEnum222 {
  /** User */
  User = "User",
  /** System */
  System = "System"
}

/**
 * Defines values for Enum222. \
 * {@link KnownEnum222} can be used interchangeably with Enum222,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **System**
 */
export type Enum222 = string;

/** Known values of {@link Enum223} that the service accepts. */
export enum KnownEnum223 {
  /** Created */
  Created = "created",
  /** Committed */
  Committed = "committed",
  /** Aborted */
  Aborted = "aborted",
  /** Processing */
  Processing = "processing",
  /** Indexed */
  Indexed = "indexed",
  /** Failed */
  Failed = "failed"
}

/**
 * Defines values for Enum223. \
 * {@link KnownEnum223} can be used interchangeably with Enum223,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **created** \
 * **committed** \
 * **aborted** \
 * **processing** \
 * **indexed** \
 * **failed**
 */
export type Enum223 = string;

/** Known values of {@link Enum224} that the service accepts. */
export enum KnownEnum224 {
  /** Apple */
  Apple = "Apple",
  /** JavaScript */
  JavaScript = "JavaScript",
  /** Breakpad */
  Breakpad = "Breakpad",
  /** AndroidProguard */
  AndroidProguard = "AndroidProguard",
  /** UWP */
  UWP = "UWP"
}

/**
 * Defines values for Enum224. \
 * {@link KnownEnum224} can be used interchangeably with Enum224,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Apple** \
 * **JavaScript** \
 * **Breakpad** \
 * **AndroidProguard** \
 * **UWP**
 */
export type Enum224 = string;

/** Known values of {@link Enum225} that the service accepts. */
export enum KnownEnum225 {
  /** User */
  User = "User",
  /** System */
  System = "System"
}

/**
 * Defines values for Enum225. \
 * {@link KnownEnum225} can be used interchangeably with Enum225,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **System**
 */
export type Enum225 = string;

/** Known values of {@link Enum226} that the service accepts. */
export enum KnownEnum226 {
  /** All */
  All = "all",
  /** Uploaded */
  Uploaded = "uploaded",
  /** Processed */
  Processed = "processed"
}

/**
 * Defines values for Enum226. \
 * {@link KnownEnum226} can be used interchangeably with Enum226,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **all** \
 * **uploaded** \
 * **processed**
 */
export type Enum226 = string;

/** Known values of {@link Enum227} that the service accepts. */
export enum KnownEnum227 {
  /** AndroidProguard */
  AndroidProguard = "AndroidProguard",
  /** Apple */
  Apple = "Apple",
  /** Breakpad */
  Breakpad = "Breakpad",
  /** JavaScript */
  JavaScript = "JavaScript",
  /** UWP */
  UWP = "UWP"
}

/**
 * Defines values for Enum227. \
 * {@link KnownEnum227} can be used interchangeably with Enum227,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AndroidProguard** \
 * **Apple** \
 * **Breakpad** \
 * **JavaScript** \
 * **UWP**
 */
export type Enum227 = string;

/** Known values of {@link Enum228} that the service accepts. */
export enum KnownEnum228 {
  /** Created */
  Created = "created",
  /** Committed */
  Committed = "committed",
  /** Aborted */
  Aborted = "aborted",
  /** Processing */
  Processing = "processing",
  /** Indexed */
  Indexed = "indexed",
  /** Failed */
  Failed = "failed"
}

/**
 * Defines values for Enum228. \
 * {@link KnownEnum228} can be used interchangeably with Enum228,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **created** \
 * **committed** \
 * **aborted** \
 * **processing** \
 * **indexed** \
 * **failed**
 */
export type Enum228 = string;

/** Known values of {@link GetResponses200ContentApplicationJsonSchemaItemSymbolType} that the service accepts. */
export enum KnownGetResponses200ContentApplicationJsonSchemaItemSymbolType {
  /** Apple */
  Apple = "Apple",
  /** JavaScript */
  JavaScript = "JavaScript",
  /** Breakpad */
  Breakpad = "Breakpad",
  /** AndroidProguard */
  AndroidProguard = "AndroidProguard",
  /** UWP */
  UWP = "UWP"
}

/**
 * Defines values for GetResponses200ContentApplicationJsonSchemaItemSymbolType. \
 * {@link KnownGetResponses200ContentApplicationJsonSchemaItemSymbolType} can be used interchangeably with GetResponses200ContentApplicationJsonSchemaItemSymbolType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Apple** \
 * **JavaScript** \
 * **Breakpad** \
 * **AndroidProguard** \
 * **UWP**
 */
export type GetResponses200ContentApplicationJsonSchemaItemSymbolType = string;

/** Known values of {@link Enum230} that the service accepts. */
export enum KnownEnum230 {
  /** User */
  User = "User",
  /** System */
  System = "System"
}

/**
 * Defines values for Enum230. \
 * {@link KnownEnum230} can be used interchangeably with Enum230,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **System**
 */
export type Enum230 = string;

/** Known values of {@link PostContentSchemaSymbolType} that the service accepts. */
export enum KnownPostContentSchemaSymbolType {
  /** Apple */
  Apple = "Apple",
  /** JavaScript */
  JavaScript = "JavaScript",
  /** Breakpad */
  Breakpad = "Breakpad",
  /** AndroidProguard */
  AndroidProguard = "AndroidProguard",
  /** UWP */
  UWP = "UWP"
}

/**
 * Defines values for PostContentSchemaSymbolType. \
 * {@link KnownPostContentSchemaSymbolType} can be used interchangeably with PostContentSchemaSymbolType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Apple** \
 * **JavaScript** \
 * **Breakpad** \
 * **AndroidProguard** \
 * **UWP**
 */
export type PostContentSchemaSymbolType = string;

/** Known values of {@link Enum232} that the service accepts. */
export enum KnownEnum232 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum232. \
 * {@link KnownEnum232} can be used interchangeably with Enum232,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum232 = string;

/** Known values of {@link Enum233} that the service accepts. */
export enum KnownEnum233 {
  /** Github */
  Github = "github",
  /** Bitbucket */
  Bitbucket = "bitbucket",
  /** Vsts */
  Vsts = "vsts",
  /** Gitlab */
  Gitlab = "gitlab"
}

/**
 * Defines values for Enum233. \
 * {@link KnownEnum233} can be used interchangeably with Enum233,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **github** \
 * **bitbucket** \
 * **vsts** \
 * **gitlab**
 */
export type Enum233 = string;

/** Known values of {@link Enum234} that the service accepts. */
export enum KnownEnum234 {
  /** Lite */
  Lite = "lite",
  /** Full */
  Full = "full"
}

/**
 * Defines values for Enum234. \
 * {@link KnownEnum234} can be used interchangeably with Enum234,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **lite** \
 * **full**
 */
export type Enum234 = string;

/** Known values of {@link Enum235} that the service accepts. */
export enum KnownEnum235 {
  /** Unauthorized */
  Unauthorized = "unauthorized",
  /** Inactive */
  Inactive = "inactive",
  /** Active */
  Active = "active"
}

/**
 * Defines values for Enum235. \
 * {@link KnownEnum235} can be used interchangeably with Enum235,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **unauthorized** \
 * **inactive** \
 * **active**
 */
export type Enum235 = string;

/** Known values of {@link Enum236} that the service accepts. */
export enum KnownEnum236 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum236. \
 * {@link KnownEnum236} can be used interchangeably with Enum236,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum236 = string;

/** Known values of {@link Enum237} that the service accepts. */
export enum KnownEnum237 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum237. \
 * {@link KnownEnum237} can be used interchangeably with Enum237,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum237 = string;

/** Known values of {@link Put404ApplicationJsonProperties} that the service accepts. */
export enum KnownPut404ApplicationJsonProperties {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Put404ApplicationJsonProperties. \
 * {@link KnownPut404ApplicationJsonProperties} can be used interchangeably with Put404ApplicationJsonProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Put404ApplicationJsonProperties = string;

/** Known values of {@link Enum239} that the service accepts. */
export enum KnownEnum239 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum239. \
 * {@link KnownEnum239} can be used interchangeably with Enum239,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum239 = string;

/** Known values of {@link Enum240} that the service accepts. */
export enum KnownEnum240 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum240. \
 * {@link KnownEnum240} can be used interchangeably with Enum240,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum240 = string;

/** Known values of {@link Enum241} that the service accepts. */
export enum KnownEnum241 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum241. \
 * {@link KnownEnum241} can be used interchangeably with Enum241,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum241 = string;

/** Known values of {@link Enum242} that the service accepts. */
export enum KnownEnum242 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum242. \
 * {@link KnownEnum242} can be used interchangeably with Enum242,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum242 = string;

/** Known values of {@link Enum243} that the service accepts. */
export enum KnownEnum243 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum243. \
 * {@link KnownEnum243} can be used interchangeably with Enum243,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum243 = string;

/** Known values of {@link Enum244} that the service accepts. */
export enum KnownEnum244 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum244. \
 * {@link KnownEnum244} can be used interchangeably with Enum244,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum244 = string;

/** Known values of {@link ProvisioningProfileResponseProvisioningProfileType} that the service accepts. */
export enum KnownProvisioningProfileResponseProvisioningProfileType {
  /** Adhoc */
  Adhoc = "adhoc",
  /** Enterprise */
  Enterprise = "enterprise",
  /** Other */
  Other = "other"
}

/**
 * Defines values for ProvisioningProfileResponseProvisioningProfileType. \
 * {@link KnownProvisioningProfileResponseProvisioningProfileType} can be used interchangeably with ProvisioningProfileResponseProvisioningProfileType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **adhoc** \
 * **enterprise** \
 * **other**
 */
export type ProvisioningProfileResponseProvisioningProfileType = string;

/** Known values of {@link Enum246} that the service accepts. */
export enum KnownEnum246 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum246. \
 * {@link KnownEnum246} can be used interchangeably with Enum246,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum246 = string;

/** Known values of {@link Enum247} that the service accepts. */
export enum KnownEnum247 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum247. \
 * {@link KnownEnum247} can be used interchangeably with Enum247,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum247 = string;

/** Known values of {@link Enum248} that the service accepts. */
export enum KnownEnum248 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum248. \
 * {@link KnownEnum248} can be used interchangeably with Enum248,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum248 = string;

/** Known values of {@link Enum249} that the service accepts. */
export enum KnownEnum249 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum249. \
 * {@link KnownEnum249} can be used interchangeably with Enum249,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum249 = string;

/** Known values of {@link Enum250} that the service accepts. */
export enum KnownEnum250 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum250. \
 * {@link KnownEnum250} can be used interchangeably with Enum250,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum250 = string;

/** Known values of {@link Enum251} that the service accepts. */
export enum KnownEnum251 {
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Appcenter */
  Appcenter = "appcenter"
}

/**
 * Defines values for Enum251. \
 * {@link KnownEnum251} can be used interchangeably with Enum251,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **hockeyapp** \
 * **appcenter**
 */
export type Enum251 = string;

/** Known values of {@link Enum252} that the service accepts. */
export enum KnownEnum252 {
  /** Adhoc */
  Adhoc = "adhoc",
  /** Enterprise */
  Enterprise = "enterprise",
  /** Other */
  Other = "other"
}

/**
 * Defines values for Enum252. \
 * {@link KnownEnum252} can be used interchangeably with Enum252,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **adhoc** \
 * **enterprise** \
 * **other**
 */
export type Enum252 = string;

/** Known values of {@link Enum253} that the service accepts. */
export enum KnownEnum253 {
  /** Group */
  Group = "group",
  /** Store */
  Store = "store",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Enum253. \
 * {@link KnownEnum253} can be used interchangeably with Enum253,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **group** \
 * **store** \
 * **tester**
 */
export type Enum253 = string;

/** Known values of {@link Enum254} that the service accepts. */
export enum KnownEnum254 {
  /** Intune */
  Intune = "intune",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Apple */
  Apple = "apple",
  /** None */
  None = "none"
}

/**
 * Defines values for Enum254. \
 * {@link KnownEnum254} can be used interchangeably with Enum254,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **intune** \
 * **googleplay** \
 * **apple** \
 * **none**
 */
export type Enum254 = string;

/** Known values of {@link Enum255} that the service accepts. */
export enum KnownEnum255 {
  /** Intune */
  Intune = "intune",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Apple */
  Apple = "apple",
  /** None */
  None = "none"
}

/**
 * Defines values for Enum255. \
 * {@link KnownEnum255} can be used interchangeably with Enum255,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **intune** \
 * **googleplay** \
 * **apple** \
 * **none**
 */
export type Enum255 = string;

/** Known values of {@link Enum256} that the service accepts. */
export enum KnownEnum256 {
  /** Group */
  Group = "group",
  /** Store */
  Store = "store",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Enum256. \
 * {@link KnownEnum256} can be used interchangeably with Enum256,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **group** \
 * **store** \
 * **tester**
 */
export type Enum256 = string;

/** Known values of {@link Enum257} that the service accepts. */
export enum KnownEnum257 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum257. \
 * {@link KnownEnum257} can be used interchangeably with Enum257,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum257 = string;

/** Known values of {@link Enum258} that the service accepts. */
export enum KnownEnum258 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum258. \
 * {@link KnownEnum258} can be used interchangeably with Enum258,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum258 = string;

/** Known values of {@link Put400ApplicationJsonAllOfProperties} that the service accepts. */
export enum KnownPut400ApplicationJsonAllOfProperties {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Put400ApplicationJsonAllOfProperties. \
 * {@link KnownPut400ApplicationJsonAllOfProperties} can be used interchangeably with Put400ApplicationJsonAllOfProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Put400ApplicationJsonAllOfProperties = string;

/** Known values of {@link Enum260} that the service accepts. */
export enum KnownEnum260 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum260. \
 * {@link KnownEnum260} can be used interchangeably with Enum260,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum260 = string;

/** Known values of {@link Patch400ApplicationJsonAllOfProperties} that the service accepts. */
export enum KnownPatch400ApplicationJsonAllOfProperties {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Patch400ApplicationJsonAllOfProperties. \
 * {@link KnownPatch400ApplicationJsonAllOfProperties} can be used interchangeably with Patch400ApplicationJsonAllOfProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Patch400ApplicationJsonAllOfProperties = string;

/** Known values of {@link Patch404ApplicationJsonProperties} that the service accepts. */
export enum KnownPatch404ApplicationJsonProperties {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Patch404ApplicationJsonProperties. \
 * {@link KnownPatch404ApplicationJsonProperties} can be used interchangeably with Patch404ApplicationJsonProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Patch404ApplicationJsonProperties = string;

/** Known values of {@link Enum263} that the service accepts. */
export enum KnownEnum263 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum263. \
 * {@link KnownEnum263} can be used interchangeably with Enum263,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum263 = string;

/** Known values of {@link Enum264} that the service accepts. */
export enum KnownEnum264 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum264. \
 * {@link KnownEnum264} can be used interchangeably with Enum264,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum264 = string;

/** Known values of {@link Enum265} that the service accepts. */
export enum KnownEnum265 {
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Appcenter */
  Appcenter = "appcenter"
}

/**
 * Defines values for Enum265. \
 * {@link KnownEnum265} can be used interchangeably with Enum265,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **hockeyapp** \
 * **appcenter**
 */
export type Enum265 = string;

/** Known values of {@link GetResponses200ContentApplicationJsonSchemaItemDestinationType} that the service accepts. */
export enum KnownGetResponses200ContentApplicationJsonSchemaItemDestinationType {
  /** Group */
  Group = "group",
  /** Store */
  Store = "store",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for GetResponses200ContentApplicationJsonSchemaItemDestinationType. \
 * {@link KnownGetResponses200ContentApplicationJsonSchemaItemDestinationType} can be used interchangeably with GetResponses200ContentApplicationJsonSchemaItemDestinationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **group** \
 * **store** \
 * **tester**
 */
export type GetResponses200ContentApplicationJsonSchemaItemDestinationType = string;

/** Known values of {@link Enum267} that the service accepts. */
export enum KnownEnum267 {
  /** Intune */
  Intune = "intune",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Apple */
  Apple = "apple",
  /** None */
  None = "none"
}

/**
 * Defines values for Enum267. \
 * {@link KnownEnum267} can be used interchangeably with Enum267,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **intune** \
 * **googleplay** \
 * **apple** \
 * **none**
 */
export type Enum267 = string;

/** Known values of {@link Get200ApplicationJsonItemsDestinationsAllOfProperties} that the service accepts. */
export enum KnownGet200ApplicationJsonItemsDestinationsAllOfProperties {
  /** Intune */
  Intune = "intune",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Apple */
  Apple = "apple",
  /** None */
  None = "none"
}

/**
 * Defines values for Get200ApplicationJsonItemsDestinationsAllOfProperties. \
 * {@link KnownGet200ApplicationJsonItemsDestinationsAllOfProperties} can be used interchangeably with Get200ApplicationJsonItemsDestinationsAllOfProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **intune** \
 * **googleplay** \
 * **apple** \
 * **none**
 */
export type Get200ApplicationJsonItemsDestinationsAllOfProperties = string;

/** Known values of {@link Enum269} that the service accepts. */
export enum KnownEnum269 {
  /** Group */
  Group = "group",
  /** Store */
  Store = "store",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Enum269. \
 * {@link KnownEnum269} can be used interchangeably with Enum269,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **group** \
 * **store** \
 * **tester**
 */
export type Enum269 = string;

/** Known values of {@link Enum270} that the service accepts. */
export enum KnownEnum270 {
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Appcenter */
  Appcenter = "appcenter"
}

/**
 * Defines values for Enum270. \
 * {@link KnownEnum270} can be used interchangeably with Enum270,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **hockeyapp** \
 * **appcenter**
 */
export type Enum270 = string;

/** Known values of {@link Enum271} that the service accepts. */
export enum KnownEnum271 {
  /** Group */
  Group = "group",
  /** Store */
  Store = "store",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Enum271. \
 * {@link KnownEnum271} can be used interchangeably with Enum271,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **group** \
 * **store** \
 * **tester**
 */
export type Enum271 = string;

/** Known values of {@link Enum272} that the service accepts. */
export enum KnownEnum272 {
  /** Intune */
  Intune = "intune",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Apple */
  Apple = "apple",
  /** None */
  None = "none"
}

/**
 * Defines values for Enum272. \
 * {@link KnownEnum272} can be used interchangeably with Enum272,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **intune** \
 * **googleplay** \
 * **apple** \
 * **none**
 */
export type Enum272 = string;

/** Known values of {@link Enum273} that the service accepts. */
export enum KnownEnum273 {
  /** Intune */
  Intune = "intune",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Apple */
  Apple = "apple",
  /** None */
  None = "none"
}

/**
 * Defines values for Enum273. \
 * {@link KnownEnum273} can be used interchangeably with Enum273,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **intune** \
 * **googleplay** \
 * **apple** \
 * **none**
 */
export type Enum273 = string;

/** Known values of {@link Enum274} that the service accepts. */
export enum KnownEnum274 {
  /** Group */
  Group = "group",
  /** Store */
  Store = "store",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Enum274. \
 * {@link KnownEnum274} can be used interchangeably with Enum274,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **group** \
 * **store** \
 * **tester**
 */
export type Enum274 = string;

/** Known values of {@link Enum275} that the service accepts. */
export enum KnownEnum275 {
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Appcenter */
  Appcenter = "appcenter"
}

/**
 * Defines values for Enum275. \
 * {@link KnownEnum275} can be used interchangeably with Enum275,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **hockeyapp** \
 * **appcenter**
 */
export type Enum275 = string;

/** Known values of {@link Enum276} that the service accepts. */
export enum KnownEnum276 {
  /** Group */
  Group = "group",
  /** Store */
  Store = "store",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Enum276. \
 * {@link KnownEnum276} can be used interchangeably with Enum276,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **group** \
 * **store** \
 * **tester**
 */
export type Enum276 = string;

/** Known values of {@link Enum277} that the service accepts. */
export enum KnownEnum277 {
  /** Intune */
  Intune = "intune",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Apple */
  Apple = "apple",
  /** None */
  None = "none"
}

/**
 * Defines values for Enum277. \
 * {@link KnownEnum277} can be used interchangeably with Enum277,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **intune** \
 * **googleplay** \
 * **apple** \
 * **none**
 */
export type Enum277 = string;

/** Known values of {@link Enum278} that the service accepts. */
export enum KnownEnum278 {
  /** Intune */
  Intune = "intune",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Apple */
  Apple = "apple",
  /** None */
  None = "none"
}

/**
 * Defines values for Enum278. \
 * {@link KnownEnum278} can be used interchangeably with Enum278,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **intune** \
 * **googleplay** \
 * **apple** \
 * **none**
 */
export type Enum278 = string;

/** Known values of {@link Enum279} that the service accepts. */
export enum KnownEnum279 {
  /** Group */
  Group = "group",
  /** Store */
  Store = "store",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Enum279. \
 * {@link KnownEnum279} can be used interchangeably with Enum279,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **group** \
 * **store** \
 * **tester**
 */
export type Enum279 = string;

/** Known values of {@link HeadDefaultApplicationJsonPropertiesProperties} that the service accepts. */
export enum KnownHeadDefaultApplicationJsonPropertiesProperties {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for HeadDefaultApplicationJsonPropertiesProperties. \
 * {@link KnownHeadDefaultApplicationJsonPropertiesProperties} can be used interchangeably with HeadDefaultApplicationJsonPropertiesProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type HeadDefaultApplicationJsonPropertiesProperties = string;

/** Known values of {@link Enum281} that the service accepts. */
export enum KnownEnum281 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum281. \
 * {@link KnownEnum281} can be used interchangeably with Enum281,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum281 = string;

/** Known values of {@link PutContentSchemaType} that the service accepts. */
export enum KnownPutContentSchemaType {
  /** ApnsTokenConfig */
  ApnsTokenConfig = "apns_token_config",
  /** GcmConfig */
  GcmConfig = "gcm_config",
  /** WnsConfig */
  WnsConfig = "wns_config"
}

/**
 * Defines values for PutContentSchemaType. \
 * {@link KnownPutContentSchemaType} can be used interchangeably with PutContentSchemaType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apns_token_config** \
 * **gcm_config** \
 * **wns_config**
 */
export type PutContentSchemaType = string;

/** Known values of {@link PutDefaultApplicationJsonPropertiesProperties} that the service accepts. */
export enum KnownPutDefaultApplicationJsonPropertiesProperties {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for PutDefaultApplicationJsonPropertiesProperties. \
 * {@link KnownPutDefaultApplicationJsonPropertiesProperties} can be used interchangeably with PutDefaultApplicationJsonPropertiesProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type PutDefaultApplicationJsonPropertiesProperties = string;

/** Known values of {@link Enum284} that the service accepts. */
export enum KnownEnum284 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum284. \
 * {@link KnownEnum284} can be used interchangeably with Enum284,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum284 = string;

/** Known values of {@link Get200ApplicationJsonAllOfProperties} that the service accepts. */
export enum KnownGet200ApplicationJsonAllOfProperties {
  /** AudiencesTarget */
  AudiencesTarget = "audiences_target",
  /** DevicesTarget */
  DevicesTarget = "devices_target",
  /** UserIdsTarget */
  UserIdsTarget = "user_ids_target",
  /** AccountIdsTarget */
  AccountIdsTarget = "account_ids_target",
  /** BroadcastTarget */
  BroadcastTarget = "broadcast_target"
}

/**
 * Defines values for Get200ApplicationJsonAllOfProperties. \
 * {@link KnownGet200ApplicationJsonAllOfProperties} can be used interchangeably with Get200ApplicationJsonAllOfProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **audiences_target** \
 * **devices_target** \
 * **user_ids_target** \
 * **account_ids_target** \
 * **broadcast_target**
 */
export type Get200ApplicationJsonAllOfProperties = string;

/** Known values of {@link NotificationStates} that the service accepts. */
export enum KnownNotificationStates {
  /** Queued */
  Queued = "Queued",
  /** Sending */
  Sending = "Sending",
  /** Completed */
  Completed = "Completed",
  /** Failed */
  Failed = "Failed",
  /** NoTargetFound */
  NoTargetFound = "NoTargetFound"
}

/**
 * Defines values for NotificationStates. \
 * {@link KnownNotificationStates} can be used interchangeably with NotificationStates,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Queued** \
 * **Sending** \
 * **Completed** \
 * **Failed** \
 * **NoTargetFound**
 */
export type NotificationStates = string;

/** Known values of {@link Enum287} that the service accepts. */
export enum KnownEnum287 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum287. \
 * {@link KnownEnum287} can be used interchangeably with Enum287,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum287 = string;

/** Known values of {@link Enum288} that the service accepts. */
export enum KnownEnum288 {
  /** Allpages */
  Allpages = "allpages",
  /** None */
  None = "none"
}

/**
 * Defines values for Enum288. \
 * {@link KnownEnum288} can be used interchangeably with Enum288,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **allpages** \
 * **none**
 */
export type Enum288 = string;

/** Known values of {@link Get200ApplicationJsonPropertiesItemsNotificationTargetType} that the service accepts. */
export enum KnownGet200ApplicationJsonPropertiesItemsNotificationTargetType {
  /** AudiencesTarget */
  AudiencesTarget = "audiences_target",
  /** DevicesTarget */
  DevicesTarget = "devices_target",
  /** UserIdsTarget */
  UserIdsTarget = "user_ids_target",
  /** AccountIdsTarget */
  AccountIdsTarget = "account_ids_target",
  /** BroadcastTarget */
  BroadcastTarget = "broadcast_target"
}

/**
 * Defines values for Get200ApplicationJsonPropertiesItemsNotificationTargetType. \
 * {@link KnownGet200ApplicationJsonPropertiesItemsNotificationTargetType} can be used interchangeably with Get200ApplicationJsonPropertiesItemsNotificationTargetType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **audiences_target** \
 * **devices_target** \
 * **user_ids_target** \
 * **account_ids_target** \
 * **broadcast_target**
 */
export type Get200ApplicationJsonPropertiesItemsNotificationTargetType = string;

/** Known values of {@link Enum290} that the service accepts. */
export enum KnownEnum290 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum290. \
 * {@link KnownEnum290} can be used interchangeably with Enum290,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum290 = string;

/** Known values of {@link PostContentSchemaNotificationTargetType} that the service accepts. */
export enum KnownPostContentSchemaNotificationTargetType {
  /** AudiencesTarget */
  AudiencesTarget = "audiences_target",
  /** DevicesTarget */
  DevicesTarget = "devices_target",
  /** UserIdsTarget */
  UserIdsTarget = "user_ids_target",
  /** AccountIdsTarget */
  AccountIdsTarget = "account_ids_target",
  /** BroadcastTarget */
  BroadcastTarget = "broadcast_target"
}

/**
 * Defines values for PostContentSchemaNotificationTargetType. \
 * {@link KnownPostContentSchemaNotificationTargetType} can be used interchangeably with PostContentSchemaNotificationTargetType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **audiences_target** \
 * **devices_target** \
 * **user_ids_target** \
 * **account_ids_target** \
 * **broadcast_target**
 */
export type PostContentSchemaNotificationTargetType = string;

/** Known values of {@link Enum292} that the service accepts. */
export enum KnownEnum292 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum292. \
 * {@link KnownEnum292} can be used interchangeably with Enum292,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum292 = string;

/** Known values of {@link Enum293} that the service accepts. */
export enum KnownEnum293 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum293. \
 * {@link KnownEnum293} can be used interchangeably with Enum293,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum293 = string;

/** Known values of {@link Enum294} that the service accepts. */
export enum KnownEnum294 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum294. \
 * {@link KnownEnum294} can be used interchangeably with Enum294,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum294 = string;

/** Known values of {@link Enum295} that the service accepts. */
export enum KnownEnum295 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum295. \
 * {@link KnownEnum295} can be used interchangeably with Enum295,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum295 = string;

/** Known values of {@link Enum296} that the service accepts. */
export enum KnownEnum296 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum296. \
 * {@link KnownEnum296} can be used interchangeably with Enum296,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum296 = string;

/** Known values of {@link GetResponses200ContentApplicationJsonSchemaAllOf0AllOf1SettingsItemValue} that the service accepts. */
export enum KnownGetResponses200ContentApplicationJsonSchemaAllOf0AllOf1SettingsItemValue {
  /** Disabled */
  Disabled = "Disabled",
  /** Individual */
  Individual = "Individual",
  /** Daily */
  Daily = "Daily",
  /** DailyAndIndividual */
  DailyAndIndividual = "DailyAndIndividual",
  /** Default */
  Default = "Default"
}

/**
 * Defines values for GetResponses200ContentApplicationJsonSchemaAllOf0AllOf1SettingsItemValue. \
 * {@link KnownGetResponses200ContentApplicationJsonSchemaAllOf0AllOf1SettingsItemValue} can be used interchangeably with GetResponses200ContentApplicationJsonSchemaAllOf0AllOf1SettingsItemValue,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Individual** \
 * **Daily** \
 * **DailyAndIndividual** \
 * **Default**
 */
export type GetResponses200ContentApplicationJsonSchemaAllOf0AllOf1SettingsItemValue = string;

/** Known values of {@link GetResponses200ContentApplicationJsonSchemaAllOf0AllOf1SettingsItemDefaultValue} that the service accepts. */
export enum KnownGetResponses200ContentApplicationJsonSchemaAllOf0AllOf1SettingsItemDefaultValue {
  /** Disabled */
  Disabled = "Disabled",
  /** Individual */
  Individual = "Individual",
  /** Daily */
  Daily = "Daily",
  /** DailyAndIndividual */
  DailyAndIndividual = "DailyAndIndividual"
}

/**
 * Defines values for GetResponses200ContentApplicationJsonSchemaAllOf0AllOf1SettingsItemDefaultValue. \
 * {@link KnownGetResponses200ContentApplicationJsonSchemaAllOf0AllOf1SettingsItemDefaultValue} can be used interchangeably with GetResponses200ContentApplicationJsonSchemaAllOf0AllOf1SettingsItemDefaultValue,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Individual** \
 * **Daily** \
 * **DailyAndIndividual**
 */
export type GetResponses200ContentApplicationJsonSchemaAllOf0AllOf1SettingsItemDefaultValue = string;

/** Known values of {@link Enum299} that the service accepts. */
export enum KnownEnum299 {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredFour */
  FourHundredFour = 404,
  /** FourHundredNine */
  FourHundredNine = 409,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for Enum299. \
 * {@link KnownEnum299} can be used interchangeably with Enum299,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **404** \
 * **409** \
 * **500**
 */
export type Enum299 = number;

/** Known values of {@link Enum300} that the service accepts. */
export enum KnownEnum300 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum300. \
 * {@link KnownEnum300} can be used interchangeably with Enum300,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum300 = string;

/** Known values of {@link Enum301} that the service accepts. */
export enum KnownEnum301 {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer"
}

/**
 * Defines values for Enum301. \
 * {@link KnownEnum301} can be used interchangeably with Enum301,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer**
 */
export type Enum301 = string;

/** Known values of {@link Enum302} that the service accepts. */
export enum KnownEnum302 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum302. \
 * {@link KnownEnum302} can be used interchangeably with Enum302,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum302 = string;

/** Known values of {@link Enum303} that the service accepts. */
export enum KnownEnum303 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum303. \
 * {@link KnownEnum303} can be used interchangeably with Enum303,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum303 = string;

/** Known values of {@link Enum304} that the service accepts. */
export enum KnownEnum304 {
  /** Admin */
  Admin = "admin",
  /** Collaborator */
  Collaborator = "collaborator",
  /** Member */
  Member = "member"
}

/**
 * Defines values for Enum304. \
 * {@link KnownEnum304} can be used interchangeably with Enum304,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **admin** \
 * **collaborator** \
 * **member**
 */
export type Enum304 = string;

/** Known values of {@link Enum305} that the service accepts. */
export enum KnownEnum305 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum305. \
 * {@link KnownEnum305} can be used interchangeably with Enum305,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum305 = string;

/** Known values of {@link Enum306} that the service accepts. */
export enum KnownEnum306 {
  /** Android */
  Android = "Android",
  /** IOS */
  IOS = "iOS",
  /** MacOS */
  MacOS = "macOS",
  /** Tizen */
  Tizen = "Tizen",
  /** TvOS */
  TvOS = "tvOS",
  /** Windows */
  Windows = "Windows",
  /** Linux */
  Linux = "Linux",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Enum306. \
 * {@link KnownEnum306} can be used interchangeably with Enum306,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Android** \
 * **iOS** \
 * **macOS** \
 * **Tizen** \
 * **tvOS** \
 * **Windows** \
 * **Linux** \
 * **Custom**
 */
export type Enum306 = string;

/** Known values of {@link Enum307} that the service accepts. */
export enum KnownEnum307 {
  /** Org */
  Org = "org",
  /** User */
  User = "user"
}

/**
 * Defines values for Enum307. \
 * {@link KnownEnum307} can be used interchangeably with Enum307,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **org** \
 * **user**
 */
export type Enum307 = string;

/** Known values of {@link Enum308} that the service accepts. */
export enum KnownEnum308 {
  /** Java */
  Java = "Java",
  /** ObjectiveCSwift */
  ObjectiveCSwift = "Objective-C-Swift",
  /** UWP */
  UWP = "UWP",
  /** Cordova */
  Cordova = "Cordova",
  /** ReactNative */
  ReactNative = "React-Native",
  /** Unity */
  Unity = "Unity",
  /** Electron */
  Electron = "Electron",
  /** Xamarin */
  Xamarin = "Xamarin",
  /** WPF */
  WPF = "WPF",
  /** WinForms */
  WinForms = "WinForms",
  /** Unknown */
  Unknown = "Unknown",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Enum308. \
 * {@link KnownEnum308} can be used interchangeably with Enum308,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Java** \
 * **Objective-C-Swift** \
 * **UWP** \
 * **Cordova** \
 * **React-Native** \
 * **Unity** \
 * **Electron** \
 * **Xamarin** \
 * **WPF** \
 * **WinForms** \
 * **Unknown** \
 * **Custom**
 */
export type Enum308 = string;

/** Known values of {@link Enum309} that the service accepts. */
export enum KnownEnum309 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for Enum309. \
 * {@link KnownEnum309} can be used interchangeably with Enum309,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type Enum309 = string;

/** Known values of {@link Get200ApplicationJsonPropertiesAllOfPropertiesItemsItem} that the service accepts. */
export enum KnownGet200ApplicationJsonPropertiesAllOfPropertiesItemsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Get200ApplicationJsonPropertiesAllOfPropertiesItemsItem. \
 * {@link KnownGet200ApplicationJsonPropertiesAllOfPropertiesItemsItem} can be used interchangeably with Get200ApplicationJsonPropertiesAllOfPropertiesItemsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type Get200ApplicationJsonPropertiesAllOfPropertiesItemsItem = string;

/** Known values of {@link Enum311} that the service accepts. */
export enum KnownEnum311 {
  /** Developer */
  Developer = "developer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Enum311. \
 * {@link KnownEnum311} can be used interchangeably with Enum311,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **developer** \
 * **tester**
 */
export type Enum311 = string;

/** Known values of {@link Enum312} that the service accepts. */
export enum KnownEnum312 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for Enum312. \
 * {@link KnownEnum312} can be used interchangeably with Enum312,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type Enum312 = string;

/** Known values of {@link Enum313} that the service accepts. */
export enum KnownEnum313 {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Enum313. \
 * {@link KnownEnum313} can be used interchangeably with Enum313,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type Enum313 = string;

/** Known values of {@link Enum314} that the service accepts. */
export enum KnownEnum314 {
  /** Org */
  Org = "org",
  /** User */
  User = "user"
}

/**
 * Defines values for Enum314. \
 * {@link KnownEnum314} can be used interchangeably with Enum314,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **org** \
 * **user**
 */
export type Enum314 = string;

/** Known values of {@link Enum315} that the service accepts. */
export enum KnownEnum315 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum315. \
 * {@link KnownEnum315} can be used interchangeably with Enum315,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum315 = string;

/** Known values of {@link Enum316} that the service accepts. */
export enum KnownEnum316 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum316. \
 * {@link KnownEnum316} can be used interchangeably with Enum316,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum316 = string;

/** Known values of {@link Enum317} that the service accepts. */
export enum KnownEnum317 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum317. \
 * {@link KnownEnum317} can be used interchangeably with Enum317,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum317 = string;

/** Known values of {@link Enum318} that the service accepts. */
export enum KnownEnum318 {
  /** BlobStorageConnectionString */
  BlobStorageConnectionString = "blob_storage_connection_string",
  /** ApplicationInsightsInstrumentationKey */
  ApplicationInsightsInstrumentationKey = "application_insights_instrumentation_key",
  /** BlobStorageLinkedSubscription */
  BlobStorageLinkedSubscription = "blob_storage_linked_subscription",
  /** ApplicationInsightsLinkedSubscription */
  ApplicationInsightsLinkedSubscription = "application_insights_linked_subscription"
}

/**
 * Defines values for Enum318. \
 * {@link KnownEnum318} can be used interchangeably with Enum318,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **blob_storage_connection_string** \
 * **application_insights_instrumentation_key** \
 * **blob_storage_linked_subscription** \
 * **application_insights_linked_subscription**
 */
export type Enum318 = string;

/** Known values of {@link Enum319} that the service accepts. */
export enum KnownEnum319 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum319. \
 * {@link KnownEnum319} can be used interchangeably with Enum319,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum319 = string;

/** Known values of {@link PatchContentSchemaType} that the service accepts. */
export enum KnownPatchContentSchemaType {
  /** BlobStorageConnectionString */
  BlobStorageConnectionString = "blob_storage_connection_string",
  /** ApplicationInsightsInstrumentationKey */
  ApplicationInsightsInstrumentationKey = "application_insights_instrumentation_key",
  /** BlobStorageLinkedSubscription */
  BlobStorageLinkedSubscription = "blob_storage_linked_subscription",
  /** ApplicationInsightsLinkedSubscription */
  ApplicationInsightsLinkedSubscription = "application_insights_linked_subscription"
}

/**
 * Defines values for PatchContentSchemaType. \
 * {@link KnownPatchContentSchemaType} can be used interchangeably with PatchContentSchemaType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **blob_storage_connection_string** \
 * **application_insights_instrumentation_key** \
 * **blob_storage_linked_subscription** \
 * **application_insights_linked_subscription**
 */
export type PatchContentSchemaType = string;

/** Known values of {@link Enum321} that the service accepts. */
export enum KnownEnum321 {
  /** BlobStorageConnectionString */
  BlobStorageConnectionString = "blob_storage_connection_string",
  /** ApplicationInsightsInstrumentationKey */
  ApplicationInsightsInstrumentationKey = "application_insights_instrumentation_key",
  /** BlobStorageLinkedSubscription */
  BlobStorageLinkedSubscription = "blob_storage_linked_subscription",
  /** ApplicationInsightsLinkedSubscription */
  ApplicationInsightsLinkedSubscription = "application_insights_linked_subscription"
}

/**
 * Defines values for Enum321. \
 * {@link KnownEnum321} can be used interchangeably with Enum321,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **blob_storage_connection_string** \
 * **application_insights_instrumentation_key** \
 * **blob_storage_linked_subscription** \
 * **application_insights_linked_subscription**
 */
export type Enum321 = string;

/** Known values of {@link Enum322} that the service accepts. */
export enum KnownEnum322 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum322. \
 * {@link KnownEnum322} can be used interchangeably with Enum322,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum322 = string;

/** Known values of {@link Enum323} that the service accepts. */
export enum KnownEnum323 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum323. \
 * {@link KnownEnum323} can be used interchangeably with Enum323,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum323 = string;

/** Known values of {@link Get200ApplicationJsonPropertiesItemsExportConfigurationType} that the service accepts. */
export enum KnownGet200ApplicationJsonPropertiesItemsExportConfigurationType {
  /** BlobStorageConnectionString */
  BlobStorageConnectionString = "blob_storage_connection_string",
  /** ApplicationInsightsInstrumentationKey */
  ApplicationInsightsInstrumentationKey = "application_insights_instrumentation_key",
  /** BlobStorageLinkedSubscription */
  BlobStorageLinkedSubscription = "blob_storage_linked_subscription",
  /** ApplicationInsightsLinkedSubscription */
  ApplicationInsightsLinkedSubscription = "application_insights_linked_subscription"
}

/**
 * Defines values for Get200ApplicationJsonPropertiesItemsExportConfigurationType. \
 * {@link KnownGet200ApplicationJsonPropertiesItemsExportConfigurationType} can be used interchangeably with Get200ApplicationJsonPropertiesItemsExportConfigurationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **blob_storage_connection_string** \
 * **application_insights_instrumentation_key** \
 * **blob_storage_linked_subscription** \
 * **application_insights_linked_subscription**
 */
export type Get200ApplicationJsonPropertiesItemsExportConfigurationType = string;

/** Known values of {@link Enum325} that the service accepts. */
export enum KnownEnum325 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum325. \
 * {@link KnownEnum325} can be used interchangeably with Enum325,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum325 = string;

/** Known values of {@link PostContentSchemaType} that the service accepts. */
export enum KnownPostContentSchemaType {
  /** BlobStorageConnectionString */
  BlobStorageConnectionString = "blob_storage_connection_string",
  /** ApplicationInsightsInstrumentationKey */
  ApplicationInsightsInstrumentationKey = "application_insights_instrumentation_key",
  /** BlobStorageLinkedSubscription */
  BlobStorageLinkedSubscription = "blob_storage_linked_subscription",
  /** ApplicationInsightsLinkedSubscription */
  ApplicationInsightsLinkedSubscription = "application_insights_linked_subscription"
}

/**
 * Defines values for PostContentSchemaType. \
 * {@link KnownPostContentSchemaType} can be used interchangeably with PostContentSchemaType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **blob_storage_connection_string** \
 * **application_insights_instrumentation_key** \
 * **blob_storage_linked_subscription** \
 * **application_insights_linked_subscription**
 */
export type PostContentSchemaType = string;

/** Known values of {@link Post202ApplicationJsonProperties} that the service accepts. */
export enum KnownPost202ApplicationJsonProperties {
  /** BlobStorageConnectionString */
  BlobStorageConnectionString = "blob_storage_connection_string",
  /** ApplicationInsightsInstrumentationKey */
  ApplicationInsightsInstrumentationKey = "application_insights_instrumentation_key",
  /** BlobStorageLinkedSubscription */
  BlobStorageLinkedSubscription = "blob_storage_linked_subscription",
  /** ApplicationInsightsLinkedSubscription */
  ApplicationInsightsLinkedSubscription = "application_insights_linked_subscription"
}

/**
 * Defines values for Post202ApplicationJsonProperties. \
 * {@link KnownPost202ApplicationJsonProperties} can be used interchangeably with Post202ApplicationJsonProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **blob_storage_connection_string** \
 * **application_insights_instrumentation_key** \
 * **blob_storage_linked_subscription** \
 * **application_insights_linked_subscription**
 */
export type Post202ApplicationJsonProperties = string;

/** Known values of {@link Enum328} that the service accepts. */
export enum KnownEnum328 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum328. \
 * {@link KnownEnum328} can be used interchangeably with Enum328,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum328 = string;

/** Known values of {@link GetResponses200ContentApplicationJsonSchemaLogsItemType} that the service accepts. */
export enum KnownGetResponses200ContentApplicationJsonSchemaLogsItemType {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for GetResponses200ContentApplicationJsonSchemaLogsItemType. \
 * {@link KnownGetResponses200ContentApplicationJsonSchemaLogsItemType} can be used interchangeably with GetResponses200ContentApplicationJsonSchemaLogsItemType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type GetResponses200ContentApplicationJsonSchemaLogsItemType = string;

/** Known values of {@link Enum330} that the service accepts. */
export enum KnownEnum330 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum330. \
 * {@link KnownEnum330} can be used interchangeably with Enum330,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum330 = string;

/** Known values of {@link Enum331} that the service accepts. */
export enum KnownEnum331 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum331. \
 * {@link KnownEnum331} can be used interchangeably with Enum331,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum331 = string;

/** Known values of {@link Enum332} that the service accepts. */
export enum KnownEnum332 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum332. \
 * {@link KnownEnum332} can be used interchangeably with Enum332,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum332 = string;

/** Known values of {@link Enum333} that the service accepts. */
export enum KnownEnum333 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum333. \
 * {@link KnownEnum333} can be used interchangeably with Enum333,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum333 = string;

/** Known values of {@link Enum334} that the service accepts. */
export enum KnownEnum334 {
  /** Desc */
  Desc = "desc",
  /** Asc */
  Asc = "asc"
}

/**
 * Defines values for Enum334. \
 * {@link KnownEnum334} can be used interchangeably with Enum334,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **desc** \
 * **asc**
 */
export type Enum334 = string;

/** Known values of {@link Enum335} that the service accepts. */
export enum KnownEnum335 {
  /** Timestamp */
  Timestamp = "timestamp",
  /** ErrorGroupId */
  ErrorGroupId = "errorGroupId",
  /** ExceptionClassName */
  ExceptionClassName = "exceptionClassName",
  /** ExceptionFile */
  ExceptionFile = "exceptionFile",
  /** ExceptionLine */
  ExceptionLine = "exceptionLine",
  /** ExceptionMessage */
  ExceptionMessage = "exceptionMessage",
  /** ExceptionMethod */
  ExceptionMethod = "exceptionMethod",
  /** DeviceName */
  DeviceName = "deviceName",
  /** OsVersion */
  OsVersion = "osVersion",
  /** UserId */
  UserId = "userId"
}

/**
 * Defines values for Enum335. \
 * {@link KnownEnum335} can be used interchangeably with Enum335,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **timestamp** \
 * **errorGroupId** \
 * **exceptionClassName** \
 * **exceptionFile** \
 * **exceptionLine** \
 * **exceptionMessage** \
 * **exceptionMethod** \
 * **deviceName** \
 * **osVersion** \
 * **userId**
 */
export type Enum335 = string;

/** Known values of {@link Enum336} that the service accepts. */
export enum KnownEnum336 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum336. \
 * {@link KnownEnum336} can be used interchangeably with Enum336,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum336 = string;

/** Known values of {@link PutContentSchemaRetentionInDays} that the service accepts. */
export enum KnownPutContentSchemaRetentionInDays {
  /** TwentyEight */
  TwentyEight = 28,
  /** Ninety */
  Ninety = 90
}

/**
 * Defines values for PutContentSchemaRetentionInDays. \
 * {@link KnownPutContentSchemaRetentionInDays} can be used interchangeably with PutContentSchemaRetentionInDays,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **28** \
 * **90**
 */
export type PutContentSchemaRetentionInDays = number;

/** Known values of {@link Enum338} that the service accepts. */
export enum KnownEnum338 {
  /** TwentyEight */
  TwentyEight = 28,
  /** Ninety */
  Ninety = 90
}

/**
 * Defines values for Enum338. \
 * {@link KnownEnum338} can be used interchangeably with Enum338,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **28** \
 * **90**
 */
export type Enum338 = number;

/** Known values of {@link Enum339} that the service accepts. */
export enum KnownEnum339 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum339. \
 * {@link KnownEnum339} can be used interchangeably with Enum339,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum339 = string;

/** Known values of {@link Enum340} that the service accepts. */
export enum KnownEnum340 {
  /** TwentyEight */
  TwentyEight = 28,
  /** Ninety */
  Ninety = 90
}

/**
 * Defines values for Enum340. \
 * {@link KnownEnum340} can be used interchangeably with Enum340,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **28** \
 * **90**
 */
export type Enum340 = number;

/** Known values of {@link Enum341} that the service accepts. */
export enum KnownEnum341 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum341. \
 * {@link KnownEnum341} can be used interchangeably with Enum341,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum341 = string;

/** Known values of {@link Enum342} that the service accepts. */
export enum KnownEnum342 {
  /** UnhandledError */
  UnhandledError = "unhandledError",
  /** HandledError */
  HandledError = "handledError"
}

/**
 * Defines values for Enum342. \
 * {@link KnownEnum342} can be used interchangeably with Enum342,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **unhandledError** \
 * **handledError**
 */
export type Enum342 = string;

/** Known values of {@link Enum343} that the service accepts. */
export enum KnownEnum343 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum343. \
 * {@link KnownEnum343} can be used interchangeably with Enum343,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum343 = string;

/** Known values of {@link DiagnosticsThreadFramesItemLanguage} that the service accepts. */
export enum KnownDiagnosticsThreadFramesItemLanguage {
  /** JavaScript */
  JavaScript = "JavaScript",
  /** CSharp */
  CSharp = "CSharp",
  /** ObjectiveC */
  ObjectiveC = "Objective-C",
  /** ObjectiveCpp */
  ObjectiveCpp = "Objective-Cpp",
  /** Cpp */
  Cpp = "Cpp",
  /** C */
  C = "C",
  /** Swift */
  Swift = "Swift",
  /** Java */
  Java = "Java",
  /** Unknown */
  Unknown = "Unknown"
}

/**
 * Defines values for DiagnosticsThreadFramesItemLanguage. \
 * {@link KnownDiagnosticsThreadFramesItemLanguage} can be used interchangeably with DiagnosticsThreadFramesItemLanguage,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **JavaScript** \
 * **CSharp** \
 * **Objective-C** \
 * **Objective-Cpp** \
 * **Cpp** \
 * **C** \
 * **Swift** \
 * **Java** \
 * **Unknown**
 */
export type DiagnosticsThreadFramesItemLanguage = string;

/** Known values of {@link DiagnosticsExceptionFramesItemLanguage} that the service accepts. */
export enum KnownDiagnosticsExceptionFramesItemLanguage {
  /** JavaScript */
  JavaScript = "JavaScript",
  /** CSharp */
  CSharp = "CSharp",
  /** ObjectiveC */
  ObjectiveC = "Objective-C",
  /** ObjectiveCpp */
  ObjectiveCpp = "Objective-Cpp",
  /** Cpp */
  Cpp = "Cpp",
  /** C */
  C = "C",
  /** Swift */
  Swift = "Swift",
  /** Java */
  Java = "Java",
  /** Unknown */
  Unknown = "Unknown"
}

/**
 * Defines values for DiagnosticsExceptionFramesItemLanguage. \
 * {@link KnownDiagnosticsExceptionFramesItemLanguage} can be used interchangeably with DiagnosticsExceptionFramesItemLanguage,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **JavaScript** \
 * **CSharp** \
 * **Objective-C** \
 * **Objective-Cpp** \
 * **Cpp** \
 * **C** \
 * **Swift** \
 * **Java** \
 * **Unknown**
 */
export type DiagnosticsExceptionFramesItemLanguage = string;

/** Known values of {@link DiagnosticsExceptionPlatform} that the service accepts. */
export enum KnownDiagnosticsExceptionPlatform {
  /** Ios */
  Ios = "ios",
  /** Android */
  Android = "android",
  /** Xamarin */
  Xamarin = "xamarin",
  /** ReactNative */
  ReactNative = "react-native",
  /** Ndk */
  Ndk = "ndk",
  /** Unity */
  Unity = "unity",
  /** Other */
  Other = "other"
}

/**
 * Defines values for DiagnosticsExceptionPlatform. \
 * {@link KnownDiagnosticsExceptionPlatform} can be used interchangeably with DiagnosticsExceptionPlatform,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ios** \
 * **android** \
 * **xamarin** \
 * **react-native** \
 * **ndk** \
 * **unity** \
 * **other**
 */
export type DiagnosticsExceptionPlatform = string;

/** Known values of {@link DiagnosticsThreadPlatform} that the service accepts. */
export enum KnownDiagnosticsThreadPlatform {
  /** Ios */
  Ios = "ios",
  /** Android */
  Android = "android",
  /** Xamarin */
  Xamarin = "xamarin",
  /** ReactNative */
  ReactNative = "react-native",
  /** Ndk */
  Ndk = "ndk",
  /** Unity */
  Unity = "unity",
  /** Other */
  Other = "other"
}

/**
 * Defines values for DiagnosticsThreadPlatform. \
 * {@link KnownDiagnosticsThreadPlatform} can be used interchangeably with DiagnosticsThreadPlatform,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ios** \
 * **android** \
 * **xamarin** \
 * **react-native** \
 * **ndk** \
 * **unity** \
 * **other**
 */
export type DiagnosticsThreadPlatform = string;

/** Known values of {@link Enum348} that the service accepts. */
export enum KnownEnum348 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum348. \
 * {@link KnownEnum348} can be used interchangeably with Enum348,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum348 = string;

/** Known values of {@link Enum349} that the service accepts. */
export enum KnownEnum349 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum349. \
 * {@link KnownEnum349} can be used interchangeably with Enum349,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum349 = string;

/** Known values of {@link Enum350} that the service accepts. */
export enum KnownEnum350 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum350. \
 * {@link KnownEnum350} can be used interchangeably with Enum350,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum350 = string;

/** Known values of {@link Enum351} that the service accepts. */
export enum KnownEnum351 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum351. \
 * {@link KnownEnum351} can be used interchangeably with Enum351,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum351 = string;

/** Known values of {@link Enum352} that the service accepts. */
export enum KnownEnum352 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum352. \
 * {@link KnownEnum352} can be used interchangeably with Enum352,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum352 = string;

/** Known values of {@link Enum353} that the service accepts. */
export enum KnownEnum353 {
  /** Json */
  Json = "json",
  /** Txt */
  Txt = "txt"
}

/**
 * Defines values for Enum353. \
 * {@link KnownEnum353} can be used interchangeably with Enum353,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **json** \
 * **txt**
 */
export type Enum353 = string;

/** Known values of {@link Enum354} that the service accepts. */
export enum KnownEnum354 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum354. \
 * {@link KnownEnum354} can be used interchangeably with Enum354,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum354 = string;

/** Known values of {@link GetResponses200ContentApplicationJsonSchemaReasonFramesItemLanguage} that the service accepts. */
export enum KnownGetResponses200ContentApplicationJsonSchemaReasonFramesItemLanguage {
  /** JavaScript */
  JavaScript = "JavaScript",
  /** CSharp */
  CSharp = "CSharp",
  /** ObjectiveC */
  ObjectiveC = "Objective-C",
  /** ObjectiveCpp */
  ObjectiveCpp = "Objective-Cpp",
  /** Cpp */
  Cpp = "Cpp",
  /** C */
  C = "C",
  /** Swift */
  Swift = "Swift",
  /** Java */
  Java = "Java",
  /** Unknown */
  Unknown = "Unknown"
}

/**
 * Defines values for GetResponses200ContentApplicationJsonSchemaReasonFramesItemLanguage. \
 * {@link KnownGetResponses200ContentApplicationJsonSchemaReasonFramesItemLanguage} can be used interchangeably with GetResponses200ContentApplicationJsonSchemaReasonFramesItemLanguage,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **JavaScript** \
 * **CSharp** \
 * **Objective-C** \
 * **Objective-Cpp** \
 * **Cpp** \
 * **C** \
 * **Swift** \
 * **Java** \
 * **Unknown**
 */
export type GetResponses200ContentApplicationJsonSchemaReasonFramesItemLanguage = string;

/** Known values of {@link Enum356} that the service accepts. */
export enum KnownEnum356 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum356. \
 * {@link KnownEnum356} can be used interchangeably with Enum356,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum356 = string;

/** Known values of {@link Enum357} that the service accepts. */
export enum KnownEnum357 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum357. \
 * {@link KnownEnum357} can be used interchangeably with Enum357,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum357 = string;

/** Known values of {@link Enum358} that the service accepts. */
export enum KnownEnum358 {
  /** JavaScript */
  JavaScript = "JavaScript",
  /** CSharp */
  CSharp = "CSharp",
  /** ObjectiveC */
  ObjectiveC = "Objective-C",
  /** ObjectiveCpp */
  ObjectiveCpp = "Objective-Cpp",
  /** Cpp */
  Cpp = "Cpp",
  /** C */
  C = "C",
  /** Swift */
  Swift = "Swift",
  /** Java */
  Java = "Java",
  /** Unknown */
  Unknown = "Unknown"
}

/**
 * Defines values for Enum358. \
 * {@link KnownEnum358} can be used interchangeably with Enum358,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **JavaScript** \
 * **CSharp** \
 * **Objective-C** \
 * **Objective-Cpp** \
 * **Cpp** \
 * **C** \
 * **Swift** \
 * **Java** \
 * **Unknown**
 */
export type Enum358 = string;

/** Known values of {@link Enum359} that the service accepts. */
export enum KnownEnum359 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum359. \
 * {@link KnownEnum359} can be used interchangeably with Enum359,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum359 = string;

/** Known values of {@link Enum360} that the service accepts. */
export enum KnownEnum360 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum360. \
 * {@link KnownEnum360} can be used interchangeably with Enum360,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum360 = string;

/** Known values of {@link Enum361} that the service accepts. */
export enum KnownEnum361 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum361. \
 * {@link KnownEnum361} can be used interchangeably with Enum361,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum361 = string;

/** Known values of {@link Enum362} that the service accepts. */
export enum KnownEnum362 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum362. \
 * {@link KnownEnum362} can be used interchangeably with Enum362,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum362 = string;

/** Known values of {@link Enum363} that the service accepts. */
export enum KnownEnum363 {
  /** JavaScript */
  JavaScript = "JavaScript",
  /** CSharp */
  CSharp = "CSharp",
  /** ObjectiveC */
  ObjectiveC = "Objective-C",
  /** ObjectiveCpp */
  ObjectiveCpp = "Objective-Cpp",
  /** Cpp */
  Cpp = "Cpp",
  /** C */
  C = "C",
  /** Swift */
  Swift = "Swift",
  /** Java */
  Java = "Java",
  /** Unknown */
  Unknown = "Unknown"
}

/**
 * Defines values for Enum363. \
 * {@link KnownEnum363} can be used interchangeably with Enum363,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **JavaScript** \
 * **CSharp** \
 * **Objective-C** \
 * **Objective-Cpp** \
 * **Cpp** \
 * **C** \
 * **Swift** \
 * **Java** \
 * **Unknown**
 */
export type Enum363 = string;

/** Known values of {@link Enum364} that the service accepts. */
export enum KnownEnum364 {
  /** Open */
  Open = "open",
  /** Closed */
  Closed = "closed",
  /** Ignored */
  Ignored = "ignored"
}

/**
 * Defines values for Enum364. \
 * {@link KnownEnum364} can be used interchangeably with Enum364,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **open** \
 * **closed** \
 * **ignored**
 */
export type Enum364 = string;

/** Known values of {@link Enum365} that the service accepts. */
export enum KnownEnum365 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum365. \
 * {@link KnownEnum365} can be used interchangeably with Enum365,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum365 = string;

/** Known values of {@link PatchContentSchemaState} that the service accepts. */
export enum KnownPatchContentSchemaState {
  /** Open */
  Open = "open",
  /** Closed */
  Closed = "closed",
  /** Ignored */
  Ignored = "ignored"
}

/**
 * Defines values for PatchContentSchemaState. \
 * {@link KnownPatchContentSchemaState} can be used interchangeably with PatchContentSchemaState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **open** \
 * **closed** \
 * **ignored**
 */
export type PatchContentSchemaState = string;

/** Known values of {@link PatchResponses200ContentApplicationJsonSchemaReasonFramesItemLanguage} that the service accepts. */
export enum KnownPatchResponses200ContentApplicationJsonSchemaReasonFramesItemLanguage {
  /** JavaScript */
  JavaScript = "JavaScript",
  /** CSharp */
  CSharp = "CSharp",
  /** ObjectiveC */
  ObjectiveC = "Objective-C",
  /** ObjectiveCpp */
  ObjectiveCpp = "Objective-Cpp",
  /** Cpp */
  Cpp = "Cpp",
  /** C */
  C = "C",
  /** Swift */
  Swift = "Swift",
  /** Java */
  Java = "Java",
  /** Unknown */
  Unknown = "Unknown"
}

/**
 * Defines values for PatchResponses200ContentApplicationJsonSchemaReasonFramesItemLanguage. \
 * {@link KnownPatchResponses200ContentApplicationJsonSchemaReasonFramesItemLanguage} can be used interchangeably with PatchResponses200ContentApplicationJsonSchemaReasonFramesItemLanguage,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **JavaScript** \
 * **CSharp** \
 * **Objective-C** \
 * **Objective-Cpp** \
 * **Cpp** \
 * **C** \
 * **Swift** \
 * **Java** \
 * **Unknown**
 */
export type PatchResponses200ContentApplicationJsonSchemaReasonFramesItemLanguage = string;

/** Known values of {@link Enum368} that the service accepts. */
export enum KnownEnum368 {
  /** Open */
  Open = "open",
  /** Closed */
  Closed = "closed",
  /** Ignored */
  Ignored = "ignored"
}

/**
 * Defines values for Enum368. \
 * {@link KnownEnum368} can be used interchangeably with Enum368,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **open** \
 * **closed** \
 * **ignored**
 */
export type Enum368 = string;

/** Known values of {@link Enum369} that the service accepts. */
export enum KnownEnum369 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum369. \
 * {@link KnownEnum369} can be used interchangeably with Enum369,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum369 = string;

/** Known values of {@link Enum370} that the service accepts. */
export enum KnownEnum370 {
  /** Desc */
  Desc = "desc",
  /** Asc */
  Asc = "asc"
}

/**
 * Defines values for Enum370. \
 * {@link KnownEnum370} can be used interchangeably with Enum370,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **desc** \
 * **asc**
 */
export type Enum370 = string;

/** Known values of {@link Enum371} that the service accepts. */
export enum KnownEnum371 {
  /** MatchingReportsCount */
  MatchingReportsCount = "matchingReportsCount",
  /** ExceptionClassName */
  ExceptionClassName = "exceptionClassName",
  /** ExceptionMessage */
  ExceptionMessage = "exceptionMessage",
  /** ExceptionMethod */
  ExceptionMethod = "exceptionMethod",
  /** LastOccurrence */
  LastOccurrence = "lastOccurrence"
}

/**
 * Defines values for Enum371. \
 * {@link KnownEnum371} can be used interchangeably with Enum371,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **matchingReportsCount** \
 * **exceptionClassName** \
 * **exceptionMessage** \
 * **exceptionMethod** \
 * **lastOccurrence**
 */
export type Enum371 = string;

/** Known values of {@link GetResponses200ContentApplicationJsonSchemaErrorGroupsItemAllOf0ReasonFramesItemLanguage} that the service accepts. */
export enum KnownGetResponses200ContentApplicationJsonSchemaErrorGroupsItemAllOf0ReasonFramesItemLanguage {
  /** JavaScript */
  JavaScript = "JavaScript",
  /** CSharp */
  CSharp = "CSharp",
  /** ObjectiveC */
  ObjectiveC = "Objective-C",
  /** ObjectiveCpp */
  ObjectiveCpp = "Objective-Cpp",
  /** Cpp */
  Cpp = "Cpp",
  /** C */
  C = "C",
  /** Swift */
  Swift = "Swift",
  /** Java */
  Java = "Java",
  /** Unknown */
  Unknown = "Unknown"
}

/**
 * Defines values for GetResponses200ContentApplicationJsonSchemaErrorGroupsItemAllOf0ReasonFramesItemLanguage. \
 * {@link KnownGetResponses200ContentApplicationJsonSchemaErrorGroupsItemAllOf0ReasonFramesItemLanguage} can be used interchangeably with GetResponses200ContentApplicationJsonSchemaErrorGroupsItemAllOf0ReasonFramesItemLanguage,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **JavaScript** \
 * **CSharp** \
 * **Objective-C** \
 * **Objective-Cpp** \
 * **Cpp** \
 * **C** \
 * **Swift** \
 * **Java** \
 * **Unknown**
 */
export type GetResponses200ContentApplicationJsonSchemaErrorGroupsItemAllOf0ReasonFramesItemLanguage = string;

/** Known values of {@link Get200ApplicationJsonPropertiesItems0State} that the service accepts. */
export enum KnownGet200ApplicationJsonPropertiesItems0State {
  /** Open */
  Open = "open",
  /** Closed */
  Closed = "closed",
  /** Ignored */
  Ignored = "ignored"
}

/**
 * Defines values for Get200ApplicationJsonPropertiesItems0State. \
 * {@link KnownGet200ApplicationJsonPropertiesItems0State} can be used interchangeably with Get200ApplicationJsonPropertiesItems0State,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **open** \
 * **closed** \
 * **ignored**
 */
export type Get200ApplicationJsonPropertiesItems0State = string;

/** Known values of {@link Enum374} that the service accepts. */
export enum KnownEnum374 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum374. \
 * {@link KnownEnum374} can be used interchangeably with Enum374,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum374 = string;

/** Known values of {@link Enum375} that the service accepts. */
export enum KnownEnum375 {
  /** All */
  All = "all",
  /** UnhandledError */
  UnhandledError = "unhandledError",
  /** HandledError */
  HandledError = "handledError"
}

/**
 * Defines values for Enum375. \
 * {@link KnownEnum375} can be used interchangeably with Enum375,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **all** \
 * **unhandledError** \
 * **handledError**
 */
export type Enum375 = string;

/** Known values of {@link Enum376} that the service accepts. */
export enum KnownEnum376 {
  /** JavaScript */
  JavaScript = "JavaScript",
  /** CSharp */
  CSharp = "CSharp",
  /** ObjectiveC */
  ObjectiveC = "Objective-C",
  /** ObjectiveCpp */
  ObjectiveCpp = "Objective-Cpp",
  /** Cpp */
  Cpp = "Cpp",
  /** C */
  C = "C",
  /** Swift */
  Swift = "Swift",
  /** Java */
  Java = "Java",
  /** Unknown */
  Unknown = "Unknown"
}

/**
 * Defines values for Enum376. \
 * {@link KnownEnum376} can be used interchangeably with Enum376,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **JavaScript** \
 * **CSharp** \
 * **Objective-C** \
 * **Objective-Cpp** \
 * **Cpp** \
 * **C** \
 * **Swift** \
 * **Java** \
 * **Unknown**
 */
export type Enum376 = string;

/** Known values of {@link Enum377} that the service accepts. */
export enum KnownEnum377 {
  /** Open */
  Open = "open",
  /** Closed */
  Closed = "closed",
  /** Ignored */
  Ignored = "ignored"
}

/**
 * Defines values for Enum377. \
 * {@link KnownEnum377} can be used interchangeably with Enum377,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **open** \
 * **closed** \
 * **ignored**
 */
export type Enum377 = string;

/** Known values of {@link Enum378} that the service accepts. */
export enum KnownEnum378 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum378. \
 * {@link KnownEnum378} can be used interchangeably with Enum378,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum378 = string;

/** Known values of {@link Enum379} that the service accepts. */
export enum KnownEnum379 {
  /** UnhandledError */
  UnhandledError = "unhandledError",
  /** HandledError */
  HandledError = "handledError"
}

/**
 * Defines values for Enum379. \
 * {@link KnownEnum379} can be used interchangeably with Enum379,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **unhandledError** \
 * **handledError**
 */
export type Enum379 = string;

/** Known values of {@link Enum380} that the service accepts. */
export enum KnownEnum380 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum380. \
 * {@link KnownEnum380} can be used interchangeably with Enum380,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum380 = string;

/** Known values of {@link Enum381} that the service accepts. */
export enum KnownEnum381 {
  /** Allpages */
  Allpages = "allpages",
  /** None */
  None = "none"
}

/**
 * Defines values for Enum381. \
 * {@link KnownEnum381} can be used interchangeably with Enum381,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **allpages** \
 * **none**
 */
export type Enum381 = string;

/** Known values of {@link Enum382} that the service accepts. */
export enum KnownEnum382 {
  /** All */
  All = "all",
  /** UnhandledError */
  UnhandledError = "unhandledError",
  /** HandledError */
  HandledError = "handledError"
}

/**
 * Defines values for Enum382. \
 * {@link KnownEnum382} can be used interchangeably with Enum382,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **all** \
 * **unhandledError** \
 * **handledError**
 */
export type Enum382 = string;

/** Known values of {@link Enum383} that the service accepts. */
export enum KnownEnum383 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum383. \
 * {@link KnownEnum383} can be used interchangeably with Enum383,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum383 = string;

/** Known values of {@link Enum384} that the service accepts. */
export enum KnownEnum384 {
  /** All */
  All = "all",
  /** UnhandledError */
  UnhandledError = "unhandledError",
  /** HandledError */
  HandledError = "handledError"
}

/**
 * Defines values for Enum384. \
 * {@link KnownEnum384} can be used interchangeably with Enum384,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **all** \
 * **unhandledError** \
 * **handledError**
 */
export type Enum384 = string;

/** Known values of {@link Enum385} that the service accepts. */
export enum KnownEnum385 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum385. \
 * {@link KnownEnum385} can be used interchangeably with Enum385,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum385 = string;

/** Known values of {@link Enum386} that the service accepts. */
export enum KnownEnum386 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum386. \
 * {@link KnownEnum386} can be used interchangeably with Enum386,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum386 = string;

/** Known values of {@link Enum387} that the service accepts. */
export enum KnownEnum387 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum387. \
 * {@link KnownEnum387} can be used interchangeably with Enum387,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum387 = string;

/** Known values of {@link Enum388} that the service accepts. */
export enum KnownEnum388 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum388. \
 * {@link KnownEnum388} can be used interchangeably with Enum388,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum388 = string;

/** Known values of {@link Enum389} that the service accepts. */
export enum KnownEnum389 {
  /** Available */
  Available = "available",
  /** Unavailable */
  Unavailable = "unavailable"
}

/**
 * Defines values for Enum389. \
 * {@link KnownEnum389} can be used interchangeably with Enum389,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **available** \
 * **unavailable**
 */
export type Enum389 = string;

/** Known values of {@link GetResponses200ContentApplicationJsonSchemaItemInstallUrl} that the service accepts. */
export enum KnownGetResponses200ContentApplicationJsonSchemaItemInstallUrl {
  /** Group */
  Group = "group",
  /** Store */
  Store = "store"
}

/**
 * Defines values for GetResponses200ContentApplicationJsonSchemaItemInstallUrl. \
 * {@link KnownGetResponses200ContentApplicationJsonSchemaItemInstallUrl} can be used interchangeably with GetResponses200ContentApplicationJsonSchemaItemInstallUrl,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **group** \
 * **store**
 */
export type GetResponses200ContentApplicationJsonSchemaItemInstallUrl = string;

/** Known values of {@link GetResponses200ContentApplicationJsonSchemaItemDistributionStoresItemType} that the service accepts. */
export enum KnownGetResponses200ContentApplicationJsonSchemaItemDistributionStoresItemType {
  /** Intune */
  Intune = "intune",
  /** Googleplay */
  Googleplay = "googleplay"
}

/**
 * Defines values for GetResponses200ContentApplicationJsonSchemaItemDistributionStoresItemType. \
 * {@link KnownGetResponses200ContentApplicationJsonSchemaItemDistributionStoresItemType} can be used interchangeably with GetResponses200ContentApplicationJsonSchemaItemDistributionStoresItemType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **intune** \
 * **googleplay**
 */
export type GetResponses200ContentApplicationJsonSchemaItemDistributionStoresItemType = string;

/** Known values of {@link Enum392} that the service accepts. */
export enum KnownEnum392 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum392. \
 * {@link KnownEnum392} can be used interchangeably with Enum392,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum392 = string;

/** Known values of {@link Enum393} that the service accepts. */
export enum KnownEnum393 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum393. \
 * {@link KnownEnum393} can be used interchangeably with Enum393,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum393 = string;

/** Known values of {@link Enum394} that the service accepts. */
export enum KnownEnum394 {
  /** Group */
  Group = "group",
  /** Store */
  Store = "store",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Enum394. \
 * {@link KnownEnum394} can be used interchangeably with Enum394,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **group** \
 * **store** \
 * **tester**
 */
export type Enum394 = string;

/** Known values of {@link Enum395} that the service accepts. */
export enum KnownEnum395 {
  /** Googleplay */
  Googleplay = "googleplay",
  /** Intune */
  Intune = "intune",
  /** Apple */
  Apple = "apple"
}

/**
 * Defines values for Enum395. \
 * {@link KnownEnum395} can be used interchangeably with Enum395,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **googleplay** \
 * **intune** \
 * **apple**
 */
export type Enum395 = string;

/** Known values of {@link Enum396} that the service accepts. */
export enum KnownEnum396 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum396. \
 * {@link KnownEnum396} can be used interchangeably with Enum396,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum396 = string;

/** Known values of {@link Enum397} that the service accepts. */
export enum KnownEnum397 {
  /** Available */
  Available = "available",
  /** Unavailable */
  Unavailable = "unavailable"
}

/**
 * Defines values for Enum397. \
 * {@link KnownEnum397} can be used interchangeably with Enum397,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **available** \
 * **unavailable**
 */
export type Enum397 = string;

/** Known values of {@link Enum398} that the service accepts. */
export enum KnownEnum398 {
  /** Group */
  Group = "group",
  /** Store */
  Store = "store"
}

/**
 * Defines values for Enum398. \
 * {@link KnownEnum398} can be used interchangeably with Enum398,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **group** \
 * **store**
 */
export type Enum398 = string;

/** Known values of {@link Enum399} that the service accepts. */
export enum KnownEnum399 {
  /** Intune */
  Intune = "intune",
  /** Googleplay */
  Googleplay = "googleplay"
}

/**
 * Defines values for Enum399. \
 * {@link KnownEnum399} can be used interchangeably with Enum399,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **intune** \
 * **googleplay**
 */
export type Enum399 = string;

/** Known values of {@link Enum400} that the service accepts. */
export enum KnownEnum400 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum400. \
 * {@link KnownEnum400} can be used interchangeably with Enum400,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum400 = string;

/** Known values of {@link Enum401} that the service accepts. */
export enum KnownEnum401 {
  /** Production */
  Production = "production",
  /** Alpha */
  Alpha = "alpha",
  /** Beta */
  Beta = "beta",
  /** TestflightInternal */
  TestflightInternal = "testflight-internal",
  /** TestflightExternal */
  TestflightExternal = "testflight-external"
}

/**
 * Defines values for Enum401. \
 * {@link KnownEnum401} can be used interchangeably with Enum401,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **production** \
 * **alpha** \
 * **beta** \
 * **testflight-internal** \
 * **testflight-external**
 */
export type Enum401 = string;

/** Known values of {@link Enum402} that the service accepts. */
export enum KnownEnum402 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum402. \
 * {@link KnownEnum402} can be used interchangeably with Enum402,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum402 = string;

/** Known values of {@link Enum403} that the service accepts. */
export enum KnownEnum403 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum403. \
 * {@link KnownEnum403} can be used interchangeably with Enum403,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum403 = string;

/** Known values of {@link Enum404} that the service accepts. */
export enum KnownEnum404 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum404. \
 * {@link KnownEnum404} can be used interchangeably with Enum404,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum404 = string;

/** Known values of {@link Enum405} that the service accepts. */
export enum KnownEnum405 {
  /** Googleplay */
  Googleplay = "googleplay",
  /** Intune */
  Intune = "intune",
  /** Apple */
  Apple = "apple"
}

/**
 * Defines values for Enum405. \
 * {@link KnownEnum405} can be used interchangeably with Enum405,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **googleplay** \
 * **intune** \
 * **apple**
 */
export type Enum405 = string;

/** Known values of {@link PostContentSchemaTrack} that the service accepts. */
export enum KnownPostContentSchemaTrack {
  /** Production */
  Production = "production",
  /** Alpha */
  Alpha = "alpha",
  /** Beta */
  Beta = "beta",
  /** TestflightInternal */
  TestflightInternal = "testflight-internal",
  /** TestflightExternal */
  TestflightExternal = "testflight-external"
}

/**
 * Defines values for PostContentSchemaTrack. \
 * {@link KnownPostContentSchemaTrack} can be used interchangeably with PostContentSchemaTrack,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **production** \
 * **alpha** \
 * **beta** \
 * **testflight-internal** \
 * **testflight-external**
 */
export type PostContentSchemaTrack = string;

/** Known values of {@link Enum407} that the service accepts. */
export enum KnownEnum407 {
  /** Production */
  Production = "production",
  /** Alpha */
  Alpha = "alpha",
  /** Beta */
  Beta = "beta",
  /** TestflightInternal */
  TestflightInternal = "testflight-internal",
  /** TestflightExternal */
  TestflightExternal = "testflight-external"
}

/**
 * Defines values for Enum407. \
 * {@link KnownEnum407} can be used interchangeably with Enum407,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **production** \
 * **alpha** \
 * **beta** \
 * **testflight-internal** \
 * **testflight-external**
 */
export type Enum407 = string;

/** Known values of {@link Enum408} that the service accepts. */
export enum KnownEnum408 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum408. \
 * {@link KnownEnum408} can be used interchangeably with Enum408,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum408 = string;

/** Known values of {@link GetResponses200ContentApplicationJsonSchemaItemTrack} that the service accepts. */
export enum KnownGetResponses200ContentApplicationJsonSchemaItemTrack {
  /** Production */
  Production = "production",
  /** Alpha */
  Alpha = "alpha",
  /** Beta */
  Beta = "beta",
  /** TestflightInternal */
  TestflightInternal = "testflight-internal",
  /** TestflightExternal */
  TestflightExternal = "testflight-external"
}

/**
 * Defines values for GetResponses200ContentApplicationJsonSchemaItemTrack. \
 * {@link KnownGetResponses200ContentApplicationJsonSchemaItemTrack} can be used interchangeably with GetResponses200ContentApplicationJsonSchemaItemTrack,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **production** \
 * **alpha** \
 * **beta** \
 * **testflight-internal** \
 * **testflight-external**
 */
export type GetResponses200ContentApplicationJsonSchemaItemTrack = string;

/** Known values of {@link Enum410} that the service accepts. */
export enum KnownEnum410 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum410. \
 * {@link KnownEnum410} can be used interchangeably with Enum410,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum410 = string;

/** Known values of {@link Enum411} that the service accepts. */
export enum KnownEnum411 {
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Appcenter */
  Appcenter = "appcenter"
}

/**
 * Defines values for Enum411. \
 * {@link KnownEnum411} can be used interchangeably with Enum411,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **hockeyapp** \
 * **appcenter**
 */
export type Enum411 = string;

/** Known values of {@link Enum412} that the service accepts. */
export enum KnownEnum412 {
  /** Adhoc */
  Adhoc = "adhoc",
  /** Enterprise */
  Enterprise = "enterprise",
  /** Other */
  Other = "other"
}

/**
 * Defines values for Enum412. \
 * {@link KnownEnum412} can be used interchangeably with Enum412,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **adhoc** \
 * **enterprise** \
 * **other**
 */
export type Enum412 = string;

/** Known values of {@link Enum413} that the service accepts. */
export enum KnownEnum413 {
  /** Group */
  Group = "group",
  /** Store */
  Store = "store",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Enum413. \
 * {@link KnownEnum413} can be used interchangeably with Enum413,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **group** \
 * **store** \
 * **tester**
 */
export type Enum413 = string;

/** Known values of {@link Enum414} that the service accepts. */
export enum KnownEnum414 {
  /** Intune */
  Intune = "intune",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Apple */
  Apple = "apple",
  /** None */
  None = "none"
}

/**
 * Defines values for Enum414. \
 * {@link KnownEnum414} can be used interchangeably with Enum414,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **intune** \
 * **googleplay** \
 * **apple** \
 * **none**
 */
export type Enum414 = string;

/** Known values of {@link Enum415} that the service accepts. */
export enum KnownEnum415 {
  /** Intune */
  Intune = "intune",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Apple */
  Apple = "apple",
  /** None */
  None = "none"
}

/**
 * Defines values for Enum415. \
 * {@link KnownEnum415} can be used interchangeably with Enum415,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **intune** \
 * **googleplay** \
 * **apple** \
 * **none**
 */
export type Enum415 = string;

/** Known values of {@link Enum416} that the service accepts. */
export enum KnownEnum416 {
  /** Group */
  Group = "group",
  /** Store */
  Store = "store",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Enum416. \
 * {@link KnownEnum416} can be used interchangeably with Enum416,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **group** \
 * **store** \
 * **tester**
 */
export type Enum416 = string;

/** Known values of {@link Enum417} that the service accepts. */
export enum KnownEnum417 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum417. \
 * {@link KnownEnum417} can be used interchangeably with Enum417,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum417 = string;

/** Known values of {@link Get501ApplicationJsonProperties} that the service accepts. */
export enum KnownGet501ApplicationJsonProperties {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Get501ApplicationJsonProperties. \
 * {@link KnownGet501ApplicationJsonProperties} can be used interchangeably with Get501ApplicationJsonProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Get501ApplicationJsonProperties = string;

/** Known values of {@link Enum419} that the service accepts. */
export enum KnownEnum419 {
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Appcenter */
  Appcenter = "appcenter"
}

/**
 * Defines values for Enum419. \
 * {@link KnownEnum419} can be used interchangeably with Enum419,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **hockeyapp** \
 * **appcenter**
 */
export type Enum419 = string;

/** Known values of {@link Enum420} that the service accepts. */
export enum KnownEnum420 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum420. \
 * {@link KnownEnum420} can be used interchangeably with Enum420,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum420 = string;

/** Known values of {@link Enum421} that the service accepts. */
export enum KnownEnum421 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum421. \
 * {@link KnownEnum421} can be used interchangeably with Enum421,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum421 = string;

/** Known values of {@link Enum422} that the service accepts. */
export enum KnownEnum422 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum422. \
 * {@link KnownEnum422} can be used interchangeably with Enum422,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum422 = string;

/** Known values of {@link Enum423} that the service accepts. */
export enum KnownEnum423 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum423. \
 * {@link KnownEnum423} can be used interchangeably with Enum423,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum423 = string;

/** Known values of {@link Enum424} that the service accepts. */
export enum KnownEnum424 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum424. \
 * {@link KnownEnum424} can be used interchangeably with Enum424,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum424 = string;

/** Known values of {@link Enum425} that the service accepts. */
export enum KnownEnum425 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum425. \
 * {@link KnownEnum425} can be used interchangeably with Enum425,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum425 = string;

/** Known values of {@link Enum426} that the service accepts. */
export enum KnownEnum426 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum426. \
 * {@link KnownEnum426} can be used interchangeably with Enum426,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum426 = string;

/** Known values of {@link Enum427} that the service accepts. */
export enum KnownEnum427 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum427. \
 * {@link KnownEnum427} can be used interchangeably with Enum427,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum427 = string;

/** Known values of {@link Enum428} that the service accepts. */
export enum KnownEnum428 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum428. \
 * {@link KnownEnum428} can be used interchangeably with Enum428,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum428 = string;

/** Known values of {@link Enum429} that the service accepts. */
export enum KnownEnum429 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp"
}

/**
 * Defines values for Enum429. \
 * {@link KnownEnum429} can be used interchangeably with Enum429,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp**
 */
export type Enum429 = string;

/** Known values of {@link Enum430} that the service accepts. */
export enum KnownEnum430 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum430. \
 * {@link KnownEnum430} can be used interchangeably with Enum430,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum430 = string;

/** Known values of {@link Enum431} that the service accepts. */
export enum KnownEnum431 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp"
}

/**
 * Defines values for Enum431. \
 * {@link KnownEnum431} can be used interchangeably with Enum431,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp**
 */
export type Enum431 = string;

/** Known values of {@link Enum432} that the service accepts. */
export enum KnownEnum432 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum432. \
 * {@link KnownEnum432} can be used interchangeably with Enum432,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum432 = string;

/** Known values of {@link Enum433} that the service accepts. */
export enum KnownEnum433 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum433. \
 * {@link KnownEnum433} can be used interchangeably with Enum433,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum433 = string;

/** Known values of {@link Enum434} that the service accepts. */
export enum KnownEnum434 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp"
}

/**
 * Defines values for Enum434. \
 * {@link KnownEnum434} can be used interchangeably with Enum434,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp**
 */
export type Enum434 = string;

/** Known values of {@link Enum435} that the service accepts. */
export enum KnownEnum435 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum435. \
 * {@link KnownEnum435} can be used interchangeably with Enum435,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum435 = string;

/** Known values of {@link Enum436} that the service accepts. */
export enum KnownEnum436 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp"
}

/**
 * Defines values for Enum436. \
 * {@link KnownEnum436} can be used interchangeably with Enum436,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp**
 */
export type Enum436 = string;

/** Known values of {@link Enum437} that the service accepts. */
export enum KnownEnum437 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum437. \
 * {@link KnownEnum437} can be used interchangeably with Enum437,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum437 = string;

/** Known values of {@link GetResponses200ContentApplicationJsonSchemaGroupsItemMissingSymbolsItemStatus} that the service accepts. */
export enum KnownGetResponses200ContentApplicationJsonSchemaGroupsItemMissingSymbolsItemStatus {
  /** Missing */
  Missing = "missing",
  /** Ignored */
  Ignored = "ignored",
  /** Available */
  Available = "available"
}

/**
 * Defines values for GetResponses200ContentApplicationJsonSchemaGroupsItemMissingSymbolsItemStatus. \
 * {@link KnownGetResponses200ContentApplicationJsonSchemaGroupsItemMissingSymbolsItemStatus} can be used interchangeably with GetResponses200ContentApplicationJsonSchemaGroupsItemMissingSymbolsItemStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **missing** \
 * **ignored** \
 * **available**
 */
export type GetResponses200ContentApplicationJsonSchemaGroupsItemMissingSymbolsItemStatus = string;

/** Known values of {@link GetResponses200ContentApplicationJsonSchemaGroupsItemStatus} that the service accepts. */
export enum KnownGetResponses200ContentApplicationJsonSchemaGroupsItemStatus {
  /** Active */
  Active = "active",
  /** Pending */
  Pending = "pending",
  /** Closed */
  Closed = "closed"
}

/**
 * Defines values for GetResponses200ContentApplicationJsonSchemaGroupsItemStatus. \
 * {@link KnownGetResponses200ContentApplicationJsonSchemaGroupsItemStatus} can be used interchangeably with GetResponses200ContentApplicationJsonSchemaGroupsItemStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **active** \
 * **pending** \
 * **closed**
 */
export type GetResponses200ContentApplicationJsonSchemaGroupsItemStatus = string;

/** Known values of {@link Enum440} that the service accepts. */
export enum KnownEnum440 {
  /** Missing */
  Missing = "missing",
  /** Ignored */
  Ignored = "ignored",
  /** Available */
  Available = "available"
}

/**
 * Defines values for Enum440. \
 * {@link KnownEnum440} can be used interchangeably with Enum440,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **missing** \
 * **ignored** \
 * **available**
 */
export type Enum440 = string;

/** Known values of {@link Enum441} that the service accepts. */
export enum KnownEnum441 {
  /** Active */
  Active = "active",
  /** Pending */
  Pending = "pending",
  /** Closed */
  Closed = "closed"
}

/**
 * Defines values for Enum441. \
 * {@link KnownEnum441} can be used interchangeably with Enum441,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **active** \
 * **pending** \
 * **closed**
 */
export type Enum441 = string;

/** Known values of {@link Enum442} that the service accepts. */
export enum KnownEnum442 {
  /** Upload */
  Upload = "Upload",
  /** Promote */
  Promote = "Promote",
  /** Rollback */
  Rollback = "Rollback"
}

/**
 * Defines values for Enum442. \
 * {@link KnownEnum442} can be used interchangeably with Enum442,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Upload** \
 * **Promote** \
 * **Rollback**
 */
export type Enum442 = string;

/** Known values of {@link Enum443} that the service accepts. */
export enum KnownEnum443 {
  /** Upload */
  Upload = "Upload",
  /** Promote */
  Promote = "Promote",
  /** Rollback */
  Rollback = "Rollback"
}

/**
 * Defines values for Enum443. \
 * {@link KnownEnum443} can be used interchangeably with Enum443,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Upload** \
 * **Promote** \
 * **Rollback**
 */
export type Enum443 = string;

/** Known values of {@link Get200ApplicationJsonItems1ReleaseMethod} that the service accepts. */
export enum KnownGet200ApplicationJsonItems1ReleaseMethod {
  /** Upload */
  Upload = "Upload",
  /** Promote */
  Promote = "Promote",
  /** Rollback */
  Rollback = "Rollback"
}

/**
 * Defines values for Get200ApplicationJsonItems1ReleaseMethod. \
 * {@link KnownGet200ApplicationJsonItems1ReleaseMethod} can be used interchangeably with Get200ApplicationJsonItems1ReleaseMethod,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Upload** \
 * **Promote** \
 * **Rollback**
 */
export type Get200ApplicationJsonItems1ReleaseMethod = string;

/** Known values of {@link Enum445} that the service accepts. */
export enum KnownEnum445 {
  /** Upload */
  Upload = "Upload",
  /** Promote */
  Promote = "Promote",
  /** Rollback */
  Rollback = "Rollback"
}

/**
 * Defines values for Enum445. \
 * {@link KnownEnum445} can be used interchangeably with Enum445,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Upload** \
 * **Promote** \
 * **Rollback**
 */
export type Enum445 = string;

/** Known values of {@link Enum446} that the service accepts. */
export enum KnownEnum446 {
  /** Upload */
  Upload = "Upload",
  /** Promote */
  Promote = "Promote",
  /** Rollback */
  Rollback = "Rollback"
}

/**
 * Defines values for Enum446. \
 * {@link KnownEnum446} can be used interchangeably with Enum446,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Upload** \
 * **Promote** \
 * **Rollback**
 */
export type Enum446 = string;

/** Known values of {@link Enum447} that the service accepts. */
export enum KnownEnum447 {
  /** Upload */
  Upload = "Upload",
  /** Promote */
  Promote = "Promote",
  /** Rollback */
  Rollback = "Rollback"
}

/**
 * Defines values for Enum447. \
 * {@link KnownEnum447} can be used interchangeably with Enum447,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Upload** \
 * **Promote** \
 * **Rollback**
 */
export type Enum447 = string;

/** Known values of {@link Get200ApplicationJsonItemsLatestRelease1ReleaseMethod} that the service accepts. */
export enum KnownGet200ApplicationJsonItemsLatestRelease1ReleaseMethod {
  /** Upload */
  Upload = "Upload",
  /** Promote */
  Promote = "Promote",
  /** Rollback */
  Rollback = "Rollback"
}

/**
 * Defines values for Get200ApplicationJsonItemsLatestRelease1ReleaseMethod. \
 * {@link KnownGet200ApplicationJsonItemsLatestRelease1ReleaseMethod} can be used interchangeably with Get200ApplicationJsonItemsLatestRelease1ReleaseMethod,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Upload** \
 * **Promote** \
 * **Rollback**
 */
export type Get200ApplicationJsonItemsLatestRelease1ReleaseMethod = string;

/** Known values of {@link PostContentSchemaLatestRelease1ReleaseMethod} that the service accepts. */
export enum KnownPostContentSchemaLatestRelease1ReleaseMethod {
  /** Upload */
  Upload = "Upload",
  /** Promote */
  Promote = "Promote",
  /** Rollback */
  Rollback = "Rollback"
}

/**
 * Defines values for PostContentSchemaLatestRelease1ReleaseMethod. \
 * {@link KnownPostContentSchemaLatestRelease1ReleaseMethod} can be used interchangeably with PostContentSchemaLatestRelease1ReleaseMethod,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Upload** \
 * **Promote** \
 * **Rollback**
 */
export type PostContentSchemaLatestRelease1ReleaseMethod = string;

/** Known values of {@link Enum450} that the service accepts. */
export enum KnownEnum450 {
  /** Upload */
  Upload = "Upload",
  /** Promote */
  Promote = "Promote",
  /** Rollback */
  Rollback = "Rollback"
}

/**
 * Defines values for Enum450. \
 * {@link KnownEnum450} can be used interchangeably with Enum450,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Upload** \
 * **Promote** \
 * **Rollback**
 */
export type Enum450 = string;

/** Known values of {@link Enum451} that the service accepts. */
export enum KnownEnum451 {
  /** Empty */
  Empty = "Empty",
  /** Accepted */
  Accepted = "Accepted",
  /** Creating */
  Creating = "Creating",
  /** Connected */
  Connected = "Connected",
  /** Invalid */
  Invalid = "Invalid"
}

/**
 * Defines values for Enum451. \
 * {@link KnownEnum451} can be used interchangeably with Enum451,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Empty** \
 * **Accepted** \
 * **Creating** \
 * **Connected** \
 * **Invalid**
 */
export type Enum451 = string;

/** Known values of {@link Get500ApplicationJsonProperties} that the service accepts. */
export enum KnownGet500ApplicationJsonProperties {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Get500ApplicationJsonProperties. \
 * {@link KnownGet500ApplicationJsonProperties} can be used interchangeably with Get500ApplicationJsonProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Get500ApplicationJsonProperties = string;

/** Known values of {@link PostContentSchemaResourceRegion} that the service accepts. */
export enum KnownPostContentSchemaResourceRegion {
  /** EastAsia */
  EastAsia = "East Asia",
  /** SoutheastAsia */
  SoutheastAsia = "Southeast Asia",
  /** AustraliaCentral */
  AustraliaCentral = "Australia Central",
  /** AustraliaCentral2 */
  AustraliaCentral2 = "Australia Central 2",
  /** AustraliaEast */
  AustraliaEast = "Australia East",
  /** AustraliaSoutheast */
  AustraliaSoutheast = "Australia Southeast",
  /** BrazilSouth */
  BrazilSouth = "Brazil South",
  /** CanadaCentral */
  CanadaCentral = "Canada Central",
  /** CanadaEast */
  CanadaEast = "Canada East",
  /** CentralIndia */
  CentralIndia = "Central India",
  /** SouthIndia */
  SouthIndia = "South India",
  /** WestIndia */
  WestIndia = "West India",
  /** NorthEurope */
  NorthEurope = "North Europe",
  /** WestEurope */
  WestEurope = "West Europe",
  /** FranceCentral */
  FranceCentral = "France Central",
  /** FranceSouth */
  FranceSouth = "France South",
  /** GermanyCentral */
  GermanyCentral = "Germany Central",
  /** GermanyNortheast */
  GermanyNortheast = "Germany Northeast",
  /** JapanEast */
  JapanEast = "Japan East",
  /** JapanWest */
  JapanWest = "Japan West",
  /** KoreaCentral */
  KoreaCentral = "Korea Central",
  /** KoreaSouth */
  KoreaSouth = "Korea South",
  /** SouthAfricaNorth */
  SouthAfricaNorth = "South Africa North",
  /** SouthAfricaWest */
  SouthAfricaWest = "South Africa West",
  /** UKSouth */
  UKSouth = "UK South",
  /** UKWest */
  UKWest = "UK West",
  /** CentralUS */
  CentralUS = "Central US",
  /** EastUS */
  EastUS = "East US",
  /** EastUS2 */
  EastUS2 = "East US 2",
  /** USGovArizona */
  USGovArizona = "US Gov Arizona",
  /** USGovTexas */
  USGovTexas = "US Gov Texas",
  /** NorthCentralUS */
  NorthCentralUS = "North Central US",
  /** SouthCentralUS */
  SouthCentralUS = "South Central US",
  /** WestUS */
  WestUS = "West US",
  /** WestUS2 */
  WestUS2 = "West US 2",
  /** WestCentralUS */
  WestCentralUS = "West Central US"
}

/**
 * Defines values for PostContentSchemaResourceRegion. \
 * {@link KnownPostContentSchemaResourceRegion} can be used interchangeably with PostContentSchemaResourceRegion,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **East Asia** \
 * **Southeast Asia** \
 * **Australia Central** \
 * **Australia Central 2** \
 * **Australia East** \
 * **Australia Southeast** \
 * **Brazil South** \
 * **Canada Central** \
 * **Canada East** \
 * **Central India** \
 * **South India** \
 * **West India** \
 * **North Europe** \
 * **West Europe** \
 * **France Central** \
 * **France South** \
 * **Germany Central** \
 * **Germany Northeast** \
 * **Japan East** \
 * **Japan West** \
 * **Korea Central** \
 * **Korea South** \
 * **South Africa North** \
 * **South Africa West** \
 * **UK South** \
 * **UK West** \
 * **Central US** \
 * **East US** \
 * **East US 2** \
 * **US Gov Arizona** \
 * **US Gov Texas** \
 * **North Central US** \
 * **South Central US** \
 * **West US** \
 * **West US 2** \
 * **West Central US**
 */
export type PostContentSchemaResourceRegion = string;

/** Known values of {@link Enum454} that the service accepts. */
export enum KnownEnum454 {
  /** Empty */
  Empty = "Empty",
  /** Accepted */
  Accepted = "Accepted",
  /** Creating */
  Creating = "Creating",
  /** Connected */
  Connected = "Connected",
  /** Invalid */
  Invalid = "Invalid"
}

/**
 * Defines values for Enum454. \
 * {@link KnownEnum454} can be used interchangeably with Enum454,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Empty** \
 * **Accepted** \
 * **Creating** \
 * **Connected** \
 * **Invalid**
 */
export type Enum454 = string;

/** Known values of {@link Post400ApplicationJsonProperties} that the service accepts. */
export enum KnownPost400ApplicationJsonProperties {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Post400ApplicationJsonProperties. \
 * {@link KnownPost400ApplicationJsonProperties} can be used interchangeably with Post400ApplicationJsonProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Post400ApplicationJsonProperties = string;

/** Known values of {@link Post500ApplicationJsonProperties} that the service accepts. */
export enum KnownPost500ApplicationJsonProperties {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Post500ApplicationJsonProperties. \
 * {@link KnownPost500ApplicationJsonProperties} can be used interchangeably with Post500ApplicationJsonProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Post500ApplicationJsonProperties = string;

/** Known values of {@link Enum457} that the service accepts. */
export enum KnownEnum457 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum457. \
 * {@link KnownEnum457} can be used interchangeably with Enum457,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum457 = string;

/** Known values of {@link Enum458} that the service accepts. */
export enum KnownEnum458 {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for Enum458. \
 * {@link KnownEnum458} can be used interchangeably with Enum458,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type Enum458 = string;

/** Known values of {@link Enum459} that the service accepts. */
export enum KnownEnum459 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum459. \
 * {@link KnownEnum459} can be used interchangeably with Enum459,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum459 = string;

/** Known values of {@link ThreadFramesItemLanguage} that the service accepts. */
export enum KnownThreadFramesItemLanguage {
  /** JavaScript */
  JavaScript = "JavaScript",
  /** CSharp */
  CSharp = "CSharp",
  /** ObjectiveC */
  ObjectiveC = "Objective-C",
  /** ObjectiveCpp */
  ObjectiveCpp = "Objective-Cpp",
  /** Cpp */
  Cpp = "Cpp",
  /** C */
  C = "C",
  /** Swift */
  Swift = "Swift",
  /** Java */
  Java = "Java",
  /** Unknown */
  Unknown = "Unknown"
}

/**
 * Defines values for ThreadFramesItemLanguage. \
 * {@link KnownThreadFramesItemLanguage} can be used interchangeably with ThreadFramesItemLanguage,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **JavaScript** \
 * **CSharp** \
 * **Objective-C** \
 * **Objective-Cpp** \
 * **Cpp** \
 * **C** \
 * **Swift** \
 * **Java** \
 * **Unknown**
 */
export type ThreadFramesItemLanguage = string;

/** Known values of {@link ExceptionFramesItemLanguage} that the service accepts. */
export enum KnownExceptionFramesItemLanguage {
  /** JavaScript */
  JavaScript = "JavaScript",
  /** CSharp */
  CSharp = "CSharp",
  /** ObjectiveC */
  ObjectiveC = "Objective-C",
  /** ObjectiveCpp */
  ObjectiveCpp = "Objective-Cpp",
  /** Cpp */
  Cpp = "Cpp",
  /** C */
  C = "C",
  /** Swift */
  Swift = "Swift",
  /** Java */
  Java = "Java",
  /** Unknown */
  Unknown = "Unknown"
}

/**
 * Defines values for ExceptionFramesItemLanguage. \
 * {@link KnownExceptionFramesItemLanguage} can be used interchangeably with ExceptionFramesItemLanguage,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **JavaScript** \
 * **CSharp** \
 * **Objective-C** \
 * **Objective-Cpp** \
 * **Cpp** \
 * **C** \
 * **Swift** \
 * **Java** \
 * **Unknown**
 */
export type ExceptionFramesItemLanguage = string;

/** Known values of {@link ExceptionPlatform} that the service accepts. */
export enum KnownExceptionPlatform {
  /** Ios */
  Ios = "ios",
  /** Android */
  Android = "android",
  /** Xamarin */
  Xamarin = "xamarin",
  /** ReactNative */
  ReactNative = "react-native",
  /** Ndk */
  Ndk = "ndk",
  /** Unity */
  Unity = "unity",
  /** Other */
  Other = "other"
}

/**
 * Defines values for ExceptionPlatform. \
 * {@link KnownExceptionPlatform} can be used interchangeably with ExceptionPlatform,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ios** \
 * **android** \
 * **xamarin** \
 * **react-native** \
 * **ndk** \
 * **unity** \
 * **other**
 */
export type ExceptionPlatform = string;

/** Known values of {@link ThreadPlatform} that the service accepts. */
export enum KnownThreadPlatform {
  /** Ios */
  Ios = "ios",
  /** Android */
  Android = "android",
  /** Xamarin */
  Xamarin = "xamarin",
  /** ReactNative */
  ReactNative = "react-native",
  /** Ndk */
  Ndk = "ndk",
  /** Unity */
  Unity = "unity",
  /** Other */
  Other = "other"
}

/**
 * Defines values for ThreadPlatform. \
 * {@link KnownThreadPlatform} can be used interchangeably with ThreadPlatform,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ios** \
 * **android** \
 * **xamarin** \
 * **react-native** \
 * **ndk** \
 * **unity** \
 * **other**
 */
export type ThreadPlatform = string;

/** Known values of {@link Enum464} that the service accepts. */
export enum KnownEnum464 {
  /** CrashingErrors */
  CrashingErrors = "CrashingErrors",
  /** HandledErrors */
  HandledErrors = "HandledErrors"
}

/**
 * Defines values for Enum464. \
 * {@link KnownEnum464} can be used interchangeably with Enum464,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **CrashingErrors** \
 * **HandledErrors**
 */
export type Enum464 = string;

/** Known values of {@link Enum465} that the service accepts. */
export enum KnownEnum465 {
  /** Open */
  Open = "open",
  /** Closed */
  Closed = "closed",
  /** Ignored */
  Ignored = "ignored"
}

/**
 * Defines values for Enum465. \
 * {@link KnownEnum465} can be used interchangeably with Enum465,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **open** \
 * **closed** \
 * **ignored**
 */
export type Enum465 = string;

/** Known values of {@link Enum466} that the service accepts. */
export enum KnownEnum466 {
  /** JavaScript */
  JavaScript = "JavaScript",
  /** CSharp */
  CSharp = "CSharp",
  /** ObjectiveC */
  ObjectiveC = "Objective-C",
  /** ObjectiveCpp */
  ObjectiveCpp = "Objective-Cpp",
  /** Cpp */
  Cpp = "Cpp",
  /** C */
  C = "C",
  /** Swift */
  Swift = "Swift",
  /** Java */
  Java = "Java",
  /** Unknown */
  Unknown = "Unknown"
}

/**
 * Defines values for Enum466. \
 * {@link KnownEnum466} can be used interchangeably with Enum466,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **JavaScript** \
 * **CSharp** \
 * **Objective-C** \
 * **Objective-Cpp** \
 * **Cpp** \
 * **C** \
 * **Swift** \
 * **Java** \
 * **Unknown**
 */
export type Enum466 = string;

/** Known values of {@link Enum467} that the service accepts. */
export enum KnownEnum467 {
  /** Open */
  Open = "open",
  /** Closed */
  Closed = "closed",
  /** Ignored */
  Ignored = "ignored"
}

/**
 * Defines values for Enum467. \
 * {@link KnownEnum467} can be used interchangeably with Enum467,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **open** \
 * **closed** \
 * **ignored**
 */
export type Enum467 = string;

/** Known values of {@link Enum468} that the service accepts. */
export enum KnownEnum468 {
  /** Open */
  Open = "open",
  /** Closed */
  Closed = "closed",
  /** Ignored */
  Ignored = "ignored"
}

/**
 * Defines values for Enum468. \
 * {@link KnownEnum468} can be used interchangeably with Enum468,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **open** \
 * **closed** \
 * **ignored**
 */
export type Enum468 = string;

/** Known values of {@link Enum469} that the service accepts. */
export enum KnownEnum469 {
  /** JavaScript */
  JavaScript = "JavaScript",
  /** CSharp */
  CSharp = "CSharp",
  /** ObjectiveC */
  ObjectiveC = "Objective-C",
  /** ObjectiveCpp */
  ObjectiveCpp = "Objective-Cpp",
  /** Cpp */
  Cpp = "Cpp",
  /** C */
  C = "C",
  /** Swift */
  Swift = "Swift",
  /** Java */
  Java = "Java",
  /** Unknown */
  Unknown = "Unknown"
}

/**
 * Defines values for Enum469. \
 * {@link KnownEnum469} can be used interchangeably with Enum469,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **JavaScript** \
 * **CSharp** \
 * **Objective-C** \
 * **Objective-Cpp** \
 * **Cpp** \
 * **C** \
 * **Swift** \
 * **Java** \
 * **Unknown**
 */
export type Enum469 = string;

/** Known values of {@link Enum470} that the service accepts. */
export enum KnownEnum470 {
  /** GroupType1 */
  GroupType1 = "GroupType1",
  /** GroupType2 */
  GroupType2 = "GroupType2"
}

/**
 * Defines values for Enum470. \
 * {@link KnownEnum470} can be used interchangeably with Enum470,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **GroupType1** \
 * **GroupType2**
 */
export type Enum470 = string;

/** Known values of {@link Enum471} that the service accepts. */
export enum KnownEnum471 {
  /** Open */
  Open = "open",
  /** Closed */
  Closed = "closed",
  /** Ignored */
  Ignored = "ignored"
}

/**
 * Defines values for Enum471. \
 * {@link KnownEnum471} can be used interchangeably with Enum471,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **open** \
 * **closed** \
 * **ignored**
 */
export type Enum471 = string;

/** Known values of {@link Enum472} that the service accepts. */
export enum KnownEnum472 {
  /** LastOccurrenceAsc */
  LastOccurrenceAsc = "last_occurrence asc",
  /** LastOccurrenceDesc */
  LastOccurrenceDesc = "last_occurrence desc",
  /** CountAsc */
  CountAsc = "count asc",
  /** CountDesc */
  CountDesc = "count desc",
  /** DisplayIdAsc */
  DisplayIdAsc = "display_id asc",
  /** DisplayIdDesc */
  DisplayIdDesc = "display_id desc",
  /** ImpactedUsersAsc */
  ImpactedUsersAsc = "impacted_users asc",
  /** ImpactedUsersDesc */
  ImpactedUsersDesc = "impacted_users desc"
}

/**
 * Defines values for Enum472. \
 * {@link KnownEnum472} can be used interchangeably with Enum472,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **last_occurrence asc** \
 * **last_occurrence desc** \
 * **count asc** \
 * **count desc** \
 * **display_id asc** \
 * **display_id desc** \
 * **impacted_users asc** \
 * **impacted_users desc**
 */
export type Enum472 = string;

/** Known values of {@link GetResponses200ContentApplicationJsonSchemaCrashGroupsItemStatus} that the service accepts. */
export enum KnownGetResponses200ContentApplicationJsonSchemaCrashGroupsItemStatus {
  /** Open */
  Open = "open",
  /** Closed */
  Closed = "closed",
  /** Ignored */
  Ignored = "ignored"
}

/**
 * Defines values for GetResponses200ContentApplicationJsonSchemaCrashGroupsItemStatus. \
 * {@link KnownGetResponses200ContentApplicationJsonSchemaCrashGroupsItemStatus} can be used interchangeably with GetResponses200ContentApplicationJsonSchemaCrashGroupsItemStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **open** \
 * **closed** \
 * **ignored**
 */
export type GetResponses200ContentApplicationJsonSchemaCrashGroupsItemStatus = string;

/** Known values of {@link Get200ApplicationJsonPropertiesItemsReasonFrameLanguage} that the service accepts. */
export enum KnownGet200ApplicationJsonPropertiesItemsReasonFrameLanguage {
  /** JavaScript */
  JavaScript = "JavaScript",
  /** CSharp */
  CSharp = "CSharp",
  /** ObjectiveC */
  ObjectiveC = "Objective-C",
  /** ObjectiveCpp */
  ObjectiveCpp = "Objective-Cpp",
  /** Cpp */
  Cpp = "Cpp",
  /** C */
  C = "C",
  /** Swift */
  Swift = "Swift",
  /** Java */
  Java = "Java",
  /** Unknown */
  Unknown = "Unknown"
}

/**
 * Defines values for Get200ApplicationJsonPropertiesItemsReasonFrameLanguage. \
 * {@link KnownGet200ApplicationJsonPropertiesItemsReasonFrameLanguage} can be used interchangeably with Get200ApplicationJsonPropertiesItemsReasonFrameLanguage,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **JavaScript** \
 * **CSharp** \
 * **Objective-C** \
 * **Objective-Cpp** \
 * **Cpp** \
 * **C** \
 * **Swift** \
 * **Java** \
 * **Unknown**
 */
export type Get200ApplicationJsonPropertiesItemsReasonFrameLanguage = string;

/** Known values of {@link Enum475} that the service accepts. */
export enum KnownEnum475 {
  /** Build */
  Build = "build",
  /** Symbols */
  Symbols = "symbols",
  /** Logs */
  Logs = "logs",
  /** Mapping */
  Mapping = "mapping",
  /** Bundle */
  Bundle = "bundle"
}

/**
 * Defines values for Enum475. \
 * {@link KnownEnum475} can be used interchangeably with Enum475,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **build** \
 * **symbols** \
 * **logs** \
 * **mapping** \
 * **bundle**
 */
export type Enum475 = string;

/** Known values of {@link PostRequestBodyContentApplicationJsonSchemaDestinationsItemType} that the service accepts. */
export enum KnownPostRequestBodyContentApplicationJsonSchemaDestinationsItemType {
  /** Store */
  Store = "store",
  /** Group */
  Group = "group",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for PostRequestBodyContentApplicationJsonSchemaDestinationsItemType. \
 * {@link KnownPostRequestBodyContentApplicationJsonSchemaDestinationsItemType} can be used interchangeably with PostRequestBodyContentApplicationJsonSchemaDestinationsItemType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **store** \
 * **group** \
 * **tester**
 */
export type PostRequestBodyContentApplicationJsonSchemaDestinationsItemType = string;

/** Known values of {@link Enum477} that the service accepts. */
export enum KnownEnum477 {
  /** Github */
  Github = "github",
  /** Vsts */
  Vsts = "vsts",
  /** Jira */
  Jira = "jira"
}

/**
 * Defines values for Enum477. \
 * {@link KnownEnum477} can be used interchangeably with Enum477,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **github** \
 * **vsts** \
 * **jira**
 */
export type Enum477 = string;

/** Known values of {@link Enum478} that the service accepts. */
export enum KnownEnum478 {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredFour */
  FourHundredFour = 404,
  /** FourHundredNine */
  FourHundredNine = 409,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for Enum478. \
 * {@link KnownEnum478} can be used interchangeably with Enum478,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **404** \
 * **409** \
 * **500**
 */
export type Enum478 = number;

/** Known values of {@link Enum479} that the service accepts. */
export enum KnownEnum479 {
  /** Github */
  Github = "github",
  /** Vsts */
  Vsts = "vsts",
  /** Jira */
  Jira = "jira"
}

/**
 * Defines values for Enum479. \
 * {@link KnownEnum479} can be used interchangeably with Enum479,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **github** \
 * **vsts** \
 * **jira**
 */
export type Enum479 = string;

/** Known values of {@link Enum480} that the service accepts. */
export enum KnownEnum480 {
  /** Enabled */
  Enabled = "enabled",
  /** Disabled */
  Disabled = "disabled",
  /** Unauthorized */
  Unauthorized = "unauthorized"
}

/**
 * Defines values for Enum480. \
 * {@link KnownEnum480} can be used interchangeably with Enum480,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **enabled** \
 * **disabled** \
 * **unauthorized**
 */
export type Enum480 = string;

/** Known values of {@link Enum481} that the service accepts. */
export enum KnownEnum481 {
  /** NewCrashGroupCreated */
  NewCrashGroupCreated = "newCrashGroupCreated",
  /** NewAppReleased */
  NewAppReleased = "newAppReleased"
}

/**
 * Defines values for Enum481. \
 * {@link KnownEnum481} can be used interchangeably with Enum481,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **newCrashGroupCreated** \
 * **newAppReleased**
 */
export type Enum481 = string;

/** Known values of {@link Enum482} that the service accepts. */
export enum KnownEnum482 {
  /** Github */
  Github = "github",
  /** Vsts */
  Vsts = "vsts",
  /** Jira */
  Jira = "jira"
}

/**
 * Defines values for Enum482. \
 * {@link KnownEnum482} can be used interchangeably with Enum482,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **github** \
 * **vsts** \
 * **jira**
 */
export type Enum482 = string;

/** Known values of {@link Enum483} that the service accepts. */
export enum KnownEnum483 {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredFour */
  FourHundredFour = 404,
  /** FourHundredNine */
  FourHundredNine = 409,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for Enum483. \
 * {@link KnownEnum483} can be used interchangeably with Enum483,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **404** \
 * **409** \
 * **500**
 */
export type Enum483 = number;

/** Known values of {@link Enum484} that the service accepts. */
export enum KnownEnum484 {
  /** IOS */
  IOS = "iOS",
  /** Android */
  Android = "Android",
  /** Windows */
  Windows = "Windows",
  /** MacOS */
  MacOS = "macOS"
}

/**
 * Defines values for Enum484. \
 * {@link KnownEnum484} can be used interchangeably with Enum484,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **iOS** \
 * **Android** \
 * **Windows** \
 * **macOS**
 */
export type Enum484 = string;

/** Known values of {@link Enum485} that the service accepts. */
export enum KnownEnum485 {
  /** ObjectiveCSwift */
  ObjectiveCSwift = "Objective-C-Swift",
  /** ReactNative */
  ReactNative = "React-Native",
  /** Xamarin */
  Xamarin = "Xamarin",
  /** Java */
  Java = "Java",
  /** UWP */
  UWP = "UWP"
}

/**
 * Defines values for Enum485. \
 * {@link KnownEnum485} can be used interchangeably with Enum485,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Objective-C-Swift** \
 * **React-Native** \
 * **Xamarin** \
 * **Java** \
 * **UWP**
 */
export type Enum485 = string;

/** Known values of {@link GetResponses200ContentApplicationJsonSchemaTestcloudProjectsItemFrameworkType} that the service accepts. */
export enum KnownGetResponses200ContentApplicationJsonSchemaTestcloudProjectsItemFrameworkType {
  /** Appium */
  Appium = "Appium",
  /** Calabash */
  Calabash = "Calabash",
  /** Espresso */
  Espresso = "Espresso",
  /** UITest */
  UITest = "UITest",
  /** Generated */
  Generated = "Generated"
}

/**
 * Defines values for GetResponses200ContentApplicationJsonSchemaTestcloudProjectsItemFrameworkType. \
 * {@link KnownGetResponses200ContentApplicationJsonSchemaTestcloudProjectsItemFrameworkType} can be used interchangeably with GetResponses200ContentApplicationJsonSchemaTestcloudProjectsItemFrameworkType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Appium** \
 * **Calabash** \
 * **Espresso** \
 * **UITest** \
 * **Generated**
 */
export type GetResponses200ContentApplicationJsonSchemaTestcloudProjectsItemFrameworkType = string;

/** Known values of {@link Enum487} that the service accepts. */
export enum KnownEnum487 {
  /** Continous */
  Continous = "continous",
  /** Continuous */
  Continuous = "continuous",
  /** Manual */
  Manual = "manual"
}

/**
 * Defines values for Enum487. \
 * {@link KnownEnum487} can be used interchangeably with Enum487,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **continous** \
 * **continuous** \
 * **manual**
 */
export type Enum487 = string;

/** Known values of {@link Enum488} that the service accepts. */
export enum KnownEnum488 {
  /** BuildId */
  BuildId = "buildId",
  /** Timestamp */
  Timestamp = "timestamp"
}

/**
 * Defines values for Enum488. \
 * {@link KnownEnum488} can be used interchangeably with Enum488,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **buildId** \
 * **timestamp**
 */
export type Enum488 = string;

/** Known values of {@link PostContentSchemaTrigger} that the service accepts. */
export enum KnownPostContentSchemaTrigger {
  /** Continous */
  Continous = "continous",
  /** Continuous */
  Continuous = "continuous",
  /** Manual */
  Manual = "manual"
}

/**
 * Defines values for PostContentSchemaTrigger. \
 * {@link KnownPostContentSchemaTrigger} can be used interchangeably with PostContentSchemaTrigger,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **continous** \
 * **continuous** \
 * **manual**
 */
export type PostContentSchemaTrigger = string;

/** Known values of {@link PostContentSchemaArtifactVersioningBuildNumberFormat} that the service accepts. */
export enum KnownPostContentSchemaArtifactVersioningBuildNumberFormat {
  /** BuildId */
  BuildId = "buildId",
  /** Timestamp */
  Timestamp = "timestamp"
}

/**
 * Defines values for PostContentSchemaArtifactVersioningBuildNumberFormat. \
 * {@link KnownPostContentSchemaArtifactVersioningBuildNumberFormat} can be used interchangeably with PostContentSchemaArtifactVersioningBuildNumberFormat,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **buildId** \
 * **timestamp**
 */
export type PostContentSchemaArtifactVersioningBuildNumberFormat = string;

/** Known values of {@link Enum491} that the service accepts. */
export enum KnownEnum491 {
  /** Continous */
  Continous = "continous",
  /** Continuous */
  Continuous = "continuous",
  /** Manual */
  Manual = "manual"
}

/**
 * Defines values for Enum491. \
 * {@link KnownEnum491} can be used interchangeably with Enum491,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **continous** \
 * **continuous** \
 * **manual**
 */
export type Enum491 = string;

/** Known values of {@link Enum492} that the service accepts. */
export enum KnownEnum492 {
  /** BuildId */
  BuildId = "buildId",
  /** Timestamp */
  Timestamp = "timestamp"
}

/**
 * Defines values for Enum492. \
 * {@link KnownEnum492} can be used interchangeably with Enum492,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **buildId** \
 * **timestamp**
 */
export type Enum492 = string;

/** Known values of {@link PutContentSchemaTrigger} that the service accepts. */
export enum KnownPutContentSchemaTrigger {
  /** Continous */
  Continous = "continous",
  /** Continuous */
  Continuous = "continuous",
  /** Manual */
  Manual = "manual"
}

/**
 * Defines values for PutContentSchemaTrigger. \
 * {@link KnownPutContentSchemaTrigger} can be used interchangeably with PutContentSchemaTrigger,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **continous** \
 * **continuous** \
 * **manual**
 */
export type PutContentSchemaTrigger = string;

/** Known values of {@link PutContentSchemaArtifactVersioningBuildNumberFormat} that the service accepts. */
export enum KnownPutContentSchemaArtifactVersioningBuildNumberFormat {
  /** BuildId */
  BuildId = "buildId",
  /** Timestamp */
  Timestamp = "timestamp"
}

/**
 * Defines values for PutContentSchemaArtifactVersioningBuildNumberFormat. \
 * {@link KnownPutContentSchemaArtifactVersioningBuildNumberFormat} can be used interchangeably with PutContentSchemaArtifactVersioningBuildNumberFormat,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **buildId** \
 * **timestamp**
 */
export type PutContentSchemaArtifactVersioningBuildNumberFormat = string;

/** Known values of {@link Put200ApplicationJsonAllOfProperties} that the service accepts. */
export enum KnownPut200ApplicationJsonAllOfProperties {
  /** Continous */
  Continous = "continous",
  /** Continuous */
  Continuous = "continuous",
  /** Manual */
  Manual = "manual"
}

/**
 * Defines values for Put200ApplicationJsonAllOfProperties. \
 * {@link KnownPut200ApplicationJsonAllOfProperties} can be used interchangeably with Put200ApplicationJsonAllOfProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **continous** \
 * **continuous** \
 * **manual**
 */
export type Put200ApplicationJsonAllOfProperties = string;

/** Known values of {@link Enum496} that the service accepts. */
export enum KnownEnum496 {
  /** BuildId */
  BuildId = "buildId",
  /** Timestamp */
  Timestamp = "timestamp"
}

/**
 * Defines values for Enum496. \
 * {@link KnownEnum496} can be used interchangeably with Enum496,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **buildId** \
 * **timestamp**
 */
export type Enum496 = string;

/** Known values of {@link Enum497} that the service accepts. */
export enum KnownEnum497 {
  /** Test */
  Test = "Test",
  /** Build */
  Build = "Build"
}

/**
 * Defines values for Enum497. \
 * {@link KnownEnum497} can be used interchangeably with Enum497,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Test** \
 * **Build**
 */
export type Enum497 = string;

/** Known values of {@link Enum498} that the service accepts. */
export enum KnownEnum498 {
  /** Previous */
  Previous = "Previous",
  /** Current */
  Current = "Current",
  /** Next */
  Next = "Next"
}

/**
 * Defines values for Enum498. \
 * {@link KnownEnum498} can be used interchangeably with Enum498,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Previous** \
 * **Current** \
 * **Next**
 */
export type Enum498 = string;

/** Known values of {@link Enum499} that the service accepts. */
export enum KnownEnum499 {
  /** None */
  None = "None",
  /** AppCenter */
  AppCenter = "AppCenter",
  /** GitHub */
  GitHub = "GitHub",
  /** Xtc */
  Xtc = "Xtc"
}

/**
 * Defines values for Enum499. \
 * {@link KnownEnum499} can be used interchangeably with Enum499,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **AppCenter** \
 * **GitHub** \
 * **Xtc**
 */
export type Enum499 = string;

/** Known values of {@link Enum500} that the service accepts. */
export enum KnownEnum500 {
  /** Build */
  Build = "Build",
  /** Test */
  Test = "Test"
}

/**
 * Defines values for Enum500. \
 * {@link KnownEnum500} can be used interchangeably with Enum500,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Build** \
 * **Test**
 */
export type Enum500 = string;

/** Known values of {@link Enum501} that the service accepts. */
export enum KnownEnum501 {
  /** None */
  None = "None",
  /** AppCenter */
  AppCenter = "AppCenter",
  /** GitHub */
  GitHub = "GitHub",
  /** Xtc */
  Xtc = "Xtc"
}

/**
 * Defines values for Enum501. \
 * {@link KnownEnum501} can be used interchangeably with Enum501,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **AppCenter** \
 * **GitHub** \
 * **Xtc**
 */
export type Enum501 = string;

/** Known values of {@link Enum502} that the service accepts. */
export enum KnownEnum502 {
  /** Build */
  Build = "Build",
  /** Test */
  Test = "Test"
}

/**
 * Defines values for Enum502. \
 * {@link KnownEnum502} can be used interchangeably with Enum502,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Build** \
 * **Test**
 */
export type Enum502 = string;

/** Known values of {@link Enum503} that the service accepts. */
export enum KnownEnum503 {
  /** Enabled */
  Enabled = "Enabled",
  /** Disabled */
  Disabled = "Disabled",
  /** NotSet */
  NotSet = "NotSet"
}

/**
 * Defines values for Enum503. \
 * {@link KnownEnum503} can be used interchangeably with Enum503,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled** \
 * **NotSet**
 */
export type Enum503 = string;

/** Known values of {@link Enum504} that the service accepts. */
export enum KnownEnum504 {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredThree */
  FourHundredThree = 403,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for Enum504. \
 * {@link KnownEnum504} can be used interchangeably with Enum504,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **403** \
 * **500**
 */
export type Enum504 = number;

/** Known values of {@link Enum505} that the service accepts. */
export enum KnownEnum505 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum505. \
 * {@link KnownEnum505} can be used interchangeably with Enum505,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum505 = string;

/** Known values of {@link Enum506} that the service accepts. */
export enum KnownEnum506 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum506. \
 * {@link KnownEnum506} can be used interchangeably with Enum506,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum506 = string;

/** Known values of {@link Enum507} that the service accepts. */
export enum KnownEnum507 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum507. \
 * {@link KnownEnum507} can be used interchangeably with Enum507,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum507 = string;

/** Known values of {@link Enum508} that the service accepts. */
export enum KnownEnum508 {
  /** Android */
  Android = "Android",
  /** IOS */
  IOS = "iOS",
  /** MacOS */
  MacOS = "macOS",
  /** Tizen */
  Tizen = "Tizen",
  /** TvOS */
  TvOS = "tvOS",
  /** Windows */
  Windows = "Windows",
  /** Linux */
  Linux = "Linux",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Enum508. \
 * {@link KnownEnum508} can be used interchangeably with Enum508,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Android** \
 * **iOS** \
 * **macOS** \
 * **Tizen** \
 * **tvOS** \
 * **Windows** \
 * **Linux** \
 * **Custom**
 */
export type Enum508 = string;

/** Known values of {@link Enum509} that the service accepts. */
export enum KnownEnum509 {
  /** Org */
  Org = "org",
  /** User */
  User = "user"
}

/**
 * Defines values for Enum509. \
 * {@link KnownEnum509} can be used interchangeably with Enum509,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **org** \
 * **user**
 */
export type Enum509 = string;

/** Known values of {@link Enum510} that the service accepts. */
export enum KnownEnum510 {
  /** Java */
  Java = "Java",
  /** ObjectiveCSwift */
  ObjectiveCSwift = "Objective-C-Swift",
  /** UWP */
  UWP = "UWP",
  /** Cordova */
  Cordova = "Cordova",
  /** ReactNative */
  ReactNative = "React-Native",
  /** Unity */
  Unity = "Unity",
  /** Electron */
  Electron = "Electron",
  /** Xamarin */
  Xamarin = "Xamarin",
  /** WPF */
  WPF = "WPF",
  /** WinForms */
  WinForms = "WinForms",
  /** Unknown */
  Unknown = "Unknown",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Enum510. \
 * {@link KnownEnum510} can be used interchangeably with Enum510,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Java** \
 * **Objective-C-Swift** \
 * **UWP** \
 * **Cordova** \
 * **React-Native** \
 * **Unity** \
 * **Electron** \
 * **Xamarin** \
 * **WPF** \
 * **WinForms** \
 * **Unknown** \
 * **Custom**
 */
export type Enum510 = string;

/** Known values of {@link Enum511} that the service accepts. */
export enum KnownEnum511 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for Enum511. \
 * {@link KnownEnum511} can be used interchangeably with Enum511,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type Enum511 = string;

/** Known values of {@link Enum512} that the service accepts. */
export enum KnownEnum512 {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Enum512. \
 * {@link KnownEnum512} can be used interchangeably with Enum512,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type Enum512 = string;

/** Known values of {@link Enum513} that the service accepts. */
export enum KnownEnum513 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum513. \
 * {@link KnownEnum513} can be used interchangeably with Enum513,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum513 = string;

/** Known values of {@link Enum514} that the service accepts. */
export enum KnownEnum514 {
  /** Android */
  Android = "Android",
  /** IOS */
  IOS = "iOS",
  /** MacOS */
  MacOS = "macOS",
  /** Tizen */
  Tizen = "Tizen",
  /** TvOS */
  TvOS = "tvOS",
  /** Windows */
  Windows = "Windows",
  /** Linux */
  Linux = "Linux",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Enum514. \
 * {@link KnownEnum514} can be used interchangeably with Enum514,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Android** \
 * **iOS** \
 * **macOS** \
 * **Tizen** \
 * **tvOS** \
 * **Windows** \
 * **Linux** \
 * **Custom**
 */
export type Enum514 = string;

/** Known values of {@link Enum515} that the service accepts. */
export enum KnownEnum515 {
  /** Org */
  Org = "org",
  /** User */
  User = "user"
}

/**
 * Defines values for Enum515. \
 * {@link KnownEnum515} can be used interchangeably with Enum515,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **org** \
 * **user**
 */
export type Enum515 = string;

/** Known values of {@link Enum516} that the service accepts. */
export enum KnownEnum516 {
  /** Java */
  Java = "Java",
  /** ObjectiveCSwift */
  ObjectiveCSwift = "Objective-C-Swift",
  /** UWP */
  UWP = "UWP",
  /** Cordova */
  Cordova = "Cordova",
  /** ReactNative */
  ReactNative = "React-Native",
  /** Unity */
  Unity = "Unity",
  /** Electron */
  Electron = "Electron",
  /** Xamarin */
  Xamarin = "Xamarin",
  /** WPF */
  WPF = "WPF",
  /** WinForms */
  WinForms = "WinForms",
  /** Unknown */
  Unknown = "Unknown",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Enum516. \
 * {@link KnownEnum516} can be used interchangeably with Enum516,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Java** \
 * **Objective-C-Swift** \
 * **UWP** \
 * **Cordova** \
 * **React-Native** \
 * **Unity** \
 * **Electron** \
 * **Xamarin** \
 * **WPF** \
 * **WinForms** \
 * **Unknown** \
 * **Custom**
 */
export type Enum516 = string;

/** Known values of {@link Enum517} that the service accepts. */
export enum KnownEnum517 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for Enum517. \
 * {@link KnownEnum517} can be used interchangeably with Enum517,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type Enum517 = string;

/** Known values of {@link Delete200ApplicationJsonAllOfPropertiesItemsItem} that the service accepts. */
export enum KnownDelete200ApplicationJsonAllOfPropertiesItemsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Delete200ApplicationJsonAllOfPropertiesItemsItem. \
 * {@link KnownDelete200ApplicationJsonAllOfPropertiesItemsItem} can be used interchangeably with Delete200ApplicationJsonAllOfPropertiesItemsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type Delete200ApplicationJsonAllOfPropertiesItemsItem = string;

/** Known values of {@link Enum519} that the service accepts. */
export enum KnownEnum519 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum519. \
 * {@link KnownEnum519} can be used interchangeably with Enum519,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum519 = string;

/** Known values of {@link Get401ApplicationJsonPropertiesProperties} that the service accepts. */
export enum KnownGet401ApplicationJsonPropertiesProperties {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Get401ApplicationJsonPropertiesProperties. \
 * {@link KnownGet401ApplicationJsonPropertiesProperties} can be used interchangeably with Get401ApplicationJsonPropertiesProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Get401ApplicationJsonPropertiesProperties = string;

/** Known values of {@link Enum521} that the service accepts. */
export enum KnownEnum521 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum521. \
 * {@link KnownEnum521} can be used interchangeably with Enum521,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum521 = string;

/** Known values of {@link Enum522} that the service accepts. */
export enum KnownEnum522 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum522. \
 * {@link KnownEnum522} can be used interchangeably with Enum522,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum522 = string;

/** Known values of {@link Enum523} that the service accepts. */
export enum KnownEnum523 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum523. \
 * {@link KnownEnum523} can be used interchangeably with Enum523,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum523 = string;

/** Known values of {@link Enum524} that the service accepts. */
export enum KnownEnum524 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum524. \
 * {@link KnownEnum524} can be used interchangeably with Enum524,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum524 = string;

/** Known values of {@link Enum525} that the service accepts. */
export enum KnownEnum525 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum525. \
 * {@link KnownEnum525} can be used interchangeably with Enum525,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum525 = string;

/** Known values of {@link Delete400ApplicationJsonPropertiesProperties} that the service accepts. */
export enum KnownDelete400ApplicationJsonPropertiesProperties {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Delete400ApplicationJsonPropertiesProperties. \
 * {@link KnownDelete400ApplicationJsonPropertiesProperties} can be used interchangeably with Delete400ApplicationJsonPropertiesProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Delete400ApplicationJsonPropertiesProperties = string;

/** Known values of {@link Delete401ApplicationJsonPropertiesProperties} that the service accepts. */
export enum KnownDelete401ApplicationJsonPropertiesProperties {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Delete401ApplicationJsonPropertiesProperties. \
 * {@link KnownDelete401ApplicationJsonPropertiesProperties} can be used interchangeably with Delete401ApplicationJsonPropertiesProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Delete401ApplicationJsonPropertiesProperties = string;

/** Known values of {@link Get200ApplicationJsonItemsScopeItem} that the service accepts. */
export enum KnownGet200ApplicationJsonItemsScopeItem {
  /** All */
  All = "all",
  /** Viewer */
  Viewer = "viewer"
}

/**
 * Defines values for Get200ApplicationJsonItemsScopeItem. \
 * {@link KnownGet200ApplicationJsonItemsScopeItem} can be used interchangeably with Get200ApplicationJsonItemsScopeItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **all** \
 * **viewer**
 */
export type Get200ApplicationJsonItemsScopeItem = string;

/** Known values of {@link Enum529} that the service accepts. */
export enum KnownEnum529 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum529. \
 * {@link KnownEnum529} can be used interchangeably with Enum529,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum529 = string;

/** Known values of {@link PostContentSchemaScopeItem} that the service accepts. */
export enum KnownPostContentSchemaScopeItem {
  /** All */
  All = "all",
  /** Viewer */
  Viewer = "viewer"
}

/**
 * Defines values for PostContentSchemaScopeItem. \
 * {@link KnownPostContentSchemaScopeItem} can be used interchangeably with PostContentSchemaScopeItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **all** \
 * **viewer**
 */
export type PostContentSchemaScopeItem = string;

/** Known values of {@link Enum531} that the service accepts. */
export enum KnownEnum531 {
  /** All */
  All = "all",
  /** Viewer */
  Viewer = "viewer"
}

/**
 * Defines values for Enum531. \
 * {@link KnownEnum531} can be used interchangeably with Enum531,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **all** \
 * **viewer**
 */
export type Enum531 = string;

/** Known values of {@link Enum532} that the service accepts. */
export enum KnownEnum532 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum532. \
 * {@link KnownEnum532} can be used interchangeably with Enum532,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum532 = string;

/** Known values of {@link Post401ApplicationJsonPropertiesProperties} that the service accepts. */
export enum KnownPost401ApplicationJsonPropertiesProperties {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Post401ApplicationJsonPropertiesProperties. \
 * {@link KnownPost401ApplicationJsonPropertiesProperties} can be used interchangeably with Post401ApplicationJsonPropertiesProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Post401ApplicationJsonPropertiesProperties = string;

/** Known values of {@link Enum534} that the service accepts. */
export enum KnownEnum534 {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredThree */
  FourHundredThree = 403,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for Enum534. \
 * {@link KnownEnum534} can be used interchangeably with Enum534,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **403** \
 * **500**
 */
export type Enum534 = number;

/** Known values of {@link Enum535} that the service accepts. */
export enum KnownEnum535 {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredThree */
  FourHundredThree = 403,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for Enum535. \
 * {@link KnownEnum535} can be used interchangeably with Enum535,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **403** \
 * **500**
 */
export type Enum535 = number;

/** Known values of {@link Enum536} that the service accepts. */
export enum KnownEnum536 {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredThree */
  FourHundredThree = 403,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for Enum536. \
 * {@link KnownEnum536} can be used interchangeably with Enum536,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **403** \
 * **500**
 */
export type Enum536 = number;

/** Known values of {@link Enum537} that the service accepts. */
export enum KnownEnum537 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum537. \
 * {@link KnownEnum537} can be used interchangeably with Enum537,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum537 = string;

/** Known values of {@link Enum538} that the service accepts. */
export enum KnownEnum538 {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredThree */
  FourHundredThree = 403,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for Enum538. \
 * {@link KnownEnum538} can be used interchangeably with Enum538,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **403** \
 * **500**
 */
export type Enum538 = number;

/** Known values of {@link Enum539} that the service accepts. */
export enum KnownEnum539 {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredThree */
  FourHundredThree = 403,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for Enum539. \
 * {@link KnownEnum539} can be used interchangeably with Enum539,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **403** \
 * **500**
 */
export type Enum539 = number;

/** Known values of {@link Enum540} that the service accepts. */
export enum KnownEnum540 {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredThree */
  FourHundredThree = 403,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for Enum540. \
 * {@link KnownEnum540} can be used interchangeably with Enum540,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **403** \
 * **500**
 */
export type Enum540 = number;

/** Known values of {@link Enum541} that the service accepts. */
export enum KnownEnum541 {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for Enum541. \
 * {@link KnownEnum541} can be used interchangeably with Enum541,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type Enum541 = string;

/** Known values of {@link Enum542} that the service accepts. */
export enum KnownEnum542 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum542. \
 * {@link KnownEnum542} can be used interchangeably with Enum542,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum542 = string;

/** Known values of {@link Enum543} that the service accepts. */
export enum KnownEnum543 {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredThree */
  FourHundredThree = 403,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for Enum543. \
 * {@link KnownEnum543} can be used interchangeably with Enum543,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **403** \
 * **500**
 */
export type Enum543 = number;

/** Known values of {@link Enum544} that the service accepts. */
export enum KnownEnum544 {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for Enum544. \
 * {@link KnownEnum544} can be used interchangeably with Enum544,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type Enum544 = string;

/** Known values of {@link Enum545} that the service accepts. */
export enum KnownEnum545 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum545. \
 * {@link KnownEnum545} can be used interchangeably with Enum545,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum545 = string;

/** Known values of {@link Enum546} that the service accepts. */
export enum KnownEnum546 {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredThree */
  FourHundredThree = 403,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for Enum546. \
 * {@link KnownEnum546} can be used interchangeably with Enum546,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **403** \
 * **500**
 */
export type Enum546 = number;

/** Known values of {@link Enum547} that the service accepts. */
export enum KnownEnum547 {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredThree */
  FourHundredThree = 403,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for Enum547. \
 * {@link KnownEnum547} can be used interchangeably with Enum547,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **403** \
 * **500**
 */
export type Enum547 = number;

/** Known values of {@link Enum548} that the service accepts. */
export enum KnownEnum548 {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredThree */
  FourHundredThree = 403,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for Enum548. \
 * {@link KnownEnum548} can be used interchangeably with Enum548,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **403** \
 * **500**
 */
export type Enum548 = number;

/** Known values of {@link Enum549} that the service accepts. */
export enum KnownEnum549 {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredThree */
  FourHundredThree = 403,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for Enum549. \
 * {@link KnownEnum549} can be used interchangeably with Enum549,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **403** \
 * **500**
 */
export type Enum549 = number;

/** Known values of {@link Enum550} that the service accepts. */
export enum KnownEnum550 {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredThree */
  FourHundredThree = 403,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for Enum550. \
 * {@link KnownEnum550} can be used interchangeably with Enum550,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **403** \
 * **500**
 */
export type Enum550 = number;

/** Known values of {@link Enum551} that the service accepts. */
export enum KnownEnum551 {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredThree */
  FourHundredThree = 403,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for Enum551. \
 * {@link KnownEnum551} can be used interchangeably with Enum551,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **403** \
 * **500**
 */
export type Enum551 = number;

/** Known values of {@link Enum552} that the service accepts. */
export enum KnownEnum552 {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredThree */
  FourHundredThree = 403,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for Enum552. \
 * {@link KnownEnum552} can be used interchangeably with Enum552,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **403** \
 * **500**
 */
export type Enum552 = number;

/** Known values of {@link Enum553} that the service accepts. */
export enum KnownEnum553 {
  /** Allpages */
  Allpages = "allpages",
  /** None */
  None = "none"
}

/**
 * Defines values for Enum553. \
 * {@link KnownEnum553} can be used interchangeably with Enum553,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **allpages** \
 * **none**
 */
export type Enum553 = string;

/** Known values of {@link Enum554} that the service accepts. */
export enum KnownEnum554 {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredThree */
  FourHundredThree = 403,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for Enum554. \
 * {@link KnownEnum554} can be used interchangeably with Enum554,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **403** \
 * **500**
 */
export type Enum554 = number;

/** Known values of {@link Enum555} that the service accepts. */
export enum KnownEnum555 {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredThree */
  FourHundredThree = 403,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for Enum555. \
 * {@link KnownEnum555} can be used interchangeably with Enum555,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **403** \
 * **500**
 */
export type Enum555 = number;

/** Known values of {@link Enum556} that the service accepts. */
export enum KnownEnum556 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum556. \
 * {@link KnownEnum556} can be used interchangeably with Enum556,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum556 = string;

/** Known values of {@link Enum557} that the service accepts. */
export enum KnownEnum557 {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredThree */
  FourHundredThree = 403,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for Enum557. \
 * {@link KnownEnum557} can be used interchangeably with Enum557,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **403** \
 * **500**
 */
export type Enum557 = number;

/** Known values of {@link Enum558} that the service accepts. */
export enum KnownEnum558 {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredThree */
  FourHundredThree = 403,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for Enum558. \
 * {@link KnownEnum558} can be used interchangeably with Enum558,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **403** \
 * **500**
 */
export type Enum558 = number;

/** Known values of {@link Enum559} that the service accepts. */
export enum KnownEnum559 {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredThree */
  FourHundredThree = 403,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for Enum559. \
 * {@link KnownEnum559} can be used interchangeably with Enum559,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **403** \
 * **500**
 */
export type Enum559 = number;

/** Known values of {@link Enum560} that the service accepts. */
export enum KnownEnum560 {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredThree */
  FourHundredThree = 403,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for Enum560. \
 * {@link KnownEnum560} can be used interchangeably with Enum560,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **403** \
 * **500**
 */
export type Enum560 = number;

/** Known values of {@link Enum561} that the service accepts. */
export enum KnownEnum561 {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredThree */
  FourHundredThree = 403,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for Enum561. \
 * {@link KnownEnum561} can be used interchangeably with Enum561,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **403** \
 * **500**
 */
export type Enum561 = number;

/** Known values of {@link Enum562} that the service accepts. */
export enum KnownEnum562 {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredThree */
  FourHundredThree = 403,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for Enum562. \
 * {@link KnownEnum562} can be used interchangeably with Enum562,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **403** \
 * **500**
 */
export type Enum562 = number;

/** Known values of {@link Enum563} that the service accepts. */
export enum KnownEnum563 {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredThree */
  FourHundredThree = 403,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for Enum563. \
 * {@link KnownEnum563} can be used interchangeably with Enum563,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **403** \
 * **500**
 */
export type Enum563 = number;

/** Known values of {@link Enum564} that the service accepts. */
export enum KnownEnum564 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum564. \
 * {@link KnownEnum564} can be used interchangeably with Enum564,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum564 = string;

/** Known values of {@link Enum565} that the service accepts. */
export enum KnownEnum565 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum565. \
 * {@link KnownEnum565} can be used interchangeably with Enum565,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum565 = string;

/** Known values of {@link Enum566} that the service accepts. */
export enum KnownEnum566 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum566. \
 * {@link KnownEnum566} can be used interchangeably with Enum566,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum566 = string;

/** Known values of {@link Enum567} that the service accepts. */
export enum KnownEnum567 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum567. \
 * {@link KnownEnum567} can be used interchangeably with Enum567,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum567 = string;

/** Known values of {@link Enum568} that the service accepts. */
export enum KnownEnum568 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum568. \
 * {@link KnownEnum568} can be used interchangeably with Enum568,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum568 = string;

/** Known values of {@link Enum569} that the service accepts. */
export enum KnownEnum569 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum569. \
 * {@link KnownEnum569} can be used interchangeably with Enum569,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum569 = string;

/** Known values of {@link Enum570} that the service accepts. */
export enum KnownEnum570 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum570. \
 * {@link KnownEnum570} can be used interchangeably with Enum570,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum570 = string;

/** Known values of {@link Enum571} that the service accepts. */
export enum KnownEnum571 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum571. \
 * {@link KnownEnum571} can be used interchangeably with Enum571,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum571 = string;

/** Known values of {@link Enum572} that the service accepts. */
export enum KnownEnum572 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum572. \
 * {@link KnownEnum572} can be used interchangeably with Enum572,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum572 = string;

/** Known values of {@link Enum573} that the service accepts. */
export enum KnownEnum573 {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredThree */
  FourHundredThree = 403,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for Enum573. \
 * {@link KnownEnum573} can be used interchangeably with Enum573,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **403** \
 * **500**
 */
export type Enum573 = number;

/** Known values of {@link Enum574} that the service accepts. */
export enum KnownEnum574 {
  /** Android */
  Android = "Android",
  /** IOS */
  IOS = "iOS",
  /** MacOS */
  MacOS = "macOS",
  /** Tizen */
  Tizen = "Tizen",
  /** TvOS */
  TvOS = "tvOS",
  /** Windows */
  Windows = "Windows",
  /** Linux */
  Linux = "Linux",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Enum574. \
 * {@link KnownEnum574} can be used interchangeably with Enum574,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Android** \
 * **iOS** \
 * **macOS** \
 * **Tizen** \
 * **tvOS** \
 * **Windows** \
 * **Linux** \
 * **Custom**
 */
export type Enum574 = string;

/** Known values of {@link Enum575} that the service accepts. */
export enum KnownEnum575 {
  /** Org */
  Org = "org",
  /** User */
  User = "user"
}

/**
 * Defines values for Enum575. \
 * {@link KnownEnum575} can be used interchangeably with Enum575,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **org** \
 * **user**
 */
export type Enum575 = string;

/** Known values of {@link Enum576} that the service accepts. */
export enum KnownEnum576 {
  /** Java */
  Java = "Java",
  /** ObjectiveCSwift */
  ObjectiveCSwift = "Objective-C-Swift",
  /** UWP */
  UWP = "UWP",
  /** Cordova */
  Cordova = "Cordova",
  /** ReactNative */
  ReactNative = "React-Native",
  /** Unity */
  Unity = "Unity",
  /** Electron */
  Electron = "Electron",
  /** Xamarin */
  Xamarin = "Xamarin",
  /** WPF */
  WPF = "WPF",
  /** WinForms */
  WinForms = "WinForms",
  /** Unknown */
  Unknown = "Unknown",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Enum576. \
 * {@link KnownEnum576} can be used interchangeably with Enum576,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Java** \
 * **Objective-C-Swift** \
 * **UWP** \
 * **Cordova** \
 * **React-Native** \
 * **Unity** \
 * **Electron** \
 * **Xamarin** \
 * **WPF** \
 * **WinForms** \
 * **Unknown** \
 * **Custom**
 */
export type Enum576 = string;

/** Known values of {@link Enum577} that the service accepts. */
export enum KnownEnum577 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for Enum577. \
 * {@link KnownEnum577} can be used interchangeably with Enum577,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type Enum577 = string;

/** Known values of {@link Enum578} that the service accepts. */
export enum KnownEnum578 {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Enum578. \
 * {@link KnownEnum578} can be used interchangeably with Enum578,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type Enum578 = string;

/** Known values of {@link Enum579} that the service accepts. */
export enum KnownEnum579 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum579. \
 * {@link KnownEnum579} can be used interchangeably with Enum579,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum579 = string;

/** Known values of {@link Enum580} that the service accepts. */
export enum KnownEnum580 {
  /** Android */
  Android = "Android",
  /** IOS */
  IOS = "iOS",
  /** MacOS */
  MacOS = "macOS",
  /** Tizen */
  Tizen = "Tizen",
  /** TvOS */
  TvOS = "tvOS",
  /** Windows */
  Windows = "Windows",
  /** Linux */
  Linux = "Linux",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Enum580. \
 * {@link KnownEnum580} can be used interchangeably with Enum580,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Android** \
 * **iOS** \
 * **macOS** \
 * **Tizen** \
 * **tvOS** \
 * **Windows** \
 * **Linux** \
 * **Custom**
 */
export type Enum580 = string;

/** Known values of {@link Enum581} that the service accepts. */
export enum KnownEnum581 {
  /** Org */
  Org = "org",
  /** User */
  User = "user"
}

/**
 * Defines values for Enum581. \
 * {@link KnownEnum581} can be used interchangeably with Enum581,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **org** \
 * **user**
 */
export type Enum581 = string;

/** Known values of {@link Enum582} that the service accepts. */
export enum KnownEnum582 {
  /** Java */
  Java = "Java",
  /** ObjectiveCSwift */
  ObjectiveCSwift = "Objective-C-Swift",
  /** UWP */
  UWP = "UWP",
  /** Cordova */
  Cordova = "Cordova",
  /** ReactNative */
  ReactNative = "React-Native",
  /** Unity */
  Unity = "Unity",
  /** Electron */
  Electron = "Electron",
  /** Xamarin */
  Xamarin = "Xamarin",
  /** WPF */
  WPF = "WPF",
  /** WinForms */
  WinForms = "WinForms",
  /** Unknown */
  Unknown = "Unknown",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Enum582. \
 * {@link KnownEnum582} can be used interchangeably with Enum582,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Java** \
 * **Objective-C-Swift** \
 * **UWP** \
 * **Cordova** \
 * **React-Native** \
 * **Unity** \
 * **Electron** \
 * **Xamarin** \
 * **WPF** \
 * **WinForms** \
 * **Unknown** \
 * **Custom**
 */
export type Enum582 = string;

/** Known values of {@link Enum583} that the service accepts. */
export enum KnownEnum583 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for Enum583. \
 * {@link KnownEnum583} can be used interchangeably with Enum583,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type Enum583 = string;

/** Known values of {@link Enum584} that the service accepts. */
export enum KnownEnum584 {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Enum584. \
 * {@link KnownEnum584} can be used interchangeably with Enum584,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type Enum584 = string;

/** Known values of {@link Enum585} that the service accepts. */
export enum KnownEnum585 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum585. \
 * {@link KnownEnum585} can be used interchangeably with Enum585,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum585 = string;

/** Known values of {@link Enum586} that the service accepts. */
export enum KnownEnum586 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum586. \
 * {@link KnownEnum586} can be used interchangeably with Enum586,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum586 = string;

/** Known values of {@link Enum587} that the service accepts. */
export enum KnownEnum587 {
  /** Android */
  Android = "Android",
  /** IOS */
  IOS = "iOS",
  /** MacOS */
  MacOS = "macOS",
  /** Tizen */
  Tizen = "Tizen",
  /** TvOS */
  TvOS = "tvOS",
  /** Windows */
  Windows = "Windows",
  /** Linux */
  Linux = "Linux",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Enum587. \
 * {@link KnownEnum587} can be used interchangeably with Enum587,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Android** \
 * **iOS** \
 * **macOS** \
 * **Tizen** \
 * **tvOS** \
 * **Windows** \
 * **Linux** \
 * **Custom**
 */
export type Enum587 = string;

/** Known values of {@link Enum588} that the service accepts. */
export enum KnownEnum588 {
  /** Java */
  Java = "Java",
  /** ObjectiveCSwift */
  ObjectiveCSwift = "Objective-C-Swift",
  /** UWP */
  UWP = "UWP",
  /** Cordova */
  Cordova = "Cordova",
  /** ReactNative */
  ReactNative = "React-Native",
  /** Xamarin */
  Xamarin = "Xamarin",
  /** Unity */
  Unity = "Unity",
  /** Electron */
  Electron = "Electron",
  /** WPF */
  WPF = "WPF",
  /** WinForms */
  WinForms = "WinForms",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Enum588. \
 * {@link KnownEnum588} can be used interchangeably with Enum588,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Java** \
 * **Objective-C-Swift** \
 * **UWP** \
 * **Cordova** \
 * **React-Native** \
 * **Xamarin** \
 * **Unity** \
 * **Electron** \
 * **WPF** \
 * **WinForms** \
 * **Custom**
 */
export type Enum588 = string;

/** Known values of {@link Enum589} that the service accepts. */
export enum KnownEnum589 {
  /** Android */
  Android = "Android",
  /** IOS */
  IOS = "iOS",
  /** MacOS */
  MacOS = "macOS",
  /** Tizen */
  Tizen = "Tizen",
  /** TvOS */
  TvOS = "tvOS",
  /** Windows */
  Windows = "Windows",
  /** Linux */
  Linux = "Linux",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Enum589. \
 * {@link KnownEnum589} can be used interchangeably with Enum589,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Android** \
 * **iOS** \
 * **macOS** \
 * **Tizen** \
 * **tvOS** \
 * **Windows** \
 * **Linux** \
 * **Custom**
 */
export type Enum589 = string;

/** Known values of {@link Enum590} that the service accepts. */
export enum KnownEnum590 {
  /** Org */
  Org = "org",
  /** User */
  User = "user"
}

/**
 * Defines values for Enum590. \
 * {@link KnownEnum590} can be used interchangeably with Enum590,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **org** \
 * **user**
 */
export type Enum590 = string;

/** Known values of {@link Enum591} that the service accepts. */
export enum KnownEnum591 {
  /** Java */
  Java = "Java",
  /** ObjectiveCSwift */
  ObjectiveCSwift = "Objective-C-Swift",
  /** UWP */
  UWP = "UWP",
  /** Cordova */
  Cordova = "Cordova",
  /** ReactNative */
  ReactNative = "React-Native",
  /** Unity */
  Unity = "Unity",
  /** Electron */
  Electron = "Electron",
  /** Xamarin */
  Xamarin = "Xamarin",
  /** WPF */
  WPF = "WPF",
  /** WinForms */
  WinForms = "WinForms",
  /** Unknown */
  Unknown = "Unknown",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Enum591. \
 * {@link KnownEnum591} can be used interchangeably with Enum591,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Java** \
 * **Objective-C-Swift** \
 * **UWP** \
 * **Cordova** \
 * **React-Native** \
 * **Unity** \
 * **Electron** \
 * **Xamarin** \
 * **WPF** \
 * **WinForms** \
 * **Unknown** \
 * **Custom**
 */
export type Enum591 = string;

/** Known values of {@link Enum592} that the service accepts. */
export enum KnownEnum592 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for Enum592. \
 * {@link KnownEnum592} can be used interchangeably with Enum592,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type Enum592 = string;

/** Known values of {@link Enum593} that the service accepts. */
export enum KnownEnum593 {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Enum593. \
 * {@link KnownEnum593} can be used interchangeably with Enum593,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type Enum593 = string;

/** Known values of {@link Enum594} that the service accepts. */
export enum KnownEnum594 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum594. \
 * {@link KnownEnum594} can be used interchangeably with Enum594,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum594 = string;

/** Known values of {@link Enum595} that the service accepts. */
export enum KnownEnum595 {
  /** DisplayName */
  DisplayName = "display_name",
  /** Name */
  Name = "name"
}

/**
 * Defines values for Enum595. \
 * {@link KnownEnum595} can be used interchangeably with Enum595,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **display_name** \
 * **name**
 */
export type Enum595 = string;

/** Known values of {@link Enum596} that the service accepts. */
export enum KnownEnum596 {
  /** Android */
  Android = "Android",
  /** IOS */
  IOS = "iOS",
  /** MacOS */
  MacOS = "macOS",
  /** Tizen */
  Tizen = "Tizen",
  /** TvOS */
  TvOS = "tvOS",
  /** Windows */
  Windows = "Windows",
  /** Linux */
  Linux = "Linux",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Enum596. \
 * {@link KnownEnum596} can be used interchangeably with Enum596,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Android** \
 * **iOS** \
 * **macOS** \
 * **Tizen** \
 * **tvOS** \
 * **Windows** \
 * **Linux** \
 * **Custom**
 */
export type Enum596 = string;

/** Known values of {@link Enum597} that the service accepts. */
export enum KnownEnum597 {
  /** Org */
  Org = "org",
  /** User */
  User = "user"
}

/**
 * Defines values for Enum597. \
 * {@link KnownEnum597} can be used interchangeably with Enum597,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **org** \
 * **user**
 */
export type Enum597 = string;

/** Known values of {@link Enum598} that the service accepts. */
export enum KnownEnum598 {
  /** Java */
  Java = "Java",
  /** ObjectiveCSwift */
  ObjectiveCSwift = "Objective-C-Swift",
  /** UWP */
  UWP = "UWP",
  /** Cordova */
  Cordova = "Cordova",
  /** ReactNative */
  ReactNative = "React-Native",
  /** Unity */
  Unity = "Unity",
  /** Electron */
  Electron = "Electron",
  /** Xamarin */
  Xamarin = "Xamarin",
  /** WPF */
  WPF = "WPF",
  /** WinForms */
  WinForms = "WinForms",
  /** Unknown */
  Unknown = "Unknown",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Enum598. \
 * {@link KnownEnum598} can be used interchangeably with Enum598,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Java** \
 * **Objective-C-Swift** \
 * **UWP** \
 * **Cordova** \
 * **React-Native** \
 * **Unity** \
 * **Electron** \
 * **Xamarin** \
 * **WPF** \
 * **WinForms** \
 * **Unknown** \
 * **Custom**
 */
export type Enum598 = string;

/** Known values of {@link Enum599} that the service accepts. */
export enum KnownEnum599 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for Enum599. \
 * {@link KnownEnum599} can be used interchangeably with Enum599,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type Enum599 = string;

/** Known values of {@link Enum600} that the service accepts. */
export enum KnownEnum600 {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Enum600. \
 * {@link KnownEnum600} can be used interchangeably with Enum600,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type Enum600 = string;

/** Known values of {@link Enum601} that the service accepts. */
export enum KnownEnum601 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum601. \
 * {@link KnownEnum601} can be used interchangeably with Enum601,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum601 = string;

/** Known values of {@link Enum602} that the service accepts. */
export enum KnownEnum602 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum602. \
 * {@link KnownEnum602} can be used interchangeably with Enum602,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum602 = string;

/** Known values of {@link Enum603} that the service accepts. */
export enum KnownEnum603 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum603. \
 * {@link KnownEnum603} can be used interchangeably with Enum603,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum603 = string;

/** Known values of {@link Enum604} that the service accepts. */
export enum KnownEnum604 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum604. \
 * {@link KnownEnum604} can be used interchangeably with Enum604,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum604 = string;

/** Known values of {@link Enum605} that the service accepts. */
export enum KnownEnum605 {
  /** All */
  All = "all",
  /** Viewer */
  Viewer = "viewer"
}

/**
 * Defines values for Enum605. \
 * {@link KnownEnum605} can be used interchangeably with Enum605,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **all** \
 * **viewer**
 */
export type Enum605 = string;

/** Known values of {@link Enum606} that the service accepts. */
export enum KnownEnum606 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum606. \
 * {@link KnownEnum606} can be used interchangeably with Enum606,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum606 = string;

/** Known values of {@link Enum607} that the service accepts. */
export enum KnownEnum607 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum607. \
 * {@link KnownEnum607} can be used interchangeably with Enum607,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum607 = string;

/** Known values of {@link Enum608} that the service accepts. */
export enum KnownEnum608 {
  /** All */
  All = "all",
  /** Viewer */
  Viewer = "viewer"
}

/**
 * Defines values for Enum608. \
 * {@link KnownEnum608} can be used interchangeably with Enum608,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **all** \
 * **viewer**
 */
export type Enum608 = string;

/** Known values of {@link Enum609} that the service accepts. */
export enum KnownEnum609 {
  /** All */
  All = "all",
  /** Viewer */
  Viewer = "viewer"
}

/**
 * Defines values for Enum609. \
 * {@link KnownEnum609} can be used interchangeably with Enum609,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **all** \
 * **viewer**
 */
export type Enum609 = string;

/** Known values of {@link Enum610} that the service accepts. */
export enum KnownEnum610 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum610. \
 * {@link KnownEnum610} can be used interchangeably with Enum610,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum610 = string;

/** Known values of {@link Enum611} that the service accepts. */
export enum KnownEnum611 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum611. \
 * {@link KnownEnum611} can be used interchangeably with Enum611,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum611 = string;

/** Known values of {@link Enum612} that the service accepts. */
export enum KnownEnum612 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp"
}

/**
 * Defines values for Enum612. \
 * {@link KnownEnum612} can be used interchangeably with Enum612,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp**
 */
export type Enum612 = string;

/** Known values of {@link Enum613} that the service accepts. */
export enum KnownEnum613 {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for Enum613. \
 * {@link KnownEnum613} can be used interchangeably with Enum613,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type Enum613 = string;

/** Known values of {@link ApiTokensCreateResponseScopeItem} that the service accepts. */
export enum KnownApiTokensCreateResponseScopeItem {
  /** All */
  All = "all",
  /** Viewer */
  Viewer = "viewer"
}

/**
 * Defines values for ApiTokensCreateResponseScopeItem. \
 * {@link KnownApiTokensCreateResponseScopeItem} can be used interchangeably with ApiTokensCreateResponseScopeItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **all** \
 * **viewer**
 */
export type ApiTokensCreateResponseScopeItem = string;

/** Known values of {@link ApiTokensCreateRequestScopeItem} that the service accepts. */
export enum KnownApiTokensCreateRequestScopeItem {
  /** All */
  All = "all",
  /** Viewer */
  Viewer = "viewer"
}

/**
 * Defines values for ApiTokensCreateRequestScopeItem. \
 * {@link KnownApiTokensCreateRequestScopeItem} can be used interchangeably with ApiTokensCreateRequestScopeItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **all** \
 * **viewer**
 */
export type ApiTokensCreateRequestScopeItem = string;

/** Known values of {@link ApiTokensGetResponseScopeItem} that the service accepts. */
export enum KnownApiTokensGetResponseScopeItem {
  /** All */
  All = "all",
  /** Viewer */
  Viewer = "viewer"
}

/**
 * Defines values for ApiTokensGetResponseScopeItem. \
 * {@link KnownApiTokensGetResponseScopeItem} can be used interchangeably with ApiTokensGetResponseScopeItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **all** \
 * **viewer**
 */
export type ApiTokensGetResponseScopeItem = string;

/** Known values of {@link ErrorResponseErrorCode} that the service accepts. */
export enum KnownErrorResponseErrorCode {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for ErrorResponseErrorCode. \
 * {@link KnownErrorResponseErrorCode} can be used interchangeably with ErrorResponseErrorCode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type ErrorResponseErrorCode = string;

/** Known values of {@link ErrorDetailsCode} that the service accepts. */
export enum KnownErrorDetailsCode {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized",
  /** TooManyRequests */
  TooManyRequests = "TooManyRequests"
}

/**
 * Defines values for ErrorDetailsCode. \
 * {@link KnownErrorDetailsCode} can be used interchangeably with ErrorDetailsCode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized** \
 * **TooManyRequests**
 */
export type ErrorDetailsCode = string;

/** Known values of {@link ApiTokensPostRequestScopeItem} that the service accepts. */
export enum KnownApiTokensPostRequestScopeItem {
  /** All */
  All = "all",
  /** InAppUpdate */
  InAppUpdate = "in_app_update",
  /** Viewer */
  Viewer = "viewer"
}

/**
 * Defines values for ApiTokensPostRequestScopeItem. \
 * {@link KnownApiTokensPostRequestScopeItem} can be used interchangeably with ApiTokensPostRequestScopeItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **all** \
 * **in_app_update** \
 * **viewer**
 */
export type ApiTokensPostRequestScopeItem = string;

/** Known values of {@link ApiTokensPostRequestTokenType} that the service accepts. */
export enum KnownApiTokensPostRequestTokenType {
  /** Public */
  Public = "public",
  /** InAppUpdate */
  InAppUpdate = "in_app_update",
  /** Build */
  Build = "build",
  /** Session */
  Session = "session",
  /** TesterApp */
  TesterApp = "tester_app"
}

/**
 * Defines values for ApiTokensPostRequestTokenType. \
 * {@link KnownApiTokensPostRequestTokenType} can be used interchangeably with ApiTokensPostRequestTokenType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **public** \
 * **in_app_update** \
 * **build** \
 * **session** \
 * **tester_app**
 */
export type ApiTokensPostRequestTokenType = string;

/** Known values of {@link AppRepoPostRequestRepoProvider} that the service accepts. */
export enum KnownAppRepoPostRequestRepoProvider {
  /** Github */
  Github = "github",
  /** Bitbucket */
  Bitbucket = "bitbucket",
  /** Vsts */
  Vsts = "vsts",
  /** Gitlab */
  Gitlab = "gitlab"
}

/**
 * Defines values for AppRepoPostRequestRepoProvider. \
 * {@link KnownAppRepoPostRequestRepoProvider} can be used interchangeably with AppRepoPostRequestRepoProvider,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **github** \
 * **bitbucket** \
 * **vsts** \
 * **gitlab**
 */
export type AppRepoPostRequestRepoProvider = string;

/** Known values of {@link AppRequestOs} that the service accepts. */
export enum KnownAppRequestOs {
  /** Android */
  Android = "Android",
  /** IOS */
  IOS = "iOS",
  /** MacOS */
  MacOS = "macOS",
  /** Tizen */
  Tizen = "Tizen",
  /** TvOS */
  TvOS = "tvOS",
  /** Windows */
  Windows = "Windows",
  /** Linux */
  Linux = "Linux",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for AppRequestOs. \
 * {@link KnownAppRequestOs} can be used interchangeably with AppRequestOs,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Android** \
 * **iOS** \
 * **macOS** \
 * **Tizen** \
 * **tvOS** \
 * **Windows** \
 * **Linux** \
 * **Custom**
 */
export type AppRequestOs = string;

/** Known values of {@link AppRequestPlatform} that the service accepts. */
export enum KnownAppRequestPlatform {
  /** Java */
  Java = "Java",
  /** ObjectiveCSwift */
  ObjectiveCSwift = "Objective-C-Swift",
  /** UWP */
  UWP = "UWP",
  /** Cordova */
  Cordova = "Cordova",
  /** ReactNative */
  ReactNative = "React-Native",
  /** Xamarin */
  Xamarin = "Xamarin",
  /** Unity */
  Unity = "Unity",
  /** Electron */
  Electron = "Electron",
  /** WPF */
  WPF = "WPF",
  /** WinForms */
  WinForms = "WinForms",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for AppRequestPlatform. \
 * {@link KnownAppRequestPlatform} can be used interchangeably with AppRequestPlatform,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Java** \
 * **Objective-C-Swift** \
 * **UWP** \
 * **Cordova** \
 * **React-Native** \
 * **Xamarin** \
 * **Unity** \
 * **Electron** \
 * **WPF** \
 * **WinForms** \
 * **Custom**
 */
export type AppRequestPlatform = string;

/** Known values of {@link GrantAdminRoleRequestAdminRole} that the service accepts. */
export enum KnownGrantAdminRoleRequestAdminRole {
  /** SuperAdmin */
  SuperAdmin = "superAdmin",
  /** Admin */
  Admin = "admin",
  /** DevOps */
  DevOps = "devOps",
  /** CustomerSupport */
  CustomerSupport = "customerSupport",
  /** NotAdmin */
  NotAdmin = "notAdmin"
}

/**
 * Defines values for GrantAdminRoleRequestAdminRole. \
 * {@link KnownGrantAdminRoleRequestAdminRole} can be used interchangeably with GrantAdminRoleRequestAdminRole,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **superAdmin** \
 * **admin** \
 * **devOps** \
 * **customerSupport** \
 * **notAdmin**
 */
export type GrantAdminRoleRequestAdminRole = string;

/** Known values of {@link OrganizationUserPatchRequestRole} that the service accepts. */
export enum KnownOrganizationUserPatchRequestRole {
  /** Admin */
  Admin = "admin",
  /** Collaborator */
  Collaborator = "collaborator",
  /** Member */
  Member = "member"
}

/**
 * Defines values for OrganizationUserPatchRequestRole. \
 * {@link KnownOrganizationUserPatchRequestRole} can be used interchangeably with OrganizationUserPatchRequestRole,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **admin** \
 * **collaborator** \
 * **member**
 */
export type OrganizationUserPatchRequestRole = string;

/** Known values of {@link UserAppPermissionsUpdateRequestPermissionsItem} that the service accepts. */
export enum KnownUserAppPermissionsUpdateRequestPermissionsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer"
}

/**
 * Defines values for UserAppPermissionsUpdateRequestPermissionsItem. \
 * {@link KnownUserAppPermissionsUpdateRequestPermissionsItem} can be used interchangeably with UserAppPermissionsUpdateRequestPermissionsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer**
 */
export type UserAppPermissionsUpdateRequestPermissionsItem = string;

/** Known values of {@link UserInvitationPermissionsUpdateRequestPermissionsItem} that the service accepts. */
export enum KnownUserInvitationPermissionsUpdateRequestPermissionsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer"
}

/**
 * Defines values for UserInvitationPermissionsUpdateRequestPermissionsItem. \
 * {@link KnownUserInvitationPermissionsUpdateRequestPermissionsItem} can be used interchangeably with UserInvitationPermissionsUpdateRequestPermissionsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer**
 */
export type UserInvitationPermissionsUpdateRequestPermissionsItem = string;

/** Known values of {@link UserEmailOrgRoleRequestRole} that the service accepts. */
export enum KnownUserEmailOrgRoleRequestRole {
  /** Admin */
  Admin = "admin",
  /** Collaborator */
  Collaborator = "collaborator",
  /** Member */
  Member = "member"
}

/**
 * Defines values for UserEmailOrgRoleRequestRole. \
 * {@link KnownUserEmailOrgRoleRequestRole} can be used interchangeably with UserEmailOrgRoleRequestRole,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **admin** \
 * **collaborator** \
 * **member**
 */
export type UserEmailOrgRoleRequestRole = string;

/** Known values of {@link AccountResponseOrigin} that the service accepts. */
export enum KnownAccountResponseOrigin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp"
}

/**
 * Defines values for AccountResponseOrigin. \
 * {@link KnownAccountResponseOrigin} can be used interchangeably with AccountResponseOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp**
 */
export type AccountResponseOrigin = string;

/** Known values of {@link AccountResponseType} that the service accepts. */
export enum KnownAccountResponseType {
  /** User */
  User = "user",
  /** Org */
  Org = "org"
}

/**
 * Defines values for AccountResponseType. \
 * {@link KnownAccountResponseType} can be used interchangeably with AccountResponseType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **org**
 */
export type AccountResponseType = string;

/** Known values of {@link ApiTokenGetUserResponseTokenScopeItem} that the service accepts. */
export enum KnownApiTokenGetUserResponseTokenScopeItem {
  /** All */
  All = "all",
  /** InAppUpdate */
  InAppUpdate = "in_app_update",
  /** Viewer */
  Viewer = "viewer"
}

/**
 * Defines values for ApiTokenGetUserResponseTokenScopeItem. \
 * {@link KnownApiTokenGetUserResponseTokenScopeItem} can be used interchangeably with ApiTokenGetUserResponseTokenScopeItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **all** \
 * **in_app_update** \
 * **viewer**
 */
export type ApiTokenGetUserResponseTokenScopeItem = string;

/** Known values of {@link ApiTokenGetUserResponseUserOrigin} that the service accepts. */
export enum KnownApiTokenGetUserResponseUserOrigin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for ApiTokenGetUserResponseUserOrigin. \
 * {@link KnownApiTokenGetUserResponseUserOrigin} can be used interchangeably with ApiTokenGetUserResponseUserOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type ApiTokenGetUserResponseUserOrigin = string;

/** Known values of {@link ValidatedApiTokenResponseTokenScopeItem} that the service accepts. */
export enum KnownValidatedApiTokenResponseTokenScopeItem {
  /** All */
  All = "all",
  /** InAppUpdate */
  InAppUpdate = "in_app_update",
  /** Viewer */
  Viewer = "viewer"
}

/**
 * Defines values for ValidatedApiTokenResponseTokenScopeItem. \
 * {@link KnownValidatedApiTokenResponseTokenScopeItem} can be used interchangeably with ValidatedApiTokenResponseTokenScopeItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **all** \
 * **in_app_update** \
 * **viewer**
 */
export type ValidatedApiTokenResponseTokenScopeItem = string;

/** Known values of {@link ValidatedApiTokenResponsePrincipalType} that the service accepts. */
export enum KnownValidatedApiTokenResponsePrincipalType {
  /** App */
  App = "app",
  /** User */
  User = "user"
}

/**
 * Defines values for ValidatedApiTokenResponsePrincipalType. \
 * {@link KnownValidatedApiTokenResponsePrincipalType} can be used interchangeably with ValidatedApiTokenResponsePrincipalType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **app** \
 * **user**
 */
export type ValidatedApiTokenResponsePrincipalType = string;

/** Known values of {@link ValidatedApiTokenResponseClaimsItemClaimType} that the service accepts. */
export enum KnownValidatedApiTokenResponseClaimsItemClaimType {
  /** UserEmail */
  UserEmail = "user_email",
  /** UserOrigin */
  UserOrigin = "user_origin",
  /** AppOwnerName */
  AppOwnerName = "app_owner_name",
  /** AppName */
  AppName = "app_name",
  /** AppOrigin */
  AppOrigin = "app_origin",
  /** AppOs */
  AppOs = "app_os",
  /** AppPlatform */
  AppPlatform = "app_platform",
  /** AppSecret */
  AppSecret = "app_secret"
}

/**
 * Defines values for ValidatedApiTokenResponseClaimsItemClaimType. \
 * {@link KnownValidatedApiTokenResponseClaimsItemClaimType} can be used interchangeably with ValidatedApiTokenResponseClaimsItemClaimType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user_email** \
 * **user_origin** \
 * **app_owner_name** \
 * **app_name** \
 * **app_origin** \
 * **app_os** \
 * **app_platform** \
 * **app_secret**
 */
export type ValidatedApiTokenResponseClaimsItemClaimType = string;

/** Known values of {@link ApiTokenClaimType} that the service accepts. */
export enum KnownApiTokenClaimType {
  /** UserEmail */
  UserEmail = "user_email",
  /** UserOrigin */
  UserOrigin = "user_origin",
  /** AppOwnerName */
  AppOwnerName = "app_owner_name",
  /** AppName */
  AppName = "app_name",
  /** AppOrigin */
  AppOrigin = "app_origin",
  /** AppOs */
  AppOs = "app_os",
  /** AppPlatform */
  AppPlatform = "app_platform",
  /** AppSecret */
  AppSecret = "app_secret"
}

/**
 * Defines values for ApiTokenClaimType. \
 * {@link KnownApiTokenClaimType} can be used interchangeably with ApiTokenClaimType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user_email** \
 * **user_origin** \
 * **app_owner_name** \
 * **app_name** \
 * **app_origin** \
 * **app_os** \
 * **app_platform** \
 * **app_secret**
 */
export type ApiTokenClaimType = string;

/** Known values of {@link ApiTokenResponseScopeItem} that the service accepts. */
export enum KnownApiTokenResponseScopeItem {
  /** All */
  All = "all",
  /** InAppUpdate */
  InAppUpdate = "in_app_update",
  /** Viewer */
  Viewer = "viewer"
}

/**
 * Defines values for ApiTokenResponseScopeItem. \
 * {@link KnownApiTokenResponseScopeItem} can be used interchangeably with ApiTokenResponseScopeItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **all** \
 * **in_app_update** \
 * **viewer**
 */
export type ApiTokenResponseScopeItem = string;

/** Known values of {@link AppGroupResponseOs} that the service accepts. */
export enum KnownAppGroupResponseOs {
  /** Android */
  Android = "Android",
  /** IOS */
  IOS = "iOS",
  /** MacOS */
  MacOS = "macOS",
  /** Tizen */
  Tizen = "Tizen",
  /** TvOS */
  TvOS = "tvOS",
  /** Windows */
  Windows = "Windows",
  /** Linux */
  Linux = "Linux",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for AppGroupResponseOs. \
 * {@link KnownAppGroupResponseOs} can be used interchangeably with AppGroupResponseOs,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Android** \
 * **iOS** \
 * **macOS** \
 * **Tizen** \
 * **tvOS** \
 * **Windows** \
 * **Linux** \
 * **Custom**
 */
export type AppGroupResponseOs = string;

/** Known values of {@link AppGroupResponsePlatform} that the service accepts. */
export enum KnownAppGroupResponsePlatform {
  /** Java */
  Java = "Java",
  /** ObjectiveCSwift */
  ObjectiveCSwift = "Objective-C-Swift",
  /** UWP */
  UWP = "UWP",
  /** Cordova */
  Cordova = "Cordova",
  /** ReactNative */
  ReactNative = "React-Native",
  /** Unity */
  Unity = "Unity",
  /** Electron */
  Electron = "Electron",
  /** Xamarin */
  Xamarin = "Xamarin",
  /** WPF */
  WPF = "WPF",
  /** WinForms */
  WinForms = "WinForms",
  /** Unknown */
  Unknown = "Unknown",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for AppGroupResponsePlatform. \
 * {@link KnownAppGroupResponsePlatform} can be used interchangeably with AppGroupResponsePlatform,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Java** \
 * **Objective-C-Swift** \
 * **UWP** \
 * **Cordova** \
 * **React-Native** \
 * **Unity** \
 * **Electron** \
 * **Xamarin** \
 * **WPF** \
 * **WinForms** \
 * **Unknown** \
 * **Custom**
 */
export type AppGroupResponsePlatform = string;

/** Known values of {@link AppInvitationDetailResponseApp0Os} that the service accepts. */
export enum KnownAppInvitationDetailResponseApp0Os {
  /** Android */
  Android = "Android",
  /** IOS */
  IOS = "iOS",
  /** MacOS */
  MacOS = "macOS",
  /** Tizen */
  Tizen = "Tizen",
  /** TvOS */
  TvOS = "tvOS",
  /** Windows */
  Windows = "Windows",
  /** Linux */
  Linux = "Linux",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for AppInvitationDetailResponseApp0Os. \
 * {@link KnownAppInvitationDetailResponseApp0Os} can be used interchangeably with AppInvitationDetailResponseApp0Os,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Android** \
 * **iOS** \
 * **macOS** \
 * **Tizen** \
 * **tvOS** \
 * **Windows** \
 * **Linux** \
 * **Custom**
 */
export type AppInvitationDetailResponseApp0Os = string;

/** Known values of {@link AppInvitationDetailResponseApp0OwnerType} that the service accepts. */
export enum KnownAppInvitationDetailResponseApp0OwnerType {
  /** Org */
  Org = "org",
  /** User */
  User = "user"
}

/**
 * Defines values for AppInvitationDetailResponseApp0OwnerType. \
 * {@link KnownAppInvitationDetailResponseApp0OwnerType} can be used interchangeably with AppInvitationDetailResponseApp0OwnerType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **org** \
 * **user**
 */
export type AppInvitationDetailResponseApp0OwnerType = string;

/** Known values of {@link AppInvitationDetailResponseApp1Platform} that the service accepts. */
export enum KnownAppInvitationDetailResponseApp1Platform {
  /** Java */
  Java = "Java",
  /** ObjectiveCSwift */
  ObjectiveCSwift = "Objective-C-Swift",
  /** UWP */
  UWP = "UWP",
  /** Cordova */
  Cordova = "Cordova",
  /** ReactNative */
  ReactNative = "React-Native",
  /** Unity */
  Unity = "Unity",
  /** Electron */
  Electron = "Electron",
  /** Xamarin */
  Xamarin = "Xamarin",
  /** WPF */
  WPF = "WPF",
  /** WinForms */
  WinForms = "WinForms",
  /** Unknown */
  Unknown = "Unknown",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for AppInvitationDetailResponseApp1Platform. \
 * {@link KnownAppInvitationDetailResponseApp1Platform} can be used interchangeably with AppInvitationDetailResponseApp1Platform,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Java** \
 * **Objective-C-Swift** \
 * **UWP** \
 * **Cordova** \
 * **React-Native** \
 * **Unity** \
 * **Electron** \
 * **Xamarin** \
 * **WPF** \
 * **WinForms** \
 * **Unknown** \
 * **Custom**
 */
export type AppInvitationDetailResponseApp1Platform = string;

/** Known values of {@link AppInvitationDetailResponseApp1Origin} that the service accepts. */
export enum KnownAppInvitationDetailResponseApp1Origin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for AppInvitationDetailResponseApp1Origin. \
 * {@link KnownAppInvitationDetailResponseApp1Origin} can be used interchangeably with AppInvitationDetailResponseApp1Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type AppInvitationDetailResponseApp1Origin = string;

/** Known values of {@link AppInvitationDetailResponseApp1MemberPermissionsItem} that the service accepts. */
export enum KnownAppInvitationDetailResponseApp1MemberPermissionsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for AppInvitationDetailResponseApp1MemberPermissionsItem. \
 * {@link KnownAppInvitationDetailResponseApp1MemberPermissionsItem} can be used interchangeably with AppInvitationDetailResponseApp1MemberPermissionsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type AppInvitationDetailResponseApp1MemberPermissionsItem = string;

/** Known values of {@link AppInvitationDetailResponseInviteType} that the service accepts. */
export enum KnownAppInvitationDetailResponseInviteType {
  /** Developer */
  Developer = "developer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for AppInvitationDetailResponseInviteType. \
 * {@link KnownAppInvitationDetailResponseInviteType} can be used interchangeably with AppInvitationDetailResponseInviteType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **developer** \
 * **tester**
 */
export type AppInvitationDetailResponseInviteType = string;

/** Known values of {@link AppInvitationDetailResponseInvitedByPermissionsItem} that the service accepts. */
export enum KnownAppInvitationDetailResponseInvitedByPermissionsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for AppInvitationDetailResponseInvitedByPermissionsItem. \
 * {@link KnownAppInvitationDetailResponseInvitedByPermissionsItem} can be used interchangeably with AppInvitationDetailResponseInvitedByPermissionsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type AppInvitationDetailResponseInvitedByPermissionsItem = string;

/** Known values of {@link AppInvitationDetailResponseInvitedByOrigin} that the service accepts. */
export enum KnownAppInvitationDetailResponseInvitedByOrigin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for AppInvitationDetailResponseInvitedByOrigin. \
 * {@link KnownAppInvitationDetailResponseInvitedByOrigin} can be used interchangeably with AppInvitationDetailResponseInvitedByOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type AppInvitationDetailResponseInvitedByOrigin = string;

/** Known values of {@link AppInvitationDetailResponsePermissionsItem} that the service accepts. */
export enum KnownAppInvitationDetailResponsePermissionsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for AppInvitationDetailResponsePermissionsItem. \
 * {@link KnownAppInvitationDetailResponsePermissionsItem} can be used interchangeably with AppInvitationDetailResponsePermissionsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type AppInvitationDetailResponsePermissionsItem = string;

/** Known values of {@link AppInvitationDetailResponseDistributionGroupOwnerType} that the service accepts. */
export enum KnownAppInvitationDetailResponseDistributionGroupOwnerType {
  /** Org */
  Org = "org",
  /** User */
  User = "user"
}

/**
 * Defines values for AppInvitationDetailResponseDistributionGroupOwnerType. \
 * {@link KnownAppInvitationDetailResponseDistributionGroupOwnerType} can be used interchangeably with AppInvitationDetailResponseDistributionGroupOwnerType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **org** \
 * **user**
 */
export type AppInvitationDetailResponseDistributionGroupOwnerType = string;

/** Known values of {@link AppRepoResponseRepoProvider} that the service accepts. */
export enum KnownAppRepoResponseRepoProvider {
  /** Github */
  Github = "github",
  /** Bitbucket */
  Bitbucket = "bitbucket",
  /** Vsts */
  Vsts = "vsts",
  /** Gitlab */
  Gitlab = "gitlab"
}

/**
 * Defines values for AppRepoResponseRepoProvider. \
 * {@link KnownAppRepoResponseRepoProvider} can be used interchangeably with AppRepoResponseRepoProvider,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **github** \
 * **bitbucket** \
 * **vsts** \
 * **gitlab**
 */
export type AppRepoResponseRepoProvider = string;

/** Known values of {@link BasicAppResponseOs} that the service accepts. */
export enum KnownBasicAppResponseOs {
  /** Android */
  Android = "Android",
  /** IOS */
  IOS = "iOS",
  /** MacOS */
  MacOS = "macOS",
  /** Tizen */
  Tizen = "Tizen",
  /** TvOS */
  TvOS = "tvOS",
  /** Windows */
  Windows = "Windows",
  /** Linux */
  Linux = "Linux",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for BasicAppResponseOs. \
 * {@link KnownBasicAppResponseOs} can be used interchangeably with BasicAppResponseOs,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Android** \
 * **iOS** \
 * **macOS** \
 * **Tizen** \
 * **tvOS** \
 * **Windows** \
 * **Linux** \
 * **Custom**
 */
export type BasicAppResponseOs = string;

/** Known values of {@link BasicAppResponseOwnerType} that the service accepts. */
export enum KnownBasicAppResponseOwnerType {
  /** Org */
  Org = "org",
  /** User */
  User = "user"
}

/**
 * Defines values for BasicAppResponseOwnerType. \
 * {@link KnownBasicAppResponseOwnerType} can be used interchangeably with BasicAppResponseOwnerType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **org** \
 * **user**
 */
export type BasicAppResponseOwnerType = string;

/** Known values of {@link AppResponsePlatform} that the service accepts. */
export enum KnownAppResponsePlatform {
  /** Java */
  Java = "Java",
  /** ObjectiveCSwift */
  ObjectiveCSwift = "Objective-C-Swift",
  /** UWP */
  UWP = "UWP",
  /** Cordova */
  Cordova = "Cordova",
  /** ReactNative */
  ReactNative = "React-Native",
  /** Unity */
  Unity = "Unity",
  /** Electron */
  Electron = "Electron",
  /** Xamarin */
  Xamarin = "Xamarin",
  /** WPF */
  WPF = "WPF",
  /** WinForms */
  WinForms = "WinForms",
  /** Unknown */
  Unknown = "Unknown",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for AppResponsePlatform. \
 * {@link KnownAppResponsePlatform} can be used interchangeably with AppResponsePlatform,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Java** \
 * **Objective-C-Swift** \
 * **UWP** \
 * **Cordova** \
 * **React-Native** \
 * **Unity** \
 * **Electron** \
 * **Xamarin** \
 * **WPF** \
 * **WinForms** \
 * **Unknown** \
 * **Custom**
 */
export type AppResponsePlatform = string;

/** Known values of {@link AppResponseOrigin} that the service accepts. */
export enum KnownAppResponseOrigin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for AppResponseOrigin. \
 * {@link KnownAppResponseOrigin} can be used interchangeably with AppResponseOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type AppResponseOrigin = string;

/** Known values of {@link AppResponseMemberPermissionsItem} that the service accepts. */
export enum KnownAppResponseMemberPermissionsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for AppResponseMemberPermissionsItem. \
 * {@link KnownAppResponseMemberPermissionsItem} can be used interchangeably with AppResponseMemberPermissionsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type AppResponseMemberPermissionsItem = string;

/** Known values of {@link AppResponseInternalUserPermissionsItem} that the service accepts. */
export enum KnownAppResponseInternalUserPermissionsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for AppResponseInternalUserPermissionsItem. \
 * {@link KnownAppResponseInternalUserPermissionsItem} can be used interchangeably with AppResponseInternalUserPermissionsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type AppResponseInternalUserPermissionsItem = string;

/** Known values of {@link AppResponseInternal0Os} that the service accepts. */
export enum KnownAppResponseInternal0Os {
  /** Android */
  Android = "Android",
  /** IOS */
  IOS = "iOS",
  /** MacOS */
  MacOS = "macOS",
  /** Tizen */
  Tizen = "Tizen",
  /** TvOS */
  TvOS = "tvOS",
  /** Windows */
  Windows = "Windows",
  /** Linux */
  Linux = "Linux",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for AppResponseInternal0Os. \
 * {@link KnownAppResponseInternal0Os} can be used interchangeably with AppResponseInternal0Os,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Android** \
 * **iOS** \
 * **macOS** \
 * **Tizen** \
 * **tvOS** \
 * **Windows** \
 * **Linux** \
 * **Custom**
 */
export type AppResponseInternal0Os = string;

/** Known values of {@link AppResponseInternal0OwnerType} that the service accepts. */
export enum KnownAppResponseInternal0OwnerType {
  /** Org */
  Org = "org",
  /** User */
  User = "user"
}

/**
 * Defines values for AppResponseInternal0OwnerType. \
 * {@link KnownAppResponseInternal0OwnerType} can be used interchangeably with AppResponseInternal0OwnerType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **org** \
 * **user**
 */
export type AppResponseInternal0OwnerType = string;

/** Known values of {@link AppResponseInternal01Platform} that the service accepts. */
export enum KnownAppResponseInternal01Platform {
  /** Java */
  Java = "Java",
  /** ObjectiveCSwift */
  ObjectiveCSwift = "Objective-C-Swift",
  /** UWP */
  UWP = "UWP",
  /** Cordova */
  Cordova = "Cordova",
  /** ReactNative */
  ReactNative = "React-Native",
  /** Unity */
  Unity = "Unity",
  /** Electron */
  Electron = "Electron",
  /** Xamarin */
  Xamarin = "Xamarin",
  /** WPF */
  WPF = "WPF",
  /** WinForms */
  WinForms = "WinForms",
  /** Unknown */
  Unknown = "Unknown",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for AppResponseInternal01Platform. \
 * {@link KnownAppResponseInternal01Platform} can be used interchangeably with AppResponseInternal01Platform,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Java** \
 * **Objective-C-Swift** \
 * **UWP** \
 * **Cordova** \
 * **React-Native** \
 * **Unity** \
 * **Electron** \
 * **Xamarin** \
 * **WPF** \
 * **WinForms** \
 * **Unknown** \
 * **Custom**
 */
export type AppResponseInternal01Platform = string;

/** Known values of {@link AppResponseInternal01Origin} that the service accepts. */
export enum KnownAppResponseInternal01Origin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for AppResponseInternal01Origin. \
 * {@link KnownAppResponseInternal01Origin} can be used interchangeably with AppResponseInternal01Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type AppResponseInternal01Origin = string;

/** Known values of {@link AppResponseInternal01MemberPermissionsItem} that the service accepts. */
export enum KnownAppResponseInternal01MemberPermissionsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for AppResponseInternal01MemberPermissionsItem. \
 * {@link KnownAppResponseInternal01MemberPermissionsItem} can be used interchangeably with AppResponseInternal01MemberPermissionsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type AppResponseInternal01MemberPermissionsItem = string;

/** Known values of {@link AppUserPermissionResponsePermissionsItem} that the service accepts. */
export enum KnownAppUserPermissionResponsePermissionsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for AppUserPermissionResponsePermissionsItem. \
 * {@link KnownAppUserPermissionResponsePermissionsItem} can be used interchangeably with AppUserPermissionResponsePermissionsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type AppUserPermissionResponsePermissionsItem = string;

/** Known values of {@link AppUserPermissionResponseAppOrigin} that the service accepts. */
export enum KnownAppUserPermissionResponseAppOrigin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for AppUserPermissionResponseAppOrigin. \
 * {@link KnownAppUserPermissionResponseAppOrigin} can be used interchangeably with AppUserPermissionResponseAppOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **codepush**
 */
export type AppUserPermissionResponseAppOrigin = string;

/** Known values of {@link AppWithTeamPermissionsResponseTeamPermissionsItem} that the service accepts. */
export enum KnownAppWithTeamPermissionsResponseTeamPermissionsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer"
}

/**
 * Defines values for AppWithTeamPermissionsResponseTeamPermissionsItem. \
 * {@link KnownAppWithTeamPermissionsResponseTeamPermissionsItem} can be used interchangeably with AppWithTeamPermissionsResponseTeamPermissionsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer**
 */
export type AppWithTeamPermissionsResponseTeamPermissionsItem = string;

/** Known values of {@link AppWithTeamPermissionsResponse0Os} that the service accepts. */
export enum KnownAppWithTeamPermissionsResponse0Os {
  /** Android */
  Android = "Android",
  /** IOS */
  IOS = "iOS",
  /** MacOS */
  MacOS = "macOS",
  /** Tizen */
  Tizen = "Tizen",
  /** TvOS */
  TvOS = "tvOS",
  /** Windows */
  Windows = "Windows",
  /** Linux */
  Linux = "Linux",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for AppWithTeamPermissionsResponse0Os. \
 * {@link KnownAppWithTeamPermissionsResponse0Os} can be used interchangeably with AppWithTeamPermissionsResponse0Os,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Android** \
 * **iOS** \
 * **macOS** \
 * **Tizen** \
 * **tvOS** \
 * **Windows** \
 * **Linux** \
 * **Custom**
 */
export type AppWithTeamPermissionsResponse0Os = string;

/** Known values of {@link AppWithTeamPermissionsResponse0OwnerType} that the service accepts. */
export enum KnownAppWithTeamPermissionsResponse0OwnerType {
  /** Org */
  Org = "org",
  /** User */
  User = "user"
}

/**
 * Defines values for AppWithTeamPermissionsResponse0OwnerType. \
 * {@link KnownAppWithTeamPermissionsResponse0OwnerType} can be used interchangeably with AppWithTeamPermissionsResponse0OwnerType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **org** \
 * **user**
 */
export type AppWithTeamPermissionsResponse0OwnerType = string;

/** Known values of {@link AppWithTeamPermissionsResponse01Platform} that the service accepts. */
export enum KnownAppWithTeamPermissionsResponse01Platform {
  /** Java */
  Java = "Java",
  /** ObjectiveCSwift */
  ObjectiveCSwift = "Objective-C-Swift",
  /** UWP */
  UWP = "UWP",
  /** Cordova */
  Cordova = "Cordova",
  /** ReactNative */
  ReactNative = "React-Native",
  /** Unity */
  Unity = "Unity",
  /** Electron */
  Electron = "Electron",
  /** Xamarin */
  Xamarin = "Xamarin",
  /** WPF */
  WPF = "WPF",
  /** WinForms */
  WinForms = "WinForms",
  /** Unknown */
  Unknown = "Unknown",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for AppWithTeamPermissionsResponse01Platform. \
 * {@link KnownAppWithTeamPermissionsResponse01Platform} can be used interchangeably with AppWithTeamPermissionsResponse01Platform,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Java** \
 * **Objective-C-Swift** \
 * **UWP** \
 * **Cordova** \
 * **React-Native** \
 * **Unity** \
 * **Electron** \
 * **Xamarin** \
 * **WPF** \
 * **WinForms** \
 * **Unknown** \
 * **Custom**
 */
export type AppWithTeamPermissionsResponse01Platform = string;

/** Known values of {@link AppWithTeamPermissionsResponse01Origin} that the service accepts. */
export enum KnownAppWithTeamPermissionsResponse01Origin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for AppWithTeamPermissionsResponse01Origin. \
 * {@link KnownAppWithTeamPermissionsResponse01Origin} can be used interchangeably with AppWithTeamPermissionsResponse01Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type AppWithTeamPermissionsResponse01Origin = string;

/** Known values of {@link AppWithTeamPermissionsResponse01MemberPermissionsItem} that the service accepts. */
export enum KnownAppWithTeamPermissionsResponse01MemberPermissionsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for AppWithTeamPermissionsResponse01MemberPermissionsItem. \
 * {@link KnownAppWithTeamPermissionsResponse01MemberPermissionsItem} can be used interchangeably with AppWithTeamPermissionsResponse01MemberPermissionsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type AppWithTeamPermissionsResponse01MemberPermissionsItem = string;

/** Known values of {@link OrgUserPermissionResponseUserRole} that the service accepts. */
export enum KnownOrgUserPermissionResponseUserRole {
  /** Admin */
  Admin = "admin",
  /** Collaborator */
  Collaborator = "collaborator"
}

/**
 * Defines values for OrgUserPermissionResponseUserRole. \
 * {@link KnownOrgUserPermissionResponseUserRole} can be used interchangeably with OrgUserPermissionResponseUserRole,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **admin** \
 * **collaborator**
 */
export type OrgUserPermissionResponseUserRole = string;

/** Known values of {@link DistributionGroupResponseOrigin} that the service accepts. */
export enum KnownDistributionGroupResponseOrigin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp"
}

/**
 * Defines values for DistributionGroupResponseOrigin. \
 * {@link KnownDistributionGroupResponseOrigin} can be used interchangeably with DistributionGroupResponseOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp**
 */
export type DistributionGroupResponseOrigin = string;

/** Known values of {@link DistributionGroupPrivateResponseGroupType} that the service accepts. */
export enum KnownDistributionGroupPrivateResponseGroupType {
  /** Default */
  Default = "Default",
  /** HockeyAppDefault */
  HockeyAppDefault = "HockeyAppDefault",
  /** MicrosoftDogfooding */
  MicrosoftDogfooding = "MicrosoftDogfooding"
}

/**
 * Defines values for DistributionGroupPrivateResponseGroupType. \
 * {@link KnownDistributionGroupPrivateResponseGroupType} can be used interchangeably with DistributionGroupPrivateResponseGroupType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Default** \
 * **HockeyAppDefault** \
 * **MicrosoftDogfooding**
 */
export type DistributionGroupPrivateResponseGroupType = string;

/** Known values of {@link DistributionGroupDetailsResponseGroupType} that the service accepts. */
export enum KnownDistributionGroupDetailsResponseGroupType {
  /** Default */
  Default = "Default",
  /** HockeyAppDefault */
  HockeyAppDefault = "HockeyAppDefault",
  /** MicrosoftDogfooding */
  MicrosoftDogfooding = "MicrosoftDogfooding"
}

/**
 * Defines values for DistributionGroupDetailsResponseGroupType. \
 * {@link KnownDistributionGroupDetailsResponseGroupType} can be used interchangeably with DistributionGroupDetailsResponseGroupType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Default** \
 * **HockeyAppDefault** \
 * **MicrosoftDogfooding**
 */
export type DistributionGroupDetailsResponseGroupType = string;

/** Known values of {@link Enum674} that the service accepts. */
export enum KnownEnum674 {
  /** Android */
  Android = "Android",
  /** IOS */
  IOS = "iOS",
  /** MacOS */
  MacOS = "macOS",
  /** Tizen */
  Tizen = "Tizen",
  /** TvOS */
  TvOS = "tvOS",
  /** Windows */
  Windows = "Windows",
  /** Linux */
  Linux = "Linux",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Enum674. \
 * {@link KnownEnum674} can be used interchangeably with Enum674,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Android** \
 * **iOS** \
 * **macOS** \
 * **Tizen** \
 * **tvOS** \
 * **Windows** \
 * **Linux** \
 * **Custom**
 */
export type Enum674 = string;

/** Known values of {@link Enum675} that the service accepts. */
export enum KnownEnum675 {
  /** Org */
  Org = "org",
  /** User */
  User = "user"
}

/**
 * Defines values for Enum675. \
 * {@link KnownEnum675} can be used interchangeably with Enum675,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **org** \
 * **user**
 */
export type Enum675 = string;

/** Known values of {@link Enum676} that the service accepts. */
export enum KnownEnum676 {
  /** Java */
  Java = "Java",
  /** ObjectiveCSwift */
  ObjectiveCSwift = "Objective-C-Swift",
  /** UWP */
  UWP = "UWP",
  /** Cordova */
  Cordova = "Cordova",
  /** ReactNative */
  ReactNative = "React-Native",
  /** Unity */
  Unity = "Unity",
  /** Electron */
  Electron = "Electron",
  /** Xamarin */
  Xamarin = "Xamarin",
  /** WPF */
  WPF = "WPF",
  /** WinForms */
  WinForms = "WinForms",
  /** Unknown */
  Unknown = "Unknown",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for Enum676. \
 * {@link KnownEnum676} can be used interchangeably with Enum676,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Java** \
 * **Objective-C-Swift** \
 * **UWP** \
 * **Cordova** \
 * **React-Native** \
 * **Unity** \
 * **Electron** \
 * **Xamarin** \
 * **WPF** \
 * **WinForms** \
 * **Unknown** \
 * **Custom**
 */
export type Enum676 = string;

/** Known values of {@link Enum677} that the service accepts. */
export enum KnownEnum677 {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for Enum677. \
 * {@link KnownEnum677} can be used interchangeably with Enum677,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type Enum677 = string;

/** Known values of {@link OrgDistributionGroupDetailsResponseAppsAllOfPropertiesItemsItem} that the service accepts. */
export enum KnownOrgDistributionGroupDetailsResponseAppsAllOfPropertiesItemsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for OrgDistributionGroupDetailsResponseAppsAllOfPropertiesItemsItem. \
 * {@link KnownOrgDistributionGroupDetailsResponseAppsAllOfPropertiesItemsItem} can be used interchangeably with OrgDistributionGroupDetailsResponseAppsAllOfPropertiesItemsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type OrgDistributionGroupDetailsResponseAppsAllOfPropertiesItemsItem = string;

/** Known values of {@link InternalUserSignupResponseStatus} that the service accepts. */
export enum KnownInternalUserSignupResponseStatus {
  /** Complete */
  Complete = "Complete",
  /** NeedsVerification */
  NeedsVerification = "NeedsVerification"
}

/**
 * Defines values for InternalUserSignupResponseStatus. \
 * {@link KnownInternalUserSignupResponseStatus} can be used interchangeably with InternalUserSignupResponseStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Complete** \
 * **NeedsVerification**
 */
export type InternalUserSignupResponseStatus = string;

/** Known values of {@link InvitationDetailResponseInvitedByPermissionsItem} that the service accepts. */
export enum KnownInvitationDetailResponseInvitedByPermissionsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for InvitationDetailResponseInvitedByPermissionsItem. \
 * {@link KnownInvitationDetailResponseInvitedByPermissionsItem} can be used interchangeably with InvitationDetailResponseInvitedByPermissionsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type InvitationDetailResponseInvitedByPermissionsItem = string;

/** Known values of {@link InvitationDetailResponseInvitedByOrigin} that the service accepts. */
export enum KnownInvitationDetailResponseInvitedByOrigin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for InvitationDetailResponseInvitedByOrigin. \
 * {@link KnownInvitationDetailResponseInvitedByOrigin} can be used interchangeably with InvitationDetailResponseInvitedByOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type InvitationDetailResponseInvitedByOrigin = string;

/** Known values of {@link InvitationDetailResponseOrganizationOrigin} that the service accepts. */
export enum KnownInvitationDetailResponseOrganizationOrigin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp"
}

/**
 * Defines values for InvitationDetailResponseOrganizationOrigin. \
 * {@link KnownInvitationDetailResponseOrganizationOrigin} can be used interchangeably with InvitationDetailResponseOrganizationOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp**
 */
export type InvitationDetailResponseOrganizationOrigin = string;

/** Known values of {@link InvitationDetailResponseApp0Os} that the service accepts. */
export enum KnownInvitationDetailResponseApp0Os {
  /** Android */
  Android = "Android",
  /** IOS */
  IOS = "iOS",
  /** MacOS */
  MacOS = "macOS",
  /** Tizen */
  Tizen = "Tizen",
  /** TvOS */
  TvOS = "tvOS",
  /** Windows */
  Windows = "Windows",
  /** Linux */
  Linux = "Linux",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for InvitationDetailResponseApp0Os. \
 * {@link KnownInvitationDetailResponseApp0Os} can be used interchangeably with InvitationDetailResponseApp0Os,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Android** \
 * **iOS** \
 * **macOS** \
 * **Tizen** \
 * **tvOS** \
 * **Windows** \
 * **Linux** \
 * **Custom**
 */
export type InvitationDetailResponseApp0Os = string;

/** Known values of {@link InvitationDetailResponseApp0OwnerType} that the service accepts. */
export enum KnownInvitationDetailResponseApp0OwnerType {
  /** Org */
  Org = "org",
  /** User */
  User = "user"
}

/**
 * Defines values for InvitationDetailResponseApp0OwnerType. \
 * {@link KnownInvitationDetailResponseApp0OwnerType} can be used interchangeably with InvitationDetailResponseApp0OwnerType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **org** \
 * **user**
 */
export type InvitationDetailResponseApp0OwnerType = string;

/** Known values of {@link InvitationDetailResponseApp1Platform} that the service accepts. */
export enum KnownInvitationDetailResponseApp1Platform {
  /** Java */
  Java = "Java",
  /** ObjectiveCSwift */
  ObjectiveCSwift = "Objective-C-Swift",
  /** UWP */
  UWP = "UWP",
  /** Cordova */
  Cordova = "Cordova",
  /** ReactNative */
  ReactNative = "React-Native",
  /** Unity */
  Unity = "Unity",
  /** Electron */
  Electron = "Electron",
  /** Xamarin */
  Xamarin = "Xamarin",
  /** WPF */
  WPF = "WPF",
  /** WinForms */
  WinForms = "WinForms",
  /** Unknown */
  Unknown = "Unknown",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for InvitationDetailResponseApp1Platform. \
 * {@link KnownInvitationDetailResponseApp1Platform} can be used interchangeably with InvitationDetailResponseApp1Platform,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Java** \
 * **Objective-C-Swift** \
 * **UWP** \
 * **Cordova** \
 * **React-Native** \
 * **Unity** \
 * **Electron** \
 * **Xamarin** \
 * **WPF** \
 * **WinForms** \
 * **Unknown** \
 * **Custom**
 */
export type InvitationDetailResponseApp1Platform = string;

/** Known values of {@link InvitationDetailResponseApp1Origin} that the service accepts. */
export enum KnownInvitationDetailResponseApp1Origin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for InvitationDetailResponseApp1Origin. \
 * {@link KnownInvitationDetailResponseApp1Origin} can be used interchangeably with InvitationDetailResponseApp1Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type InvitationDetailResponseApp1Origin = string;

/** Known values of {@link InvitationDetailResponseApp1MemberPermissionsItem} that the service accepts. */
export enum KnownInvitationDetailResponseApp1MemberPermissionsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for InvitationDetailResponseApp1MemberPermissionsItem. \
 * {@link KnownInvitationDetailResponseApp1MemberPermissionsItem} can be used interchangeably with InvitationDetailResponseApp1MemberPermissionsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type InvitationDetailResponseApp1MemberPermissionsItem = string;

/** Known values of {@link GdprInvitationDetailResponseOrganizationOrigin} that the service accepts. */
export enum KnownGdprInvitationDetailResponseOrganizationOrigin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp"
}

/**
 * Defines values for GdprInvitationDetailResponseOrganizationOrigin. \
 * {@link KnownGdprInvitationDetailResponseOrganizationOrigin} can be used interchangeably with GdprInvitationDetailResponseOrganizationOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp**
 */
export type GdprInvitationDetailResponseOrganizationOrigin = string;

/** Known values of {@link GdprInvitationDetailResponseApp0Os} that the service accepts. */
export enum KnownGdprInvitationDetailResponseApp0Os {
  /** Android */
  Android = "Android",
  /** IOS */
  IOS = "iOS",
  /** MacOS */
  MacOS = "macOS",
  /** Tizen */
  Tizen = "Tizen",
  /** TvOS */
  TvOS = "tvOS",
  /** Windows */
  Windows = "Windows",
  /** Linux */
  Linux = "Linux",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for GdprInvitationDetailResponseApp0Os. \
 * {@link KnownGdprInvitationDetailResponseApp0Os} can be used interchangeably with GdprInvitationDetailResponseApp0Os,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Android** \
 * **iOS** \
 * **macOS** \
 * **Tizen** \
 * **tvOS** \
 * **Windows** \
 * **Linux** \
 * **Custom**
 */
export type GdprInvitationDetailResponseApp0Os = string;

/** Known values of {@link GdprInvitationDetailResponseApp0OwnerType} that the service accepts. */
export enum KnownGdprInvitationDetailResponseApp0OwnerType {
  /** Org */
  Org = "org",
  /** User */
  User = "user"
}

/**
 * Defines values for GdprInvitationDetailResponseApp0OwnerType. \
 * {@link KnownGdprInvitationDetailResponseApp0OwnerType} can be used interchangeably with GdprInvitationDetailResponseApp0OwnerType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **org** \
 * **user**
 */
export type GdprInvitationDetailResponseApp0OwnerType = string;

/** Known values of {@link GdprInvitationDetailResponseApp1Platform} that the service accepts. */
export enum KnownGdprInvitationDetailResponseApp1Platform {
  /** Java */
  Java = "Java",
  /** ObjectiveCSwift */
  ObjectiveCSwift = "Objective-C-Swift",
  /** UWP */
  UWP = "UWP",
  /** Cordova */
  Cordova = "Cordova",
  /** ReactNative */
  ReactNative = "React-Native",
  /** Unity */
  Unity = "Unity",
  /** Electron */
  Electron = "Electron",
  /** Xamarin */
  Xamarin = "Xamarin",
  /** WPF */
  WPF = "WPF",
  /** WinForms */
  WinForms = "WinForms",
  /** Unknown */
  Unknown = "Unknown",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for GdprInvitationDetailResponseApp1Platform. \
 * {@link KnownGdprInvitationDetailResponseApp1Platform} can be used interchangeably with GdprInvitationDetailResponseApp1Platform,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Java** \
 * **Objective-C-Swift** \
 * **UWP** \
 * **Cordova** \
 * **React-Native** \
 * **Unity** \
 * **Electron** \
 * **Xamarin** \
 * **WPF** \
 * **WinForms** \
 * **Unknown** \
 * **Custom**
 */
export type GdprInvitationDetailResponseApp1Platform = string;

/** Known values of {@link GdprInvitationDetailResponseApp1Origin} that the service accepts. */
export enum KnownGdprInvitationDetailResponseApp1Origin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for GdprInvitationDetailResponseApp1Origin. \
 * {@link KnownGdprInvitationDetailResponseApp1Origin} can be used interchangeably with GdprInvitationDetailResponseApp1Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type GdprInvitationDetailResponseApp1Origin = string;

/** Known values of {@link GdprInvitationDetailResponseApp1MemberPermissionsItem} that the service accepts. */
export enum KnownGdprInvitationDetailResponseApp1MemberPermissionsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for GdprInvitationDetailResponseApp1MemberPermissionsItem. \
 * {@link KnownGdprInvitationDetailResponseApp1MemberPermissionsItem} can be used interchangeably with GdprInvitationDetailResponseApp1MemberPermissionsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type GdprInvitationDetailResponseApp1MemberPermissionsItem = string;

/** Known values of {@link OrganizationInvitationDetailResponseOrganizationOrigin} that the service accepts. */
export enum KnownOrganizationInvitationDetailResponseOrganizationOrigin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp"
}

/**
 * Defines values for OrganizationInvitationDetailResponseOrganizationOrigin. \
 * {@link KnownOrganizationInvitationDetailResponseOrganizationOrigin} can be used interchangeably with OrganizationInvitationDetailResponseOrganizationOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp**
 */
export type OrganizationInvitationDetailResponseOrganizationOrigin = string;

/** Known values of {@link OrganizationInvitationDetailResponseInvitedByPermissionsItem} that the service accepts. */
export enum KnownOrganizationInvitationDetailResponseInvitedByPermissionsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for OrganizationInvitationDetailResponseInvitedByPermissionsItem. \
 * {@link KnownOrganizationInvitationDetailResponseInvitedByPermissionsItem} can be used interchangeably with OrganizationInvitationDetailResponseInvitedByPermissionsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type OrganizationInvitationDetailResponseInvitedByPermissionsItem = string;

/** Known values of {@link OrganizationInvitationDetailResponseInvitedByOrigin} that the service accepts. */
export enum KnownOrganizationInvitationDetailResponseInvitedByOrigin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for OrganizationInvitationDetailResponseInvitedByOrigin. \
 * {@link KnownOrganizationInvitationDetailResponseInvitedByOrigin} can be used interchangeably with OrganizationInvitationDetailResponseInvitedByOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type OrganizationInvitationDetailResponseInvitedByOrigin = string;

/** Known values of {@link AdministeredOrgsResponseOrganizationsOrigin} that the service accepts. */
export enum KnownAdministeredOrgsResponseOrganizationsOrigin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp"
}

/**
 * Defines values for AdministeredOrgsResponseOrganizationsOrigin. \
 * {@link KnownAdministeredOrgsResponseOrganizationsOrigin} can be used interchangeably with AdministeredOrgsResponseOrganizationsOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp**
 */
export type AdministeredOrgsResponseOrganizationsOrigin = string;

/** Known values of {@link OrganizationResponseOrigin} that the service accepts. */
export enum KnownOrganizationResponseOrigin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp"
}

/**
 * Defines values for OrganizationResponseOrigin. \
 * {@link KnownOrganizationResponseOrigin} can be used interchangeably with OrganizationResponseOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp**
 */
export type OrganizationResponseOrigin = string;

/** Known values of {@link OrganizationResponseManagement0Origin} that the service accepts. */
export enum KnownOrganizationResponseManagement0Origin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp"
}

/**
 * Defines values for OrganizationResponseManagement0Origin. \
 * {@link KnownOrganizationResponseManagement0Origin} can be used interchangeably with OrganizationResponseManagement0Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp**
 */
export type OrganizationResponseManagement0Origin = string;

/** Known values of {@link TeamAppUpdateRequestPermissionsItem} that the service accepts. */
export enum KnownTeamAppUpdateRequestPermissionsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer"
}

/**
 * Defines values for TeamAppUpdateRequestPermissionsItem. \
 * {@link KnownTeamAppUpdateRequestPermissionsItem} can be used interchangeably with TeamAppUpdateRequestPermissionsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer**
 */
export type TeamAppUpdateRequestPermissionsItem = string;

/** Known values of {@link TeamAppResponsePermissionsItem} that the service accepts. */
export enum KnownTeamAppResponsePermissionsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for TeamAppResponsePermissionsItem. \
 * {@link KnownTeamAppResponsePermissionsItem} can be used interchangeably with TeamAppResponsePermissionsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type TeamAppResponsePermissionsItem = string;

/** Known values of {@link TeamUserResponseRole} that the service accepts. */
export enum KnownTeamUserResponseRole {
  /** Maintainer */
  Maintainer = "maintainer",
  /** Collaborator */
  Collaborator = "collaborator"
}

/**
 * Defines values for TeamUserResponseRole. \
 * {@link KnownTeamUserResponseRole} can be used interchangeably with TeamUserResponseRole,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **maintainer** \
 * **collaborator**
 */
export type TeamUserResponseRole = string;

/** Known values of {@link UserAuthResponseOrigin} that the service accepts. */
export enum KnownUserAuthResponseOrigin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for UserAuthResponseOrigin. \
 * {@link KnownUserAuthResponseOrigin} can be used interchangeably with UserAuthResponseOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type UserAuthResponseOrigin = string;

/** Known values of {@link AppMembershipsResponseMembershipsItemOrigin} that the service accepts. */
export enum KnownAppMembershipsResponseMembershipsItemOrigin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush",
  /** Testcloud */
  Testcloud = "testcloud",
  /** HockeyappDogfood */
  HockeyappDogfood = "hockeyapp-dogfood"
}

/**
 * Defines values for AppMembershipsResponseMembershipsItemOrigin. \
 * {@link KnownAppMembershipsResponseMembershipsItemOrigin} can be used interchangeably with AppMembershipsResponseMembershipsItemOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush** \
 * **testcloud** \
 * **hockeyapp-dogfood**
 */
export type AppMembershipsResponseMembershipsItemOrigin = string;

/** Known values of {@link AppMembershipsResponseMembershipsItemSourceType} that the service accepts. */
export enum KnownAppMembershipsResponseMembershipsItemSourceType {
  /** User */
  User = "user",
  /** Org */
  Org = "org",
  /** DistributionGroup */
  DistributionGroup = "distribution_group",
  /** Team */
  Team = "team",
  /** Release */
  Release = "release"
}

/**
 * Defines values for AppMembershipsResponseMembershipsItemSourceType. \
 * {@link KnownAppMembershipsResponseMembershipsItemSourceType} can be used interchangeably with AppMembershipsResponseMembershipsItemSourceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **org** \
 * **distribution_group** \
 * **team** \
 * **release**
 */
export type AppMembershipsResponseMembershipsItemSourceType = string;

/** Known values of {@link AppMembershipOrigin} that the service accepts. */
export enum KnownAppMembershipOrigin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush",
  /** Testcloud */
  Testcloud = "testcloud",
  /** HockeyappDogfood */
  HockeyappDogfood = "hockeyapp-dogfood"
}

/**
 * Defines values for AppMembershipOrigin. \
 * {@link KnownAppMembershipOrigin} can be used interchangeably with AppMembershipOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush** \
 * **testcloud** \
 * **hockeyapp-dogfood**
 */
export type AppMembershipOrigin = string;

/** Known values of {@link AppMembershipSourceType} that the service accepts. */
export enum KnownAppMembershipSourceType {
  /** User */
  User = "user",
  /** Org */
  Org = "org",
  /** DistributionGroup */
  DistributionGroup = "distribution_group",
  /** Team */
  Team = "team",
  /** Release */
  Release = "release"
}

/**
 * Defines values for AppMembershipSourceType. \
 * {@link KnownAppMembershipSourceType} can be used interchangeably with AppMembershipSourceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **org** \
 * **distribution_group** \
 * **team** \
 * **release**
 */
export type AppMembershipSourceType = string;

/** Known values of {@link AppMembershipsValidationResponseExcessAppMembershipsAppUsersMembershipsItemOrigin} that the service accepts. */
export enum KnownAppMembershipsValidationResponseExcessAppMembershipsAppUsersMembershipsItemOrigin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush",
  /** Testcloud */
  Testcloud = "testcloud",
  /** HockeyappDogfood */
  HockeyappDogfood = "hockeyapp-dogfood"
}

/**
 * Defines values for AppMembershipsValidationResponseExcessAppMembershipsAppUsersMembershipsItemOrigin. \
 * {@link KnownAppMembershipsValidationResponseExcessAppMembershipsAppUsersMembershipsItemOrigin} can be used interchangeably with AppMembershipsValidationResponseExcessAppMembershipsAppUsersMembershipsItemOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush** \
 * **testcloud** \
 * **hockeyapp-dogfood**
 */
export type AppMembershipsValidationResponseExcessAppMembershipsAppUsersMembershipsItemOrigin = string;

/** Known values of {@link AppMembershipsValidationResponseExcessAppMembershipsAppUsersMembershipsItemSourceType} that the service accepts. */
export enum KnownAppMembershipsValidationResponseExcessAppMembershipsAppUsersMembershipsItemSourceType {
  /** User */
  User = "user",
  /** Org */
  Org = "org",
  /** DistributionGroup */
  DistributionGroup = "distribution_group",
  /** Team */
  Team = "team",
  /** Release */
  Release = "release"
}

/**
 * Defines values for AppMembershipsValidationResponseExcessAppMembershipsAppUsersMembershipsItemSourceType. \
 * {@link KnownAppMembershipsValidationResponseExcessAppMembershipsAppUsersMembershipsItemSourceType} can be used interchangeably with AppMembershipsValidationResponseExcessAppMembershipsAppUsersMembershipsItemSourceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **org** \
 * **distribution_group** \
 * **team** \
 * **release**
 */
export type AppMembershipsValidationResponseExcessAppMembershipsAppUsersMembershipsItemSourceType = string;

/** Known values of {@link AppMembershipsValidationResponseExcessAppMembershipsDistributionGroupMembershipsItemOrigin} that the service accepts. */
export enum KnownAppMembershipsValidationResponseExcessAppMembershipsDistributionGroupMembershipsItemOrigin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush",
  /** Testcloud */
  Testcloud = "testcloud",
  /** HockeyappDogfood */
  HockeyappDogfood = "hockeyapp-dogfood"
}

/**
 * Defines values for AppMembershipsValidationResponseExcessAppMembershipsDistributionGroupMembershipsItemOrigin. \
 * {@link KnownAppMembershipsValidationResponseExcessAppMembershipsDistributionGroupMembershipsItemOrigin} can be used interchangeably with AppMembershipsValidationResponseExcessAppMembershipsDistributionGroupMembershipsItemOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush** \
 * **testcloud** \
 * **hockeyapp-dogfood**
 */
export type AppMembershipsValidationResponseExcessAppMembershipsDistributionGroupMembershipsItemOrigin = string;

/** Known values of {@link AppMembershipsValidationResponseExcessAppMembershipsDistributionGroupMembershipsItemSourceType} that the service accepts. */
export enum KnownAppMembershipsValidationResponseExcessAppMembershipsDistributionGroupMembershipsItemSourceType {
  /** User */
  User = "user",
  /** Org */
  Org = "org",
  /** DistributionGroup */
  DistributionGroup = "distribution_group",
  /** Team */
  Team = "team",
  /** Release */
  Release = "release"
}

/**
 * Defines values for AppMembershipsValidationResponseExcessAppMembershipsDistributionGroupMembershipsItemSourceType. \
 * {@link KnownAppMembershipsValidationResponseExcessAppMembershipsDistributionGroupMembershipsItemSourceType} can be used interchangeably with AppMembershipsValidationResponseExcessAppMembershipsDistributionGroupMembershipsItemSourceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **org** \
 * **distribution_group** \
 * **team** \
 * **release**
 */
export type AppMembershipsValidationResponseExcessAppMembershipsDistributionGroupMembershipsItemSourceType = string;

/** Known values of {@link AppMembershipsValidationResponseExcessAppMembershipsOrganizationAdminMembershipsItemOrigin} that the service accepts. */
export enum KnownAppMembershipsValidationResponseExcessAppMembershipsOrganizationAdminMembershipsItemOrigin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush",
  /** Testcloud */
  Testcloud = "testcloud",
  /** HockeyappDogfood */
  HockeyappDogfood = "hockeyapp-dogfood"
}

/**
 * Defines values for AppMembershipsValidationResponseExcessAppMembershipsOrganizationAdminMembershipsItemOrigin. \
 * {@link KnownAppMembershipsValidationResponseExcessAppMembershipsOrganizationAdminMembershipsItemOrigin} can be used interchangeably with AppMembershipsValidationResponseExcessAppMembershipsOrganizationAdminMembershipsItemOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush** \
 * **testcloud** \
 * **hockeyapp-dogfood**
 */
export type AppMembershipsValidationResponseExcessAppMembershipsOrganizationAdminMembershipsItemOrigin = string;

/** Known values of {@link AppMembershipsValidationResponseExcessAppMembershipsOrganizationAdminMembershipsItemSourceType} that the service accepts. */
export enum KnownAppMembershipsValidationResponseExcessAppMembershipsOrganizationAdminMembershipsItemSourceType {
  /** User */
  User = "user",
  /** Org */
  Org = "org",
  /** DistributionGroup */
  DistributionGroup = "distribution_group",
  /** Team */
  Team = "team",
  /** Release */
  Release = "release"
}

/**
 * Defines values for AppMembershipsValidationResponseExcessAppMembershipsOrganizationAdminMembershipsItemSourceType. \
 * {@link KnownAppMembershipsValidationResponseExcessAppMembershipsOrganizationAdminMembershipsItemSourceType} can be used interchangeably with AppMembershipsValidationResponseExcessAppMembershipsOrganizationAdminMembershipsItemSourceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **org** \
 * **distribution_group** \
 * **team** \
 * **release**
 */
export type AppMembershipsValidationResponseExcessAppMembershipsOrganizationAdminMembershipsItemSourceType = string;

/** Known values of {@link UserProfileResponsePermissionsItem} that the service accepts. */
export enum KnownUserProfileResponsePermissionsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for UserProfileResponsePermissionsItem. \
 * {@link KnownUserProfileResponsePermissionsItem} can be used interchangeably with UserProfileResponsePermissionsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type UserProfileResponsePermissionsItem = string;

/** Known values of {@link UserProfileResponseOrigin} that the service accepts. */
export enum KnownUserProfileResponseOrigin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for UserProfileResponseOrigin. \
 * {@link KnownUserProfileResponseOrigin} can be used interchangeably with UserProfileResponseOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type UserProfileResponseOrigin = string;

/** Known values of {@link UserProfileAdminResponseRole} that the service accepts. */
export enum KnownUserProfileAdminResponseRole {
  /** Admin */
  Admin = "admin",
  /** Collaborator */
  Collaborator = "collaborator",
  /** Member */
  Member = "member"
}

/**
 * Defines values for UserProfileAdminResponseRole. \
 * {@link KnownUserProfileAdminResponseRole} can be used interchangeably with UserProfileAdminResponseRole,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **admin** \
 * **collaborator** \
 * **member**
 */
export type UserProfileAdminResponseRole = string;

/** Known values of {@link UserProfileResponseInternalAdminRole} that the service accepts. */
export enum KnownUserProfileResponseInternalAdminRole {
  /** SuperAdmin */
  SuperAdmin = "superAdmin",
  /** Admin */
  Admin = "admin",
  /** DevOps */
  DevOps = "devOps",
  /** CustomerSupport */
  CustomerSupport = "customerSupport",
  /** NotAdmin */
  NotAdmin = "notAdmin"
}

/**
 * Defines values for UserProfileResponseInternalAdminRole. \
 * {@link KnownUserProfileResponseInternalAdminRole} can be used interchangeably with UserProfileResponseInternalAdminRole,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **superAdmin** \
 * **admin** \
 * **devOps** \
 * **customerSupport** \
 * **notAdmin**
 */
export type UserProfileResponseInternalAdminRole = string;

/** Known values of {@link UserProfileResponseManagementIdentityProvidersItemProviderName} that the service accepts. */
export enum KnownUserProfileResponseManagementIdentityProvidersItemProviderName {
  /** Github */
  Github = "github",
  /** Aad */
  Aad = "aad",
  /** Facebook */
  Facebook = "facebook",
  /** Google */
  Google = "google"
}

/**
 * Defines values for UserProfileResponseManagementIdentityProvidersItemProviderName. \
 * {@link KnownUserProfileResponseManagementIdentityProvidersItemProviderName} can be used interchangeably with UserProfileResponseManagementIdentityProvidersItemProviderName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **github** \
 * **aad** \
 * **facebook** \
 * **google**
 */
export type UserProfileResponseManagementIdentityProvidersItemProviderName = string;

/** Known values of {@link UserProfileResponseManagement0PermissionsItem} that the service accepts. */
export enum KnownUserProfileResponseManagement0PermissionsItem {
  /** Manager */
  Manager = "manager",
  /** Developer */
  Developer = "developer",
  /** Viewer */
  Viewer = "viewer",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for UserProfileResponseManagement0PermissionsItem. \
 * {@link KnownUserProfileResponseManagement0PermissionsItem} can be used interchangeably with UserProfileResponseManagement0PermissionsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **manager** \
 * **developer** \
 * **viewer** \
 * **tester**
 */
export type UserProfileResponseManagement0PermissionsItem = string;

/** Known values of {@link UserProfileResponseManagement0Origin} that the service accepts. */
export enum KnownUserProfileResponseManagement0Origin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for UserProfileResponseManagement0Origin. \
 * {@link KnownUserProfileResponseManagement0Origin} can be used interchangeably with UserProfileResponseManagement0Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type UserProfileResponseManagement0Origin = string;

/** Known values of {@link UserProfileResponseManagement01AdminRole} that the service accepts. */
export enum KnownUserProfileResponseManagement01AdminRole {
  /** SuperAdmin */
  SuperAdmin = "superAdmin",
  /** Admin */
  Admin = "admin",
  /** DevOps */
  DevOps = "devOps",
  /** CustomerSupport */
  CustomerSupport = "customerSupport",
  /** NotAdmin */
  NotAdmin = "notAdmin"
}

/**
 * Defines values for UserProfileResponseManagement01AdminRole. \
 * {@link KnownUserProfileResponseManagement01AdminRole} can be used interchangeably with UserProfileResponseManagement01AdminRole,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **superAdmin** \
 * **admin** \
 * **devOps** \
 * **customerSupport** \
 * **notAdmin**
 */
export type UserProfileResponseManagement01AdminRole = string;

/** Known values of {@link OwnerType} that the service accepts. */
export enum KnownOwnerType {
  /** Org */
  Org = "org",
  /** User */
  User = "user"
}

/**
 * Defines values for OwnerType. \
 * {@link KnownOwnerType} can be used interchangeably with OwnerType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **org** \
 * **user**
 */
export type OwnerType = string;

/** Known values of {@link LinkAADtoUserRequestRole} that the service accepts. */
export enum KnownLinkAADtoUserRequestRole {
  /** Admin */
  Admin = "admin",
  /** Collaborator */
  Collaborator = "collaborator",
  /** Member */
  Member = "member"
}

/**
 * Defines values for LinkAADtoUserRequestRole. \
 * {@link KnownLinkAADtoUserRequestRole} can be used interchangeably with LinkAADtoUserRequestRole,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **admin** \
 * **collaborator** \
 * **member**
 */
export type LinkAADtoUserRequestRole = string;

/** Known values of {@link AddUserAsRoleRequestRole} that the service accepts. */
export enum KnownAddUserAsRoleRequestRole {
  /** Admin */
  Admin = "admin",
  /** Collaborator */
  Collaborator = "collaborator",
  /** Member */
  Member = "member"
}

/**
 * Defines values for AddUserAsRoleRequestRole. \
 * {@link KnownAddUserAsRoleRequestRole} can be used interchangeably with AddUserAsRoleRequestRole,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **admin** \
 * **collaborator** \
 * **member**
 */
export type AddUserAsRoleRequestRole = string;

/** Known values of {@link OrganizationAadGroupPatchRequestRole} that the service accepts. */
export enum KnownOrganizationAadGroupPatchRequestRole {
  /** Admin */
  Admin = "admin",
  /** Collaborator */
  Collaborator = "collaborator",
  /** Member */
  Member = "member"
}

/**
 * Defines values for OrganizationAadGroupPatchRequestRole. \
 * {@link KnownOrganizationAadGroupPatchRequestRole} can be used interchangeably with OrganizationAadGroupPatchRequestRole,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **admin** \
 * **collaborator** \
 * **member**
 */
export type OrganizationAadGroupPatchRequestRole = string;

/** Known values of {@link SharedConnectionRequestServiceType} that the service accepts. */
export enum KnownSharedConnectionRequestServiceType {
  /** Apple */
  Apple = "apple",
  /** Jira */
  Jira = "jira",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Gitlab */
  Gitlab = "gitlab"
}

/**
 * Defines values for SharedConnectionRequestServiceType. \
 * {@link KnownSharedConnectionRequestServiceType} can be used interchangeably with SharedConnectionRequestServiceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apple** \
 * **jira** \
 * **googleplay** \
 * **gitlab**
 */
export type SharedConnectionRequestServiceType = string;

/** Known values of {@link SharedConnectionRequestCredentialType} that the service accepts. */
export enum KnownSharedConnectionRequestCredentialType {
  /** Credentials */
  Credentials = "credentials",
  /** Certificate */
  Certificate = "certificate"
}

/**
 * Defines values for SharedConnectionRequestCredentialType. \
 * {@link KnownSharedConnectionRequestCredentialType} can be used interchangeably with SharedConnectionRequestCredentialType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **credentials** \
 * **certificate**
 */
export type SharedConnectionRequestCredentialType = string;

/** Known values of {@link SharedConnectionResponseServiceType} that the service accepts. */
export enum KnownSharedConnectionResponseServiceType {
  /** Apple */
  Apple = "apple",
  /** Jira */
  Jira = "jira",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Gitlab */
  Gitlab = "gitlab"
}

/**
 * Defines values for SharedConnectionResponseServiceType. \
 * {@link KnownSharedConnectionResponseServiceType} can be used interchangeably with SharedConnectionResponseServiceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apple** \
 * **jira** \
 * **googleplay** \
 * **gitlab**
 */
export type SharedConnectionResponseServiceType = string;

/** Known values of {@link SharedConnectionResponseCredentialType} that the service accepts. */
export enum KnownSharedConnectionResponseCredentialType {
  /** Credentials */
  Credentials = "credentials",
  /** Certificate */
  Certificate = "certificate"
}

/**
 * Defines values for SharedConnectionResponseCredentialType. \
 * {@link KnownSharedConnectionResponseCredentialType} can be used interchangeably with SharedConnectionResponseCredentialType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **credentials** \
 * **certificate**
 */
export type SharedConnectionResponseCredentialType = string;

/** Known values of {@link PrivateSharedConnectionResponseServiceType} that the service accepts. */
export enum KnownPrivateSharedConnectionResponseServiceType {
  /** Apple */
  Apple = "apple",
  /** Jira */
  Jira = "jira",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Gitlab */
  Gitlab = "gitlab"
}

/**
 * Defines values for PrivateSharedConnectionResponseServiceType. \
 * {@link KnownPrivateSharedConnectionResponseServiceType} can be used interchangeably with PrivateSharedConnectionResponseServiceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apple** \
 * **jira** \
 * **googleplay** \
 * **gitlab**
 */
export type PrivateSharedConnectionResponseServiceType = string;

/** Known values of {@link AppleConnectionSecretRequestServiceType} that the service accepts. */
export enum KnownAppleConnectionSecretRequestServiceType {
  /** Apple */
  Apple = "apple",
  /** Jira */
  Jira = "jira",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Gitlab */
  Gitlab = "gitlab"
}

/**
 * Defines values for AppleConnectionSecretRequestServiceType. \
 * {@link KnownAppleConnectionSecretRequestServiceType} can be used interchangeably with AppleConnectionSecretRequestServiceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apple** \
 * **jira** \
 * **googleplay** \
 * **gitlab**
 */
export type AppleConnectionSecretRequestServiceType = string;

/** Known values of {@link AppleConnectionSecretRequestCredentialType} that the service accepts. */
export enum KnownAppleConnectionSecretRequestCredentialType {
  /** Credentials */
  Credentials = "credentials",
  /** Certificate */
  Certificate = "certificate"
}

/**
 * Defines values for AppleConnectionSecretRequestCredentialType. \
 * {@link KnownAppleConnectionSecretRequestCredentialType} can be used interchangeably with AppleConnectionSecretRequestCredentialType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **credentials** \
 * **certificate**
 */
export type AppleConnectionSecretRequestCredentialType = string;

/** Known values of {@link AppleCredentialsMultifactorSecretRequest0ServiceType} that the service accepts. */
export enum KnownAppleCredentialsMultifactorSecretRequest0ServiceType {
  /** Apple */
  Apple = "apple",
  /** Jira */
  Jira = "jira",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Gitlab */
  Gitlab = "gitlab"
}

/**
 * Defines values for AppleCredentialsMultifactorSecretRequest0ServiceType. \
 * {@link KnownAppleCredentialsMultifactorSecretRequest0ServiceType} can be used interchangeably with AppleCredentialsMultifactorSecretRequest0ServiceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apple** \
 * **jira** \
 * **googleplay** \
 * **gitlab**
 */
export type AppleCredentialsMultifactorSecretRequest0ServiceType = string;

/** Known values of {@link AppleCredentialsMultifactorSecretRequest0CredentialType} that the service accepts. */
export enum KnownAppleCredentialsMultifactorSecretRequest0CredentialType {
  /** Credentials */
  Credentials = "credentials",
  /** Certificate */
  Certificate = "certificate"
}

/**
 * Defines values for AppleCredentialsMultifactorSecretRequest0CredentialType. \
 * {@link KnownAppleCredentialsMultifactorSecretRequest0CredentialType} can be used interchangeably with AppleCredentialsMultifactorSecretRequest0CredentialType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **credentials** \
 * **certificate**
 */
export type AppleCredentialsMultifactorSecretRequest0CredentialType = string;

/** Known values of {@link AppleCredentialsSecretRequest0ServiceType} that the service accepts. */
export enum KnownAppleCredentialsSecretRequest0ServiceType {
  /** Apple */
  Apple = "apple",
  /** Jira */
  Jira = "jira",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Gitlab */
  Gitlab = "gitlab"
}

/**
 * Defines values for AppleCredentialsSecretRequest0ServiceType. \
 * {@link KnownAppleCredentialsSecretRequest0ServiceType} can be used interchangeably with AppleCredentialsSecretRequest0ServiceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apple** \
 * **jira** \
 * **googleplay** \
 * **gitlab**
 */
export type AppleCredentialsSecretRequest0ServiceType = string;

/** Known values of {@link AppleCredentialsSecretRequest0CredentialType} that the service accepts. */
export enum KnownAppleCredentialsSecretRequest0CredentialType {
  /** Credentials */
  Credentials = "credentials",
  /** Certificate */
  Certificate = "certificate"
}

/**
 * Defines values for AppleCredentialsSecretRequest0CredentialType. \
 * {@link KnownAppleCredentialsSecretRequest0CredentialType} can be used interchangeably with AppleCredentialsSecretRequest0CredentialType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **credentials** \
 * **certificate**
 */
export type AppleCredentialsSecretRequest0CredentialType = string;

/** Known values of {@link AppleCertificateSecretRequest0ServiceType} that the service accepts. */
export enum KnownAppleCertificateSecretRequest0ServiceType {
  /** Apple */
  Apple = "apple",
  /** Jira */
  Jira = "jira",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Gitlab */
  Gitlab = "gitlab"
}

/**
 * Defines values for AppleCertificateSecretRequest0ServiceType. \
 * {@link KnownAppleCertificateSecretRequest0ServiceType} can be used interchangeably with AppleCertificateSecretRequest0ServiceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apple** \
 * **jira** \
 * **googleplay** \
 * **gitlab**
 */
export type AppleCertificateSecretRequest0ServiceType = string;

/** Known values of {@link AppleCertificateSecretRequest0CredentialType} that the service accepts. */
export enum KnownAppleCertificateSecretRequest0CredentialType {
  /** Credentials */
  Credentials = "credentials",
  /** Certificate */
  Certificate = "certificate"
}

/**
 * Defines values for AppleCertificateSecretRequest0CredentialType. \
 * {@link KnownAppleCertificateSecretRequest0CredentialType} can be used interchangeably with AppleCertificateSecretRequest0CredentialType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **credentials** \
 * **certificate**
 */
export type AppleCertificateSecretRequest0CredentialType = string;

/** Known values of {@link PrivateAppleSecretResponseServiceType} that the service accepts. */
export enum KnownPrivateAppleSecretResponseServiceType {
  /** Apple */
  Apple = "apple",
  /** Jira */
  Jira = "jira",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Gitlab */
  Gitlab = "gitlab"
}

/**
 * Defines values for PrivateAppleSecretResponseServiceType. \
 * {@link KnownPrivateAppleSecretResponseServiceType} can be used interchangeably with PrivateAppleSecretResponseServiceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apple** \
 * **jira** \
 * **googleplay** \
 * **gitlab**
 */
export type PrivateAppleSecretResponseServiceType = string;

/** Known values of {@link PrivateAppleCredentialsSecretResponse0ServiceType} that the service accepts. */
export enum KnownPrivateAppleCredentialsSecretResponse0ServiceType {
  /** Apple */
  Apple = "apple",
  /** Jira */
  Jira = "jira",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Gitlab */
  Gitlab = "gitlab"
}

/**
 * Defines values for PrivateAppleCredentialsSecretResponse0ServiceType. \
 * {@link KnownPrivateAppleCredentialsSecretResponse0ServiceType} can be used interchangeably with PrivateAppleCredentialsSecretResponse0ServiceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apple** \
 * **jira** \
 * **googleplay** \
 * **gitlab**
 */
export type PrivateAppleCredentialsSecretResponse0ServiceType = string;

/** Known values of {@link PrivateAppleCertificateSecretResponse0ServiceType} that the service accepts. */
export enum KnownPrivateAppleCertificateSecretResponse0ServiceType {
  /** Apple */
  Apple = "apple",
  /** Jira */
  Jira = "jira",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Gitlab */
  Gitlab = "gitlab"
}

/**
 * Defines values for PrivateAppleCertificateSecretResponse0ServiceType. \
 * {@link KnownPrivateAppleCertificateSecretResponse0ServiceType} can be used interchangeably with PrivateAppleCertificateSecretResponse0ServiceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apple** \
 * **jira** \
 * **googleplay** \
 * **gitlab**
 */
export type PrivateAppleCertificateSecretResponse0ServiceType = string;

/** Known values of {@link AppleConnectionSecretResponse0ServiceType} that the service accepts. */
export enum KnownAppleConnectionSecretResponse0ServiceType {
  /** Apple */
  Apple = "apple",
  /** Jira */
  Jira = "jira",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Gitlab */
  Gitlab = "gitlab"
}

/**
 * Defines values for AppleConnectionSecretResponse0ServiceType. \
 * {@link KnownAppleConnectionSecretResponse0ServiceType} can be used interchangeably with AppleConnectionSecretResponse0ServiceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apple** \
 * **jira** \
 * **googleplay** \
 * **gitlab**
 */
export type AppleConnectionSecretResponse0ServiceType = string;

/** Known values of {@link AppleConnectionSecretResponse0CredentialType} that the service accepts. */
export enum KnownAppleConnectionSecretResponse0CredentialType {
  /** Credentials */
  Credentials = "credentials",
  /** Certificate */
  Certificate = "certificate"
}

/**
 * Defines values for AppleConnectionSecretResponse0CredentialType. \
 * {@link KnownAppleConnectionSecretResponse0CredentialType} can be used interchangeably with AppleConnectionSecretResponse0CredentialType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **credentials** \
 * **certificate**
 */
export type AppleConnectionSecretResponse0CredentialType = string;

/** Known values of {@link AppleConnectionNonSecretResponseServiceType} that the service accepts. */
export enum KnownAppleConnectionNonSecretResponseServiceType {
  /** Apple */
  Apple = "apple",
  /** Jira */
  Jira = "jira",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Gitlab */
  Gitlab = "gitlab"
}

/**
 * Defines values for AppleConnectionNonSecretResponseServiceType. \
 * {@link KnownAppleConnectionNonSecretResponseServiceType} can be used interchangeably with AppleConnectionNonSecretResponseServiceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apple** \
 * **jira** \
 * **googleplay** \
 * **gitlab**
 */
export type AppleConnectionNonSecretResponseServiceType = string;

/** Known values of {@link AppleConnectionNonSecretResponseCredentialType} that the service accepts. */
export enum KnownAppleConnectionNonSecretResponseCredentialType {
  /** Credentials */
  Credentials = "credentials",
  /** Certificate */
  Certificate = "certificate"
}

/**
 * Defines values for AppleConnectionNonSecretResponseCredentialType. \
 * {@link KnownAppleConnectionNonSecretResponseCredentialType} can be used interchangeably with AppleConnectionNonSecretResponseCredentialType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **credentials** \
 * **certificate**
 */
export type AppleConnectionNonSecretResponseCredentialType = string;

/** Known values of {@link AppleCredentialNonSecretDetailsResponse0ServiceType} that the service accepts. */
export enum KnownAppleCredentialNonSecretDetailsResponse0ServiceType {
  /** Apple */
  Apple = "apple",
  /** Jira */
  Jira = "jira",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Gitlab */
  Gitlab = "gitlab"
}

/**
 * Defines values for AppleCredentialNonSecretDetailsResponse0ServiceType. \
 * {@link KnownAppleCredentialNonSecretDetailsResponse0ServiceType} can be used interchangeably with AppleCredentialNonSecretDetailsResponse0ServiceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apple** \
 * **jira** \
 * **googleplay** \
 * **gitlab**
 */
export type AppleCredentialNonSecretDetailsResponse0ServiceType = string;

/** Known values of {@link AppleCredentialNonSecretDetailsResponse0CredentialType} that the service accepts. */
export enum KnownAppleCredentialNonSecretDetailsResponse0CredentialType {
  /** Credentials */
  Credentials = "credentials",
  /** Certificate */
  Certificate = "certificate"
}

/**
 * Defines values for AppleCredentialNonSecretDetailsResponse0CredentialType. \
 * {@link KnownAppleCredentialNonSecretDetailsResponse0CredentialType} can be used interchangeably with AppleCredentialNonSecretDetailsResponse0CredentialType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **credentials** \
 * **certificate**
 */
export type AppleCredentialNonSecretDetailsResponse0CredentialType = string;

/** Known values of {@link AppleCertificateNonSecretDetailsResponse0ServiceType} that the service accepts. */
export enum KnownAppleCertificateNonSecretDetailsResponse0ServiceType {
  /** Apple */
  Apple = "apple",
  /** Jira */
  Jira = "jira",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Gitlab */
  Gitlab = "gitlab"
}

/**
 * Defines values for AppleCertificateNonSecretDetailsResponse0ServiceType. \
 * {@link KnownAppleCertificateNonSecretDetailsResponse0ServiceType} can be used interchangeably with AppleCertificateNonSecretDetailsResponse0ServiceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apple** \
 * **jira** \
 * **googleplay** \
 * **gitlab**
 */
export type AppleCertificateNonSecretDetailsResponse0ServiceType = string;

/** Known values of {@link AppleCertificateNonSecretDetailsResponse0CredentialType} that the service accepts. */
export enum KnownAppleCertificateNonSecretDetailsResponse0CredentialType {
  /** Credentials */
  Credentials = "credentials",
  /** Certificate */
  Certificate = "certificate"
}

/**
 * Defines values for AppleCertificateNonSecretDetailsResponse0CredentialType. \
 * {@link KnownAppleCertificateNonSecretDetailsResponse0CredentialType} can be used interchangeably with AppleCertificateNonSecretDetailsResponse0CredentialType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **credentials** \
 * **certificate**
 */
export type AppleCertificateNonSecretDetailsResponse0CredentialType = string;

/** Known values of {@link AppleCertificateSecretDetailsResponse0ServiceType} that the service accepts. */
export enum KnownAppleCertificateSecretDetailsResponse0ServiceType {
  /** Apple */
  Apple = "apple",
  /** Jira */
  Jira = "jira",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Gitlab */
  Gitlab = "gitlab"
}

/**
 * Defines values for AppleCertificateSecretDetailsResponse0ServiceType. \
 * {@link KnownAppleCertificateSecretDetailsResponse0ServiceType} can be used interchangeably with AppleCertificateSecretDetailsResponse0ServiceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apple** \
 * **jira** \
 * **googleplay** \
 * **gitlab**
 */
export type AppleCertificateSecretDetailsResponse0ServiceType = string;

/** Known values of {@link AppleCertificateSecretDetailsResponse0CredentialType} that the service accepts. */
export enum KnownAppleCertificateSecretDetailsResponse0CredentialType {
  /** Credentials */
  Credentials = "credentials",
  /** Certificate */
  Certificate = "certificate"
}

/**
 * Defines values for AppleCertificateSecretDetailsResponse0CredentialType. \
 * {@link KnownAppleCertificateSecretDetailsResponse0CredentialType} can be used interchangeably with AppleCertificateSecretDetailsResponse0CredentialType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **credentials** \
 * **certificate**
 */
export type AppleCertificateSecretDetailsResponse0CredentialType = string;

/** Known values of {@link JiraConnectionSecretRequest0ServiceType} that the service accepts. */
export enum KnownJiraConnectionSecretRequest0ServiceType {
  /** Apple */
  Apple = "apple",
  /** Jira */
  Jira = "jira",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Gitlab */
  Gitlab = "gitlab"
}

/**
 * Defines values for JiraConnectionSecretRequest0ServiceType. \
 * {@link KnownJiraConnectionSecretRequest0ServiceType} can be used interchangeably with JiraConnectionSecretRequest0ServiceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apple** \
 * **jira** \
 * **googleplay** \
 * **gitlab**
 */
export type JiraConnectionSecretRequest0ServiceType = string;

/** Known values of {@link JiraConnectionSecretRequest0CredentialType} that the service accepts. */
export enum KnownJiraConnectionSecretRequest0CredentialType {
  /** Credentials */
  Credentials = "credentials",
  /** Certificate */
  Certificate = "certificate"
}

/**
 * Defines values for JiraConnectionSecretRequest0CredentialType. \
 * {@link KnownJiraConnectionSecretRequest0CredentialType} can be used interchangeably with JiraConnectionSecretRequest0CredentialType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **credentials** \
 * **certificate**
 */
export type JiraConnectionSecretRequest0CredentialType = string;

/** Known values of {@link JiraConnectionSecretResponse0ServiceType} that the service accepts. */
export enum KnownJiraConnectionSecretResponse0ServiceType {
  /** Apple */
  Apple = "apple",
  /** Jira */
  Jira = "jira",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Gitlab */
  Gitlab = "gitlab"
}

/**
 * Defines values for JiraConnectionSecretResponse0ServiceType. \
 * {@link KnownJiraConnectionSecretResponse0ServiceType} can be used interchangeably with JiraConnectionSecretResponse0ServiceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apple** \
 * **jira** \
 * **googleplay** \
 * **gitlab**
 */
export type JiraConnectionSecretResponse0ServiceType = string;

/** Known values of {@link JiraConnectionSecretResponse0CredentialType} that the service accepts. */
export enum KnownJiraConnectionSecretResponse0CredentialType {
  /** Credentials */
  Credentials = "credentials",
  /** Certificate */
  Certificate = "certificate"
}

/**
 * Defines values for JiraConnectionSecretResponse0CredentialType. \
 * {@link KnownJiraConnectionSecretResponse0CredentialType} can be used interchangeably with JiraConnectionSecretResponse0CredentialType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **credentials** \
 * **certificate**
 */
export type JiraConnectionSecretResponse0CredentialType = string;

/** Known values of {@link PrivateJiraConnectionSecretResponse0ServiceType} that the service accepts. */
export enum KnownPrivateJiraConnectionSecretResponse0ServiceType {
  /** Apple */
  Apple = "apple",
  /** Jira */
  Jira = "jira",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Gitlab */
  Gitlab = "gitlab"
}

/**
 * Defines values for PrivateJiraConnectionSecretResponse0ServiceType. \
 * {@link KnownPrivateJiraConnectionSecretResponse0ServiceType} can be used interchangeably with PrivateJiraConnectionSecretResponse0ServiceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apple** \
 * **jira** \
 * **googleplay** \
 * **gitlab**
 */
export type PrivateJiraConnectionSecretResponse0ServiceType = string;

/** Known values of {@link GooglePlayConnectionSecretRequest0ServiceType} that the service accepts. */
export enum KnownGooglePlayConnectionSecretRequest0ServiceType {
  /** Apple */
  Apple = "apple",
  /** Jira */
  Jira = "jira",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Gitlab */
  Gitlab = "gitlab"
}

/**
 * Defines values for GooglePlayConnectionSecretRequest0ServiceType. \
 * {@link KnownGooglePlayConnectionSecretRequest0ServiceType} can be used interchangeably with GooglePlayConnectionSecretRequest0ServiceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apple** \
 * **jira** \
 * **googleplay** \
 * **gitlab**
 */
export type GooglePlayConnectionSecretRequest0ServiceType = string;

/** Known values of {@link GooglePlayConnectionSecretRequest0CredentialType} that the service accepts. */
export enum KnownGooglePlayConnectionSecretRequest0CredentialType {
  /** Credentials */
  Credentials = "credentials",
  /** Certificate */
  Certificate = "certificate"
}

/**
 * Defines values for GooglePlayConnectionSecretRequest0CredentialType. \
 * {@link KnownGooglePlayConnectionSecretRequest0CredentialType} can be used interchangeably with GooglePlayConnectionSecretRequest0CredentialType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **credentials** \
 * **certificate**
 */
export type GooglePlayConnectionSecretRequest0CredentialType = string;

/** Known values of {@link GooglePlayConnectionSecretResponse0ServiceType} that the service accepts. */
export enum KnownGooglePlayConnectionSecretResponse0ServiceType {
  /** Apple */
  Apple = "apple",
  /** Jira */
  Jira = "jira",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Gitlab */
  Gitlab = "gitlab"
}

/**
 * Defines values for GooglePlayConnectionSecretResponse0ServiceType. \
 * {@link KnownGooglePlayConnectionSecretResponse0ServiceType} can be used interchangeably with GooglePlayConnectionSecretResponse0ServiceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apple** \
 * **jira** \
 * **googleplay** \
 * **gitlab**
 */
export type GooglePlayConnectionSecretResponse0ServiceType = string;

/** Known values of {@link GooglePlayConnectionSecretResponse0CredentialType} that the service accepts. */
export enum KnownGooglePlayConnectionSecretResponse0CredentialType {
  /** Credentials */
  Credentials = "credentials",
  /** Certificate */
  Certificate = "certificate"
}

/**
 * Defines values for GooglePlayConnectionSecretResponse0CredentialType. \
 * {@link KnownGooglePlayConnectionSecretResponse0CredentialType} can be used interchangeably with GooglePlayConnectionSecretResponse0CredentialType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **credentials** \
 * **certificate**
 */
export type GooglePlayConnectionSecretResponse0CredentialType = string;

/** Known values of {@link PrivateGooglePlayConnectionSecretResponse0ServiceType} that the service accepts. */
export enum KnownPrivateGooglePlayConnectionSecretResponse0ServiceType {
  /** Apple */
  Apple = "apple",
  /** Jira */
  Jira = "jira",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Gitlab */
  Gitlab = "gitlab"
}

/**
 * Defines values for PrivateGooglePlayConnectionSecretResponse0ServiceType. \
 * {@link KnownPrivateGooglePlayConnectionSecretResponse0ServiceType} can be used interchangeably with PrivateGooglePlayConnectionSecretResponse0ServiceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apple** \
 * **jira** \
 * **googleplay** \
 * **gitlab**
 */
export type PrivateGooglePlayConnectionSecretResponse0ServiceType = string;

/** Known values of {@link GooglePlayConnectionNonSecretResponseServiceType} that the service accepts. */
export enum KnownGooglePlayConnectionNonSecretResponseServiceType {
  /** Apple */
  Apple = "apple",
  /** Jira */
  Jira = "jira",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Gitlab */
  Gitlab = "gitlab"
}

/**
 * Defines values for GooglePlayConnectionNonSecretResponseServiceType. \
 * {@link KnownGooglePlayConnectionNonSecretResponseServiceType} can be used interchangeably with GooglePlayConnectionNonSecretResponseServiceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apple** \
 * **jira** \
 * **googleplay** \
 * **gitlab**
 */
export type GooglePlayConnectionNonSecretResponseServiceType = string;

/** Known values of {@link GooglePlayConnectionNonSecretResponseCredentialType} that the service accepts. */
export enum KnownGooglePlayConnectionNonSecretResponseCredentialType {
  /** Credentials */
  Credentials = "credentials",
  /** Certificate */
  Certificate = "certificate"
}

/**
 * Defines values for GooglePlayConnectionNonSecretResponseCredentialType. \
 * {@link KnownGooglePlayConnectionNonSecretResponseCredentialType} can be used interchangeably with GooglePlayConnectionNonSecretResponseCredentialType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **credentials** \
 * **certificate**
 */
export type GooglePlayConnectionNonSecretResponseCredentialType = string;

/** Known values of {@link GooglePlayCredentialNonSecretDetailsResponse0ServiceType} that the service accepts. */
export enum KnownGooglePlayCredentialNonSecretDetailsResponse0ServiceType {
  /** Apple */
  Apple = "apple",
  /** Jira */
  Jira = "jira",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Gitlab */
  Gitlab = "gitlab"
}

/**
 * Defines values for GooglePlayCredentialNonSecretDetailsResponse0ServiceType. \
 * {@link KnownGooglePlayCredentialNonSecretDetailsResponse0ServiceType} can be used interchangeably with GooglePlayCredentialNonSecretDetailsResponse0ServiceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apple** \
 * **jira** \
 * **googleplay** \
 * **gitlab**
 */
export type GooglePlayCredentialNonSecretDetailsResponse0ServiceType = string;

/** Known values of {@link GooglePlayCredentialNonSecretDetailsResponse0CredentialType} that the service accepts. */
export enum KnownGooglePlayCredentialNonSecretDetailsResponse0CredentialType {
  /** Credentials */
  Credentials = "credentials",
  /** Certificate */
  Certificate = "certificate"
}

/**
 * Defines values for GooglePlayCredentialNonSecretDetailsResponse0CredentialType. \
 * {@link KnownGooglePlayCredentialNonSecretDetailsResponse0CredentialType} can be used interchangeably with GooglePlayCredentialNonSecretDetailsResponse0CredentialType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **credentials** \
 * **certificate**
 */
export type GooglePlayCredentialNonSecretDetailsResponse0CredentialType = string;

/** Known values of {@link JiraConnectionNonSecretResponseServiceType} that the service accepts. */
export enum KnownJiraConnectionNonSecretResponseServiceType {
  /** Apple */
  Apple = "apple",
  /** Jira */
  Jira = "jira",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Gitlab */
  Gitlab = "gitlab"
}

/**
 * Defines values for JiraConnectionNonSecretResponseServiceType. \
 * {@link KnownJiraConnectionNonSecretResponseServiceType} can be used interchangeably with JiraConnectionNonSecretResponseServiceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apple** \
 * **jira** \
 * **googleplay** \
 * **gitlab**
 */
export type JiraConnectionNonSecretResponseServiceType = string;

/** Known values of {@link JiraConnectionNonSecretResponseCredentialType} that the service accepts. */
export enum KnownJiraConnectionNonSecretResponseCredentialType {
  /** Credentials */
  Credentials = "credentials",
  /** Certificate */
  Certificate = "certificate"
}

/**
 * Defines values for JiraConnectionNonSecretResponseCredentialType. \
 * {@link KnownJiraConnectionNonSecretResponseCredentialType} can be used interchangeably with JiraConnectionNonSecretResponseCredentialType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **credentials** \
 * **certificate**
 */
export type JiraConnectionNonSecretResponseCredentialType = string;

/** Known values of {@link JiraCredentialNonSecretDetailsResponse0ServiceType} that the service accepts. */
export enum KnownJiraCredentialNonSecretDetailsResponse0ServiceType {
  /** Apple */
  Apple = "apple",
  /** Jira */
  Jira = "jira",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Gitlab */
  Gitlab = "gitlab"
}

/**
 * Defines values for JiraCredentialNonSecretDetailsResponse0ServiceType. \
 * {@link KnownJiraCredentialNonSecretDetailsResponse0ServiceType} can be used interchangeably with JiraCredentialNonSecretDetailsResponse0ServiceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apple** \
 * **jira** \
 * **googleplay** \
 * **gitlab**
 */
export type JiraCredentialNonSecretDetailsResponse0ServiceType = string;

/** Known values of {@link JiraCredentialNonSecretDetailsResponse0CredentialType} that the service accepts. */
export enum KnownJiraCredentialNonSecretDetailsResponse0CredentialType {
  /** Credentials */
  Credentials = "credentials",
  /** Certificate */
  Certificate = "certificate"
}

/**
 * Defines values for JiraCredentialNonSecretDetailsResponse0CredentialType. \
 * {@link KnownJiraCredentialNonSecretDetailsResponse0CredentialType} can be used interchangeably with JiraCredentialNonSecretDetailsResponse0CredentialType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **credentials** \
 * **certificate**
 */
export type JiraCredentialNonSecretDetailsResponse0CredentialType = string;

/** Known values of {@link ApiTokenResponsev2ScopeItem} that the service accepts. */
export enum KnownApiTokenResponsev2ScopeItem {
  /** All */
  All = "all",
  /** InAppUpdate */
  InAppUpdate = "in_app_update",
  /** Viewer */
  Viewer = "viewer"
}

/**
 * Defines values for ApiTokenResponsev2ScopeItem. \
 * {@link KnownApiTokenResponsev2ScopeItem} can be used interchangeably with ApiTokenResponsev2ScopeItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **all** \
 * **in_app_update** \
 * **viewer**
 */
export type ApiTokenResponsev2ScopeItem = string;

/** Known values of {@link UserProfileResponsev2Origin} that the service accepts. */
export enum KnownUserProfileResponsev2Origin {
  /** Appcenter */
  Appcenter = "appcenter",
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Codepush */
  Codepush = "codepush"
}

/**
 * Defines values for UserProfileResponsev2Origin. \
 * {@link KnownUserProfileResponsev2Origin} can be used interchangeably with UserProfileResponsev2Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **appcenter** \
 * **hockeyapp** \
 * **codepush**
 */
export type UserProfileResponsev2Origin = string;

/** Known values of {@link UserProfileResponsev2AdminRole} that the service accepts. */
export enum KnownUserProfileResponsev2AdminRole {
  /** SuperAdmin */
  SuperAdmin = "superAdmin",
  /** Admin */
  Admin = "admin",
  /** DevOps */
  DevOps = "devOps",
  /** CustomerSupport */
  CustomerSupport = "customerSupport",
  /** NotAdmin */
  NotAdmin = "notAdmin"
}

/**
 * Defines values for UserProfileResponsev2AdminRole. \
 * {@link KnownUserProfileResponsev2AdminRole} can be used interchangeably with UserProfileResponsev2AdminRole,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **superAdmin** \
 * **admin** \
 * **devOps** \
 * **customerSupport** \
 * **notAdmin**
 */
export type UserProfileResponsev2AdminRole = string;

/** Known values of {@link ErrorDetailsv2Code} that the service accepts. */
export enum KnownErrorDetailsv2Code {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized"
}

/**
 * Defines values for ErrorDetailsv2Code. \
 * {@link KnownErrorDetailsv2Code} can be used interchangeably with ErrorDetailsv2Code,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized**
 */
export type ErrorDetailsv2Code = string;

/** Known values of {@link ErrorResponsev2ErrorCode} that the service accepts. */
export enum KnownErrorResponsev2ErrorCode {
  /** BadRequest */
  BadRequest = "BadRequest",
  /** Conflict */
  Conflict = "Conflict",
  /** NotAcceptable */
  NotAcceptable = "NotAcceptable",
  /** NotFound */
  NotFound = "NotFound",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** Unauthorized */
  Unauthorized = "Unauthorized"
}

/**
 * Defines values for ErrorResponsev2ErrorCode. \
 * {@link KnownErrorResponsev2ErrorCode} can be used interchangeably with ErrorResponsev2ErrorCode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadRequest** \
 * **Conflict** \
 * **NotAcceptable** \
 * **NotFound** \
 * **InternalServerError** \
 * **Unauthorized**
 */
export type ErrorResponsev2ErrorCode = string;

/** Known values of {@link GitHubBillingAccountType} that the service accepts. */
export enum KnownGitHubBillingAccountType {
  /** Org */
  Org = "org",
  /** User */
  User = "user"
}

/**
 * Defines values for GitHubBillingAccountType. \
 * {@link KnownGitHubBillingAccountType} can be used interchangeably with GitHubBillingAccountType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **org** \
 * **user**
 */
export type GitHubBillingAccountType = string;

/** Known values of {@link TestCloudToolsetProjectsItemFrameworkType} that the service accepts. */
export enum KnownTestCloudToolsetProjectsItemFrameworkType {
  /** Appium */
  Appium = "Appium",
  /** Calabash */
  Calabash = "Calabash",
  /** Espresso */
  Espresso = "Espresso",
  /** UITest */
  UITest = "UITest",
  /** Generated */
  Generated = "Generated"
}

/**
 * Defines values for TestCloudToolsetProjectsItemFrameworkType. \
 * {@link KnownTestCloudToolsetProjectsItemFrameworkType} can be used interchangeably with TestCloudToolsetProjectsItemFrameworkType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Appium** \
 * **Calabash** \
 * **Espresso** \
 * **UITest** \
 * **Generated**
 */
export type TestCloudToolsetProjectsItemFrameworkType = string;

/** Known values of {@link TestCloudProjectFrameworkType} that the service accepts. */
export enum KnownTestCloudProjectFrameworkType {
  /** Appium */
  Appium = "Appium",
  /** Calabash */
  Calabash = "Calabash",
  /** Espresso */
  Espresso = "Espresso",
  /** UITest */
  UITest = "UITest",
  /** Generated */
  Generated = "Generated"
}

/**
 * Defines values for TestCloudProjectFrameworkType. \
 * {@link KnownTestCloudProjectFrameworkType} can be used interchangeably with TestCloudProjectFrameworkType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Appium** \
 * **Calabash** \
 * **Espresso** \
 * **UITest** \
 * **Generated**
 */
export type TestCloudProjectFrameworkType = string;

/** Known values of {@link ToolsetProjectsTestcloudProjectsItemFrameworkType} that the service accepts. */
export enum KnownToolsetProjectsTestcloudProjectsItemFrameworkType {
  /** Appium */
  Appium = "Appium",
  /** Calabash */
  Calabash = "Calabash",
  /** Espresso */
  Espresso = "Espresso",
  /** UITest */
  UITest = "UITest",
  /** Generated */
  Generated = "Generated"
}

/**
 * Defines values for ToolsetProjectsTestcloudProjectsItemFrameworkType. \
 * {@link KnownToolsetProjectsTestcloudProjectsItemFrameworkType} can be used interchangeably with ToolsetProjectsTestcloudProjectsItemFrameworkType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Appium** \
 * **Calabash** \
 * **Espresso** \
 * **UITest** \
 * **Generated**
 */
export type ToolsetProjectsTestcloudProjectsItemFrameworkType = string;

/** Known values of {@link BranchConfigurationTrigger} that the service accepts. */
export enum KnownBranchConfigurationTrigger {
  /** Continous */
  Continous = "continous",
  /** Continuous */
  Continuous = "continuous",
  /** Manual */
  Manual = "manual"
}

/**
 * Defines values for BranchConfigurationTrigger. \
 * {@link KnownBranchConfigurationTrigger} can be used interchangeably with BranchConfigurationTrigger,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **continous** \
 * **continuous** \
 * **manual**
 */
export type BranchConfigurationTrigger = string;

/** Known values of {@link BranchConfigurationArtifactVersioningBuildNumberFormat} that the service accepts. */
export enum KnownBranchConfigurationArtifactVersioningBuildNumberFormat {
  /** BuildId */
  BuildId = "buildId",
  /** Timestamp */
  Timestamp = "timestamp"
}

/**
 * Defines values for BranchConfigurationArtifactVersioningBuildNumberFormat. \
 * {@link KnownBranchConfigurationArtifactVersioningBuildNumberFormat} can be used interchangeably with BranchConfigurationArtifactVersioningBuildNumberFormat,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **buildId** \
 * **timestamp**
 */
export type BranchConfigurationArtifactVersioningBuildNumberFormat = string;

/** Known values of {@link RepoConfigState} that the service accepts. */
export enum KnownRepoConfigState {
  /** Unauthorized */
  Unauthorized = "unauthorized",
  /** Inactive */
  Inactive = "inactive",
  /** Active */
  Active = "active"
}

/**
 * Defines values for RepoConfigState. \
 * {@link KnownRepoConfigState} can be used interchangeably with RepoConfigState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **unauthorized** \
 * **inactive** \
 * **active**
 */
export type RepoConfigState = string;

/** Known values of {@link RepoConfigsItemState} that the service accepts. */
export enum KnownRepoConfigsItemState {
  /** Unauthorized */
  Unauthorized = "unauthorized",
  /** Inactive */
  Inactive = "inactive",
  /** Active */
  Active = "active"
}

/**
 * Defines values for RepoConfigsItemState. \
 * {@link KnownRepoConfigsItemState} can be used interchangeably with RepoConfigsItemState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **unauthorized** \
 * **inactive** \
 * **active**
 */
export type RepoConfigsItemState = string;

/** Known values of {@link DistributionRequestDestinationsItemType} that the service accepts. */
export enum KnownDistributionRequestDestinationsItemType {
  /** Store */
  Store = "store",
  /** Group */
  Group = "group",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for DistributionRequestDestinationsItemType. \
 * {@link KnownDistributionRequestDestinationsItemType} can be used interchangeably with DistributionRequestDestinationsItemType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **store** \
 * **group** \
 * **tester**
 */
export type DistributionRequestDestinationsItemType = string;

/** Known values of {@link DestinationDetailsType} that the service accepts. */
export enum KnownDestinationDetailsType {
  /** Store */
  Store = "store",
  /** Group */
  Group = "group",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for DestinationDetailsType. \
 * {@link KnownDestinationDetailsType} can be used interchangeably with DestinationDetailsType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **store** \
 * **group** \
 * **tester**
 */
export type DestinationDetailsType = string;

/** Known values of {@link GetReleaseStatusResponseUploadStatus} that the service accepts. */
export enum KnownGetReleaseStatusResponseUploadStatus {
  /** UploadStarted */
  UploadStarted = "uploadStarted",
  /** UploadFinished */
  UploadFinished = "uploadFinished",
  /** ReadyToBePublished */
  ReadyToBePublished = "readyToBePublished",
  /** MalwareDetected */
  MalwareDetected = "malwareDetected",
  /** Error */
  Error = "error"
}

/**
 * Defines values for GetReleaseStatusResponseUploadStatus. \
 * {@link KnownGetReleaseStatusResponseUploadStatus} can be used interchangeably with GetReleaseStatusResponseUploadStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **uploadStarted** \
 * **uploadFinished** \
 * **readyToBePublished** \
 * **malwareDetected** \
 * **error**
 */
export type GetReleaseStatusResponseUploadStatus = string;

/** Known values of {@link PatchReleaseUploadStatusRequestUploadStatus} that the service accepts. */
export enum KnownPatchReleaseUploadStatusRequestUploadStatus {
  /** UploadFinished */
  UploadFinished = "uploadFinished",
  /** UploadCanceled */
  UploadCanceled = "uploadCanceled"
}

/**
 * Defines values for PatchReleaseUploadStatusRequestUploadStatus. \
 * {@link KnownPatchReleaseUploadStatusRequestUploadStatus} can be used interchangeably with PatchReleaseUploadStatusRequestUploadStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **uploadFinished** \
 * **uploadCanceled**
 */
export type PatchReleaseUploadStatusRequestUploadStatus = string;

/** Known values of {@link PatchReleaseUploadStatusResponseUploadStatus} that the service accepts. */
export enum KnownPatchReleaseUploadStatusResponseUploadStatus {
  /** UploadStarted */
  UploadStarted = "uploadStarted",
  /** UploadFinished */
  UploadFinished = "uploadFinished",
  /** UploadCanceled */
  UploadCanceled = "uploadCanceled",
  /** ReadyToBePublished */
  ReadyToBePublished = "readyToBePublished",
  /** MalwareDetected */
  MalwareDetected = "malwareDetected",
  /** Error */
  Error = "error"
}

/**
 * Defines values for PatchReleaseUploadStatusResponseUploadStatus. \
 * {@link KnownPatchReleaseUploadStatusResponseUploadStatus} can be used interchangeably with PatchReleaseUploadStatusResponseUploadStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **uploadStarted** \
 * **uploadFinished** \
 * **uploadCanceled** \
 * **readyToBePublished** \
 * **malwareDetected** \
 * **error**
 */
export type PatchReleaseUploadStatusResponseUploadStatus = string;

/** Known values of {@link TesterAppWithReleaseResponseRelease0Origin} that the service accepts. */
export enum KnownTesterAppWithReleaseResponseRelease0Origin {
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Appcenter */
  Appcenter = "appcenter"
}

/**
 * Defines values for TesterAppWithReleaseResponseRelease0Origin. \
 * {@link KnownTesterAppWithReleaseResponseRelease0Origin} can be used interchangeably with TesterAppWithReleaseResponseRelease0Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **hockeyapp** \
 * **appcenter**
 */
export type TesterAppWithReleaseResponseRelease0Origin = string;

/** Known values of {@link TesterAppWithReleaseResponseOwnerType} that the service accepts. */
export enum KnownTesterAppWithReleaseResponseOwnerType {
  /** Org */
  Org = "org",
  /** User */
  User = "user"
}

/**
 * Defines values for TesterAppWithReleaseResponseOwnerType. \
 * {@link KnownTesterAppWithReleaseResponseOwnerType} can be used interchangeably with TesterAppWithReleaseResponseOwnerType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **org** \
 * **user**
 */
export type TesterAppWithReleaseResponseOwnerType = string;

/** Known values of {@link PrivateReleaseDetailsResponseStatus} that the service accepts. */
export enum KnownPrivateReleaseDetailsResponseStatus {
  /** Available */
  Available = "available",
  /** Unavailable */
  Unavailable = "unavailable"
}

/**
 * Defines values for PrivateReleaseDetailsResponseStatus. \
 * {@link KnownPrivateReleaseDetailsResponseStatus} can be used interchangeably with PrivateReleaseDetailsResponseStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **available** \
 * **unavailable**
 */
export type PrivateReleaseDetailsResponseStatus = string;

/** Known values of {@link PrivateReleaseDetailsResponseOrigin} that the service accepts. */
export enum KnownPrivateReleaseDetailsResponseOrigin {
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Appcenter */
  Appcenter = "appcenter"
}

/**
 * Defines values for PrivateReleaseDetailsResponseOrigin. \
 * {@link KnownPrivateReleaseDetailsResponseOrigin} can be used interchangeably with PrivateReleaseDetailsResponseOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **hockeyapp** \
 * **appcenter**
 */
export type PrivateReleaseDetailsResponseOrigin = string;

/** Known values of {@link PrivateReleaseDetailsResponseProvisioningProfileType} that the service accepts. */
export enum KnownPrivateReleaseDetailsResponseProvisioningProfileType {
  /** Adhoc */
  Adhoc = "adhoc",
  /** Enterprise */
  Enterprise = "enterprise",
  /** Other */
  Other = "other"
}

/**
 * Defines values for PrivateReleaseDetailsResponseProvisioningProfileType. \
 * {@link KnownPrivateReleaseDetailsResponseProvisioningProfileType} can be used interchangeably with PrivateReleaseDetailsResponseProvisioningProfileType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **adhoc** \
 * **enterprise** \
 * **other**
 */
export type PrivateReleaseDetailsResponseProvisioningProfileType = string;

/** Known values of {@link PrivateReleaseDetailsResponseDestinationType} that the service accepts. */
export enum KnownPrivateReleaseDetailsResponseDestinationType {
  /** Group */
  Group = "group",
  /** Store */
  Store = "store",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for PrivateReleaseDetailsResponseDestinationType. \
 * {@link KnownPrivateReleaseDetailsResponseDestinationType} can be used interchangeably with PrivateReleaseDetailsResponseDestinationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **group** \
 * **store** \
 * **tester**
 */
export type PrivateReleaseDetailsResponseDestinationType = string;

/** Known values of {@link PrivateBasicReleaseDetailsResponseOrigin} that the service accepts. */
export enum KnownPrivateBasicReleaseDetailsResponseOrigin {
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Appcenter */
  Appcenter = "appcenter"
}

/**
 * Defines values for PrivateBasicReleaseDetailsResponseOrigin. \
 * {@link KnownPrivateBasicReleaseDetailsResponseOrigin} can be used interchangeably with PrivateBasicReleaseDetailsResponseOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **hockeyapp** \
 * **appcenter**
 */
export type PrivateBasicReleaseDetailsResponseOrigin = string;

/** Known values of {@link PrivateBasicReleaseDetailsResponseDestinationType} that the service accepts. */
export enum KnownPrivateBasicReleaseDetailsResponseDestinationType {
  /** Group */
  Group = "group",
  /** Store */
  Store = "store",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for PrivateBasicReleaseDetailsResponseDestinationType. \
 * {@link KnownPrivateBasicReleaseDetailsResponseDestinationType} can be used interchangeably with PrivateBasicReleaseDetailsResponseDestinationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **group** \
 * **store** \
 * **tester**
 */
export type PrivateBasicReleaseDetailsResponseDestinationType = string;

/** Known values of {@link DistributionGroupReleasesResponseItemOrigin} that the service accepts. */
export enum KnownDistributionGroupReleasesResponseItemOrigin {
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Appcenter */
  Appcenter = "appcenter"
}

/**
 * Defines values for DistributionGroupReleasesResponseItemOrigin. \
 * {@link KnownDistributionGroupReleasesResponseItemOrigin} can be used interchangeably with DistributionGroupReleasesResponseItemOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **hockeyapp** \
 * **appcenter**
 */
export type DistributionGroupReleasesResponseItemOrigin = string;

/** Known values of {@link DistributionGroupReleaseOrigin} that the service accepts. */
export enum KnownDistributionGroupReleaseOrigin {
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Appcenter */
  Appcenter = "appcenter"
}

/**
 * Defines values for DistributionGroupReleaseOrigin. \
 * {@link KnownDistributionGroupReleaseOrigin} can be used interchangeably with DistributionGroupReleaseOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **hockeyapp** \
 * **appcenter**
 */
export type DistributionGroupReleaseOrigin = string;

/** Known values of {@link BasicReleaseDetailsResponseOrigin} that the service accepts. */
export enum KnownBasicReleaseDetailsResponseOrigin {
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Appcenter */
  Appcenter = "appcenter"
}

/**
 * Defines values for BasicReleaseDetailsResponseOrigin. \
 * {@link KnownBasicReleaseDetailsResponseOrigin} can be used interchangeably with BasicReleaseDetailsResponseOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **hockeyapp** \
 * **appcenter**
 */
export type BasicReleaseDetailsResponseOrigin = string;

/** Known values of {@link BasicReleaseDetailsResponseDestinationType} that the service accepts. */
export enum KnownBasicReleaseDetailsResponseDestinationType {
  /** Group */
  Group = "group",
  /** Store */
  Store = "store",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for BasicReleaseDetailsResponseDestinationType. \
 * {@link KnownBasicReleaseDetailsResponseDestinationType} can be used interchangeably with BasicReleaseDetailsResponseDestinationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **group** \
 * **store** \
 * **tester**
 */
export type BasicReleaseDetailsResponseDestinationType = string;

/** Known values of {@link Enum800} that the service accepts. */
export enum KnownEnum800 {
  /** Intune */
  Intune = "intune",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Apple */
  Apple = "apple",
  /** None */
  None = "none"
}

/**
 * Defines values for Enum800. \
 * {@link KnownEnum800} can be used interchangeably with Enum800,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **intune** \
 * **googleplay** \
 * **apple** \
 * **none**
 */
export type Enum800 = string;

/** Known values of {@link BasicReleaseDetailsResponseDestinationsAllOfProperties} that the service accepts. */
export enum KnownBasicReleaseDetailsResponseDestinationsAllOfProperties {
  /** Intune */
  Intune = "intune",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Apple */
  Apple = "apple",
  /** None */
  None = "none"
}

/**
 * Defines values for BasicReleaseDetailsResponseDestinationsAllOfProperties. \
 * {@link KnownBasicReleaseDetailsResponseDestinationsAllOfProperties} can be used interchangeably with BasicReleaseDetailsResponseDestinationsAllOfProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **intune** \
 * **googleplay** \
 * **apple** \
 * **none**
 */
export type BasicReleaseDetailsResponseDestinationsAllOfProperties = string;

/** Known values of {@link Enum802} that the service accepts. */
export enum KnownEnum802 {
  /** Group */
  Group = "group",
  /** Store */
  Store = "store",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Enum802. \
 * {@link KnownEnum802} can be used interchangeably with Enum802,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **group** \
 * **store** \
 * **tester**
 */
export type Enum802 = string;

/** Known values of {@link ReleaseDetailsResponseOrigin} that the service accepts. */
export enum KnownReleaseDetailsResponseOrigin {
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Appcenter */
  Appcenter = "appcenter"
}

/**
 * Defines values for ReleaseDetailsResponseOrigin. \
 * {@link KnownReleaseDetailsResponseOrigin} can be used interchangeably with ReleaseDetailsResponseOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **hockeyapp** \
 * **appcenter**
 */
export type ReleaseDetailsResponseOrigin = string;

/** Known values of {@link ReleaseDetailsResponseProvisioningProfileType} that the service accepts. */
export enum KnownReleaseDetailsResponseProvisioningProfileType {
  /** Adhoc */
  Adhoc = "adhoc",
  /** Enterprise */
  Enterprise = "enterprise",
  /** Other */
  Other = "other"
}

/**
 * Defines values for ReleaseDetailsResponseProvisioningProfileType. \
 * {@link KnownReleaseDetailsResponseProvisioningProfileType} can be used interchangeably with ReleaseDetailsResponseProvisioningProfileType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **adhoc** \
 * **enterprise** \
 * **other**
 */
export type ReleaseDetailsResponseProvisioningProfileType = string;

/** Known values of {@link ReleaseDetailsResponseDestinationType} that the service accepts. */
export enum KnownReleaseDetailsResponseDestinationType {
  /** Group */
  Group = "group",
  /** Store */
  Store = "store",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for ReleaseDetailsResponseDestinationType. \
 * {@link KnownReleaseDetailsResponseDestinationType} can be used interchangeably with ReleaseDetailsResponseDestinationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **group** \
 * **store** \
 * **tester**
 */
export type ReleaseDetailsResponseDestinationType = string;

/** Known values of {@link ReleaseDetailsResponseDistributionStoresItemType} that the service accepts. */
export enum KnownReleaseDetailsResponseDistributionStoresItemType {
  /** Intune */
  Intune = "intune",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Apple */
  Apple = "apple",
  /** None */
  None = "none"
}

/**
 * Defines values for ReleaseDetailsResponseDistributionStoresItemType. \
 * {@link KnownReleaseDetailsResponseDistributionStoresItemType} can be used interchangeably with ReleaseDetailsResponseDistributionStoresItemType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **intune** \
 * **googleplay** \
 * **apple** \
 * **none**
 */
export type ReleaseDetailsResponseDistributionStoresItemType = string;

/** Known values of {@link ReleaseDetailsResponseDestinationsAllOfProperties} that the service accepts. */
export enum KnownReleaseDetailsResponseDestinationsAllOfProperties {
  /** Intune */
  Intune = "intune",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Apple */
  Apple = "apple",
  /** None */
  None = "none"
}

/**
 * Defines values for ReleaseDetailsResponseDestinationsAllOfProperties. \
 * {@link KnownReleaseDetailsResponseDestinationsAllOfProperties} can be used interchangeably with ReleaseDetailsResponseDestinationsAllOfProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **intune** \
 * **googleplay** \
 * **apple** \
 * **none**
 */
export type ReleaseDetailsResponseDestinationsAllOfProperties = string;

/** Known values of {@link Enum808} that the service accepts. */
export enum KnownEnum808 {
  /** Group */
  Group = "group",
  /** Store */
  Store = "store",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for Enum808. \
 * {@link KnownEnum808} can be used interchangeably with Enum808,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **group** \
 * **store** \
 * **tester**
 */
export type Enum808 = string;

/** Known values of {@link ManagementReleaseDetailsResponseOrigin} that the service accepts. */
export enum KnownManagementReleaseDetailsResponseOrigin {
  /** Hockeyapp */
  Hockeyapp = "hockeyapp",
  /** Appcenter */
  Appcenter = "appcenter"
}

/**
 * Defines values for ManagementReleaseDetailsResponseOrigin. \
 * {@link KnownManagementReleaseDetailsResponseOrigin} can be used interchangeably with ManagementReleaseDetailsResponseOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **hockeyapp** \
 * **appcenter**
 */
export type ManagementReleaseDetailsResponseOrigin = string;

/** Known values of {@link ReleaseUploadEndRequestStatus} that the service accepts. */
export enum KnownReleaseUploadEndRequestStatus {
  /** Committed */
  Committed = "committed",
  /** Aborted */
  Aborted = "aborted"
}

/**
 * Defines values for ReleaseUploadEndRequestStatus. \
 * {@link KnownReleaseUploadEndRequestStatus} can be used interchangeably with ReleaseUploadEndRequestStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **committed** \
 * **aborted**
 */
export type ReleaseUploadEndRequestStatus = string;

/** Known values of {@link ReleaseCreateRequestProvisionProfileType} that the service accepts. */
export enum KnownReleaseCreateRequestProvisionProfileType {
  /** Adhoc */
  Adhoc = "adhoc",
  /** Enterprise */
  Enterprise = "enterprise",
  /** Other */
  Other = "other"
}

/**
 * Defines values for ReleaseCreateRequestProvisionProfileType. \
 * {@link KnownReleaseCreateRequestProvisionProfileType} can be used interchangeably with ReleaseCreateRequestProvisionProfileType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **adhoc** \
 * **enterprise** \
 * **other**
 */
export type ReleaseCreateRequestProvisionProfileType = string;

/** Known values of {@link ReleaseCreateRequestAppexProvisioningProfilesItemProfileType} that the service accepts. */
export enum KnownReleaseCreateRequestAppexProvisioningProfilesItemProfileType {
  /** Adhoc */
  Adhoc = "adhoc",
  /** Enterprise */
  Enterprise = "enterprise",
  /** Other */
  Other = "other"
}

/**
 * Defines values for ReleaseCreateRequestAppexProvisioningProfilesItemProfileType. \
 * {@link KnownReleaseCreateRequestAppexProvisioningProfilesItemProfileType} can be used interchangeably with ReleaseCreateRequestAppexProvisioningProfilesItemProfileType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **adhoc** \
 * **enterprise** \
 * **other**
 */
export type ReleaseCreateRequestAppexProvisioningProfilesItemProfileType = string;

/** Known values of {@link DestinationType} that the service accepts. */
export enum KnownDestinationType {
  /** Group */
  Group = "group",
  /** Store */
  Store = "store",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for DestinationType. \
 * {@link KnownDestinationType} can be used interchangeably with DestinationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **group** \
 * **store** \
 * **tester**
 */
export type DestinationType = string;

/** Known values of {@link Destination0Type} that the service accepts. */
export enum KnownDestination0Type {
  /** Intune */
  Intune = "intune",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Apple */
  Apple = "apple",
  /** None */
  None = "none"
}

/**
 * Defines values for Destination0Type. \
 * {@link KnownDestination0Type} can be used interchangeably with Destination0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **intune** \
 * **googleplay** \
 * **apple** \
 * **none**
 */
export type Destination0Type = string;

/** Known values of {@link PrivateReleaseUpdateRequestPublishingStatus} that the service accepts. */
export enum KnownPrivateReleaseUpdateRequestPublishingStatus {
  /** Failed */
  Failed = "failed",
  /** Processing */
  Processing = "processing",
  /** Submitted */
  Submitted = "submitted",
  /** Timeout */
  Timeout = "timeout"
}

/**
 * Defines values for PrivateReleaseUpdateRequestPublishingStatus. \
 * {@link KnownPrivateReleaseUpdateRequestPublishingStatus} can be used interchangeably with PrivateReleaseUpdateRequestPublishingStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **failed** \
 * **processing** \
 * **submitted** \
 * **timeout**
 */
export type PrivateReleaseUpdateRequestPublishingStatus = string;

/** Known values of {@link DistributionStoreWithoutIsLatestType} that the service accepts. */
export enum KnownDistributionStoreWithoutIsLatestType {
  /** Intune */
  Intune = "intune",
  /** Googleplay */
  Googleplay = "googleplay",
  /** Apple */
  Apple = "apple",
  /** None */
  None = "none"
}

/**
 * Defines values for DistributionStoreWithoutIsLatestType. \
 * {@link KnownDistributionStoreWithoutIsLatestType} can be used interchangeably with DistributionStoreWithoutIsLatestType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **intune** \
 * **googleplay** \
 * **apple** \
 * **none**
 */
export type DistributionStoreWithoutIsLatestType = string;

/** Known values of {@link ProvisioningProfileType} that the service accepts. */
export enum KnownProvisioningProfileType {
  /** Adhoc */
  Adhoc = "adhoc",
  /** Enterprise */
  Enterprise = "enterprise",
  /** Other */
  Other = "other"
}

/**
 * Defines values for ProvisioningProfileType. \
 * {@link KnownProvisioningProfileType} can be used interchangeably with ProvisioningProfileType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **adhoc** \
 * **enterprise** \
 * **other**
 */
export type ProvisioningProfileType = string;

/** Known values of {@link ProvisioningProfileMigrationType} that the service accepts. */
export enum KnownProvisioningProfileMigrationType {
  /** Zero */
  Zero = 0,
  /** One */
  One = 1,
  /** Two */
  Two = 2
}

/**
 * Defines values for ProvisioningProfileMigrationType. \
 * {@link KnownProvisioningProfileMigrationType} can be used interchangeably with ProvisioningProfileMigrationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **0** \
 * **1** \
 * **2**
 */
export type ProvisioningProfileMigrationType = number;

/** Known values of {@link PrivateUpdateUploadDetailsStatus} that the service accepts. */
export enum KnownPrivateUpdateUploadDetailsStatus {
  /** UploadStarted */
  UploadStarted = "uploadStarted",
  /** UploadFinished */
  UploadFinished = "uploadFinished",
  /** ReadyToBePublished */
  ReadyToBePublished = "readyToBePublished",
  /** MalwareDetected */
  MalwareDetected = "malwareDetected",
  /** Error */
  Error = "error"
}

/**
 * Defines values for PrivateUpdateUploadDetailsStatus. \
 * {@link KnownPrivateUpdateUploadDetailsStatus} can be used interchangeably with PrivateUpdateUploadDetailsStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **uploadStarted** \
 * **uploadFinished** \
 * **readyToBePublished** \
 * **malwareDetected** \
 * **error**
 */
export type PrivateUpdateUploadDetailsStatus = string;

/** Known values of {@link MalwareScanResultPayloadResult} that the service accepts. */
export enum KnownMalwareScanResultPayloadResult {
  /** Clean */
  Clean = "clean",
  /** Infected */
  Infected = "infected",
  /** Error */
  Error = "error"
}

/**
 * Defines values for MalwareScanResultPayloadResult. \
 * {@link KnownMalwareScanResultPayloadResult} can be used interchangeably with MalwareScanResultPayloadResult,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **clean** \
 * **infected** \
 * **error**
 */
export type MalwareScanResultPayloadResult = string;

/** Known values of {@link StoresReleaseDetailsStatus} that the service accepts. */
export enum KnownStoresReleaseDetailsStatus {
  /** Available */
  Available = "available",
  /** Unavailable */
  Unavailable = "unavailable"
}

/**
 * Defines values for StoresReleaseDetailsStatus. \
 * {@link KnownStoresReleaseDetailsStatus} can be used interchangeably with StoresReleaseDetailsStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **available** \
 * **unavailable**
 */
export type StoresReleaseDetailsStatus = string;

/** Known values of {@link StoresReleaseDetailsInstallUrl} that the service accepts. */
export enum KnownStoresReleaseDetailsInstallUrl {
  /** Group */
  Group = "group",
  /** Store */
  Store = "store"
}

/**
 * Defines values for StoresReleaseDetailsInstallUrl. \
 * {@link KnownStoresReleaseDetailsInstallUrl} can be used interchangeably with StoresReleaseDetailsInstallUrl,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **group** \
 * **store**
 */
export type StoresReleaseDetailsInstallUrl = string;

/** Known values of {@link StoresReleaseDetailsDistributionStoresItemType} that the service accepts. */
export enum KnownStoresReleaseDetailsDistributionStoresItemType {
  /** Intune */
  Intune = "intune",
  /** Googleplay */
  Googleplay = "googleplay"
}

/**
 * Defines values for StoresReleaseDetailsDistributionStoresItemType. \
 * {@link KnownStoresReleaseDetailsDistributionStoresItemType} can be used interchangeably with StoresReleaseDetailsDistributionStoresItemType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **intune** \
 * **googleplay**
 */
export type StoresReleaseDetailsDistributionStoresItemType = string;

/** Known values of {@link ExternalStoreRequestType} that the service accepts. */
export enum KnownExternalStoreRequestType {
  /** Googleplay */
  Googleplay = "googleplay",
  /** Intune */
  Intune = "intune",
  /** Apple */
  Apple = "apple"
}

/**
 * Defines values for ExternalStoreRequestType. \
 * {@link KnownExternalStoreRequestType} can be used interchangeably with ExternalStoreRequestType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **googleplay** \
 * **intune** \
 * **apple**
 */
export type ExternalStoreRequestType = string;

/** Known values of {@link ExternalStoreRequestTrack} that the service accepts. */
export enum KnownExternalStoreRequestTrack {
  /** Production */
  Production = "production",
  /** Alpha */
  Alpha = "alpha",
  /** Beta */
  Beta = "beta",
  /** TestflightInternal */
  TestflightInternal = "testflight-internal",
  /** TestflightExternal */
  TestflightExternal = "testflight-external"
}

/**
 * Defines values for ExternalStoreRequestTrack. \
 * {@link KnownExternalStoreRequestTrack} can be used interchangeably with ExternalStoreRequestTrack,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **production** \
 * **alpha** \
 * **beta** \
 * **testflight-internal** \
 * **testflight-external**
 */
export type ExternalStoreRequestTrack = string;

/** Known values of {@link ExternalStoreResponseTrack} that the service accepts. */
export enum KnownExternalStoreResponseTrack {
  /** Production */
  Production = "production",
  /** Alpha */
  Alpha = "alpha",
  /** Beta */
  Beta = "beta",
  /** TestflightInternal */
  TestflightInternal = "testflight-internal",
  /** TestflightExternal */
  TestflightExternal = "testflight-external"
}

/**
 * Defines values for ExternalStoreResponseTrack. \
 * {@link KnownExternalStoreResponseTrack} can be used interchangeably with ExternalStoreResponseTrack,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **production** \
 * **alpha** \
 * **beta** \
 * **testflight-internal** \
 * **testflight-external**
 */
export type ExternalStoreResponseTrack = string;

/** Known values of {@link StoresBasicReleaseDetailsDestinationType} that the service accepts. */
export enum KnownStoresBasicReleaseDetailsDestinationType {
  /** Group */
  Group = "group",
  /** Store */
  Store = "store",
  /** Tester */
  Tester = "tester"
}

/**
 * Defines values for StoresBasicReleaseDetailsDestinationType. \
 * {@link KnownStoresBasicReleaseDetailsDestinationType} can be used interchangeably with StoresBasicReleaseDetailsDestinationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **group** \
 * **store** \
 * **tester**
 */
export type StoresBasicReleaseDetailsDestinationType = string;

/** Known values of {@link StoresBasicReleaseDetailsDistributionStoresItemType} that the service accepts. */
export enum KnownStoresBasicReleaseDetailsDistributionStoresItemType {
  /** Googleplay */
  Googleplay = "googleplay",
  /** Intune */
  Intune = "intune",
  /** Apple */
  Apple = "apple"
}

/**
 * Defines values for StoresBasicReleaseDetailsDistributionStoresItemType. \
 * {@link KnownStoresBasicReleaseDetailsDistributionStoresItemType} can be used interchangeably with StoresBasicReleaseDetailsDistributionStoresItemType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **googleplay** \
 * **intune** \
 * **apple**
 */
export type StoresBasicReleaseDetailsDistributionStoresItemType = string;

/** Known values of {@link StoresDetailsType} that the service accepts. */
export enum KnownStoresDetailsType {
  /** Googleplay */
  Googleplay = "googleplay",
  /** Intune */
  Intune = "intune",
  /** Apple */
  Apple = "apple"
}

/**
 * Defines values for StoresDetailsType. \
 * {@link KnownStoresDetailsType} can be used interchangeably with StoresDetailsType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **googleplay** \
 * **intune** \
 * **apple**
 */
export type StoresDetailsType = string;

/** Known values of {@link StoresBasicDetailsType} that the service accepts. */
export enum KnownStoresBasicDetailsType {
  /** Intune */
  Intune = "intune",
  /** Googleplay */
  Googleplay = "googleplay"
}

/**
 * Defines values for StoresBasicDetailsType. \
 * {@link KnownStoresBasicDetailsType} can be used interchangeably with StoresBasicDetailsType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **intune** \
 * **googleplay**
 */
export type StoresBasicDetailsType = string;

/** Known values of {@link SymbolType} that the service accepts. */
export enum KnownSymbolType {
  /** Apple */
  Apple = "Apple",
  /** JavaScript */
  JavaScript = "JavaScript",
  /** Breakpad */
  Breakpad = "Breakpad",
  /** AndroidProguard */
  AndroidProguard = "AndroidProguard",
  /** UWP */
  UWP = "UWP"
}

/**
 * Defines values for SymbolType. \
 * {@link KnownSymbolType} can be used interchangeably with SymbolType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Apple** \
 * **JavaScript** \
 * **Breakpad** \
 * **AndroidProguard** \
 * **UWP**
 */
export type SymbolType = string;

/** Known values of {@link SymbolOrigin} that the service accepts. */
export enum KnownSymbolOrigin {
  /** System */
  System = "System",
  /** User */
  User = "User"
}

/**
 * Defines values for SymbolOrigin. \
 * {@link KnownSymbolOrigin} can be used interchangeably with SymbolOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **System** \
 * **User**
 */
export type SymbolOrigin = string;

/** Known values of {@link SymbolStatus} that the service accepts. */
export enum KnownSymbolStatus {
  /** Available */
  Available = "available",
  /** Ignored */
  Ignored = "ignored"
}

/**
 * Defines values for SymbolStatus. \
 * {@link KnownSymbolStatus} can be used interchangeably with SymbolStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **available** \
 * **ignored**
 */
export type SymbolStatus = string;

/** Known values of {@link SymbolsItemType} that the service accepts. */
export enum KnownSymbolsItemType {
  /** Apple */
  Apple = "Apple",
  /** JavaScript */
  JavaScript = "JavaScript",
  /** Breakpad */
  Breakpad = "Breakpad",
  /** AndroidProguard */
  AndroidProguard = "AndroidProguard",
  /** UWP */
  UWP = "UWP"
}

/**
 * Defines values for SymbolsItemType. \
 * {@link KnownSymbolsItemType} can be used interchangeably with SymbolsItemType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Apple** \
 * **JavaScript** \
 * **Breakpad** \
 * **AndroidProguard** \
 * **UWP**
 */
export type SymbolsItemType = string;

/** Known values of {@link SymbolsItemOrigin} that the service accepts. */
export enum KnownSymbolsItemOrigin {
  /** System */
  System = "System",
  /** User */
  User = "User"
}

/**
 * Defines values for SymbolsItemOrigin. \
 * {@link KnownSymbolsItemOrigin} can be used interchangeably with SymbolsItemOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **System** \
 * **User**
 */
export type SymbolsItemOrigin = string;

/** Known values of {@link SymbolsItemStatus} that the service accepts. */
export enum KnownSymbolsItemStatus {
  /** Available */
  Available = "available",
  /** Ignored */
  Ignored = "ignored"
}

/**
 * Defines values for SymbolsItemStatus. \
 * {@link KnownSymbolsItemStatus} can be used interchangeably with SymbolsItemStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **available** \
 * **ignored**
 */
export type SymbolsItemStatus = string;

/** Known values of {@link SymbolStatusResponseStatus} that the service accepts. */
export enum KnownSymbolStatusResponseStatus {
  /** Available */
  Available = "available",
  /** Ignored */
  Ignored = "ignored",
  /** Missing */
  Missing = "missing"
}

/**
 * Defines values for SymbolStatusResponseStatus. \
 * {@link KnownSymbolStatusResponseStatus} can be used interchangeably with SymbolStatusResponseStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **available** \
 * **ignored** \
 * **missing**
 */
export type SymbolStatusResponseStatus = string;

/** Known values of {@link SymbolUploadStatus} that the service accepts. */
export enum KnownSymbolUploadStatus {
  /** Created */
  Created = "created",
  /** Committed */
  Committed = "committed",
  /** Aborted */
  Aborted = "aborted",
  /** Processing */
  Processing = "processing",
  /** Indexed */
  Indexed = "indexed",
  /** Failed */
  Failed = "failed"
}

/**
 * Defines values for SymbolUploadStatus. \
 * {@link KnownSymbolUploadStatus} can be used interchangeably with SymbolUploadStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **created** \
 * **committed** \
 * **aborted** \
 * **processing** \
 * **indexed** \
 * **failed**
 */
export type SymbolUploadStatus = string;

/** Known values of {@link SymbolUploadSymbolType} that the service accepts. */
export enum KnownSymbolUploadSymbolType {
  /** Apple */
  Apple = "Apple",
  /** JavaScript */
  JavaScript = "JavaScript",
  /** Breakpad */
  Breakpad = "Breakpad",
  /** AndroidProguard */
  AndroidProguard = "AndroidProguard",
  /** UWP */
  UWP = "UWP"
}

/**
 * Defines values for SymbolUploadSymbolType. \
 * {@link KnownSymbolUploadSymbolType} can be used interchangeably with SymbolUploadSymbolType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Apple** \
 * **JavaScript** \
 * **Breakpad** \
 * **AndroidProguard** \
 * **UWP**
 */
export type SymbolUploadSymbolType = string;

/** Known values of {@link SymbolUploadOrigin} that the service accepts. */
export enum KnownSymbolUploadOrigin {
  /** User */
  User = "User",
  /** System */
  System = "System"
}

/**
 * Defines values for SymbolUploadOrigin. \
 * {@link KnownSymbolUploadOrigin} can be used interchangeably with SymbolUploadOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **System**
 */
export type SymbolUploadOrigin = string;

/** Known values of {@link SymbolUploadsItemStatus} that the service accepts. */
export enum KnownSymbolUploadsItemStatus {
  /** Created */
  Created = "created",
  /** Committed */
  Committed = "committed",
  /** Aborted */
  Aborted = "aborted",
  /** Processing */
  Processing = "processing",
  /** Indexed */
  Indexed = "indexed",
  /** Failed */
  Failed = "failed"
}

/**
 * Defines values for SymbolUploadsItemStatus. \
 * {@link KnownSymbolUploadsItemStatus} can be used interchangeably with SymbolUploadsItemStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **created** \
 * **committed** \
 * **aborted** \
 * **processing** \
 * **indexed** \
 * **failed**
 */
export type SymbolUploadsItemStatus = string;

/** Known values of {@link SymbolUploadsItemSymbolType} that the service accepts. */
export enum KnownSymbolUploadsItemSymbolType {
  /** Apple */
  Apple = "Apple",
  /** JavaScript */
  JavaScript = "JavaScript",
  /** Breakpad */
  Breakpad = "Breakpad",
  /** AndroidProguard */
  AndroidProguard = "AndroidProguard",
  /** UWP */
  UWP = "UWP"
}

/**
 * Defines values for SymbolUploadsItemSymbolType. \
 * {@link KnownSymbolUploadsItemSymbolType} can be used interchangeably with SymbolUploadsItemSymbolType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Apple** \
 * **JavaScript** \
 * **Breakpad** \
 * **AndroidProguard** \
 * **UWP**
 */
export type SymbolUploadsItemSymbolType = string;

/** Known values of {@link SymbolUploadsItemOrigin} that the service accepts. */
export enum KnownSymbolUploadsItemOrigin {
  /** User */
  User = "User",
  /** System */
  System = "System"
}

/**
 * Defines values for SymbolUploadsItemOrigin. \
 * {@link KnownSymbolUploadsItemOrigin} can be used interchangeably with SymbolUploadsItemOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **System**
 */
export type SymbolUploadsItemOrigin = string;

/** Known values of {@link SymbolUploadBeginRequestSymbolType} that the service accepts. */
export enum KnownSymbolUploadBeginRequestSymbolType {
  /** Apple */
  Apple = "Apple",
  /** JavaScript */
  JavaScript = "JavaScript",
  /** Breakpad */
  Breakpad = "Breakpad",
  /** AndroidProguard */
  AndroidProguard = "AndroidProguard",
  /** UWP */
  UWP = "UWP"
}

/**
 * Defines values for SymbolUploadBeginRequestSymbolType. \
 * {@link KnownSymbolUploadBeginRequestSymbolType} can be used interchangeably with SymbolUploadBeginRequestSymbolType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Apple** \
 * **JavaScript** \
 * **Breakpad** \
 * **AndroidProguard** \
 * **UWP**
 */
export type SymbolUploadBeginRequestSymbolType = string;

/** Known values of {@link SymbolUploadEndRequestStatus} that the service accepts. */
export enum KnownSymbolUploadEndRequestStatus {
  /** Committed */
  Committed = "committed",
  /** Aborted */
  Aborted = "aborted"
}

/**
 * Defines values for SymbolUploadEndRequestStatus. \
 * {@link KnownSymbolUploadEndRequestStatus} can be used interchangeably with SymbolUploadEndRequestStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **committed** \
 * **aborted**
 */
export type SymbolUploadEndRequestStatus = string;

/** Known values of {@link StackFrameLanguage} that the service accepts. */
export enum KnownStackFrameLanguage {
  /** JavaScript */
  JavaScript = "JavaScript",
  /** CSharp */
  CSharp = "CSharp",
  /** ObjectiveC */
  ObjectiveC = "Objective-C",
  /** ObjectiveCpp */
  ObjectiveCpp = "Objective-Cpp",
  /** Cpp */
  Cpp = "Cpp",
  /** C */
  C = "C",
  /** Swift */
  Swift = "Swift",
  /** Java */
  Java = "Java",
  /** Unknown */
  Unknown = "Unknown"
}

/**
 * Defines values for StackFrameLanguage. \
 * {@link KnownStackFrameLanguage} can be used interchangeably with StackFrameLanguage,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **JavaScript** \
 * **CSharp** \
 * **Objective-C** \
 * **Objective-Cpp** \
 * **Cpp** \
 * **C** \
 * **Swift** \
 * **Java** \
 * **Unknown**
 */
export type StackFrameLanguage = string;

/** Known values of {@link ReasonStackFrameLanguage} that the service accepts. */
export enum KnownReasonStackFrameLanguage {
  /** JavaScript */
  JavaScript = "JavaScript",
  /** CSharp */
  CSharp = "CSharp",
  /** ObjectiveC */
  ObjectiveC = "Objective-C",
  /** ObjectiveCpp */
  ObjectiveCpp = "Objective-Cpp",
  /** Cpp */
  Cpp = "Cpp",
  /** C */
  C = "C",
  /** Swift */
  Swift = "Swift",
  /** Java */
  Java = "Java",
  /** Unknown */
  Unknown = "Unknown"
}

/**
 * Defines values for ReasonStackFrameLanguage. \
 * {@link KnownReasonStackFrameLanguage} can be used interchangeably with ReasonStackFrameLanguage,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **JavaScript** \
 * **CSharp** \
 * **Objective-C** \
 * **Objective-Cpp** \
 * **Cpp** \
 * **C** \
 * **Swift** \
 * **Java** \
 * **Unknown**
 */
export type ReasonStackFrameLanguage = string;

/** Known values of {@link RetentionSettingsRetentionInDays} that the service accepts. */
export enum KnownRetentionSettingsRetentionInDays {
  /** TwentyEight */
  TwentyEight = 28,
  /** Ninety */
  Ninety = 90
}

/**
 * Defines values for RetentionSettingsRetentionInDays. \
 * {@link KnownRetentionSettingsRetentionInDays} can be used interchangeably with RetentionSettingsRetentionInDays,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **28** \
 * **90**
 */
export type RetentionSettingsRetentionInDays = number;

/** Known values of {@link CrashGroupsContainerCrashGroupsItemStatus} that the service accepts. */
export enum KnownCrashGroupsContainerCrashGroupsItemStatus {
  /** Open */
  Open = "open",
  /** Closed */
  Closed = "closed",
  /** Ignored */
  Ignored = "ignored"
}

/**
 * Defines values for CrashGroupsContainerCrashGroupsItemStatus. \
 * {@link KnownCrashGroupsContainerCrashGroupsItemStatus} can be used interchangeably with CrashGroupsContainerCrashGroupsItemStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **open** \
 * **closed** \
 * **ignored**
 */
export type CrashGroupsContainerCrashGroupsItemStatus = string;

/** Known values of {@link Enum850} that the service accepts. */
export enum KnownEnum850 {
  /** JavaScript */
  JavaScript = "JavaScript",
  /** CSharp */
  CSharp = "CSharp",
  /** ObjectiveC */
  ObjectiveC = "Objective-C",
  /** ObjectiveCpp */
  ObjectiveCpp = "Objective-Cpp",
  /** Cpp */
  Cpp = "Cpp",
  /** C */
  C = "C",
  /** Swift */
  Swift = "Swift",
  /** Java */
  Java = "Java",
  /** Unknown */
  Unknown = "Unknown"
}

/**
 * Defines values for Enum850. \
 * {@link KnownEnum850} can be used interchangeably with Enum850,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **JavaScript** \
 * **CSharp** \
 * **Objective-C** \
 * **Objective-Cpp** \
 * **Cpp** \
 * **C** \
 * **Swift** \
 * **Java** \
 * **Unknown**
 */
export type Enum850 = string;

/** Known values of {@link CrashGroupStatus} that the service accepts. */
export enum KnownCrashGroupStatus {
  /** Open */
  Open = "open",
  /** Closed */
  Closed = "closed",
  /** Ignored */
  Ignored = "ignored"
}

/**
 * Defines values for CrashGroupStatus. \
 * {@link KnownCrashGroupStatus} can be used interchangeably with CrashGroupStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **open** \
 * **closed** \
 * **ignored**
 */
export type CrashGroupStatus = string;

/** Known values of {@link CrashGroupReasonFrameLanguage} that the service accepts. */
export enum KnownCrashGroupReasonFrameLanguage {
  /** JavaScript */
  JavaScript = "JavaScript",
  /** CSharp */
  CSharp = "CSharp",
  /** ObjectiveC */
  ObjectiveC = "Objective-C",
  /** ObjectiveCpp */
  ObjectiveCpp = "Objective-Cpp",
  /** Cpp */
  Cpp = "Cpp",
  /** C */
  C = "C",
  /** Swift */
  Swift = "Swift",
  /** Java */
  Java = "Java",
  /** Unknown */
  Unknown = "Unknown"
}

/**
 * Defines values for CrashGroupReasonFrameLanguage. \
 * {@link KnownCrashGroupReasonFrameLanguage} can be used interchangeably with CrashGroupReasonFrameLanguage,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **JavaScript** \
 * **CSharp** \
 * **Objective-C** \
 * **Objective-Cpp** \
 * **Cpp** \
 * **C** \
 * **Swift** \
 * **Java** \
 * **Unknown**
 */
export type CrashGroupReasonFrameLanguage = string;

/** Known values of {@link CrashGroupChangeStatus} that the service accepts. */
export enum KnownCrashGroupChangeStatus {
  /** Open */
  Open = "open",
  /** Closed */
  Closed = "closed",
  /** Ignored */
  Ignored = "ignored"
}

/**
 * Defines values for CrashGroupChangeStatus. \
 * {@link KnownCrashGroupChangeStatus} can be used interchangeably with CrashGroupChangeStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **open** \
 * **closed** \
 * **ignored**
 */
export type CrashGroupChangeStatus = string;

/** Known values of {@link AlertingCrashGroupAppPlatform} that the service accepts. */
export enum KnownAlertingCrashGroupAppPlatform {
  /** Ios */
  Ios = "ios",
  /** Android */
  Android = "android",
  /** Xamarin */
  Xamarin = "xamarin",
  /** ReactNative */
  ReactNative = "react-native",
  /** Ndk */
  Ndk = "ndk",
  /** Unity */
  Unity = "unity",
  /** Other */
  Other = "other"
}

/**
 * Defines values for AlertingCrashGroupAppPlatform. \
 * {@link KnownAlertingCrashGroupAppPlatform} can be used interchangeably with AlertingCrashGroupAppPlatform,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ios** \
 * **android** \
 * **xamarin** \
 * **react-native** \
 * **ndk** \
 * **unity** \
 * **other**
 */
export type AlertingCrashGroupAppPlatform = string;

/** Known values of {@link V2MissingSymbolStatus} that the service accepts. */
export enum KnownV2MissingSymbolStatus {
  /** Missing */
  Missing = "missing",
  /** Ignored */
  Ignored = "ignored",
  /** Available */
  Available = "available"
}

/**
 * Defines values for V2MissingSymbolStatus. \
 * {@link KnownV2MissingSymbolStatus} can be used interchangeably with V2MissingSymbolStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **missing** \
 * **ignored** \
 * **available**
 */
export type V2MissingSymbolStatus = string;

/** Known values of {@link V2MissingSymbolsItemStatus} that the service accepts. */
export enum KnownV2MissingSymbolsItemStatus {
  /** Missing */
  Missing = "missing",
  /** Ignored */
  Ignored = "ignored",
  /** Available */
  Available = "available"
}

/**
 * Defines values for V2MissingSymbolsItemStatus. \
 * {@link KnownV2MissingSymbolsItemStatus} can be used interchangeably with V2MissingSymbolsItemStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **missing** \
 * **ignored** \
 * **available**
 */
export type V2MissingSymbolsItemStatus = string;

/** Known values of {@link V2SymbolUpdateInfoStatus} that the service accepts. */
export enum KnownV2SymbolUpdateInfoStatus {
  /** Missing */
  Missing = "missing",
  /** Ignored */
  Ignored = "ignored",
  /** Available */
  Available = "available"
}

/**
 * Defines values for V2SymbolUpdateInfoStatus. \
 * {@link KnownV2SymbolUpdateInfoStatus} can be used interchangeably with V2SymbolUpdateInfoStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **missing** \
 * **ignored** \
 * **available**
 */
export type V2SymbolUpdateInfoStatus = string;

/** Known values of {@link V2MissingSymbolCrashGroupMissingSymbolsItemStatus} that the service accepts. */
export enum KnownV2MissingSymbolCrashGroupMissingSymbolsItemStatus {
  /** Missing */
  Missing = "missing",
  /** Ignored */
  Ignored = "ignored",
  /** Available */
  Available = "available"
}

/**
 * Defines values for V2MissingSymbolCrashGroupMissingSymbolsItemStatus. \
 * {@link KnownV2MissingSymbolCrashGroupMissingSymbolsItemStatus} can be used interchangeably with V2MissingSymbolCrashGroupMissingSymbolsItemStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **missing** \
 * **ignored** \
 * **available**
 */
export type V2MissingSymbolCrashGroupMissingSymbolsItemStatus = string;

/** Known values of {@link V2MissingSymbolCrashGroupStatus} that the service accepts. */
export enum KnownV2MissingSymbolCrashGroupStatus {
  /** Active */
  Active = "active",
  /** Pending */
  Pending = "pending",
  /** Closed */
  Closed = "closed"
}

/**
 * Defines values for V2MissingSymbolCrashGroupStatus. \
 * {@link KnownV2MissingSymbolCrashGroupStatus} can be used interchangeably with V2MissingSymbolCrashGroupStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **active** \
 * **pending** \
 * **closed**
 */
export type V2MissingSymbolCrashGroupStatus = string;

/** Known values of {@link V2MissingSymbolCrashGroupsItemMissingSymbolsItemStatus} that the service accepts. */
export enum KnownV2MissingSymbolCrashGroupsItemMissingSymbolsItemStatus {
  /** Missing */
  Missing = "missing",
  /** Ignored */
  Ignored = "ignored",
  /** Available */
  Available = "available"
}

/**
 * Defines values for V2MissingSymbolCrashGroupsItemMissingSymbolsItemStatus. \
 * {@link KnownV2MissingSymbolCrashGroupsItemMissingSymbolsItemStatus} can be used interchangeably with V2MissingSymbolCrashGroupsItemMissingSymbolsItemStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **missing** \
 * **ignored** \
 * **available**
 */
export type V2MissingSymbolCrashGroupsItemMissingSymbolsItemStatus = string;

/** Known values of {@link V2MissingSymbolCrashGroupsItemStatus} that the service accepts. */
export enum KnownV2MissingSymbolCrashGroupsItemStatus {
  /** Active */
  Active = "active",
  /** Pending */
  Pending = "pending",
  /** Closed */
  Closed = "closed"
}

/**
 * Defines values for V2MissingSymbolCrashGroupsItemStatus. \
 * {@link KnownV2MissingSymbolCrashGroupsItemStatus} can be used interchangeably with V2MissingSymbolCrashGroupsItemStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **active** \
 * **pending** \
 * **closed**
 */
export type V2MissingSymbolCrashGroupsItemStatus = string;

/** Known values of {@link V2MissingSymbolCrashGroupsResponseGroupsItemMissingSymbolsItemStatus} that the service accepts. */
export enum KnownV2MissingSymbolCrashGroupsResponseGroupsItemMissingSymbolsItemStatus {
  /** Missing */
  Missing = "missing",
  /** Ignored */
  Ignored = "ignored",
  /** Available */
  Available = "available"
}

/**
 * Defines values for V2MissingSymbolCrashGroupsResponseGroupsItemMissingSymbolsItemStatus. \
 * {@link KnownV2MissingSymbolCrashGroupsResponseGroupsItemMissingSymbolsItemStatus} can be used interchangeably with V2MissingSymbolCrashGroupsResponseGroupsItemMissingSymbolsItemStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **missing** \
 * **ignored** \
 * **available**
 */
export type V2MissingSymbolCrashGroupsResponseGroupsItemMissingSymbolsItemStatus = string;

/** Known values of {@link V2MissingSymbolCrashGroupsResponseGroupsItemStatus} that the service accepts. */
export enum KnownV2MissingSymbolCrashGroupsResponseGroupsItemStatus {
  /** Active */
  Active = "active",
  /** Pending */
  Pending = "pending",
  /** Closed */
  Closed = "closed"
}

/**
 * Defines values for V2MissingSymbolCrashGroupsResponseGroupsItemStatus. \
 * {@link KnownV2MissingSymbolCrashGroupsResponseGroupsItemStatus} can be used interchangeably with V2MissingSymbolCrashGroupsResponseGroupsItemStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **active** \
 * **pending** \
 * **closed**
 */
export type V2MissingSymbolCrashGroupsResponseGroupsItemStatus = string;

/** Known values of {@link LogContainerLogsItemType} that the service accepts. */
export enum KnownLogContainerLogsItemType {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for LogContainerLogsItemType. \
 * {@link KnownLogContainerLogsItemType} can be used interchangeably with LogContainerLogsItemType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type LogContainerLogsItemType = string;

/** Known values of {@link GenericLogContainerLogsItemType} that the service accepts. */
export enum KnownGenericLogContainerLogsItemType {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for GenericLogContainerLogsItemType. \
 * {@link KnownGenericLogContainerLogsItemType} can be used interchangeably with GenericLogContainerLogsItemType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type GenericLogContainerLogsItemType = string;

/** Known values of {@link GenericLogType} that the service accepts. */
export enum KnownGenericLogType {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for GenericLogType. \
 * {@link KnownGenericLogType} can be used interchangeably with GenericLogType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type GenericLogType = string;

/** Known values of {@link LogType} that the service accepts. */
export enum KnownLogType {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for LogType. \
 * {@link KnownLogType} can be used interchangeably with LogType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type LogType = string;

/** Known values of {@link LogWithProperties0Type} that the service accepts. */
export enum KnownLogWithProperties0Type {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for LogWithProperties0Type. \
 * {@link KnownLogWithProperties0Type} can be used interchangeably with LogWithProperties0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type LogWithProperties0Type = string;

/** Known values of {@link StartSessionLog0Type} that the service accepts. */
export enum KnownStartSessionLog0Type {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for StartSessionLog0Type. \
 * {@link KnownStartSessionLog0Type} can be used interchangeably with StartSessionLog0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type StartSessionLog0Type = string;

/** Known values of {@link DistributionStartSessionLog0Type} that the service accepts. */
export enum KnownDistributionStartSessionLog0Type {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for DistributionStartSessionLog0Type. \
 * {@link KnownDistributionStartSessionLog0Type} can be used interchangeably with DistributionStartSessionLog0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type DistributionStartSessionLog0Type = string;

/** Known values of {@link HandledErrorLog0Type} that the service accepts. */
export enum KnownHandledErrorLog0Type {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for HandledErrorLog0Type. \
 * {@link KnownHandledErrorLog0Type} can be used interchangeably with HandledErrorLog0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type HandledErrorLog0Type = string;

/** Known values of {@link UnhandledErrorLog0Type} that the service accepts. */
export enum KnownUnhandledErrorLog0Type {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for UnhandledErrorLog0Type. \
 * {@link KnownUnhandledErrorLog0Type} can be used interchangeably with UnhandledErrorLog0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type UnhandledErrorLog0Type = string;

/** Known values of {@link StartServiceLog0Type} that the service accepts. */
export enum KnownStartServiceLog0Type {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for StartServiceLog0Type. \
 * {@link KnownStartServiceLog0Type} can be used interchangeably with StartServiceLog0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type StartServiceLog0Type = string;

/** Known values of {@link CustomPropertyLog0Type} that the service accepts. */
export enum KnownCustomPropertyLog0Type {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for CustomPropertyLog0Type. \
 * {@link KnownCustomPropertyLog0Type} can be used interchangeably with CustomPropertyLog0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type CustomPropertyLog0Type = string;

/** Known values of {@link PageLog0Type} that the service accepts. */
export enum KnownPageLog0Type {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for PageLog0Type. \
 * {@link KnownPageLog0Type} can be used interchangeably with PageLog0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type PageLog0Type = string;

/** Known values of {@link EventLog0Type} that the service accepts. */
export enum KnownEventLog0Type {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for EventLog0Type. \
 * {@link KnownEventLog0Type} can be used interchangeably with EventLog0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type EventLog0Type = string;

/** Known values of {@link PushInstallationLog0Type} that the service accepts. */
export enum KnownPushInstallationLog0Type {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for PushInstallationLog0Type. \
 * {@link KnownPushInstallationLog0Type} can be used interchangeably with PushInstallationLog0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type PushInstallationLog0Type = string;

/** Known values of {@link ErrorLog0Type} that the service accepts. */
export enum KnownErrorLog0Type {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for ErrorLog0Type. \
 * {@link KnownErrorLog0Type} can be used interchangeably with ErrorLog0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type ErrorLog0Type = string;

/** Known values of {@link ErrorCode} that the service accepts. */
export enum KnownErrorCode {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredThree */
  FourHundredThree = 403,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for ErrorCode. \
 * {@link KnownErrorCode} can be used interchangeably with ErrorCode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **403** \
 * **500**
 */
export type ErrorCode = number;

/** Known values of {@link LogFlowLogContainerLogsItemType} that the service accepts. */
export enum KnownLogFlowLogContainerLogsItemType {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for LogFlowLogContainerLogsItemType. \
 * {@link KnownLogFlowLogContainerLogsItemType} can be used interchangeably with LogFlowLogContainerLogsItemType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type LogFlowLogContainerLogsItemType = string;

/** Known values of {@link LogFlowGenericLogContainerLogsItemType} that the service accepts. */
export enum KnownLogFlowGenericLogContainerLogsItemType {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for LogFlowGenericLogContainerLogsItemType. \
 * {@link KnownLogFlowGenericLogContainerLogsItemType} can be used interchangeably with LogFlowGenericLogContainerLogsItemType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type LogFlowGenericLogContainerLogsItemType = string;

/** Known values of {@link LogFlowGenericLogType} that the service accepts. */
export enum KnownLogFlowGenericLogType {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for LogFlowGenericLogType. \
 * {@link KnownLogFlowGenericLogType} can be used interchangeably with LogFlowGenericLogType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type LogFlowGenericLogType = string;

/** Known values of {@link LogFlowLogType} that the service accepts. */
export enum KnownLogFlowLogType {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for LogFlowLogType. \
 * {@link KnownLogFlowLogType} can be used interchangeably with LogFlowLogType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type LogFlowLogType = string;

/** Known values of {@link LogFlowLogWithProperties0Type} that the service accepts. */
export enum KnownLogFlowLogWithProperties0Type {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for LogFlowLogWithProperties0Type. \
 * {@link KnownLogFlowLogWithProperties0Type} can be used interchangeably with LogFlowLogWithProperties0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type LogFlowLogWithProperties0Type = string;

/** Known values of {@link LogFlowStartSessionLog0Type} that the service accepts. */
export enum KnownLogFlowStartSessionLog0Type {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for LogFlowStartSessionLog0Type. \
 * {@link KnownLogFlowStartSessionLog0Type} can be used interchangeably with LogFlowStartSessionLog0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type LogFlowStartSessionLog0Type = string;

/** Known values of {@link LogFlowStartServiceLog0Type} that the service accepts. */
export enum KnownLogFlowStartServiceLog0Type {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for LogFlowStartServiceLog0Type. \
 * {@link KnownLogFlowStartServiceLog0Type} can be used interchangeably with LogFlowStartServiceLog0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type LogFlowStartServiceLog0Type = string;

/** Known values of {@link LogFlowCustomPropertyLog0Type} that the service accepts. */
export enum KnownLogFlowCustomPropertyLog0Type {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for LogFlowCustomPropertyLog0Type. \
 * {@link KnownLogFlowCustomPropertyLog0Type} can be used interchangeably with LogFlowCustomPropertyLog0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type LogFlowCustomPropertyLog0Type = string;

/** Known values of {@link LogFlowPageLog0Type} that the service accepts. */
export enum KnownLogFlowPageLog0Type {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for LogFlowPageLog0Type. \
 * {@link KnownLogFlowPageLog0Type} can be used interchangeably with LogFlowPageLog0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type LogFlowPageLog0Type = string;

/** Known values of {@link LogFlowEventLog0Type} that the service accepts. */
export enum KnownLogFlowEventLog0Type {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for LogFlowEventLog0Type. \
 * {@link KnownLogFlowEventLog0Type} can be used interchangeably with LogFlowEventLog0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type LogFlowEventLog0Type = string;

/** Known values of {@link LogFlowPushInstallationLog0Type} that the service accepts. */
export enum KnownLogFlowPushInstallationLog0Type {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for LogFlowPushInstallationLog0Type. \
 * {@link KnownLogFlowPushInstallationLog0Type} can be used interchangeably with LogFlowPushInstallationLog0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type LogFlowPushInstallationLog0Type = string;

/** Known values of {@link LogFlowErrorLog0Type} that the service accepts. */
export enum KnownLogFlowErrorLog0Type {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for LogFlowErrorLog0Type. \
 * {@link KnownLogFlowErrorLog0Type} can be used interchangeably with LogFlowErrorLog0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type LogFlowErrorLog0Type = string;

/** Known values of {@link ErrorGroupsItemAllOf0ReasonFramesItemLanguage} that the service accepts. */
export enum KnownErrorGroupsItemAllOf0ReasonFramesItemLanguage {
  /** JavaScript */
  JavaScript = "JavaScript",
  /** CSharp */
  CSharp = "CSharp",
  /** ObjectiveC */
  ObjectiveC = "Objective-C",
  /** ObjectiveCpp */
  ObjectiveCpp = "Objective-Cpp",
  /** Cpp */
  Cpp = "Cpp",
  /** C */
  C = "C",
  /** Swift */
  Swift = "Swift",
  /** Java */
  Java = "Java",
  /** Unknown */
  Unknown = "Unknown"
}

/**
 * Defines values for ErrorGroupsItemAllOf0ReasonFramesItemLanguage. \
 * {@link KnownErrorGroupsItemAllOf0ReasonFramesItemLanguage} can be used interchangeably with ErrorGroupsItemAllOf0ReasonFramesItemLanguage,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **JavaScript** \
 * **CSharp** \
 * **Objective-C** \
 * **Objective-Cpp** \
 * **Cpp** \
 * **C** \
 * **Swift** \
 * **Java** \
 * **Unknown**
 */
export type ErrorGroupsItemAllOf0ReasonFramesItemLanguage = string;

/** Known values of {@link ErrorGroupsAllOfProperties} that the service accepts. */
export enum KnownErrorGroupsAllOfProperties {
  /** Open */
  Open = "open",
  /** Closed */
  Closed = "closed",
  /** Ignored */
  Ignored = "ignored"
}

/**
 * Defines values for ErrorGroupsAllOfProperties. \
 * {@link KnownErrorGroupsAllOfProperties} can be used interchangeably with ErrorGroupsAllOfProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **open** \
 * **closed** \
 * **ignored**
 */
export type ErrorGroupsAllOfProperties = string;

/** Known values of {@link ErrorGroupsSearchResultErrorGroupsItemAllOf0ReasonFramesItemLanguage} that the service accepts. */
export enum KnownErrorGroupsSearchResultErrorGroupsItemAllOf0ReasonFramesItemLanguage {
  /** JavaScript */
  JavaScript = "JavaScript",
  /** CSharp */
  CSharp = "CSharp",
  /** ObjectiveC */
  ObjectiveC = "Objective-C",
  /** ObjectiveCpp */
  ObjectiveCpp = "Objective-Cpp",
  /** Cpp */
  Cpp = "Cpp",
  /** C */
  C = "C",
  /** Swift */
  Swift = "Swift",
  /** Java */
  Java = "Java",
  /** Unknown */
  Unknown = "Unknown"
}

/**
 * Defines values for ErrorGroupsSearchResultErrorGroupsItemAllOf0ReasonFramesItemLanguage. \
 * {@link KnownErrorGroupsSearchResultErrorGroupsItemAllOf0ReasonFramesItemLanguage} can be used interchangeably with ErrorGroupsSearchResultErrorGroupsItemAllOf0ReasonFramesItemLanguage,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **JavaScript** \
 * **CSharp** \
 * **Objective-C** \
 * **Objective-Cpp** \
 * **Cpp** \
 * **C** \
 * **Swift** \
 * **Java** \
 * **Unknown**
 */
export type ErrorGroupsSearchResultErrorGroupsItemAllOf0ReasonFramesItemLanguage = string;

/** Known values of {@link ErrorGroupsSearchResultErrorGroupsAllOfProperties} that the service accepts. */
export enum KnownErrorGroupsSearchResultErrorGroupsAllOfProperties {
  /** Open */
  Open = "open",
  /** Closed */
  Closed = "closed",
  /** Ignored */
  Ignored = "ignored"
}

/**
 * Defines values for ErrorGroupsSearchResultErrorGroupsAllOfProperties. \
 * {@link KnownErrorGroupsSearchResultErrorGroupsAllOfProperties} can be used interchangeably with ErrorGroupsSearchResultErrorGroupsAllOfProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **open** \
 * **closed** \
 * **ignored**
 */
export type ErrorGroupsSearchResultErrorGroupsAllOfProperties = string;

/** Known values of {@link ErrorGroupListItemAllOf0ReasonFramesItemLanguage} that the service accepts. */
export enum KnownErrorGroupListItemAllOf0ReasonFramesItemLanguage {
  /** JavaScript */
  JavaScript = "JavaScript",
  /** CSharp */
  CSharp = "CSharp",
  /** ObjectiveC */
  ObjectiveC = "Objective-C",
  /** ObjectiveCpp */
  ObjectiveCpp = "Objective-Cpp",
  /** Cpp */
  Cpp = "Cpp",
  /** C */
  C = "C",
  /** Swift */
  Swift = "Swift",
  /** Java */
  Java = "Java",
  /** Unknown */
  Unknown = "Unknown"
}

/**
 * Defines values for ErrorGroupListItemAllOf0ReasonFramesItemLanguage. \
 * {@link KnownErrorGroupListItemAllOf0ReasonFramesItemLanguage} can be used interchangeably with ErrorGroupListItemAllOf0ReasonFramesItemLanguage,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **JavaScript** \
 * **CSharp** \
 * **Objective-C** \
 * **Objective-Cpp** \
 * **Cpp** \
 * **C** \
 * **Swift** \
 * **Java** \
 * **Unknown**
 */
export type ErrorGroupListItemAllOf0ReasonFramesItemLanguage = string;

/** Known values of {@link ErrorGroupListItem0State} that the service accepts. */
export enum KnownErrorGroupListItem0State {
  /** Open */
  Open = "open",
  /** Closed */
  Closed = "closed",
  /** Ignored */
  Ignored = "ignored"
}

/**
 * Defines values for ErrorGroupListItem0State. \
 * {@link KnownErrorGroupListItem0State} can be used interchangeably with ErrorGroupListItem0State,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **open** \
 * **closed** \
 * **ignored**
 */
export type ErrorGroupListItem0State = string;

/** Known values of {@link ErrorGroupReasonFramesItemLanguage} that the service accepts. */
export enum KnownErrorGroupReasonFramesItemLanguage {
  /** JavaScript */
  JavaScript = "JavaScript",
  /** CSharp */
  CSharp = "CSharp",
  /** ObjectiveC */
  ObjectiveC = "Objective-C",
  /** ObjectiveCpp */
  ObjectiveCpp = "Objective-Cpp",
  /** Cpp */
  Cpp = "Cpp",
  /** C */
  C = "C",
  /** Swift */
  Swift = "Swift",
  /** Java */
  Java = "Java",
  /** Unknown */
  Unknown = "Unknown"
}

/**
 * Defines values for ErrorGroupReasonFramesItemLanguage. \
 * {@link KnownErrorGroupReasonFramesItemLanguage} can be used interchangeably with ErrorGroupReasonFramesItemLanguage,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **JavaScript** \
 * **CSharp** \
 * **Objective-C** \
 * **Objective-Cpp** \
 * **Cpp** \
 * **C** \
 * **Swift** \
 * **Java** \
 * **Unknown**
 */
export type ErrorGroupReasonFramesItemLanguage = string;

/** Known values of {@link ErrorGroup0State} that the service accepts. */
export enum KnownErrorGroup0State {
  /** Open */
  Open = "open",
  /** Closed */
  Closed = "closed",
  /** Ignored */
  Ignored = "ignored"
}

/**
 * Defines values for ErrorGroup0State. \
 * {@link KnownErrorGroup0State} can be used interchangeably with ErrorGroup0State,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **open** \
 * **closed** \
 * **ignored**
 */
export type ErrorGroup0State = string;

/** Known values of {@link ErrorGroupStateState} that the service accepts. */
export enum KnownErrorGroupStateState {
  /** Open */
  Open = "open",
  /** Closed */
  Closed = "closed",
  /** Ignored */
  Ignored = "ignored"
}

/**
 * Defines values for ErrorGroupStateState. \
 * {@link KnownErrorGroupStateState} can be used interchangeably with ErrorGroupStateState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **open** \
 * **closed** \
 * **ignored**
 */
export type ErrorGroupStateState = string;

/** Known values of {@link DiagnosticsStackFrameLanguage} that the service accepts. */
export enum KnownDiagnosticsStackFrameLanguage {
  /** JavaScript */
  JavaScript = "JavaScript",
  /** CSharp */
  CSharp = "CSharp",
  /** ObjectiveC */
  ObjectiveC = "Objective-C",
  /** ObjectiveCpp */
  ObjectiveCpp = "Objective-Cpp",
  /** Cpp */
  Cpp = "Cpp",
  /** C */
  C = "C",
  /** Swift */
  Swift = "Swift",
  /** Java */
  Java = "Java",
  /** Unknown */
  Unknown = "Unknown"
}

/**
 * Defines values for DiagnosticsStackFrameLanguage. \
 * {@link KnownDiagnosticsStackFrameLanguage} can be used interchangeably with DiagnosticsStackFrameLanguage,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **JavaScript** \
 * **CSharp** \
 * **Objective-C** \
 * **Objective-Cpp** \
 * **Cpp** \
 * **C** \
 * **Swift** \
 * **Java** \
 * **Unknown**
 */
export type DiagnosticsStackFrameLanguage = string;

/** Known values of {@link HandledErrorReasonFrameLanguage} that the service accepts. */
export enum KnownHandledErrorReasonFrameLanguage {
  /** JavaScript */
  JavaScript = "JavaScript",
  /** CSharp */
  CSharp = "CSharp",
  /** ObjectiveC */
  ObjectiveC = "Objective-C",
  /** ObjectiveCpp */
  ObjectiveCpp = "Objective-Cpp",
  /** Cpp */
  Cpp = "Cpp",
  /** C */
  C = "C",
  /** Swift */
  Swift = "Swift",
  /** Java */
  Java = "Java",
  /** Unknown */
  Unknown = "Unknown"
}

/**
 * Defines values for HandledErrorReasonFrameLanguage. \
 * {@link KnownHandledErrorReasonFrameLanguage} can be used interchangeably with HandledErrorReasonFrameLanguage,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **JavaScript** \
 * **CSharp** \
 * **Objective-C** \
 * **Objective-Cpp** \
 * **Cpp** \
 * **C** \
 * **Swift** \
 * **Java** \
 * **Unknown**
 */
export type HandledErrorReasonFrameLanguage = string;

/** Known values of {@link HandledErrorDetailsReasonFramesItemLanguage} that the service accepts. */
export enum KnownHandledErrorDetailsReasonFramesItemLanguage {
  /** JavaScript */
  JavaScript = "JavaScript",
  /** CSharp */
  CSharp = "CSharp",
  /** ObjectiveC */
  ObjectiveC = "Objective-C",
  /** ObjectiveCpp */
  ObjectiveCpp = "Objective-Cpp",
  /** Cpp */
  Cpp = "Cpp",
  /** C */
  C = "C",
  /** Swift */
  Swift = "Swift",
  /** Java */
  Java = "Java",
  /** Unknown */
  Unknown = "Unknown"
}

/**
 * Defines values for HandledErrorDetailsReasonFramesItemLanguage. \
 * {@link KnownHandledErrorDetailsReasonFramesItemLanguage} can be used interchangeably with HandledErrorDetailsReasonFramesItemLanguage,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **JavaScript** \
 * **CSharp** \
 * **Objective-C** \
 * **Objective-Cpp** \
 * **Cpp** \
 * **C** \
 * **Swift** \
 * **Java** \
 * **Unknown**
 */
export type HandledErrorDetailsReasonFramesItemLanguage = string;

/** Known values of {@link GenericLogContainerDiagnosticsLogsItemType} that the service accepts. */
export enum KnownGenericLogContainerDiagnosticsLogsItemType {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for GenericLogContainerDiagnosticsLogsItemType. \
 * {@link KnownGenericLogContainerDiagnosticsLogsItemType} can be used interchangeably with GenericLogContainerDiagnosticsLogsItemType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type GenericLogContainerDiagnosticsLogsItemType = string;

/** Known values of {@link GenericLogDiagnosticsType} that the service accepts. */
export enum KnownGenericLogDiagnosticsType {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for GenericLogDiagnosticsType. \
 * {@link KnownGenericLogDiagnosticsType} can be used interchangeably with GenericLogDiagnosticsType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type GenericLogDiagnosticsType = string;

/** Known values of {@link LogDiagnosticsType} that the service accepts. */
export enum KnownLogDiagnosticsType {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for LogDiagnosticsType. \
 * {@link KnownLogDiagnosticsType} can be used interchangeably with LogDiagnosticsType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type LogDiagnosticsType = string;

/** Known values of {@link LogWithPropertiesDiagnostics0Type} that the service accepts. */
export enum KnownLogWithPropertiesDiagnostics0Type {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for LogWithPropertiesDiagnostics0Type. \
 * {@link KnownLogWithPropertiesDiagnostics0Type} can be used interchangeably with LogWithPropertiesDiagnostics0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type LogWithPropertiesDiagnostics0Type = string;

/** Known values of {@link StartSessionLogDiagnostics0Type} that the service accepts. */
export enum KnownStartSessionLogDiagnostics0Type {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for StartSessionLogDiagnostics0Type. \
 * {@link KnownStartSessionLogDiagnostics0Type} can be used interchangeably with StartSessionLogDiagnostics0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type StartSessionLogDiagnostics0Type = string;

/** Known values of {@link HanledErrorLogDiagnostics0Type} that the service accepts. */
export enum KnownHanledErrorLogDiagnostics0Type {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for HanledErrorLogDiagnostics0Type. \
 * {@link KnownHanledErrorLogDiagnostics0Type} can be used interchangeably with HanledErrorLogDiagnostics0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type HanledErrorLogDiagnostics0Type = string;

/** Known values of {@link StartServiceLogDiagnostics0Type} that the service accepts. */
export enum KnownStartServiceLogDiagnostics0Type {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for StartServiceLogDiagnostics0Type. \
 * {@link KnownStartServiceLogDiagnostics0Type} can be used interchangeably with StartServiceLogDiagnostics0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type StartServiceLogDiagnostics0Type = string;

/** Known values of {@link CustomPropertyLogDiagnostics0Type} that the service accepts. */
export enum KnownCustomPropertyLogDiagnostics0Type {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for CustomPropertyLogDiagnostics0Type. \
 * {@link KnownCustomPropertyLogDiagnostics0Type} can be used interchangeably with CustomPropertyLogDiagnostics0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type CustomPropertyLogDiagnostics0Type = string;

/** Known values of {@link PageLogDiagnostics0Type} that the service accepts. */
export enum KnownPageLogDiagnostics0Type {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for PageLogDiagnostics0Type. \
 * {@link KnownPageLogDiagnostics0Type} can be used interchangeably with PageLogDiagnostics0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type PageLogDiagnostics0Type = string;

/** Known values of {@link EventLogDiagnostics0Type} that the service accepts. */
export enum KnownEventLogDiagnostics0Type {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for EventLogDiagnostics0Type. \
 * {@link KnownEventLogDiagnostics0Type} can be used interchangeably with EventLogDiagnostics0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type EventLogDiagnostics0Type = string;

/** Known values of {@link PushInstallationLogDiagnostics0Type} that the service accepts. */
export enum KnownPushInstallationLogDiagnostics0Type {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for PushInstallationLogDiagnostics0Type. \
 * {@link KnownPushInstallationLogDiagnostics0Type} can be used interchangeably with PushInstallationLogDiagnostics0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type PushInstallationLogDiagnostics0Type = string;

/** Known values of {@link ErrorLogDiagnostics0Type} that the service accepts. */
export enum KnownErrorLogDiagnostics0Type {
  /** Event */
  Event = "event",
  /** Page */
  Page = "page",
  /** StartSession */
  StartSession = "start_session",
  /** Error */
  Error = "error",
  /** PushInstallation */
  PushInstallation = "push_installation",
  /** StartService */
  StartService = "start_service",
  /** CustomProperties */
  CustomProperties = "custom_properties"
}

/**
 * Defines values for ErrorLogDiagnostics0Type. \
 * {@link KnownErrorLogDiagnostics0Type} can be used interchangeably with ErrorLogDiagnostics0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **event** \
 * **page** \
 * **start_session** \
 * **error** \
 * **push_installation** \
 * **start_service** \
 * **custom_properties**
 */
export type ErrorLogDiagnostics0Type = string;

/** Known values of {@link ErrorRetentionSettingsRetentionInDays} that the service accepts. */
export enum KnownErrorRetentionSettingsRetentionInDays {
  /** TwentyEight */
  TwentyEight = 28,
  /** Ninety */
  Ninety = 90
}

/**
 * Defines values for ErrorRetentionSettingsRetentionInDays. \
 * {@link KnownErrorRetentionSettingsRetentionInDays} can be used interchangeably with ErrorRetentionSettingsRetentionInDays,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **28** \
 * **90**
 */
export type ErrorRetentionSettingsRetentionInDays = number;

/** Known values of {@link ExportConfigurationType} that the service accepts. */
export enum KnownExportConfigurationType {
  /** BlobStorageConnectionString */
  BlobStorageConnectionString = "blob_storage_connection_string",
  /** ApplicationInsightsInstrumentationKey */
  ApplicationInsightsInstrumentationKey = "application_insights_instrumentation_key",
  /** BlobStorageLinkedSubscription */
  BlobStorageLinkedSubscription = "blob_storage_linked_subscription",
  /** ApplicationInsightsLinkedSubscription */
  ApplicationInsightsLinkedSubscription = "application_insights_linked_subscription"
}

/**
 * Defines values for ExportConfigurationType. \
 * {@link KnownExportConfigurationType} can be used interchangeably with ExportConfigurationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **blob_storage_connection_string** \
 * **application_insights_instrumentation_key** \
 * **blob_storage_linked_subscription** \
 * **application_insights_linked_subscription**
 */
export type ExportConfigurationType = string;

/** Known values of {@link ExportBlobConfiguration0Type} that the service accepts. */
export enum KnownExportBlobConfiguration0Type {
  /** BlobStorageConnectionString */
  BlobStorageConnectionString = "blob_storage_connection_string",
  /** ApplicationInsightsInstrumentationKey */
  ApplicationInsightsInstrumentationKey = "application_insights_instrumentation_key",
  /** BlobStorageLinkedSubscription */
  BlobStorageLinkedSubscription = "blob_storage_linked_subscription",
  /** ApplicationInsightsLinkedSubscription */
  ApplicationInsightsLinkedSubscription = "application_insights_linked_subscription"
}

/**
 * Defines values for ExportBlobConfiguration0Type. \
 * {@link KnownExportBlobConfiguration0Type} can be used interchangeably with ExportBlobConfiguration0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **blob_storage_connection_string** \
 * **application_insights_instrumentation_key** \
 * **blob_storage_linked_subscription** \
 * **application_insights_linked_subscription**
 */
export type ExportBlobConfiguration0Type = string;

/** Known values of {@link ExportConfigurationBlobStorageConnectionString0Type} that the service accepts. */
export enum KnownExportConfigurationBlobStorageConnectionString0Type {
  /** BlobStorageConnectionString */
  BlobStorageConnectionString = "blob_storage_connection_string",
  /** ApplicationInsightsInstrumentationKey */
  ApplicationInsightsInstrumentationKey = "application_insights_instrumentation_key",
  /** BlobStorageLinkedSubscription */
  BlobStorageLinkedSubscription = "blob_storage_linked_subscription",
  /** ApplicationInsightsLinkedSubscription */
  ApplicationInsightsLinkedSubscription = "application_insights_linked_subscription"
}

/**
 * Defines values for ExportConfigurationBlobStorageConnectionString0Type. \
 * {@link KnownExportConfigurationBlobStorageConnectionString0Type} can be used interchangeably with ExportConfigurationBlobStorageConnectionString0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **blob_storage_connection_string** \
 * **application_insights_instrumentation_key** \
 * **blob_storage_linked_subscription** \
 * **application_insights_linked_subscription**
 */
export type ExportConfigurationBlobStorageConnectionString0Type = string;

/** Known values of {@link ExportConfigurationAppInsightsKey0Type} that the service accepts. */
export enum KnownExportConfigurationAppInsightsKey0Type {
  /** BlobStorageConnectionString */
  BlobStorageConnectionString = "blob_storage_connection_string",
  /** ApplicationInsightsInstrumentationKey */
  ApplicationInsightsInstrumentationKey = "application_insights_instrumentation_key",
  /** BlobStorageLinkedSubscription */
  BlobStorageLinkedSubscription = "blob_storage_linked_subscription",
  /** ApplicationInsightsLinkedSubscription */
  ApplicationInsightsLinkedSubscription = "application_insights_linked_subscription"
}

/**
 * Defines values for ExportConfigurationAppInsightsKey0Type. \
 * {@link KnownExportConfigurationAppInsightsKey0Type} can be used interchangeably with ExportConfigurationAppInsightsKey0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **blob_storage_connection_string** \
 * **application_insights_instrumentation_key** \
 * **blob_storage_linked_subscription** \
 * **application_insights_linked_subscription**
 */
export type ExportConfigurationAppInsightsKey0Type = string;

/** Known values of {@link ExportConfigurationBlobStorageLinkedSubscription0Type} that the service accepts. */
export enum KnownExportConfigurationBlobStorageLinkedSubscription0Type {
  /** BlobStorageConnectionString */
  BlobStorageConnectionString = "blob_storage_connection_string",
  /** ApplicationInsightsInstrumentationKey */
  ApplicationInsightsInstrumentationKey = "application_insights_instrumentation_key",
  /** BlobStorageLinkedSubscription */
  BlobStorageLinkedSubscription = "blob_storage_linked_subscription",
  /** ApplicationInsightsLinkedSubscription */
  ApplicationInsightsLinkedSubscription = "application_insights_linked_subscription"
}

/**
 * Defines values for ExportConfigurationBlobStorageLinkedSubscription0Type. \
 * {@link KnownExportConfigurationBlobStorageLinkedSubscription0Type} can be used interchangeably with ExportConfigurationBlobStorageLinkedSubscription0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **blob_storage_connection_string** \
 * **application_insights_instrumentation_key** \
 * **blob_storage_linked_subscription** \
 * **application_insights_linked_subscription**
 */
export type ExportConfigurationBlobStorageLinkedSubscription0Type = string;

/** Known values of {@link ExportConfigurationAppInsightsLinkedSubscription0Type} that the service accepts. */
export enum KnownExportConfigurationAppInsightsLinkedSubscription0Type {
  /** BlobStorageConnectionString */
  BlobStorageConnectionString = "blob_storage_connection_string",
  /** ApplicationInsightsInstrumentationKey */
  ApplicationInsightsInstrumentationKey = "application_insights_instrumentation_key",
  /** BlobStorageLinkedSubscription */
  BlobStorageLinkedSubscription = "blob_storage_linked_subscription",
  /** ApplicationInsightsLinkedSubscription */
  ApplicationInsightsLinkedSubscription = "application_insights_linked_subscription"
}

/**
 * Defines values for ExportConfigurationAppInsightsLinkedSubscription0Type. \
 * {@link KnownExportConfigurationAppInsightsLinkedSubscription0Type} can be used interchangeably with ExportConfigurationAppInsightsLinkedSubscription0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **blob_storage_connection_string** \
 * **application_insights_instrumentation_key** \
 * **blob_storage_linked_subscription** \
 * **application_insights_linked_subscription**
 */
export type ExportConfigurationAppInsightsLinkedSubscription0Type = string;

/** Known values of {@link ExportConfigurationResultExportConfigurationType} that the service accepts. */
export enum KnownExportConfigurationResultExportConfigurationType {
  /** BlobStorageConnectionString */
  BlobStorageConnectionString = "blob_storage_connection_string",
  /** ApplicationInsightsInstrumentationKey */
  ApplicationInsightsInstrumentationKey = "application_insights_instrumentation_key",
  /** BlobStorageLinkedSubscription */
  BlobStorageLinkedSubscription = "blob_storage_linked_subscription",
  /** ApplicationInsightsLinkedSubscription */
  ApplicationInsightsLinkedSubscription = "application_insights_linked_subscription"
}

/**
 * Defines values for ExportConfigurationResultExportConfigurationType. \
 * {@link KnownExportConfigurationResultExportConfigurationType} can be used interchangeably with ExportConfigurationResultExportConfigurationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **blob_storage_connection_string** \
 * **application_insights_instrumentation_key** \
 * **blob_storage_linked_subscription** \
 * **application_insights_linked_subscription**
 */
export type ExportConfigurationResultExportConfigurationType = string;

/** Known values of {@link ExportConfigurationListResultValuesProperties} that the service accepts. */
export enum KnownExportConfigurationListResultValuesProperties {
  /** BlobStorageConnectionString */
  BlobStorageConnectionString = "blob_storage_connection_string",
  /** ApplicationInsightsInstrumentationKey */
  ApplicationInsightsInstrumentationKey = "application_insights_instrumentation_key",
  /** BlobStorageLinkedSubscription */
  BlobStorageLinkedSubscription = "blob_storage_linked_subscription",
  /** ApplicationInsightsLinkedSubscription */
  ApplicationInsightsLinkedSubscription = "application_insights_linked_subscription"
}

/**
 * Defines values for ExportConfigurationListResultValuesProperties. \
 * {@link KnownExportConfigurationListResultValuesProperties} can be used interchangeably with ExportConfigurationListResultValuesProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **blob_storage_connection_string** \
 * **application_insights_instrumentation_key** \
 * **blob_storage_linked_subscription** \
 * **application_insights_linked_subscription**
 */
export type ExportConfigurationListResultValuesProperties = string;

/** Known values of {@link NotificationsListResultValuesProperties} that the service accepts. */
export enum KnownNotificationsListResultValuesProperties {
  /** AudiencesTarget */
  AudiencesTarget = "audiences_target",
  /** DevicesTarget */
  DevicesTarget = "devices_target",
  /** UserIdsTarget */
  UserIdsTarget = "user_ids_target",
  /** AccountIdsTarget */
  AccountIdsTarget = "account_ids_target",
  /** BroadcastTarget */
  BroadcastTarget = "broadcast_target"
}

/**
 * Defines values for NotificationsListResultValuesProperties. \
 * {@link KnownNotificationsListResultValuesProperties} can be used interchangeably with NotificationsListResultValuesProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **audiences_target** \
 * **devices_target** \
 * **user_ids_target** \
 * **account_ids_target** \
 * **broadcast_target**
 */
export type NotificationsListResultValuesProperties = string;

/** Known values of {@link NotificationOverviewResultNotificationTargetType} that the service accepts. */
export enum KnownNotificationOverviewResultNotificationTargetType {
  /** AudiencesTarget */
  AudiencesTarget = "audiences_target",
  /** DevicesTarget */
  DevicesTarget = "devices_target",
  /** UserIdsTarget */
  UserIdsTarget = "user_ids_target",
  /** AccountIdsTarget */
  AccountIdsTarget = "account_ids_target",
  /** BroadcastTarget */
  BroadcastTarget = "broadcast_target"
}

/**
 * Defines values for NotificationOverviewResultNotificationTargetType. \
 * {@link KnownNotificationOverviewResultNotificationTargetType} can be used interchangeably with NotificationOverviewResultNotificationTargetType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **audiences_target** \
 * **devices_target** \
 * **user_ids_target** \
 * **account_ids_target** \
 * **broadcast_target**
 */
export type NotificationOverviewResultNotificationTargetType = string;

/** Known values of {@link NotificationDetailsResult0NotificationTargetType} that the service accepts. */
export enum KnownNotificationDetailsResult0NotificationTargetType {
  /** AudiencesTarget */
  AudiencesTarget = "audiences_target",
  /** DevicesTarget */
  DevicesTarget = "devices_target",
  /** UserIdsTarget */
  UserIdsTarget = "user_ids_target",
  /** AccountIdsTarget */
  AccountIdsTarget = "account_ids_target",
  /** BroadcastTarget */
  BroadcastTarget = "broadcast_target"
}

/**
 * Defines values for NotificationDetailsResult0NotificationTargetType. \
 * {@link KnownNotificationDetailsResult0NotificationTargetType} can be used interchangeably with NotificationDetailsResult0NotificationTargetType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **audiences_target** \
 * **devices_target** \
 * **user_ids_target** \
 * **account_ids_target** \
 * **broadcast_target**
 */
export type NotificationDetailsResult0NotificationTargetType = string;

/** Known values of {@link NotificationDefinitionNotificationTargetType} that the service accepts. */
export enum KnownNotificationDefinitionNotificationTargetType {
  /** AudiencesTarget */
  AudiencesTarget = "audiences_target",
  /** DevicesTarget */
  DevicesTarget = "devices_target",
  /** UserIdsTarget */
  UserIdsTarget = "user_ids_target",
  /** AccountIdsTarget */
  AccountIdsTarget = "account_ids_target",
  /** BroadcastTarget */
  BroadcastTarget = "broadcast_target"
}

/**
 * Defines values for NotificationDefinitionNotificationTargetType. \
 * {@link KnownNotificationDefinitionNotificationTargetType} can be used interchangeably with NotificationDefinitionNotificationTargetType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **audiences_target** \
 * **devices_target** \
 * **user_ids_target** \
 * **account_ids_target** \
 * **broadcast_target**
 */
export type NotificationDefinitionNotificationTargetType = string;

/** Known values of {@link NotificationTargetType} that the service accepts. */
export enum KnownNotificationTargetType {
  /** AudiencesTarget */
  AudiencesTarget = "audiences_target",
  /** DevicesTarget */
  DevicesTarget = "devices_target",
  /** UserIdsTarget */
  UserIdsTarget = "user_ids_target",
  /** AccountIdsTarget */
  AccountIdsTarget = "account_ids_target",
  /** BroadcastTarget */
  BroadcastTarget = "broadcast_target"
}

/**
 * Defines values for NotificationTargetType. \
 * {@link KnownNotificationTargetType} can be used interchangeably with NotificationTargetType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **audiences_target** \
 * **devices_target** \
 * **user_ids_target** \
 * **account_ids_target** \
 * **broadcast_target**
 */
export type NotificationTargetType = string;

/** Known values of {@link NotificationTargetBroadcastType} that the service accepts. */
export enum KnownNotificationTargetBroadcastType {
  /** AudiencesTarget */
  AudiencesTarget = "audiences_target",
  /** DevicesTarget */
  DevicesTarget = "devices_target",
  /** UserIdsTarget */
  UserIdsTarget = "user_ids_target",
  /** AccountIdsTarget */
  AccountIdsTarget = "account_ids_target",
  /** BroadcastTarget */
  BroadcastTarget = "broadcast_target"
}

/**
 * Defines values for NotificationTargetBroadcastType. \
 * {@link KnownNotificationTargetBroadcastType} can be used interchangeably with NotificationTargetBroadcastType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **audiences_target** \
 * **devices_target** \
 * **user_ids_target** \
 * **account_ids_target** \
 * **broadcast_target**
 */
export type NotificationTargetBroadcastType = string;

/** Known values of {@link NotificationTargetUserIds0Type} that the service accepts. */
export enum KnownNotificationTargetUserIds0Type {
  /** AudiencesTarget */
  AudiencesTarget = "audiences_target",
  /** DevicesTarget */
  DevicesTarget = "devices_target",
  /** UserIdsTarget */
  UserIdsTarget = "user_ids_target",
  /** AccountIdsTarget */
  AccountIdsTarget = "account_ids_target",
  /** BroadcastTarget */
  BroadcastTarget = "broadcast_target"
}

/**
 * Defines values for NotificationTargetUserIds0Type. \
 * {@link KnownNotificationTargetUserIds0Type} can be used interchangeably with NotificationTargetUserIds0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **audiences_target** \
 * **devices_target** \
 * **user_ids_target** \
 * **account_ids_target** \
 * **broadcast_target**
 */
export type NotificationTargetUserIds0Type = string;

/** Known values of {@link NotificationTargetAccountIds0Type} that the service accepts. */
export enum KnownNotificationTargetAccountIds0Type {
  /** AudiencesTarget */
  AudiencesTarget = "audiences_target",
  /** DevicesTarget */
  DevicesTarget = "devices_target",
  /** UserIdsTarget */
  UserIdsTarget = "user_ids_target",
  /** AccountIdsTarget */
  AccountIdsTarget = "account_ids_target",
  /** BroadcastTarget */
  BroadcastTarget = "broadcast_target"
}

/**
 * Defines values for NotificationTargetAccountIds0Type. \
 * {@link KnownNotificationTargetAccountIds0Type} can be used interchangeably with NotificationTargetAccountIds0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **audiences_target** \
 * **devices_target** \
 * **user_ids_target** \
 * **account_ids_target** \
 * **broadcast_target**
 */
export type NotificationTargetAccountIds0Type = string;

/** Known values of {@link NotificationTargetAudiences0Type} that the service accepts. */
export enum KnownNotificationTargetAudiences0Type {
  /** AudiencesTarget */
  AudiencesTarget = "audiences_target",
  /** DevicesTarget */
  DevicesTarget = "devices_target",
  /** UserIdsTarget */
  UserIdsTarget = "user_ids_target",
  /** AccountIdsTarget */
  AccountIdsTarget = "account_ids_target",
  /** BroadcastTarget */
  BroadcastTarget = "broadcast_target"
}

/**
 * Defines values for NotificationTargetAudiences0Type. \
 * {@link KnownNotificationTargetAudiences0Type} can be used interchangeably with NotificationTargetAudiences0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **audiences_target** \
 * **devices_target** \
 * **user_ids_target** \
 * **account_ids_target** \
 * **broadcast_target**
 */
export type NotificationTargetAudiences0Type = string;

/** Known values of {@link NotificationTargetDevices0Type} that the service accepts. */
export enum KnownNotificationTargetDevices0Type {
  /** AudiencesTarget */
  AudiencesTarget = "audiences_target",
  /** DevicesTarget */
  DevicesTarget = "devices_target",
  /** UserIdsTarget */
  UserIdsTarget = "user_ids_target",
  /** AccountIdsTarget */
  AccountIdsTarget = "account_ids_target",
  /** BroadcastTarget */
  BroadcastTarget = "broadcast_target"
}

/**
 * Defines values for NotificationTargetDevices0Type. \
 * {@link KnownNotificationTargetDevices0Type} can be used interchangeably with NotificationTargetDevices0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **audiences_target** \
 * **devices_target** \
 * **user_ids_target** \
 * **account_ids_target** \
 * **broadcast_target**
 */
export type NotificationTargetDevices0Type = string;

/** Known values of {@link NotificationConfigType} that the service accepts. */
export enum KnownNotificationConfigType {
  /** ApnsTokenConfig */
  ApnsTokenConfig = "apns_token_config",
  /** GcmConfig */
  GcmConfig = "gcm_config",
  /** WnsConfig */
  WnsConfig = "wns_config"
}

/**
 * Defines values for NotificationConfigType. \
 * {@link KnownNotificationConfigType} can be used interchangeably with NotificationConfigType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apns_token_config** \
 * **gcm_config** \
 * **wns_config**
 */
export type NotificationConfigType = string;

/** Known values of {@link AppleNotificationEndpointType} that the service accepts. */
export enum KnownAppleNotificationEndpointType {
  /** Production */
  Production = "production",
  /** Sandbox */
  Sandbox = "sandbox"
}

/**
 * Defines values for AppleNotificationEndpointType. \
 * {@link KnownAppleNotificationEndpointType} can be used interchangeably with AppleNotificationEndpointType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **production** \
 * **sandbox**
 */
export type AppleNotificationEndpointType = string;

/** Known values of {@link NotificationConfigApple0Type} that the service accepts. */
export enum KnownNotificationConfigApple0Type {
  /** ApnsTokenConfig */
  ApnsTokenConfig = "apns_token_config",
  /** GcmConfig */
  GcmConfig = "gcm_config",
  /** WnsConfig */
  WnsConfig = "wns_config"
}

/**
 * Defines values for NotificationConfigApple0Type. \
 * {@link KnownNotificationConfigApple0Type} can be used interchangeably with NotificationConfigApple0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apns_token_config** \
 * **gcm_config** \
 * **wns_config**
 */
export type NotificationConfigApple0Type = string;

/** Known values of {@link NotificationConfigAppleToken0Type} that the service accepts. */
export enum KnownNotificationConfigAppleToken0Type {
  /** ApnsTokenConfig */
  ApnsTokenConfig = "apns_token_config",
  /** GcmConfig */
  GcmConfig = "gcm_config",
  /** WnsConfig */
  WnsConfig = "wns_config"
}

/**
 * Defines values for NotificationConfigAppleToken0Type. \
 * {@link KnownNotificationConfigAppleToken0Type} can be used interchangeably with NotificationConfigAppleToken0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apns_token_config** \
 * **gcm_config** \
 * **wns_config**
 */
export type NotificationConfigAppleToken0Type = string;

/** Known values of {@link NotificationConfigGoogle0Type} that the service accepts. */
export enum KnownNotificationConfigGoogle0Type {
  /** ApnsTokenConfig */
  ApnsTokenConfig = "apns_token_config",
  /** GcmConfig */
  GcmConfig = "gcm_config",
  /** WnsConfig */
  WnsConfig = "wns_config"
}

/**
 * Defines values for NotificationConfigGoogle0Type. \
 * {@link KnownNotificationConfigGoogle0Type} can be used interchangeably with NotificationConfigGoogle0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apns_token_config** \
 * **gcm_config** \
 * **wns_config**
 */
export type NotificationConfigGoogle0Type = string;

/** Known values of {@link NotificationConfigWindows0Type} that the service accepts. */
export enum KnownNotificationConfigWindows0Type {
  /** ApnsTokenConfig */
  ApnsTokenConfig = "apns_token_config",
  /** GcmConfig */
  GcmConfig = "gcm_config",
  /** WnsConfig */
  WnsConfig = "wns_config"
}

/**
 * Defines values for NotificationConfigWindows0Type. \
 * {@link KnownNotificationConfigWindows0Type} can be used interchangeably with NotificationConfigWindows0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apns_token_config** \
 * **gcm_config** \
 * **wns_config**
 */
export type NotificationConfigWindows0Type = string;

/** Known values of {@link TestCloudFileHashDeprecatedFileType} that the service accepts. */
export enum KnownTestCloudFileHashDeprecatedFileType {
  /** DsymFile */
  DsymFile = "dsym-file",
  /** AppFile */
  AppFile = "app-file",
  /** TestFile */
  TestFile = "test-file"
}

/**
 * Defines values for TestCloudFileHashDeprecatedFileType. \
 * {@link KnownTestCloudFileHashDeprecatedFileType} can be used interchangeably with TestCloudFileHashDeprecatedFileType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **dsym-file** \
 * **app-file** \
 * **test-file**
 */
export type TestCloudFileHashDeprecatedFileType = string;

/** Known values of {@link TestCloudFileHashResponseFileType} that the service accepts. */
export enum KnownTestCloudFileHashResponseFileType {
  /** DsymFile */
  DsymFile = "dsym-file",
  /** AppFile */
  AppFile = "app-file",
  /** TestFile */
  TestFile = "test-file"
}

/**
 * Defines values for TestCloudFileHashResponseFileType. \
 * {@link KnownTestCloudFileHashResponseFileType} can be used interchangeably with TestCloudFileHashResponseFileType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **dsym-file** \
 * **app-file** \
 * **test-file**
 */
export type TestCloudFileHashResponseFileType = string;

/** Known values of {@link SubmitDsrOperationRequestRequest} that the service accepts. */
export enum KnownSubmitDsrOperationRequestRequest {
  /** Delete */
  Delete = "Delete",
  /** Purge */
  Purge = "Purge",
  /** UndoDelete */
  UndoDelete = "UndoDelete",
  /** Export */
  Export = "Export"
}

/**
 * Defines values for SubmitDsrOperationRequestRequest. \
 * {@link KnownSubmitDsrOperationRequestRequest} can be used interchangeably with SubmitDsrOperationRequestRequest,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Delete** \
 * **Purge** \
 * **UndoDelete** \
 * **Export**
 */
export type SubmitDsrOperationRequestRequest = string;

/** Known values of {@link SubmitDsrOperationResponseStatus} that the service accepts. */
export enum KnownSubmitDsrOperationResponseStatus {
  /** NotStarted */
  NotStarted = "NotStarted",
  /** InProgress */
  InProgress = "InProgress",
  /** Completed */
  Completed = "Completed",
  /** Failure */
  Failure = "Failure"
}

/**
 * Defines values for SubmitDsrOperationResponseStatus. \
 * {@link KnownSubmitDsrOperationResponseStatus} can be used interchangeably with SubmitDsrOperationResponseStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NotStarted** \
 * **InProgress** \
 * **Completed** \
 * **Failure**
 */
export type SubmitDsrOperationResponseStatus = string;

/** Known values of {@link DeploymentLatestRelease1ReleaseMethod} that the service accepts. */
export enum KnownDeploymentLatestRelease1ReleaseMethod {
  /** Upload */
  Upload = "Upload",
  /** Promote */
  Promote = "Promote",
  /** Rollback */
  Rollback = "Rollback"
}

/**
 * Defines values for DeploymentLatestRelease1ReleaseMethod. \
 * {@link KnownDeploymentLatestRelease1ReleaseMethod} can be used interchangeably with DeploymentLatestRelease1ReleaseMethod,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Upload** \
 * **Promote** \
 * **Rollback**
 */
export type DeploymentLatestRelease1ReleaseMethod = string;

/** Known values of {@link DeploymentInternal0LatestRelease1ReleaseMethod} that the service accepts. */
export enum KnownDeploymentInternal0LatestRelease1ReleaseMethod {
  /** Upload */
  Upload = "Upload",
  /** Promote */
  Promote = "Promote",
  /** Rollback */
  Rollback = "Rollback"
}

/**
 * Defines values for DeploymentInternal0LatestRelease1ReleaseMethod. \
 * {@link KnownDeploymentInternal0LatestRelease1ReleaseMethod} can be used interchangeably with DeploymentInternal0LatestRelease1ReleaseMethod,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Upload** \
 * **Promote** \
 * **Rollback**
 */
export type DeploymentInternal0LatestRelease1ReleaseMethod = string;

/** Known values of {@link CodePushReleaseMethod} that the service accepts. */
export enum KnownCodePushReleaseMethod {
  /** Upload */
  Upload = "Upload",
  /** Promote */
  Promote = "Promote",
  /** Rollback */
  Rollback = "Rollback"
}

/**
 * Defines values for CodePushReleaseMethod. \
 * {@link KnownCodePushReleaseMethod} can be used interchangeably with CodePushReleaseMethod,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Upload** \
 * **Promote** \
 * **Rollback**
 */
export type CodePushReleaseMethod = string;

/** Known values of {@link AlertWebhookEventTypesItem} that the service accepts. */
export enum KnownAlertWebhookEventTypesItem {
  /** NewCrashGroupCreated */
  NewCrashGroupCreated = "newCrashGroupCreated",
  /** NewAppReleased */
  NewAppReleased = "newAppReleased"
}

/**
 * Defines values for AlertWebhookEventTypesItem. \
 * {@link KnownAlertWebhookEventTypesItem} can be used interchangeably with AlertWebhookEventTypesItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **newCrashGroupCreated** \
 * **newAppReleased**
 */
export type AlertWebhookEventTypesItem = string;

/** Known values of {@link AlertWebhookListResultValuesPropertiesItemsItem} that the service accepts. */
export enum KnownAlertWebhookListResultValuesPropertiesItemsItem {
  /** NewCrashGroupCreated */
  NewCrashGroupCreated = "newCrashGroupCreated",
  /** NewAppReleased */
  NewAppReleased = "newAppReleased"
}

/**
 * Defines values for AlertWebhookListResultValuesPropertiesItemsItem. \
 * {@link KnownAlertWebhookListResultValuesPropertiesItemsItem} can be used interchangeably with AlertWebhookListResultValuesPropertiesItemsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **newCrashGroupCreated** \
 * **newAppReleased**
 */
export type AlertWebhookListResultValuesPropertiesItemsItem = string;

/** Known values of {@link AlertEmailSettingsItemValue} that the service accepts. */
export enum KnownAlertEmailSettingsItemValue {
  /** Disabled */
  Disabled = "Disabled",
  /** Individual */
  Individual = "Individual",
  /** Daily */
  Daily = "Daily",
  /** DailyAndIndividual */
  DailyAndIndividual = "DailyAndIndividual",
  /** Default */
  Default = "Default"
}

/**
 * Defines values for AlertEmailSettingsItemValue. \
 * {@link KnownAlertEmailSettingsItemValue} can be used interchangeably with AlertEmailSettingsItemValue,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Individual** \
 * **Daily** \
 * **DailyAndIndividual** \
 * **Default**
 */
export type AlertEmailSettingsItemValue = string;

/** Known values of {@link AlertEmailSettingsItemDefaultValue} that the service accepts. */
export enum KnownAlertEmailSettingsItemDefaultValue {
  /** Disabled */
  Disabled = "Disabled",
  /** Individual */
  Individual = "Individual",
  /** Daily */
  Daily = "Daily",
  /** DailyAndIndividual */
  DailyAndIndividual = "DailyAndIndividual"
}

/**
 * Defines values for AlertEmailSettingsItemDefaultValue. \
 * {@link KnownAlertEmailSettingsItemDefaultValue} can be used interchangeably with AlertEmailSettingsItemDefaultValue,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Individual** \
 * **Daily** \
 * **DailyAndIndividual**
 */
export type AlertEmailSettingsItemDefaultValue = string;

/** Known values of {@link AlertUserEmailSettingsResultSettingsItemValue} that the service accepts. */
export enum KnownAlertUserEmailSettingsResultSettingsItemValue {
  /** Disabled */
  Disabled = "Disabled",
  /** Individual */
  Individual = "Individual",
  /** Daily */
  Daily = "Daily",
  /** DailyAndIndividual */
  DailyAndIndividual = "DailyAndIndividual",
  /** Default */
  Default = "Default"
}

/**
 * Defines values for AlertUserEmailSettingsResultSettingsItemValue. \
 * {@link KnownAlertUserEmailSettingsResultSettingsItemValue} can be used interchangeably with AlertUserEmailSettingsResultSettingsItemValue,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Individual** \
 * **Daily** \
 * **DailyAndIndividual** \
 * **Default**
 */
export type AlertUserEmailSettingsResultSettingsItemValue = string;

/** Known values of {@link AlertUserEmailSettingsResultSettingsItemDefaultValue} that the service accepts. */
export enum KnownAlertUserEmailSettingsResultSettingsItemDefaultValue {
  /** Disabled */
  Disabled = "Disabled",
  /** Individual */
  Individual = "Individual",
  /** Daily */
  Daily = "Daily",
  /** DailyAndIndividual */
  DailyAndIndividual = "DailyAndIndividual"
}

/**
 * Defines values for AlertUserEmailSettingsResultSettingsItemDefaultValue. \
 * {@link KnownAlertUserEmailSettingsResultSettingsItemDefaultValue} can be used interchangeably with AlertUserEmailSettingsResultSettingsItemDefaultValue,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Individual** \
 * **Daily** \
 * **DailyAndIndividual**
 */
export type AlertUserEmailSettingsResultSettingsItemDefaultValue = string;

/** Known values of {@link AlertUserAppEmailSettingsResultAllOf0AllOf1SettingsItemValue} that the service accepts. */
export enum KnownAlertUserAppEmailSettingsResultAllOf0AllOf1SettingsItemValue {
  /** Disabled */
  Disabled = "Disabled",
  /** Individual */
  Individual = "Individual",
  /** Daily */
  Daily = "Daily",
  /** DailyAndIndividual */
  DailyAndIndividual = "DailyAndIndividual",
  /** Default */
  Default = "Default"
}

/**
 * Defines values for AlertUserAppEmailSettingsResultAllOf0AllOf1SettingsItemValue. \
 * {@link KnownAlertUserAppEmailSettingsResultAllOf0AllOf1SettingsItemValue} can be used interchangeably with AlertUserAppEmailSettingsResultAllOf0AllOf1SettingsItemValue,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Individual** \
 * **Daily** \
 * **DailyAndIndividual** \
 * **Default**
 */
export type AlertUserAppEmailSettingsResultAllOf0AllOf1SettingsItemValue = string;

/** Known values of {@link AlertUserAppEmailSettingsResultAllOf0AllOf1SettingsItemDefaultValue} that the service accepts. */
export enum KnownAlertUserAppEmailSettingsResultAllOf0AllOf1SettingsItemDefaultValue {
  /** Disabled */
  Disabled = "Disabled",
  /** Individual */
  Individual = "Individual",
  /** Daily */
  Daily = "Daily",
  /** DailyAndIndividual */
  DailyAndIndividual = "DailyAndIndividual"
}

/**
 * Defines values for AlertUserAppEmailSettingsResultAllOf0AllOf1SettingsItemDefaultValue. \
 * {@link KnownAlertUserAppEmailSettingsResultAllOf0AllOf1SettingsItemDefaultValue} can be used interchangeably with AlertUserAppEmailSettingsResultAllOf0AllOf1SettingsItemDefaultValue,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Individual** \
 * **Daily** \
 * **DailyAndIndividual**
 */
export type AlertUserAppEmailSettingsResultAllOf0AllOf1SettingsItemDefaultValue = string;

/** Known values of {@link AlertingVstsBugtrackerSettings0Type} that the service accepts. */
export enum KnownAlertingVstsBugtrackerSettings0Type {
  /** Github */
  Github = "github",
  /** Vsts */
  Vsts = "vsts",
  /** Jira */
  Jira = "jira"
}

/**
 * Defines values for AlertingVstsBugtrackerSettings0Type. \
 * {@link KnownAlertingVstsBugtrackerSettings0Type} can be used interchangeably with AlertingVstsBugtrackerSettings0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **github** \
 * **vsts** \
 * **jira**
 */
export type AlertingVstsBugtrackerSettings0Type = string;

/** Known values of {@link AlertingGithubBugtrackerSettings0Type} that the service accepts. */
export enum KnownAlertingGithubBugtrackerSettings0Type {
  /** Github */
  Github = "github",
  /** Vsts */
  Vsts = "vsts",
  /** Jira */
  Jira = "jira"
}

/**
 * Defines values for AlertingGithubBugtrackerSettings0Type. \
 * {@link KnownAlertingGithubBugtrackerSettings0Type} can be used interchangeably with AlertingGithubBugtrackerSettings0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **github** \
 * **vsts** \
 * **jira**
 */
export type AlertingGithubBugtrackerSettings0Type = string;

/** Known values of {@link AlertingJiraBugtrackerSettings0Type} that the service accepts. */
export enum KnownAlertingJiraBugtrackerSettings0Type {
  /** Github */
  Github = "github",
  /** Vsts */
  Vsts = "vsts",
  /** Jira */
  Jira = "jira"
}

/**
 * Defines values for AlertingJiraBugtrackerSettings0Type. \
 * {@link KnownAlertingJiraBugtrackerSettings0Type} can be used interchangeably with AlertingJiraBugtrackerSettings0Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **github** \
 * **vsts** \
 * **jira**
 */
export type AlertingJiraBugtrackerSettings0Type = string;

/** Known values of {@link AlertingBugtrackerType} that the service accepts. */
export enum KnownAlertingBugtrackerType {
  /** Github */
  Github = "github",
  /** Vsts */
  Vsts = "vsts",
  /** Jira */
  Jira = "jira"
}

/**
 * Defines values for AlertingBugtrackerType. \
 * {@link KnownAlertingBugtrackerType} can be used interchangeably with AlertingBugtrackerType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **github** \
 * **vsts** \
 * **jira**
 */
export type AlertingBugtrackerType = string;

/** Known values of {@link AlertingBugtrackerState} that the service accepts. */
export enum KnownAlertingBugtrackerState {
  /** Enabled */
  Enabled = "enabled",
  /** Disabled */
  Disabled = "disabled",
  /** Unauthorized */
  Unauthorized = "unauthorized"
}

/**
 * Defines values for AlertingBugtrackerState. \
 * {@link KnownAlertingBugtrackerState} can be used interchangeably with AlertingBugtrackerState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **enabled** \
 * **disabled** \
 * **unauthorized**
 */
export type AlertingBugtrackerState = string;

/** Known values of {@link AlertingBugtrackerEventTypesItem} that the service accepts. */
export enum KnownAlertingBugtrackerEventTypesItem {
  /** NewCrashGroupCreated */
  NewCrashGroupCreated = "newCrashGroupCreated",
  /** NewAppReleased */
  NewAppReleased = "newAppReleased"
}

/**
 * Defines values for AlertingBugtrackerEventTypesItem. \
 * {@link KnownAlertingBugtrackerEventTypesItem} can be used interchangeably with AlertingBugtrackerEventTypesItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **newCrashGroupCreated** \
 * **newAppReleased**
 */
export type AlertingBugtrackerEventTypesItem = string;

/** Known values of {@link AlertingBugtrackerSettingsType} that the service accepts. */
export enum KnownAlertingBugtrackerSettingsType {
  /** Github */
  Github = "github",
  /** Vsts */
  Vsts = "vsts",
  /** Jira */
  Jira = "jira"
}

/**
 * Defines values for AlertingBugtrackerSettingsType. \
 * {@link KnownAlertingBugtrackerSettingsType} can be used interchangeably with AlertingBugtrackerSettingsType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **github** \
 * **vsts** \
 * **jira**
 */
export type AlertingBugtrackerSettingsType = string;

/** Known values of {@link AlertBugTrackerReposResultRepoType} that the service accepts. */
export enum KnownAlertBugTrackerReposResultRepoType {
  /** Github */
  Github = "github",
  /** Vsts */
  Vsts = "vsts",
  /** Jira */
  Jira = "jira"
}

/**
 * Defines values for AlertBugTrackerReposResultRepoType. \
 * {@link KnownAlertBugTrackerReposResultRepoType} can be used interchangeably with AlertBugTrackerReposResultRepoType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **github** \
 * **vsts** \
 * **jira**
 */
export type AlertBugTrackerReposResultRepoType = string;

/** Known values of {@link AlertCrashGroupStateChangeState} that the service accepts. */
export enum KnownAlertCrashGroupStateChangeState {
  /** Open */
  Open = "Open",
  /** Closed */
  Closed = "Closed",
  /** Ignored */
  Ignored = "Ignored"
}

/**
 * Defines values for AlertCrashGroupStateChangeState. \
 * {@link KnownAlertCrashGroupStateChangeState} can be used interchangeably with AlertCrashGroupStateChangeState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Open** \
 * **Closed** \
 * **Ignored**
 */
export type AlertCrashGroupStateChangeState = string;

/** Known values of {@link AlertingAccessTokenResponseExternalProviderName} that the service accepts. */
export enum KnownAlertingAccessTokenResponseExternalProviderName {
  /** Github */
  Github = "github",
  /** Vsts */
  Vsts = "vsts",
  /** Jira */
  Jira = "jira"
}

/**
 * Defines values for AlertingAccessTokenResponseExternalProviderName. \
 * {@link KnownAlertingAccessTokenResponseExternalProviderName} can be used interchangeably with AlertingAccessTokenResponseExternalProviderName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **github** \
 * **vsts** \
 * **jira**
 */
export type AlertingAccessTokenResponseExternalProviderName = string;

/** Known values of {@link EventSettingValue} that the service accepts. */
export enum KnownEventSettingValue {
  /** Disabled */
  Disabled = "Disabled",
  /** Individual */
  Individual = "Individual",
  /** Daily */
  Daily = "Daily",
  /** DailyAndIndividual */
  DailyAndIndividual = "DailyAndIndividual",
  /** Default */
  Default = "Default"
}

/**
 * Defines values for EventSettingValue. \
 * {@link KnownEventSettingValue} can be used interchangeably with EventSettingValue,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Individual** \
 * **Daily** \
 * **DailyAndIndividual** \
 * **Default**
 */
export type EventSettingValue = string;

/** Known values of {@link EventSettingDefaultValue} that the service accepts. */
export enum KnownEventSettingDefaultValue {
  /** Disabled */
  Disabled = "Disabled",
  /** Individual */
  Individual = "Individual",
  /** Daily */
  Daily = "Daily",
  /** DailyAndIndividual */
  DailyAndIndividual = "DailyAndIndividual"
}

/**
 * Defines values for EventSettingDefaultValue. \
 * {@link KnownEventSettingDefaultValue} can be used interchangeably with EventSettingDefaultValue,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Individual** \
 * **Daily** \
 * **DailyAndIndividual**
 */
export type EventSettingDefaultValue = string;

/** Known values of {@link BugTrackerIssuesResultIssuesItemBugTrackerType} that the service accepts. */
export enum KnownBugTrackerIssuesResultIssuesItemBugTrackerType {
  /** Github */
  Github = "github",
  /** Vsts */
  Vsts = "vsts",
  /** Jira */
  Jira = "jira"
}

/**
 * Defines values for BugTrackerIssuesResultIssuesItemBugTrackerType. \
 * {@link KnownBugTrackerIssuesResultIssuesItemBugTrackerType} can be used interchangeably with BugTrackerIssuesResultIssuesItemBugTrackerType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **github** \
 * **vsts** \
 * **jira**
 */
export type BugTrackerIssuesResultIssuesItemBugTrackerType = string;

/** Known values of {@link BugTrackerIssueResultBugTrackerType} that the service accepts. */
export enum KnownBugTrackerIssueResultBugTrackerType {
  /** Github */
  Github = "github",
  /** Vsts */
  Vsts = "vsts",
  /** Jira */
  Jira = "jira"
}

/**
 * Defines values for BugTrackerIssueResultBugTrackerType. \
 * {@link KnownBugTrackerIssueResultBugTrackerType} can be used interchangeably with BugTrackerIssueResultBugTrackerType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **github** \
 * **vsts** \
 * **jira**
 */
export type BugTrackerIssueResultBugTrackerType = string;

/** Known values of {@link BugTrackerStateResultState} that the service accepts. */
export enum KnownBugTrackerStateResultState {
  /** Enabled */
  Enabled = "enabled",
  /** Disabled */
  Disabled = "disabled",
  /** Unauthorized */
  Unauthorized = "unauthorized"
}

/**
 * Defines values for BugTrackerStateResultState. \
 * {@link KnownBugTrackerStateResultState} can be used interchangeably with BugTrackerStateResultState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **enabled** \
 * **disabled** \
 * **unauthorized**
 */
export type BugTrackerStateResultState = string;

/** Known values of {@link AlertingErrorCode} that the service accepts. */
export enum KnownAlertingErrorCode {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredFour */
  FourHundredFour = 404,
  /** FourHundredNine */
  FourHundredNine = 409,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for AlertingErrorCode. \
 * {@link KnownAlertingErrorCode} can be used interchangeably with AlertingErrorCode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **404** \
 * **409** \
 * **500**
 */
export type AlertingErrorCode = number;

/** Known values of {@link AggregatedBillingInformationBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSource} that the service accepts. */
export enum KnownAggregatedBillingInformationBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSource {
  /** None */
  None = "None",
  /** AppCenter */
  AppCenter = "AppCenter",
  /** GitHub */
  GitHub = "GitHub",
  /** Xtc */
  Xtc = "Xtc"
}

/**
 * Defines values for AggregatedBillingInformationBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSource. \
 * {@link KnownAggregatedBillingInformationBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSource} can be used interchangeably with AggregatedBillingInformationBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSource,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **AppCenter** \
 * **GitHub** \
 * **Xtc**
 */
export type AggregatedBillingInformationBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSource = string;

/** Known values of {@link AggregatedBillingInformationBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanService} that the service accepts. */
export enum KnownAggregatedBillingInformationBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanService {
  /** Build */
  Build = "Build",
  /** Test */
  Test = "Test"
}

/**
 * Defines values for AggregatedBillingInformationBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanService. \
 * {@link KnownAggregatedBillingInformationBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanService} can be used interchangeably with AggregatedBillingInformationBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanService,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Build** \
 * **Test**
 */
export type AggregatedBillingInformationBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanService = string;

/** Known values of {@link AggregatedBillingInformationBillingPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSource} that the service accepts. */
export enum KnownAggregatedBillingInformationBillingPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSource {
  /** None */
  None = "None",
  /** AppCenter */
  AppCenter = "AppCenter",
  /** GitHub */
  GitHub = "GitHub",
  /** Xtc */
  Xtc = "Xtc"
}

/**
 * Defines values for AggregatedBillingInformationBillingPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSource. \
 * {@link KnownAggregatedBillingInformationBillingPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSource} can be used interchangeably with AggregatedBillingInformationBillingPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSource,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **AppCenter** \
 * **GitHub** \
 * **Xtc**
 */
export type AggregatedBillingInformationBillingPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSource = string;

/** Known values of {@link AggregatedBillingInformationBillingPlansTestServiceCurrentBillingPeriodByAccountPlanService} that the service accepts. */
export enum KnownAggregatedBillingInformationBillingPlansTestServiceCurrentBillingPeriodByAccountPlanService {
  /** Build */
  Build = "Build",
  /** Test */
  Test = "Test"
}

/**
 * Defines values for AggregatedBillingInformationBillingPlansTestServiceCurrentBillingPeriodByAccountPlanService. \
 * {@link KnownAggregatedBillingInformationBillingPlansTestServiceCurrentBillingPeriodByAccountPlanService} can be used interchangeably with AggregatedBillingInformationBillingPlansTestServiceCurrentBillingPeriodByAccountPlanService,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Build** \
 * **Test**
 */
export type AggregatedBillingInformationBillingPlansTestServiceCurrentBillingPeriodByAccountPlanService = string;

/** Known values of {@link AggregatedBillingInformationAzureSubscriptionState} that the service accepts. */
export enum KnownAggregatedBillingInformationAzureSubscriptionState {
  /** Enabled */
  Enabled = "Enabled",
  /** Disabled */
  Disabled = "Disabled",
  /** NotSet */
  NotSet = "NotSet"
}

/**
 * Defines values for AggregatedBillingInformationAzureSubscriptionState. \
 * {@link KnownAggregatedBillingInformationAzureSubscriptionState} can be used interchangeably with AggregatedBillingInformationAzureSubscriptionState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled** \
 * **NotSet**
 */
export type AggregatedBillingInformationAzureSubscriptionState = string;

/** Known values of {@link AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSource} that the service accepts. */
export enum KnownAllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSource {
  /** None */
  None = "None",
  /** AppCenter */
  AppCenter = "AppCenter",
  /** GitHub */
  GitHub = "GitHub",
  /** Xtc */
  Xtc = "Xtc"
}

/**
 * Defines values for AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSource. \
 * {@link KnownAllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSource} can be used interchangeably with AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSource,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **AppCenter** \
 * **GitHub** \
 * **Xtc**
 */
export type AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSource = string;

/** Known values of {@link AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanService} that the service accepts. */
export enum KnownAllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanService {
  /** Build */
  Build = "Build",
  /** Test */
  Test = "Test"
}

/**
 * Defines values for AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanService. \
 * {@link KnownAllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanService} can be used interchangeably with AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanService,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Build** \
 * **Test**
 */
export type AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanService = string;

/** Known values of {@link AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSource} that the service accepts. */
export enum KnownAllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSource {
  /** None */
  None = "None",
  /** AppCenter */
  AppCenter = "AppCenter",
  /** GitHub */
  GitHub = "GitHub",
  /** Xtc */
  Xtc = "Xtc"
}

/**
 * Defines values for AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSource. \
 * {@link KnownAllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSource} can be used interchangeably with AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSource,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **AppCenter** \
 * **GitHub** \
 * **Xtc**
 */
export type AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSource = string;

/** Known values of {@link AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestServiceCurrentBillingPeriodByAccountPlanService} that the service accepts. */
export enum KnownAllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestServiceCurrentBillingPeriodByAccountPlanService {
  /** Build */
  Build = "Build",
  /** Test */
  Test = "Test"
}

/**
 * Defines values for AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestServiceCurrentBillingPeriodByAccountPlanService. \
 * {@link KnownAllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestServiceCurrentBillingPeriodByAccountPlanService} can be used interchangeably with AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestServiceCurrentBillingPeriodByAccountPlanService,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Build** \
 * **Test**
 */
export type AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestServiceCurrentBillingPeriodByAccountPlanService = string;

/** Known values of {@link AllAccountsAggregatedBillingInformationAggregatedBillingsAzureSubscriptionState} that the service accepts. */
export enum KnownAllAccountsAggregatedBillingInformationAggregatedBillingsAzureSubscriptionState {
  /** Enabled */
  Enabled = "Enabled",
  /** Disabled */
  Disabled = "Disabled",
  /** NotSet */
  NotSet = "NotSet"
}

/**
 * Defines values for AllAccountsAggregatedBillingInformationAggregatedBillingsAzureSubscriptionState. \
 * {@link KnownAllAccountsAggregatedBillingInformationAggregatedBillingsAzureSubscriptionState} can be used interchangeably with AllAccountsAggregatedBillingInformationAggregatedBillingsAzureSubscriptionState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled** \
 * **NotSet**
 */
export type AllAccountsAggregatedBillingInformationAggregatedBillingsAzureSubscriptionState = string;

/** Known values of {@link BillingErrorCode} that the service accepts. */
export enum KnownBillingErrorCode {
  /** FourHundred */
  FourHundred = 400,
  /** FourHundredThree */
  FourHundredThree = 403,
  /** FiveHundred */
  FiveHundred = 500
}

/**
 * Defines values for BillingErrorCode. \
 * {@link KnownBillingErrorCode} can be used interchangeably with BillingErrorCode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **400** \
 * **403** \
 * **500**
 */
export type BillingErrorCode = number;

/** Known values of {@link BillingInformationPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSource} that the service accepts. */
export enum KnownBillingInformationPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSource {
  /** None */
  None = "None",
  /** AppCenter */
  AppCenter = "AppCenter",
  /** GitHub */
  GitHub = "GitHub",
  /** Xtc */
  Xtc = "Xtc"
}

/**
 * Defines values for BillingInformationPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSource. \
 * {@link KnownBillingInformationPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSource} can be used interchangeably with BillingInformationPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSource,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **AppCenter** \
 * **GitHub** \
 * **Xtc**
 */
export type BillingInformationPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSource = string;

/** Known values of {@link BillingInformationPlansBuildServiceCurrentBillingPeriodByAccountPlanService} that the service accepts. */
export enum KnownBillingInformationPlansBuildServiceCurrentBillingPeriodByAccountPlanService {
  /** Build */
  Build = "Build",
  /** Test */
  Test = "Test"
}

/**
 * Defines values for BillingInformationPlansBuildServiceCurrentBillingPeriodByAccountPlanService. \
 * {@link KnownBillingInformationPlansBuildServiceCurrentBillingPeriodByAccountPlanService} can be used interchangeably with BillingInformationPlansBuildServiceCurrentBillingPeriodByAccountPlanService,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Build** \
 * **Test**
 */
export type BillingInformationPlansBuildServiceCurrentBillingPeriodByAccountPlanService = string;

/** Known values of {@link BillingInformationPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSource} that the service accepts. */
export enum KnownBillingInformationPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSource {
  /** None */
  None = "None",
  /** AppCenter */
  AppCenter = "AppCenter",
  /** GitHub */
  GitHub = "GitHub",
  /** Xtc */
  Xtc = "Xtc"
}

/**
 * Defines values for BillingInformationPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSource. \
 * {@link KnownBillingInformationPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSource} can be used interchangeably with BillingInformationPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSource,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **AppCenter** \
 * **GitHub** \
 * **Xtc**
 */
export type BillingInformationPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSource = string;

/** Known values of {@link BillingInformationPlansTestServiceCurrentBillingPeriodByAccountPlanService} that the service accepts. */
export enum KnownBillingInformationPlansTestServiceCurrentBillingPeriodByAccountPlanService {
  /** Build */
  Build = "Build",
  /** Test */
  Test = "Test"
}

/**
 * Defines values for BillingInformationPlansTestServiceCurrentBillingPeriodByAccountPlanService. \
 * {@link KnownBillingInformationPlansTestServiceCurrentBillingPeriodByAccountPlanService} can be used interchangeably with BillingInformationPlansTestServiceCurrentBillingPeriodByAccountPlanService,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Build** \
 * **Test**
 */
export type BillingInformationPlansTestServiceCurrentBillingPeriodByAccountPlanService = string;

/** Known values of {@link BillingPeriodByAccountPlanPaymentSource} that the service accepts. */
export enum KnownBillingPeriodByAccountPlanPaymentSource {
  /** None */
  None = "None",
  /** AppCenter */
  AppCenter = "AppCenter",
  /** GitHub */
  GitHub = "GitHub",
  /** Xtc */
  Xtc = "Xtc"
}

/**
 * Defines values for BillingPeriodByAccountPlanPaymentSource. \
 * {@link KnownBillingPeriodByAccountPlanPaymentSource} can be used interchangeably with BillingPeriodByAccountPlanPaymentSource,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **AppCenter** \
 * **GitHub** \
 * **Xtc**
 */
export type BillingPeriodByAccountPlanPaymentSource = string;

/** Known values of {@link BillingPeriodByAccountPlanService} that the service accepts. */
export enum KnownBillingPeriodByAccountPlanService {
  /** Build */
  Build = "Build",
  /** Test */
  Test = "Test"
}

/**
 * Defines values for BillingPeriodByAccountPlanService. \
 * {@link KnownBillingPeriodByAccountPlanService} can be used interchangeably with BillingPeriodByAccountPlanService,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Build** \
 * **Test**
 */
export type BillingPeriodByAccountPlanService = string;

/** Known values of {@link BillingPlanPaymentSource} that the service accepts. */
export enum KnownBillingPlanPaymentSource {
  /** None */
  None = "None",
  /** AppCenter */
  AppCenter = "AppCenter",
  /** GitHub */
  GitHub = "GitHub",
  /** Xtc */
  Xtc = "Xtc"
}

/**
 * Defines values for BillingPlanPaymentSource. \
 * {@link KnownBillingPlanPaymentSource} can be used interchangeably with BillingPlanPaymentSource,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **AppCenter** \
 * **GitHub** \
 * **Xtc**
 */
export type BillingPlanPaymentSource = string;

/** Known values of {@link BillingPlanService} that the service accepts. */
export enum KnownBillingPlanService {
  /** Build */
  Build = "Build",
  /** Test */
  Test = "Test"
}

/**
 * Defines values for BillingPlanService. \
 * {@link KnownBillingPlanService} can be used interchangeably with BillingPlanService,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Build** \
 * **Test**
 */
export type BillingPlanService = string;

/** Known values of {@link BillingPlansChangeTypeResponseResult} that the service accepts. */
export enum KnownBillingPlansChangeTypeResponseResult {
  /** NoChange */
  NoChange = "NoChange",
  /** Downgrade */
  Downgrade = "Downgrade",
  /** Upgrade */
  Upgrade = "Upgrade"
}

/**
 * Defines values for BillingPlansChangeTypeResponseResult. \
 * {@link KnownBillingPlansChangeTypeResponseResult} can be used interchangeably with BillingPlansChangeTypeResponseResult,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NoChange** \
 * **Downgrade** \
 * **Upgrade**
 */
export type BillingPlansChangeTypeResponseResult = string;

/** Known values of {@link BillingPlanSelectionPlanPaymentSource} that the service accepts. */
export enum KnownBillingPlanSelectionPlanPaymentSource {
  /** None */
  None = "None",
  /** AppCenter */
  AppCenter = "AppCenter",
  /** GitHub */
  GitHub = "GitHub",
  /** Xtc */
  Xtc = "Xtc"
}

/**
 * Defines values for BillingPlanSelectionPlanPaymentSource. \
 * {@link KnownBillingPlanSelectionPlanPaymentSource} can be used interchangeably with BillingPlanSelectionPlanPaymentSource,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **AppCenter** \
 * **GitHub** \
 * **Xtc**
 */
export type BillingPlanSelectionPlanPaymentSource = string;

/** Known values of {@link BillingPlanSelectionPlanService} that the service accepts. */
export enum KnownBillingPlanSelectionPlanService {
  /** Build */
  Build = "Build",
  /** Test */
  Test = "Test"
}

/**
 * Defines values for BillingPlanSelectionPlanService. \
 * {@link KnownBillingPlanSelectionPlanService} can be used interchangeably with BillingPlanSelectionPlanService,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Build** \
 * **Test**
 */
export type BillingPlanSelectionPlanService = string;

/** Known values of {@link BillingPlansSelectionBuildServicePlanPaymentSource} that the service accepts. */
export enum KnownBillingPlansSelectionBuildServicePlanPaymentSource {
  /** None */
  None = "None",
  /** AppCenter */
  AppCenter = "AppCenter",
  /** GitHub */
  GitHub = "GitHub",
  /** Xtc */
  Xtc = "Xtc"
}

/**
 * Defines values for BillingPlansSelectionBuildServicePlanPaymentSource. \
 * {@link KnownBillingPlansSelectionBuildServicePlanPaymentSource} can be used interchangeably with BillingPlansSelectionBuildServicePlanPaymentSource,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **AppCenter** \
 * **GitHub** \
 * **Xtc**
 */
export type BillingPlansSelectionBuildServicePlanPaymentSource = string;

/** Known values of {@link BillingPlansSelectionBuildServicePlanService} that the service accepts. */
export enum KnownBillingPlansSelectionBuildServicePlanService {
  /** Build */
  Build = "Build",
  /** Test */
  Test = "Test"
}

/**
 * Defines values for BillingPlansSelectionBuildServicePlanService. \
 * {@link KnownBillingPlansSelectionBuildServicePlanService} can be used interchangeably with BillingPlansSelectionBuildServicePlanService,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Build** \
 * **Test**
 */
export type BillingPlansSelectionBuildServicePlanService = string;

/** Known values of {@link BillingPlansSelectionTestServicePlanPaymentSource} that the service accepts. */
export enum KnownBillingPlansSelectionTestServicePlanPaymentSource {
  /** None */
  None = "None",
  /** AppCenter */
  AppCenter = "AppCenter",
  /** GitHub */
  GitHub = "GitHub",
  /** Xtc */
  Xtc = "Xtc"
}

/**
 * Defines values for BillingPlansSelectionTestServicePlanPaymentSource. \
 * {@link KnownBillingPlansSelectionTestServicePlanPaymentSource} can be used interchangeably with BillingPlansSelectionTestServicePlanPaymentSource,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **AppCenter** \
 * **GitHub** \
 * **Xtc**
 */
export type BillingPlansSelectionTestServicePlanPaymentSource = string;

/** Known values of {@link BillingPlansSelectionTestServicePlanService} that the service accepts. */
export enum KnownBillingPlansSelectionTestServicePlanService {
  /** Build */
  Build = "Build",
  /** Test */
  Test = "Test"
}

/**
 * Defines values for BillingPlansSelectionTestServicePlanService. \
 * {@link KnownBillingPlansSelectionTestServicePlanService} can be used interchangeably with BillingPlansSelectionTestServicePlanService,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Build** \
 * **Test**
 */
export type BillingPlansSelectionTestServicePlanService = string;

/** Known values of {@link GitHubAccountType} that the service accepts. */
export enum KnownGitHubAccountType {
  /** User */
  User = "User",
  /** Organization */
  Organization = "Organization"
}

/**
 * Defines values for GitHubAccountType. \
 * {@link KnownGitHubAccountType} can be used interchangeably with GitHubAccountType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Organization**
 */
export type GitHubAccountType = string;

/** Known values of {@link GitHubMarketplacePurchaseAccountType} that the service accepts. */
export enum KnownGitHubMarketplacePurchaseAccountType {
  /** User */
  User = "User",
  /** Organization */
  Organization = "Organization"
}

/**
 * Defines values for GitHubMarketplacePurchaseAccountType. \
 * {@link KnownGitHubMarketplacePurchaseAccountType} can be used interchangeably with GitHubMarketplacePurchaseAccountType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Organization**
 */
export type GitHubMarketplacePurchaseAccountType = string;

/** Known values of {@link ServiceBillingPlansCurrentBillingPeriodByAccountPlanPaymentSource} that the service accepts. */
export enum KnownServiceBillingPlansCurrentBillingPeriodByAccountPlanPaymentSource {
  /** None */
  None = "None",
  /** AppCenter */
  AppCenter = "AppCenter",
  /** GitHub */
  GitHub = "GitHub",
  /** Xtc */
  Xtc = "Xtc"
}

/**
 * Defines values for ServiceBillingPlansCurrentBillingPeriodByAccountPlanPaymentSource. \
 * {@link KnownServiceBillingPlansCurrentBillingPeriodByAccountPlanPaymentSource} can be used interchangeably with ServiceBillingPlansCurrentBillingPeriodByAccountPlanPaymentSource,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **AppCenter** \
 * **GitHub** \
 * **Xtc**
 */
export type ServiceBillingPlansCurrentBillingPeriodByAccountPlanPaymentSource = string;

/** Known values of {@link ServiceBillingPlansCurrentBillingPeriodByAccountPlanService} that the service accepts. */
export enum KnownServiceBillingPlansCurrentBillingPeriodByAccountPlanService {
  /** Build */
  Build = "Build",
  /** Test */
  Test = "Test"
}

/**
 * Defines values for ServiceBillingPlansCurrentBillingPeriodByAccountPlanService. \
 * {@link KnownServiceBillingPlansCurrentBillingPeriodByAccountPlanService} can be used interchangeably with ServiceBillingPlansCurrentBillingPeriodByAccountPlanService,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Build** \
 * **Test**
 */
export type ServiceBillingPlansCurrentBillingPeriodByAccountPlanService = string;

/** Known values of {@link VersionedBillingPlanDocumentPaymentSource} that the service accepts. */
export enum KnownVersionedBillingPlanDocumentPaymentSource {
  /** None */
  None = "None",
  /** AppCenter */
  AppCenter = "AppCenter",
  /** GitHub */
  GitHub = "GitHub",
  /** Xtc */
  Xtc = "Xtc"
}

/**
 * Defines values for VersionedBillingPlanDocumentPaymentSource. \
 * {@link KnownVersionedBillingPlanDocumentPaymentSource} can be used interchangeably with VersionedBillingPlanDocumentPaymentSource,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **AppCenter** \
 * **GitHub** \
 * **Xtc**
 */
export type VersionedBillingPlanDocumentPaymentSource = string;

/** Known values of {@link VersionedBillingPlanDocumentService} that the service accepts. */
export enum KnownVersionedBillingPlanDocumentService {
  /** Build */
  Build = "Build",
  /** Test */
  Test = "Test"
}

/**
 * Defines values for VersionedBillingPlanDocumentService. \
 * {@link KnownVersionedBillingPlanDocumentService} can be used interchangeably with VersionedBillingPlanDocumentService,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Build** \
 * **Test**
 */
export type VersionedBillingPlanDocumentService = string;

/** Known values of {@link DataSubjectRightStatusResponseStatus} that the service accepts. */
export enum KnownDataSubjectRightStatusResponseStatus {
  /** None */
  None = "None",
  /** Created */
  Created = "Created",
  /** Queued */
  Queued = "Queued",
  /** InProgress */
  InProgress = "InProgress",
  /** Completed */
  Completed = "Completed",
  /** Failed */
  Failed = "Failed"
}

/**
 * Defines values for DataSubjectRightStatusResponseStatus. \
 * {@link KnownDataSubjectRightStatusResponseStatus} can be used interchangeably with DataSubjectRightStatusResponseStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **Created** \
 * **Queued** \
 * **InProgress** \
 * **Completed** \
 * **Failed**
 */
export type DataSubjectRightStatusResponseStatus = string;

/** Known values of {@link AuthApplicationResponseProvider} that the service accepts. */
export enum KnownAuthApplicationResponseProvider {
  /** Aadb2C */
  Aadb2C = "AADB2C",
  /** Auth0 */
  Auth0 = "Auth0",
  /** Firebase */
  Firebase = "Firebase",
  /** AAD */
  AAD = "AAD"
}

/**
 * Defines values for AuthApplicationResponseProvider. \
 * {@link KnownAuthApplicationResponseProvider} can be used interchangeably with AuthApplicationResponseProvider,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AADB2C** \
 * **Auth0** \
 * **Firebase** \
 * **AAD**
 */
export type AuthApplicationResponseProvider = string;

/** Known values of {@link AuthApplicationPatchRequestProvider} that the service accepts. */
export enum KnownAuthApplicationPatchRequestProvider {
  /** Aadb2C */
  Aadb2C = "AADB2C",
  /** Auth0 */
  Auth0 = "Auth0",
  /** Firebase */
  Firebase = "Firebase",
  /** AAD */
  AAD = "AAD"
}

/**
 * Defines values for AuthApplicationPatchRequestProvider. \
 * {@link KnownAuthApplicationPatchRequestProvider} can be used interchangeably with AuthApplicationPatchRequestProvider,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AADB2C** \
 * **Auth0** \
 * **Firebase** \
 * **AAD**
 */
export type AuthApplicationPatchRequestProvider = string;

/** Known values of {@link ExistingAuthApplicationPostRequestProvider} that the service accepts. */
export enum KnownExistingAuthApplicationPostRequestProvider {
  /** Aadb2C */
  Aadb2C = "AADB2C",
  /** Auth0 */
  Auth0 = "Auth0",
  /** Firebase */
  Firebase = "Firebase",
  /** AAD */
  AAD = "AAD"
}

/**
 * Defines values for ExistingAuthApplicationPostRequestProvider. \
 * {@link KnownExistingAuthApplicationPostRequestProvider} can be used interchangeably with ExistingAuthApplicationPostRequestProvider,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AADB2C** \
 * **Auth0** \
 * **Firebase** \
 * **AAD**
 */
export type ExistingAuthApplicationPostRequestProvider = string;

/** Known values of {@link MetricsResponseDatabaseLocation} that the service accepts. */
export enum KnownMetricsResponseDatabaseLocation {
  /** EastAsia */
  EastAsia = "East Asia",
  /** SoutheastAsia */
  SoutheastAsia = "Southeast Asia",
  /** AustraliaCentral */
  AustraliaCentral = "Australia Central",
  /** AustraliaCentral2 */
  AustraliaCentral2 = "Australia Central 2",
  /** AustraliaEast */
  AustraliaEast = "Australia East",
  /** AustraliaSoutheast */
  AustraliaSoutheast = "Australia Southeast",
  /** BrazilSouth */
  BrazilSouth = "Brazil South",
  /** CanadaCentral */
  CanadaCentral = "Canada Central",
  /** CanadaEast */
  CanadaEast = "Canada East",
  /** CentralIndia */
  CentralIndia = "Central India",
  /** SouthIndia */
  SouthIndia = "South India",
  /** WestIndia */
  WestIndia = "West India",
  /** NorthEurope */
  NorthEurope = "North Europe",
  /** WestEurope */
  WestEurope = "West Europe",
  /** FranceCentral */
  FranceCentral = "France Central",
  /** FranceSouth */
  FranceSouth = "France South",
  /** GermanyCentral */
  GermanyCentral = "Germany Central",
  /** GermanyNortheast */
  GermanyNortheast = "Germany Northeast",
  /** JapanEast */
  JapanEast = "Japan East",
  /** JapanWest */
  JapanWest = "Japan West",
  /** KoreaCentral */
  KoreaCentral = "Korea Central",
  /** KoreaSouth */
  KoreaSouth = "Korea South",
  /** SouthAfricaNorth */
  SouthAfricaNorth = "South Africa North",
  /** SouthAfricaWest */
  SouthAfricaWest = "South Africa West",
  /** UKSouth */
  UKSouth = "UK South",
  /** UKWest */
  UKWest = "UK West",
  /** CentralUS */
  CentralUS = "Central US",
  /** EastUS */
  EastUS = "East US",
  /** EastUS2 */
  EastUS2 = "East US 2",
  /** USGovArizona */
  USGovArizona = "US Gov Arizona",
  /** USGovTexas */
  USGovTexas = "US Gov Texas",
  /** NorthCentralUS */
  NorthCentralUS = "North Central US",
  /** SouthCentralUS */
  SouthCentralUS = "South Central US",
  /** WestUS */
  WestUS = "West US",
  /** WestUS2 */
  WestUS2 = "West US 2",
  /** WestCentralUS */
  WestCentralUS = "West Central US"
}

/**
 * Defines values for MetricsResponseDatabaseLocation. \
 * {@link KnownMetricsResponseDatabaseLocation} can be used interchangeably with MetricsResponseDatabaseLocation,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **East Asia** \
 * **Southeast Asia** \
 * **Australia Central** \
 * **Australia Central 2** \
 * **Australia East** \
 * **Australia Southeast** \
 * **Brazil South** \
 * **Canada Central** \
 * **Canada East** \
 * **Central India** \
 * **South India** \
 * **West India** \
 * **North Europe** \
 * **West Europe** \
 * **France Central** \
 * **France South** \
 * **Germany Central** \
 * **Germany Northeast** \
 * **Japan East** \
 * **Japan West** \
 * **Korea Central** \
 * **Korea South** \
 * **South Africa North** \
 * **South Africa West** \
 * **UK South** \
 * **UK West** \
 * **Central US** \
 * **East US** \
 * **East US 2** \
 * **US Gov Arizona** \
 * **US Gov Texas** \
 * **North Central US** \
 * **South Central US** \
 * **West US** \
 * **West US 2** \
 * **West Central US**
 */
export type MetricsResponseDatabaseLocation = string;

/** Known values of {@link OverviewResponseDatabaseLocation} that the service accepts. */
export enum KnownOverviewResponseDatabaseLocation {
  /** EastAsia */
  EastAsia = "East Asia",
  /** SoutheastAsia */
  SoutheastAsia = "Southeast Asia",
  /** AustraliaCentral */
  AustraliaCentral = "Australia Central",
  /** AustraliaCentral2 */
  AustraliaCentral2 = "Australia Central 2",
  /** AustraliaEast */
  AustraliaEast = "Australia East",
  /** AustraliaSoutheast */
  AustraliaSoutheast = "Australia Southeast",
  /** BrazilSouth */
  BrazilSouth = "Brazil South",
  /** CanadaCentral */
  CanadaCentral = "Canada Central",
  /** CanadaEast */
  CanadaEast = "Canada East",
  /** CentralIndia */
  CentralIndia = "Central India",
  /** SouthIndia */
  SouthIndia = "South India",
  /** WestIndia */
  WestIndia = "West India",
  /** NorthEurope */
  NorthEurope = "North Europe",
  /** WestEurope */
  WestEurope = "West Europe",
  /** FranceCentral */
  FranceCentral = "France Central",
  /** FranceSouth */
  FranceSouth = "France South",
  /** GermanyCentral */
  GermanyCentral = "Germany Central",
  /** GermanyNortheast */
  GermanyNortheast = "Germany Northeast",
  /** JapanEast */
  JapanEast = "Japan East",
  /** JapanWest */
  JapanWest = "Japan West",
  /** KoreaCentral */
  KoreaCentral = "Korea Central",
  /** KoreaSouth */
  KoreaSouth = "Korea South",
  /** SouthAfricaNorth */
  SouthAfricaNorth = "South Africa North",
  /** SouthAfricaWest */
  SouthAfricaWest = "South Africa West",
  /** UKSouth */
  UKSouth = "UK South",
  /** UKWest */
  UKWest = "UK West",
  /** CentralUS */
  CentralUS = "Central US",
  /** EastUS */
  EastUS = "East US",
  /** EastUS2 */
  EastUS2 = "East US 2",
  /** USGovArizona */
  USGovArizona = "US Gov Arizona",
  /** USGovTexas */
  USGovTexas = "US Gov Texas",
  /** NorthCentralUS */
  NorthCentralUS = "North Central US",
  /** SouthCentralUS */
  SouthCentralUS = "South Central US",
  /** WestUS */
  WestUS = "West US",
  /** WestUS2 */
  WestUS2 = "West US 2",
  /** WestCentralUS */
  WestCentralUS = "West Central US"
}

/**
 * Defines values for OverviewResponseDatabaseLocation. \
 * {@link KnownOverviewResponseDatabaseLocation} can be used interchangeably with OverviewResponseDatabaseLocation,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **East Asia** \
 * **Southeast Asia** \
 * **Australia Central** \
 * **Australia Central 2** \
 * **Australia East** \
 * **Australia Southeast** \
 * **Brazil South** \
 * **Canada Central** \
 * **Canada East** \
 * **Central India** \
 * **South India** \
 * **West India** \
 * **North Europe** \
 * **West Europe** \
 * **France Central** \
 * **France South** \
 * **Germany Central** \
 * **Germany Northeast** \
 * **Japan East** \
 * **Japan West** \
 * **Korea Central** \
 * **Korea South** \
 * **South Africa North** \
 * **South Africa West** \
 * **UK South** \
 * **UK West** \
 * **Central US** \
 * **East US** \
 * **East US 2** \
 * **US Gov Arizona** \
 * **US Gov Texas** \
 * **North Central US** \
 * **South Central US** \
 * **West US** \
 * **West US 2** \
 * **West Central US**
 */
export type OverviewResponseDatabaseLocation = string;

/** Known values of {@link EstimatedPricingResponseCurrency} that the service accepts. */
export enum KnownEstimatedPricingResponseCurrency {
  /** USD */
  USD = "USD",
  /** EUR */
  EUR = "EUR",
  /** GBP */
  GBP = "GBP",
  /** AUD */
  AUD = "AUD",
  /** INR */
  INR = "INR",
  /** CAD */
  CAD = "CAD",
  /** ARS */
  ARS = "ARS",
  /** BRL */
  BRL = "BRL",
  /** DKK */
  DKK = "DKK",
  /** HKD */
  HKD = "HKD",
  /** IDR */
  IDR = "IDR",
  /** JPY */
  JPY = "JPY",
  /** KRW */
  KRW = "KRW",
  /** MYR */
  MYR = "MYR",
  /** MXN */
  MXN = "MXN",
  /** NZD */
  NZD = "NZD",
  /** NOK */
  NOK = "NOK",
  /** RUB */
  RUB = "RUB",
  /** SAR */
  SAR = "SAR",
  /** ZAR */
  ZAR = "ZAR",
  /** SEK */
  SEK = "SEK",
  /** CHF */
  CHF = "CHF",
  /** TWD */
  TWD = "TWD",
  /** TRY */
  TRY = "TRY"
}

/**
 * Defines values for EstimatedPricingResponseCurrency. \
 * {@link KnownEstimatedPricingResponseCurrency} can be used interchangeably with EstimatedPricingResponseCurrency,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **USD** \
 * **EUR** \
 * **GBP** \
 * **AUD** \
 * **INR** \
 * **CAD** \
 * **ARS** \
 * **BRL** \
 * **DKK** \
 * **HKD** \
 * **IDR** \
 * **JPY** \
 * **KRW** \
 * **MYR** \
 * **MXN** \
 * **NZD** \
 * **NOK** \
 * **RUB** \
 * **SAR** \
 * **ZAR** \
 * **SEK** \
 * **CHF** \
 * **TWD** \
 * **TRY**
 */
export type EstimatedPricingResponseCurrency = string;

/** Known values of {@link NotificationConfigurationState} that the service accepts. */
export enum KnownNotificationConfigurationState {
  /** Disabled */
  Disabled = "Disabled",
  /** Disabling */
  Disabling = "Disabling",
  /** Enabling */
  Enabling = "Enabling",
  /** Enabled */
  Enabled = "Enabled"
}

/**
 * Defines values for NotificationConfigurationState. \
 * {@link KnownNotificationConfigurationState} can be used interchangeably with NotificationConfigurationState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Disabling** \
 * **Enabling** \
 * **Enabled**
 */
export type NotificationConfigurationState = string;

/** Known values of {@link NotificationConfigurationReason} that the service accepts. */
export enum KnownNotificationConfigurationReason {
  /** NotSetByUser */
  NotSetByUser = "NotSetByUser",
  /** SetByUser */
  SetByUser = "SetByUser",
  /** Error */
  Error = "Error"
}

/**
 * Defines values for NotificationConfigurationReason. \
 * {@link KnownNotificationConfigurationReason} can be used interchangeably with NotificationConfigurationReason,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NotSetByUser** \
 * **SetByUser** \
 * **Error**
 */
export type NotificationConfigurationReason = string;

/** Known values of {@link DataProvisioningParametersResourceRegion} that the service accepts. */
export enum KnownDataProvisioningParametersResourceRegion {
  /** EastAsia */
  EastAsia = "East Asia",
  /** SoutheastAsia */
  SoutheastAsia = "Southeast Asia",
  /** AustraliaCentral */
  AustraliaCentral = "Australia Central",
  /** AustraliaCentral2 */
  AustraliaCentral2 = "Australia Central 2",
  /** AustraliaEast */
  AustraliaEast = "Australia East",
  /** AustraliaSoutheast */
  AustraliaSoutheast = "Australia Southeast",
  /** BrazilSouth */
  BrazilSouth = "Brazil South",
  /** CanadaCentral */
  CanadaCentral = "Canada Central",
  /** CanadaEast */
  CanadaEast = "Canada East",
  /** CentralIndia */
  CentralIndia = "Central India",
  /** SouthIndia */
  SouthIndia = "South India",
  /** WestIndia */
  WestIndia = "West India",
  /** NorthEurope */
  NorthEurope = "North Europe",
  /** WestEurope */
  WestEurope = "West Europe",
  /** FranceCentral */
  FranceCentral = "France Central",
  /** FranceSouth */
  FranceSouth = "France South",
  /** GermanyCentral */
  GermanyCentral = "Germany Central",
  /** GermanyNortheast */
  GermanyNortheast = "Germany Northeast",
  /** JapanEast */
  JapanEast = "Japan East",
  /** JapanWest */
  JapanWest = "Japan West",
  /** KoreaCentral */
  KoreaCentral = "Korea Central",
  /** KoreaSouth */
  KoreaSouth = "Korea South",
  /** SouthAfricaNorth */
  SouthAfricaNorth = "South Africa North",
  /** SouthAfricaWest */
  SouthAfricaWest = "South Africa West",
  /** UKSouth */
  UKSouth = "UK South",
  /** UKWest */
  UKWest = "UK West",
  /** CentralUS */
  CentralUS = "Central US",
  /** EastUS */
  EastUS = "East US",
  /** EastUS2 */
  EastUS2 = "East US 2",
  /** USGovArizona */
  USGovArizona = "US Gov Arizona",
  /** USGovTexas */
  USGovTexas = "US Gov Texas",
  /** NorthCentralUS */
  NorthCentralUS = "North Central US",
  /** SouthCentralUS */
  SouthCentralUS = "South Central US",
  /** WestUS */
  WestUS = "West US",
  /** WestUS2 */
  WestUS2 = "West US 2",
  /** WestCentralUS */
  WestCentralUS = "West Central US"
}

/**
 * Defines values for DataProvisioningParametersResourceRegion. \
 * {@link KnownDataProvisioningParametersResourceRegion} can be used interchangeably with DataProvisioningParametersResourceRegion,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **East Asia** \
 * **Southeast Asia** \
 * **Australia Central** \
 * **Australia Central 2** \
 * **Australia East** \
 * **Australia Southeast** \
 * **Brazil South** \
 * **Canada Central** \
 * **Canada East** \
 * **Central India** \
 * **South India** \
 * **West India** \
 * **North Europe** \
 * **West Europe** \
 * **France Central** \
 * **France South** \
 * **Germany Central** \
 * **Germany Northeast** \
 * **Japan East** \
 * **Japan West** \
 * **Korea Central** \
 * **Korea South** \
 * **South Africa North** \
 * **South Africa West** \
 * **UK South** \
 * **UK West** \
 * **Central US** \
 * **East US** \
 * **East US 2** \
 * **US Gov Arizona** \
 * **US Gov Texas** \
 * **North Central US** \
 * **South Central US** \
 * **West US** \
 * **West US 2** \
 * **West Central US**
 */
export type DataProvisioningParametersResourceRegion = string;

/** Known values of {@link ProvisionStatusResponseStatus} that the service accepts. */
export enum KnownProvisionStatusResponseStatus {
  /** Empty */
  Empty = "Empty",
  /** Accepted */
  Accepted = "Accepted",
  /** Creating */
  Creating = "Creating",
  /** Connected */
  Connected = "Connected",
  /** Invalid */
  Invalid = "Invalid"
}

/**
 * Defines values for ProvisionStatusResponseStatus. \
 * {@link KnownProvisionStatusResponseStatus} can be used interchangeably with ProvisionStatusResponseStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Empty** \
 * **Accepted** \
 * **Creating** \
 * **Connected** \
 * **Invalid**
 */
export type ProvisionStatusResponseStatus = string;

/** Known values of {@link CosmosDbCorsStatusResponseStatus} that the service accepts. */
export enum KnownCosmosDbCorsStatusResponseStatus {
  /** Appended */
  Appended = "Appended",
  /** HostDbInProgress */
  HostDbInProgress = "HostDbInProgress",
  /** HostDbNotFound */
  HostDbNotFound = "HostDbNotFound",
  /** Queued */
  Queued = "Queued",
  /** InProgress */
  InProgress = "InProgress",
  /** NotFound */
  NotFound = "NotFound"
}

/**
 * Defines values for CosmosDbCorsStatusResponseStatus. \
 * {@link KnownCosmosDbCorsStatusResponseStatus} can be used interchangeably with CosmosDbCorsStatusResponseStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Appended** \
 * **HostDbInProgress** \
 * **HostDbNotFound** \
 * **Queued** \
 * **InProgress** \
 * **NotFound**
 */
export type CosmosDbCorsStatusResponseStatus = string;

/** Known values of {@link CrashGroupStatusEnum} that the service accepts. */
export enum KnownCrashGroupStatusEnum {
  /** Open */
  Open = "open",
  /** Closed */
  Closed = "closed",
  /** Ignored */
  Ignored = "ignored"
}

/**
 * Defines values for CrashGroupStatusEnum. \
 * {@link KnownCrashGroupStatusEnum} can be used interchangeably with CrashGroupStatusEnum,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **open** \
 * **closed** \
 * **ignored**
 */
export type CrashGroupStatusEnum = string;

/** Known values of {@link V2SymbolStatusEnum} that the service accepts. */
export enum KnownV2SymbolStatusEnum {
  /** Missing */
  Missing = "missing",
  /** Ignored */
  Ignored = "ignored",
  /** Available */
  Available = "available"
}

/**
 * Defines values for V2SymbolStatusEnum. \
 * {@link KnownV2SymbolStatusEnum} can be used interchangeably with V2SymbolStatusEnum,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **missing** \
 * **ignored** \
 * **available**
 */
export type V2SymbolStatusEnum = string;

/** Known values of {@link V2MissingSymbolCrashGroupStatusEnum} that the service accepts. */
export enum KnownV2MissingSymbolCrashGroupStatusEnum {
  /** Active */
  Active = "active",
  /** Pending */
  Pending = "pending",
  /** Closed */
  Closed = "closed"
}

/**
 * Defines values for V2MissingSymbolCrashGroupStatusEnum. \
 * {@link KnownV2MissingSymbolCrashGroupStatusEnum} can be used interchangeably with V2MissingSymbolCrashGroupStatusEnum,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **active** \
 * **pending** \
 * **closed**
 */
export type V2MissingSymbolCrashGroupStatusEnum = string;

/** Known values of {@link NotificationPlatformType} that the service accepts. */
export enum KnownNotificationPlatformType {
  /** Apns */
  Apns = "apns",
  /** Gcm */
  Gcm = "gcm",
  /** Wns */
  Wns = "wns"
}

/**
 * Defines values for NotificationPlatformType. \
 * {@link KnownNotificationPlatformType} can be used interchangeably with NotificationPlatformType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apns** \
 * **gcm** \
 * **wns**
 */
export type NotificationPlatformType = string;

/** Known values of {@link AlertingEventTypes} that the service accepts. */
export enum KnownAlertingEventTypes {
  /** NewCrashGroupCreated */
  NewCrashGroupCreated = "newCrashGroupCreated",
  /** NewAppReleased */
  NewAppReleased = "newAppReleased"
}

/**
 * Defines values for AlertingEventTypes. \
 * {@link KnownAlertingEventTypes} can be used interchangeably with AlertingEventTypes,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **newCrashGroupCreated** \
 * **newAppReleased**
 */
export type AlertingEventTypes = string;
/** Defines values for ExportStatus. */
export type ExportStatus = "InProgress" | "Completed" | "Failed";
/** Defines values for ExportType. */
export type ExportType = "BlobStorage" | "AppInsights";
/** Defines values for ExportEntity. */
export type ExportEntity = "crashes" | "errors" | "attachments" | "no_logs";
/** Defines values for ExportState. */
export type ExportState =
  | "Enabled"
  | "Disabled"
  | "Pending"
  | "Deleted"
  | "Invalid";
/** Defines values for DevicePropertyType. */
export type DevicePropertyType = "string" | "number" | "boolean" | "date_time";
/** Defines values for AudienceProcessingState. */
export type AudienceProcessingState = "Calculating" | "Ready" | "Disabled";
/** Defines values for AudienceQueryType. */
export type AudienceQueryType =
  | "broadcast"
  | "user_ids"
  | "account_ids"
  | "install_ids";
/** Defines values for BlobPathFormatKind. */
export type BlobPathFormatKind = "WithoutAppId" | "WithAppId";
/** Defines values for CustomerIdentifierType. */
export type CustomerIdentifierType = "CustomerAccountId" | "CustomerUserId";
/** Defines values for OperationStatus. */
export type OperationStatus =
  | "None"
  | "Created"
  | "Queued"
  | "InProgress"
  | "Completed"
  | "Failed";
/** Defines values for RequestType. */
export type RequestType =
  | "Unsupported"
  | "Delete"
  | "Purge"
  | "UndoDelete"
  | "Scheduled"
  | "AppDelete"
  | "AppPurge"
  | "AppUndoDelete"
  | "Export"
  | "CustomerAccountDelete"
  | "CustomerAccountExport"
  | "CustomerUserDelete"
  | "CustomerUserExport";

/** Optional parameters. */
export interface DevicesRegisterUserForDeviceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the registerUserForDevice operation. */
export type DevicesRegisterUserForDeviceResponse = Paths8WlmngV01UsersUserIdDevicesRegisterPostResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface DevicesDeviceDetailsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the deviceDetails operation. */
export type DevicesDeviceDetailsResponse = Paths1Cmt7BV01UserDevicesDeviceUdidGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface DevicesRemoveUserDeviceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the removeUserDevice operation. */
export type DevicesRemoveUserDeviceResponse = PathsHdlzv9V01UserDevicesDeviceUdidDeleteResponses403ContentApplicationJsonSchema;

/** Optional parameters. */
export interface DevicesUserDevicesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the userDevicesList operation. */
export type DevicesUserDevicesListResponse = PathsSu173DV01UserDevicesGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface DevicesGetReleaseUpdateDevicesStatusOptionalParams
  extends coreClient.OperationOptions {
  /** A boolean value that indicates if the provisioning profile should be return in addition to the status. When set to true, the provisioning profile will be returned only when status is 'complete' or 'preparing_for_testers'. */
  includeProvisioningProfile?: boolean;
}

/** Contains response data for the getReleaseUpdateDevicesStatus operation. */
export type DevicesGetReleaseUpdateDevicesStatusResponse = Paths13R6WlgV01AppsOwnerNameAppNameReleasesReleaseIdUpdateDevicesResignIdGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface DevicesListCsvFormatOptionalParams
  extends coreClient.OperationOptions {
  /** when true, filters out provisioned devices */
  unprovisionedOnly?: boolean;
  /** multiple UDIDs which should be part of the resulting CSV. */
  udids?: string[];
}

/** Contains response data for the listCsvFormat operation. */
export type DevicesListCsvFormatResponse = {
  /**
   * BROWSER ONLY
   *
   * The response body as a browser Blob.
   * Always `undefined` in node.js.
   */
  blobBody?: Promise<Blob>;
  /**
   * NODEJS ONLY
   *
   * The response body as a node.js Readable stream.
   * Always `undefined` in the browser.
   */
  readableStreamBody?: NodeJS.ReadableStream;
};

/** Optional parameters. */
export interface DevicesListOptionalParams extends coreClient.OperationOptions {
  /** when provided, gets the provisioning state of the devices owned by users of this distribution group when compared to the provided release. */
  releaseId?: number;
}

/** Contains response data for the list operation. */
export type DevicesListResponse = PathsTsc2V7V01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameDevicesGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface DevicesBlockLogsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the blockLogs operation. */
export type DevicesBlockLogsResponse = {
  /** The parsed response body. */
  body: string;
};

/** Optional parameters. */
export interface NotificationsGetUserEmailSettingsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getUserEmailSettings operation. */
export type NotificationsGetUserEmailSettingsResponse = Paths1GbpowzV01UserNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface NotificationsGetAppEmailSettingsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getAppEmailSettings operation. */
export type NotificationsGetAppEmailSettingsResponse = Paths19Z9V3IV01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface UsersGetUserMetadataOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getUserMetadata operation. */
export type UsersGetUserMetadataResponse = Paths1Bjp26QV01UserMetadataOptimizelyGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface UsersGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type UsersGetResponse = Paths12V17NbV01UserGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface UsersUpdateOptionalParams extends coreClient.OperationOptions {
  /** The full name of the user. Might for example be first and last name */
  displayName?: string;
}

/** Contains response data for the update operation. */
export type UsersUpdateResponse = Paths1Stph4IV01UserPatchResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface UsersUpdateOrgRoleOptionalParams
  extends coreClient.OperationOptions {
  /** The user's role in the organizatiion */
  role?: PatchContentSchemaRole;
}

/** Contains response data for the updateOrgRole operation. */
export type UsersUpdateOrgRoleResponse = PathsPp9E5UV01OrgsOrgNameUsersUserNamePatchResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface UsersRemoveFromOrgOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface UsersGetForOrgOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getForOrg operation. */
export type UsersGetForOrgResponse = PathsJys8A7V01OrgsOrgNameUsersUserNameGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface UsersListForOrgOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listForOrg operation. */
export type UsersListForOrgResponse = PathsCwimmqV01OrgsOrgNameUsersGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface UsersListOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type UsersListResponse = PathsMm38I5V01AppsOwnerNameAppNameUsersGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface OrgInvitationsRejectOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface OrgInvitationsAcceptOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface OrgInvitationsRevokeOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface OrgInvitationsSendNewInvitationOptionalParams
  extends coreClient.OperationOptions {
  /** The role of the user to be added */
  role?: PostContentSchemaRole;
}

/** Optional parameters. */
export interface OrgInvitationsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** The user's role in the organizatiion */
  role?: Enum96;
}

/** Optional parameters. */
export interface OrgInvitationsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** The user's role */
  role?: Enum98;
}

/** Optional parameters. */
export interface OrgInvitationsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface OrgInvitationsListPendingOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listPending operation. */
export type OrgInvitationsListPendingResponse = Paths1Hzhjt9V01OrgsOrgNameInvitationsGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface DistributionGroupInvitationsAcceptAllOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface AppInvitationsRejectOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface AppInvitationsAcceptOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface AppInvitationsCreateByEmailOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface AppInvitationsUpdatePermissionsOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface AppInvitationsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface AppInvitationsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** The user's role */
  role?: Enum304;
}

/** Optional parameters. */
export interface AppInvitationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type AppInvitationsListResponse = PathsIn5115V01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface SharedconnectionConnectionsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the connections operation. */
export type SharedconnectionConnectionsResponse = Get200ApplicationJsonItemsItem[];

/** Optional parameters. */
export interface DataSubjectRightCancelExportRequestOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the cancelExportRequest operation. */
export type DataSubjectRightCancelExportRequestResponse = DataSubjectRightCancelExportRequestHeaders &
  Paths18Qfkd0V01UserDsrExportTokenCancelPostResponses202ContentApplicationJsonSchema;

/** Optional parameters. */
export interface DataSubjectRightExportStatusRequestOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the exportStatusRequest operation. */
export type DataSubjectRightExportStatusRequestResponse = Paths1Krqtk7V01UserDsrExportTokenGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface DataSubjectRightExportRequestOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the exportRequest operation. */
export type DataSubjectRightExportRequestResponse = DataSubjectRightExportRequestHeaders &
  Paths1NpsrnaV01UserDsrExportPostResponses202ContentApplicationJsonSchema;

/** Optional parameters. */
export interface DataSubjectRightCancelDeleteRequestOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the cancelDeleteRequest operation. */
export type DataSubjectRightCancelDeleteRequestResponse = DataSubjectRightCancelDeleteRequestHeaders &
  PathsJv03TbV01UserDsrDeleteTokenCancelPostResponses202ContentApplicationJsonSchema;

/** Optional parameters. */
export interface DataSubjectRightDeleteStatusRequestOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the deleteStatusRequest operation. */
export type DataSubjectRightDeleteStatusRequestResponse = PathsWwssknV01UserDsrDeleteTokenGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface DataSubjectRightDeleteRequestOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the deleteRequest operation. */
export type DataSubjectRightDeleteRequestResponse = DataSubjectRightDeleteRequestHeaders &
  Paths1Shlm9KV01UserDsrDeletePostResponses202ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ReleasesListTesterAppsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listTesterApps operation. */
export type ReleasesListTesterAppsResponse = PathsFvdb99V01TesterAppsGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface ReleasesGetLatestByHashOptionalParams
  extends coreClient.OperationOptions {
  /** When passing `udid` in the query string, a provisioning check for the given device ID will be done. Will be ignored for non-iOS platforms. */
  udid?: string;
}

/** Contains response data for the getLatestByHash operation. */
export type ReleasesGetLatestByHashResponse = Paths3NwxqsV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ReleasesGetLatestPrivateReleaseOptionalParams
  extends coreClient.OperationOptions {
  /** When passing `udid` in the query string, a provisioning check for the given device ID will be done. Will be ignored for non-iOS platforms. */
  udid?: string;
}

/** Contains response data for the getLatestPrivateRelease operation. */
export type ReleasesGetLatestPrivateReleaseResponse = Paths1Wkh2MwV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ReleasesDeleteTesterFromDestinationsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the deleteTesterFromDestinations operation. */
export type ReleasesDeleteTesterFromDestinationsResponse = Paths16X7GfoV01AppsOwnerNameAppNameTestersTesterIdDeleteResponses404ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ReleasesPutDistributionTesterOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the putDistributionTester operation. */
export type ReleasesPutDistributionTesterResponse = Paths7J8CcmV01AppsOwnerNameAppNameReleasesReleaseIdTestersTesterIdPutResponses404ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ReleasesDeleteDistributionTesterOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the deleteDistributionTester operation. */
export type ReleasesDeleteDistributionTesterResponse = Paths1RmbaiiV01AppsOwnerNameAppNameReleasesReleaseIdTestersTesterIdDeleteResponses404ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ReleasesAddTestersOptionalParams
  extends coreClient.OperationOptions {
  /** Flag to mark the release for the provided destinations as mandatory */
  mandatoryUpdate?: boolean;
  /** Flag to enable or disable notifications to testers */
  notifyTesters?: boolean;
}

/** Contains response data for the addTesters operation. */
export type ReleasesAddTestersResponse = Paths5WvwkdV01AppsOwnerNameAppNameReleasesReleaseIdTestersPostResponses201ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ReleasesDeleteDistributionStoreOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the deleteDistributionStore operation. */
export type ReleasesDeleteDistributionStoreResponse = Paths1BbvdowV01AppsOwnerNameAppNameReleasesReleaseIdStoresStoreIdDeleteResponses404ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ReleasesAddStoreOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the addStore operation. */
export type ReleasesAddStoreResponse = Paths1Tn9O5V01AppsOwnerNameAppNameReleasesReleaseIdStoresPostResponses201ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ReleasesPutDistributionGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the putDistributionGroup operation. */
export type ReleasesPutDistributionGroupResponse = Paths11Dzu4BV01AppsOwnerNameAppNameReleasesReleaseIdGroupsGroupIdPutResponses404ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ReleasesDeleteDistributionGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the deleteDistributionGroup operation. */
export type ReleasesDeleteDistributionGroupResponse = Paths1Nrzr5YV01AppsOwnerNameAppNameReleasesReleaseIdGroupsGroupIdDeleteResponses404ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ReleasesAddDistributionGroupOptionalParams
  extends coreClient.OperationOptions {
  /** Flag to mark the release for the provided destinations as mandatory */
  mandatoryUpdate?: boolean;
  /** Flag to enable or disable notifications to testers */
  notifyTesters?: boolean;
}

/** Contains response data for the addDistributionGroup operation. */
export type ReleasesAddDistributionGroupResponse = PathsFv6EorV01AppsOwnerNameAppNameReleasesReleaseIdGroupsPostResponses201ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ReleasesGetLatestByUserOptionalParams
  extends coreClient.OperationOptions {
  /** when supplied, this call will also check if the given UDID is provisioned. Will be ignored for non-iOS platforms. The value will be returned in the property is_udid_provisioned. */
  udid?: string;
}

/** Contains response data for the getLatestByUser operation. */
export type ReleasesGetLatestByUserResponse = Paths1Wtl5HpV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ReleasesUpdateDetailsOptionalParams
  extends coreClient.OperationOptions {
  /** Toggle this release to be enable distribute/download or not. */
  enabled?: boolean;
  /** Release notes for this release. */
  releaseNotes?: string;
  /** Contains metadata about the build that produced the release being uploaded */
  build?: PutContentSchemaBuild;
}

/** Contains response data for the updateDetails operation. */
export type ReleasesUpdateDetailsResponse = PathsMeoh5V01AppsOwnerNameAppNameReleasesReleaseIdPutResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ReleasesUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type ReleasesUpdateResponse = Paths1FopftvV01AppsOwnerNameAppNameReleasesReleaseIdPatchResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ReleasesDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the delete operation. */
export type ReleasesDeleteResponse = PathsQra1HiV01AppsOwnerNameAppNameReleasesReleaseIdDeleteResponses404ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ReleasesAvailableToTesterOptionalParams
  extends coreClient.OperationOptions {
  /** when *true*, filters out releases that were uploaded but were never distributed. Releases that under deleted distribution groups will not be filtered out. */
  publishedOnly?: boolean;
}

/** Contains response data for the availableToTester operation. */
export type ReleasesAvailableToTesterResponse = Paths146V2RtV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface ReleasesListOptionalParams
  extends coreClient.OperationOptions {
  /** When *true*, filters out releases that were uploaded but were never distributed. Releases that under deleted distribution groups will not be filtered out. */
  publishedOnly?: boolean;
  /** When the scope is 'tester', only includes releases that have been distributed to groups that the user belongs to. */
  scope?: string;
}

/** Contains response data for the list operation. */
export type ReleasesListResponse = Paths13M4B1YV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface ReleasesListLatestOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listLatest operation. */
export type ReleasesListLatestResponse = PathsYi44H6V01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface ReleasesGetLatestByDistributionGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getLatestByDistributionGroup operation. */
export type ReleasesGetLatestByDistributionGroupResponse = Paths7CegcuV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ReleasesDeleteWithDistributionGroupIdOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface ReleasesListByDistributionGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByDistributionGroup operation. */
export type ReleasesListByDistributionGroupResponse = PathsHninlmV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface AppsGetForOrgUserOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getForOrgUser operation. */
export type AppsGetForOrgUserResponse = Paths1CionenV01OrgsOrgNameUsersUserNameAppsGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface AppsCreateForOrgOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createForOrg operation. */
export type AppsCreateForOrgResponse = PathsZsi63SV01OrgsOrgNameAppsPostResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AppsListForOrgOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listForOrg operation. */
export type AppsListForOrgResponse = PathsPmjc9ZV01OrgsOrgNameAppsGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface AppsRemoveUserOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface AppsUpdateUserPermissionsOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface AppsTransferToOrgOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the transferToOrg operation. */
export type AppsTransferToOrgResponse = Paths1LnjnxdV01AppsOwnerNameAppNameTransferToOrgPostResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AppsTransferOwnershipOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the transferOwnership operation. */
export type AppsTransferOwnershipResponse = Paths17Wfdp6V01AppsOwnerNameAppNameTransferDestinationOwnerNamePostResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AppsListTestersOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listTesters operation. */
export type AppsListTestersResponse = Paths9J1VrgV01AppsOwnerNameAppNameTestersGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface AppsGetTeamsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getTeams operation. */
export type AppsGetTeamsResponse = Paths1Sq4J2RV01AppsOwnerNameAppNameTeamsGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface AppsUpdateAvatarOptionalParams
  extends coreClient.OperationOptions {
  /** The image for an app avatar to upload. */
  avatar?: coreRestPipeline.RequestBodyType;
}

/** Contains response data for the updateAvatar operation. */
export type AppsUpdateAvatarResponse = Paths1X598I8V01AppsOwnerNameAppNameAvatarPostResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AppsDeleteAvatarOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the deleteAvatar operation. */
export type AppsDeleteAvatarResponse = Paths1Jhcvh4V01AppsOwnerNameAppNameAvatarDeleteResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AppsGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AppsGetResponse = PathsRv9AxzV01AppsOwnerNameAppNameGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AppsUpdateOptionalParams extends coreClient.OperationOptions {
  /** The partial data for the app */
  app?: PathsMhqbvhV01AppsOwnerNameAppNamePatchRequestbodyContentApplicationJsonSchema;
}

/** Contains response data for the update operation. */
export type AppsUpdateResponse = PathsPcp6H8V01AppsOwnerNameAppNamePatchResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AppsDeleteOptionalParams extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface AppsCreateOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the create operation. */
export type AppsCreateResponse = Paths1Xn0TpgV01AppsPostResponses201ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AppsListOptionalParams extends coreClient.OperationOptions {
  /** The name of the attribute by which to order the response by. By default, apps are in order of creation. All results are ordered in ascending order. */
  orderBy?: Enum595;
}

/** Contains response data for the list operation. */
export type AppsListResponse = PathsEh92XyV01AppsGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface DistributionGroupsListAllTestersForOrgOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listAllTestersForOrg operation. */
export type DistributionGroupsListAllTestersForOrgResponse = PathsZcvkocV01OrgsOrgNameTestersGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface DistributionGroupsDetailsForOrgOptionalParams
  extends coreClient.OperationOptions {
  /** The max number of apps to include in the response */
  appsLimit?: number;
}

/** Contains response data for the detailsForOrg operation. */
export type DistributionGroupsDetailsForOrgResponse = PathsN5ZsaaV01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface DistributionGroupsResendSharedInviteOptionalParams
  extends coreClient.OperationOptions {
  /** The list of emails of the users */
  userEmails?: string[];
}

/** Optional parameters. */
export interface DistributionGroupsBulkDeleteUsersOptionalParams
  extends coreClient.OperationOptions {
  /** The list of emails of the users */
  userEmails?: string[];
}

/** Optional parameters. */
export interface DistributionGroupsListUsersForOrgOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listUsersForOrg operation. */
export type DistributionGroupsListUsersForOrgResponse = Paths1Emeq4QV01OrgsOrgNameDistributionGroupsDistributionGroupNameMembersGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface DistributionGroupsAddUsersForOrgOptionalParams
  extends coreClient.OperationOptions {
  /** The list of emails of the users */
  userEmails?: string[];
}

/** Contains response data for the addUsersForOrg operation. */
export type DistributionGroupsAddUsersForOrgResponse = Post200ApplicationJsonItemsItem[];

/** Optional parameters. */
export interface DistributionGroupsBulkDeleteAppsOptionalParams
  extends coreClient.OperationOptions {
  /** The list of apps to delete from the distribution group */
  apps?: PostContentSchemaAppsItem[];
}

/** Optional parameters. */
export interface DistributionGroupsGetAppsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getApps operation. */
export type DistributionGroupsGetAppsResponse = Paths1FzizdmV01OrgsOrgNameDistributionGroupsDistributionGroupNameAppsGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface DistributionGroupsAddAppsOptionalParams
  extends coreClient.OperationOptions {
  /** The list of apps to add to distribution group */
  apps?: PathsJ09Ix2V01OrgsOrgNameDistributionGroupsDistributionGroupNameAppsPostRequestbodyContentApplicationJsonSchemaPropertiesAppsItems[];
}

/** Optional parameters. */
export interface DistributionGroupsGetForOrgOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getForOrg operation. */
export type DistributionGroupsGetForOrgResponse = Paths1O9EmfnV01OrgsOrgNameDistributionGroupsDistributionGroupNameGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface DistributionGroupsPatchForOrgOptionalParams
  extends coreClient.OperationOptions {
  /** The name of the distribution group */
  name?: string;
  /** Whether the distribution group is public */
  isPublic?: boolean;
}

/** Contains response data for the patchForOrg operation. */
export type DistributionGroupsPatchForOrgResponse = Paths8Ig5HaV01OrgsOrgNameDistributionGroupsDistributionGroupNamePatchResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface DistributionGroupsDeleteForOrgOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface DistributionGroupsCreateForOrgOptionalParams
  extends coreClient.OperationOptions {
  /** The display name of the distribution group. If not specified, the name will be used. */
  displayName?: string;
}

/** Contains response data for the createForOrg operation. */
export type DistributionGroupsCreateForOrgResponse = Paths19Pq8TpV01OrgsOrgNameDistributionGroupsPostResponses201ContentApplicationJsonSchema;

/** Optional parameters. */
export interface DistributionGroupsListForOrgOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listForOrg operation. */
export type DistributionGroupsListForOrgResponse = Get201ApplicationJsonItemsItem[];

/** Optional parameters. */
export interface DistributionGroupsResendInviteOptionalParams
  extends coreClient.OperationOptions {
  /** The list of emails of the users */
  userEmails?: string[];
}

/** Optional parameters. */
export interface DistributionGroupsRemoveUserOptionalParams
  extends coreClient.OperationOptions {
  /** The list of emails of the users */
  userEmails?: string[];
}

/** Contains response data for the removeUser operation. */
export type DistributionGroupsRemoveUserResponse = PathsH5A3IoV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersBulkDeletePostResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface DistributionGroupsListUsersOptionalParams
  extends coreClient.OperationOptions {
  /** Whether to exclude pending invitations in the response */
  excludePendingInvitations?: boolean;
}

/** Contains response data for the listUsers operation. */
export type DistributionGroupsListUsersResponse = PathsV8RijtV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface DistributionGroupsAddUserOptionalParams
  extends coreClient.OperationOptions {
  /** The list of emails of the users */
  userEmails?: string[];
}

/** Contains response data for the addUser operation. */
export type DistributionGroupsAddUserResponse = PathsQb9V9JV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersPostResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface DistributionGroupsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DistributionGroupsGetResponse = Paths1Wh2QvoV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface DistributionGroupsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** The name of the distribution group */
  name?: string;
  /** Whether the distribution group is public */
  isPublic?: boolean;
}

/** Contains response data for the update operation. */
export type DistributionGroupsUpdateResponse = Paths15Yrg8NV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNamePatchResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface DistributionGroupsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface DistributionGroupsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type DistributionGroupsListResponse = Paths1O1HkymV01AppsOwnerNameAppNameDistributionGroupsGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface DistributionGroupsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** The display name of the distribution group. If not specified, the name will be used. */
  displayName?: string;
}

/** Contains response data for the create operation. */
export type DistributionGroupsCreateResponse = Paths7NhijrV01AppsOwnerNameAppNameDistributionGroupsPostResponses201ContentApplicationJsonSchema;

/** Optional parameters. */
export interface TeamsRemoveUserOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface TeamsGetUsersOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getUsers operation. */
export type TeamsGetUsersResponse = PathsQ6Nk57V01OrgsOrgNameTeamsTeamNameUsersGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface TeamsAddUserOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the addUser operation. */
export type TeamsAddUserResponse = PathsY6FsqxV01OrgsOrgNameTeamsTeamNameUsersPostResponses201ContentApplicationJsonSchema;

/** Optional parameters. */
export interface TeamsUpdatePermissionsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the updatePermissions operation. */
export type TeamsUpdatePermissionsResponse = Paths6Yr3JV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface TeamsRemoveAppOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface TeamsAddAppOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the addApp operation. */
export type TeamsAddAppResponse = PathsQkzmz3V01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchema;

/** Optional parameters. */
export interface TeamsListAppsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listApps operation. */
export type TeamsListAppsResponse = PathsS2AazoV01OrgsOrgNameTeamsTeamNameAppsGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface TeamsGetTeamOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getTeam operation. */
export type TeamsGetTeamResponse = PathsUii78RV01OrgsOrgNameTeamsTeamNameGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface TeamsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface TeamsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type TeamsUpdateResponse = Paths1L1EevaV01OrgsOrgNameTeamsTeamNamePatchResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface TeamsListAllOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listAll operation. */
export type TeamsListAllResponse = Paths63Ea35V01OrgsOrgNameTeamsGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface TeamsCreateTeamOptionalParams
  extends coreClient.OperationOptions {
  /** The name of the team */
  name?: string;
  /** The description of the team */
  description?: string;
}

/** Contains response data for the createTeam operation. */
export type TeamsCreateTeamResponse = Post201ApplicationJsonItemsItem[];

/** Optional parameters. */
export interface AzureSubscriptionListForOrgOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listForOrg operation. */
export type AzureSubscriptionListForOrgResponse = Paths1R8N8WnV01OrgsOrgNameAzureSubscriptionsGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface AzureSubscriptionListForUserOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listForUser operation. */
export type AzureSubscriptionListForUserResponse = Paths1Wv9DecV01AzureSubscriptionsGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface AzureSubscriptionDeleteForAppOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface AzureSubscriptionListForAppOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listForApp operation. */
export type AzureSubscriptionListForAppResponse = PathsZl5LyeV01AppsOwnerNameAppNameAzureSubscriptionsGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface AzureSubscriptionLinkForAppOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface OrganizationUpdateAvatarOptionalParams
  extends coreClient.OperationOptions {
  /** The image for an Organization avatar to upload. */
  avatar?: coreRestPipeline.RequestBodyType;
}

/** Contains response data for the updateAvatar operation. */
export type OrganizationUpdateAvatarResponse = Paths7Mbu6OV01OrgsOrgNameAvatarPostResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface OrganizationDeleteAvatarOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the deleteAvatar operation. */
export type OrganizationDeleteAvatarResponse = PathsQe14CxV01OrgsOrgNameAvatarDeleteResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface OrganizationsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type OrganizationsGetResponse = Paths1Sl6Qy7V01OrgsOrgNameGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface OrganizationsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** The full (friendly) name of the organization. */
  displayName?: string;
  /** The name of the organization used in URLs */
  name?: string;
}

/** Contains response data for the update operation. */
export type OrganizationsUpdateResponse = Paths1Vgfr6WV01OrgsOrgNamePatchResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface OrganizationsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface OrganizationsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** The display name of the organization */
  displayName?: string;
  /** The name of the organization used in URLs */
  name?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type OrganizationsCreateOrUpdateResponse = Paths5Gk61LV01OrgsPostResponses201ContentApplicationJsonSchema;

/** Optional parameters. */
export interface OrganizationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OrganizationsListResponse = Paths1Ft71BmV01OrgsGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface OrganizationsListAdministeredOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listAdministered operation. */
export type OrganizationsListAdministeredResponse = PathsSnamasV01AdministeredorgsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface BillingAggregatedInformationGetForOrgOptionalParams
  extends coreClient.OperationOptions {
  /** Type of service that should be included in the Billing Information */
  service?: Enum152;
  /** Type of period that should be included in the Billing Information */
  period?: Enum153;
  /** Controls whether the API should show the original plan when Azure Subscription is not enabled */
  showOriginalPlans?: boolean;
}

/** Contains response data for the getForOrg operation. */
export type BillingAggregatedInformationGetForOrgResponse = PathsI4V0ItV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface BillingAggregatedInformationGetAllOptionalParams
  extends coreClient.OperationOptions {
  /** Controls whether the API should show the original plan when Azure Subscription is not enabled */
  showOriginalPlans?: boolean;
  /** Type of service that should be included in the Billing Information */
  service?: Enum171;
  /** Type of period that should be included in the Billing Information */
  period?: Enum172;
}

/** Contains response data for the getAll operation. */
export type BillingAggregatedInformationGetAllResponse = Paths19Yz4JgV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface BillingAggregatedInformationGetByAppOptionalParams
  extends coreClient.OperationOptions {
  /** Controls whether the API should show the original plan when Azure Subscription is not enabled */
  showOriginalPlans?: boolean;
  /** Type of service that should be included in the Billing Information */
  service?: Enum497;
  /** Type of period that should be included in the Billing Information */
  period?: Enum498;
}

/** Contains response data for the getByApp operation. */
export type BillingAggregatedInformationGetByAppResponse = Paths5MjbktV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface LegacyCodePushAcquisitionUpdateCheckOptionalParams
  extends coreClient.OperationOptions {
  /** description */
  deploymentKey?: string;
  /** description */
  appVersion?: string;
  /** description */
  packageHash?: string;
  /** description */
  label?: string;
  /** description */
  clientUniqueId?: string;
  /** description */
  isCompanion?: string;
}

/** Contains response data for the updateCheck operation. */
export type LegacyCodePushAcquisitionUpdateCheckResponse = PathsJ7Rnt8V01LegacyUpdatecheckGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface LegacyCodePushAcquisitionUpdateDownloadStatusOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface LegacyCodePushAcquisitionUpdateInstallsStatusOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface InvitationsSentOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the sent operation. */
export type InvitationsSentResponse = Paths1O7H121V01InvitationsSentGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface BuildsListXcodeVersionsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listXcodeVersions operation. */
export type BuildsListXcodeVersionsResponse = PathsSnbseaV01AppsOwnerNameAppNameXcodeVersionsGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface BuildsListXamarinSDKBundlesOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listXamarinSDKBundles operation. */
export type BuildsListXamarinSDKBundlesResponse = Paths1Nv9E3SV01AppsOwnerNameAppNameXamarinSdkBundlesGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface BuildsListToolsetsOptionalParams
  extends coreClient.OperationOptions {
  /** Toolset name */
  tools?: Enum196;
}

/** Contains response data for the listToolsets operation. */
export type BuildsListToolsetsResponse = PathsJw4J38V01AppsOwnerNameAppNameToolsetsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface BuildsGetLogOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getLog operation. */
export type BuildsGetLogResponse = Paths1A4WxwuV01AppsOwnerNameAppNameBuildsBuildIdLogsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface BuildsGetDownloadUriOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getDownloadUri operation. */
export type BuildsGetDownloadUriResponse = PathsQ75XzuV01AppsOwnerNameAppNameBuildsBuildIdDownloadsDownloadTypeGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface BuildsDistributeOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the distribute operation. */
export type BuildsDistributeResponse = Paths1D42Nj4V01AppsOwnerNameAppNameBuildsBuildIdDistributePostResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface BuildsGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type BuildsGetResponse = PathsN3VrpV01AppsOwnerNameAppNameBuildsBuildIdGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface BuildsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type BuildsUpdateResponse = Paths1Kppxb1V01AppsOwnerNameAppNameBuildsBuildIdPatchResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface BuildsGetStatusByAppIdOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getStatusByAppId operation. */
export type BuildsGetStatusByAppIdResponse = PathsPo7UnwV01AppsOwnerNameAppNameBuildServiceStatusGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface BuildsListToolsetProjectsOptionalParams
  extends coreClient.OperationOptions {
  /** The depth of the repository to search for project files */
  maxSearchDepth?: number;
}

/** Contains response data for the listToolsetProjects operation. */
export type BuildsListToolsetProjectsResponse = Paths17D5VcoV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface BuildsListByBranchOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBranch operation. */
export type BuildsListByBranchResponse = PathsRyxelmV01AppsOwnerNameAppNameBranchesBranchBuildsGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface BuildsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Version to build which represents the full Git commit reference */
  sourceVersion?: string;
  /** Run build in debug mode */
  debug?: boolean;
}

/** Contains response data for the create operation. */
export type BuildsCreateResponse = PathsIgnnsjV01AppsOwnerNameAppNameBranchesBranchBuildsPostResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface BuildsListBranchesOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBranches operation. */
export type BuildsListBranchesResponse = Paths5Mg2CrV01AppsOwnerNameAppNameBranchesGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface WebhooksListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type WebhooksListResponse = PathsQn2DimV01AppsOwnerNameAppNameWebhooksGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface CrashesGetAppVersionsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getAppVersions operation. */
export type CrashesGetAppVersionsResponse = Paths1MuofruV01AppsOwnerNameAppNameVersionsGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface CrashesGetAppCrashesInfoOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getAppCrashesInfo operation. */
export type CrashesGetAppCrashesInfoResponse = PathsA8ApyzV01AppsOwnerNameAppNameCrashesInfoGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface CrashesListSessionLogsOptionalParams
  extends coreClient.OperationOptions {
  /** Date of data requested */
  date?: Date;
}

/** Contains response data for the listSessionLogs operation. */
export type CrashesListSessionLogsResponse = Paths1Ut4QauV01AppsOwnerNameAppNameCrashesCrashIdSessionLogsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface CrashesGetCrashTextAttachmentContentOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getCrashTextAttachmentContent operation. */
export type CrashesGetCrashTextAttachmentContentResponse = {
  /** The parsed response body. */
  body: string;
};

/** Optional parameters. */
export interface CrashesGetCrashAttachmentLocationOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getCrashAttachmentLocation operation. */
export type CrashesGetCrashAttachmentLocationResponse = Paths1520RtwV01AppsOwnerNameAppNameCrashesCrashIdAttachmentsAttachmentIdLocationGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface CrashesListAttachmentsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listAttachments operation. */
export type CrashesListAttachmentsResponse = Paths1Yzy65LV01AppsOwnerNameAppNameCrashesCrashIdAttachmentsGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface CrashesGetStacktraceOptionalParams
  extends coreClient.OperationOptions {
  /** true if the stacktrace should be only the relevant thread / exception. Default is false */
  groupingOnly?: boolean;
}

/** Contains response data for the getStacktrace operation. */
export type CrashesGetStacktraceResponse = Stacktrace;

/** Optional parameters. */
export interface CrashesGetRawCrashLocationOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getRawCrashLocation operation. */
export type CrashesGetRawCrashLocationResponse = Paths5WkrbzV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdCrashesCrashIdRawLocationGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface CrashesGetNativeCrashDownloadOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getNativeCrashDownload operation. */
export type CrashesGetNativeCrashDownloadResponse = {
  /** The parsed response body. */
  body: string;
};

/** Optional parameters. */
export interface CrashesGetNativeCrashOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getNativeCrash operation. */
export type CrashesGetNativeCrashResponse = {
  /** The parsed response body. */
  body: string;
};

/** Optional parameters. */
export interface CrashesGetOptionalParams extends coreClient.OperationOptions {
  /** true if the stacktrace should be only the relevant thread / exception. Default is false */
  groupingOnly?: boolean;
  /** true if the crash should include the raw crash report. Default is false */
  includeReport?: boolean;
  /** true if the crash should include the custom log report. Default is false */
  includeLog?: boolean;
  /** true if the crash should include in depth crash details */
  includeDetails?: boolean;
  /** true if the crash should include the stacktrace information */
  includeStacktrace?: boolean;
}

/** Contains response data for the get operation. */
export type CrashesGetResponse = Crash;

/** Optional parameters. */
export interface CrashesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** true in that case if the method should skip update counts */
  retentionDelete?: boolean;
}

/** Contains response data for the delete operation. */
export type CrashesDeleteResponse = Paths10HkftV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdCrashesCrashIdDeleteResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface CrashesListOptionalParams extends coreClient.OperationOptions {
  /** true if the crash should include the raw crash report. Default is false */
  includeReport?: boolean;
  /** true if the crash should include the custom log report. Default is false */
  includeLog?: boolean;
  /** test */
  dateFrom?: Date;
  /** test */
  dateTo?: Date;
  /** version */
  appVersion?: string;
  /** test */
  errorType?: Enum464;
}

/** Contains response data for the list operation. */
export type CrashesListResponse = Crash[];

/** Optional parameters. */
export interface TestGetDeviceSetOfUserOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getDeviceSetOfUser operation. */
export type TestGetDeviceSetOfUserResponse = DeviceSet;

/** Optional parameters. */
export interface TestUpdateDeviceSetOfUserOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the updateDeviceSetOfUser operation. */
export type TestUpdateDeviceSetOfUserResponse = DeviceSet0;

/** Optional parameters. */
export interface TestDeleteDeviceSetOfUserOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface TestListDeviceSetsOfUserOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listDeviceSetsOfUser operation. */
export type TestListDeviceSetsOfUserResponse = Paths17Qazt1V01AppsOwnerNameAppNameUserDeviceSetsGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface TestCreateDeviceSetOfUserOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createDeviceSetOfUser operation. */
export type TestCreateDeviceSetOfUserResponse = DeviceSet1;

/** Optional parameters. */
export interface TestGetAllTestRunsForSeriesOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getAllTestRunsForSeries operation. */
export type TestGetAllTestRunsForSeriesResponse = PathsShbmt3V01AppsOwnerNameAppNameTestSeriesSlugTestRunsGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface TestDeleteTestSeriesOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface TestPatchTestSeriesOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the patchTestSeries operation. */
export type TestPatchTestSeriesResponse = TestSeries;

/** Optional parameters. */
export interface TestGetAllTestSeriesOptionalParams
  extends coreClient.OperationOptions {
  /** A query string to filter test series */
  query?: string;
}

/** Contains response data for the getAllTestSeries operation. */
export type TestGetAllTestSeriesResponse = PathsAd8C7FV01AppsOwnerNameAppNameTestSeriesGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface TestCreateTestSeriesOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createTestSeries operation. */
export type TestCreateTestSeriesResponse = TestSeries0;

/** Optional parameters. */
export interface TestStopTestRunOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the stopTestRun operation. */
export type TestStopTestRunResponse = TestRun;

/** Optional parameters. */
export interface TestGetTestRunStateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getTestRunState operation. */
export type TestGetTestRunStateResponse = TestRunState;

/** Optional parameters. */
export interface TestStartTestRunOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the startTestRun operation. */
export type TestStartTestRunResponse = TestCloudTestRunStartResult;

/** Optional parameters. */
export interface TestGetTestReportOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getTestReport operation. */
export type TestGetTestReportResponse = PathsRj1AeoV01AppsOwnerNameAppNameTestRunsTestRunIdReportGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface TestUploadHashesBatchOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the uploadHashesBatch operation. */
export type TestUploadHashesBatchResponse = PathsH1EvszV01AppsOwnerNameAppNameTestRunsTestRunIdHashesBatchPostResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface TestUploadHashOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the uploadHash operation. */
export type TestUploadHashResponse = TestUploadHashHeaders;

/** Optional parameters. */
export interface TestStartUploadingFileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the startUploadingFile operation. */
export type TestStartUploadingFileResponse = TestStartUploadingFileHeaders;

/** Optional parameters. */
export interface TestGetTestRunOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getTestRun operation. */
export type TestGetTestRunResponse = TestRun0;

/** Optional parameters. */
export interface TestArchiveTestRunOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the archiveTestRun operation. */
export type TestArchiveTestRunResponse = TestRun1;

/** Optional parameters. */
export interface TestGetTestRunsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getTestRuns operation. */
export type TestGetTestRunsResponse = Paths1CxzjsgV01AppsOwnerNameAppNameTestRunsGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface TestCreateTestRunOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createTestRun operation. */
export type TestCreateTestRunResponse = TestCreateTestRunHeaders;

/** Optional parameters. */
export interface TestGdprExportTestRunOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the gdprExportTestRun operation. */
export type TestGdprExportTestRunResponse = Paths1UxedxfV01AppsOwnerNameAppNameTestExportTestrunsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface TestGdprExportPipelineTestOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the gdprExportPipelineTest operation. */
export type TestGdprExportPipelineTestResponse = Paths17A5P9IV01AppsOwnerNameAppNameTestExportPipelinetestsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface TestGdprExportHashFileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the gdprExportHashFile operation. */
export type TestGdprExportHashFileResponse = PathsQpbfbqV01AppsOwnerNameAppNameTestExportHashfilesGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface TestGdprExportFileSetFileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the gdprExportFileSetFile operation. */
export type TestGdprExportFileSetFileResponse = Paths18Bwc0DV01AppsOwnerNameAppNameTestExportFilesetfilesGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface TestGdprExportAppOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the gdprExportApp operation. */
export type TestGdprExportAppResponse = Paths1D5PwtqV01AppsOwnerNameAppNameTestExportAppsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface TestGdprExportAppsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the gdprExportApps operation. */
export type TestGdprExportAppsResponse = PathsTbqb7JV01AppsOwnerNameAppNameTestExportGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface TestGetSubscriptionsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getSubscriptions operation. */
export type TestGetSubscriptionsResponse = Subscription0;

/** Optional parameters. */
export interface TestCreateSubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createSubscription operation. */
export type TestCreateSubscriptionResponse = Subscription1;

/** Optional parameters. */
export interface TestGetDeviceSetOfOwnerOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getDeviceSetOfOwner operation. */
export type TestGetDeviceSetOfOwnerResponse = DeviceSet2;

/** Optional parameters. */
export interface TestUpdateDeviceSetOfOwnerOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the updateDeviceSetOfOwner operation. */
export type TestUpdateDeviceSetOfOwnerResponse = DeviceSet3;

/** Optional parameters. */
export interface TestDeleteDeviceSetOfOwnerOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface TestListDeviceSetsOfOwnerOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listDeviceSetsOfOwner operation. */
export type TestListDeviceSetsOfOwnerResponse = Paths1Qu9NsjV01AppsOwnerNameAppNameOwnerDeviceSetsGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface TestCreateDeviceSetOfOwnerOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createDeviceSetOfOwner operation. */
export type TestCreateDeviceSetOfOwnerResponse = DeviceSet4;

/** Optional parameters. */
export interface TestCreateDeviceSelectionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createDeviceSelection operation. */
export type TestCreateDeviceSelectionResponse = DeviceSelection;

/** Optional parameters. */
export interface TestGetDeviceConfigurationsOptionalParams
  extends coreClient.OperationOptions {
  /** The ID of the test run */
  appUploadId?: string;
}

/** Contains response data for the getDeviceConfigurations operation. */
export type TestGetDeviceConfigurationsResponse = Paths1Wime0YV01AppsOwnerNameAppNameDeviceConfigurationsGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface TestGdprExportFeatureFlagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the gdprExportFeatureFlag operation. */
export type TestGdprExportFeatureFlagResponse = Paths120IxifV01AccountTestExportFeatureflagsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface TestGdprExportAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the gdprExportAccount operation. */
export type TestGdprExportAccountResponse = PathsK7Amr2V01AccountTestExportAccountsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface TestGdprExportAccountsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the gdprExportAccounts operation. */
export type TestGdprExportAccountsResponse = PathsIp035RV01AccountTestExportGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface SymbolsGetStatusOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getStatus operation. */
export type SymbolsGetStatusResponse = PathsZwg80MV01AppsOwnerNameAppNameSymbolsSymbolIdStatusGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface SymbolsGetLocationOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getLocation operation. */
export type SymbolsGetLocationResponse = Paths1PukseV01AppsOwnerNameAppNameSymbolsSymbolIdLocationGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface SymbolsIgnoreOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the ignore operation. */
export type SymbolsIgnoreResponse = Paths1K4YzazV01AppsOwnerNameAppNameSymbolsSymbolIdIgnorePostResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface SymbolsGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SymbolsGetResponse = PathsK9XnpbV01AppsOwnerNameAppNameSymbolsSymbolIdGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface SymbolsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type SymbolsListResponse = PathsRp7XckV01AppsOwnerNameAppNameSymbolsGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface SymbolUploadsGetLocationOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getLocation operation. */
export type SymbolUploadsGetLocationResponse = Paths18Q3NddV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdLocationGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface SymbolUploadsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SymbolUploadsGetResponse = Paths1Eu1ZwcV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface SymbolUploadsCompleteOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the complete operation. */
export type SymbolUploadsCompleteResponse = Paths2Sc2IcV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdPatchResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface SymbolUploadsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the delete operation. */
export type SymbolUploadsDeleteResponse = PathsH20WogV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdDeleteResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface SymbolUploadsListOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of results to return. */
  top?: number;
  /**
   * Filter results by the current status of a symbol upload: * all: all states in the symbol upload process. Includes created, aborted, committed, processing, indexed and failed states * uploaded: all states after package is uploaded. Includes committed, processing, indexed and failed states * processed: symbol upload processing is completed. Includes indexed and failed states.
   *
   */
  status?: Enum226;
  /** The type of symbols */
  symbolType?: Enum227;
}

/** Contains response data for the list operation. */
export type SymbolUploadsListResponse = Paths5Jmb0FV01AppsOwnerNameAppNameSymbolUploadsGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface SymbolUploadsCreateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the create operation. */
export type SymbolUploadsCreateResponse = Paths1B3N0BtV01AppsOwnerNameAppNameSymbolUploadsPostResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface StoreNotificationsGetNotificationByAppIdOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getNotificationByAppId operation. */
export type StoreNotificationsGetNotificationByAppIdResponse = Paths18FdbxcV01AppsOwnerNameAppNameStoreServiceStatusGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface RepositoriesListOptionalParams
  extends coreClient.OperationOptions {
  /** Filter repositories only for specified account and project, "vstsProjectId" is required */
  vstsAccountName?: string;
  /** Filter repositories only for specified account and project, "vstsAccountName" is required */
  vstsProjectId?: string;
  /** The id of the service connection (private). Required for GitLab self-hosted repositories */
  serviceConnectionId?: string;
  /** The selected form of the object */
  form?: Enum234;
}

/** Contains response data for the list operation. */
export type RepositoriesListResponse = PathsFt7OwuV01AppsOwnerNameAppNameSourceHostsSourceHostRepositoriesGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface RepositoryConfigurationsListOptionalParams
  extends coreClient.OperationOptions {
  /** Include inactive configurations if none are active */
  includeInactive?: boolean;
}

/** Contains response data for the list operation. */
export type RepositoryConfigurationsListResponse = PathsIxrc01V01AppsOwnerNameAppNameRepoConfigGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface RepositoryConfigurationsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type RepositoryConfigurationsCreateOrUpdateResponse = Paths1I47WvgV01AppsOwnerNameAppNameRepoConfigPostResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface RepositoryConfigurationsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the delete operation. */
export type RepositoryConfigurationsDeleteResponse = PathsX38Gw3V01AppsOwnerNameAppNameRepoConfigDeleteResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ProvisioningProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the profile operation. */
export type ProvisioningProfileOperationResponse = ProvisioningProfileResponse;

/** Optional parameters. */
export interface PushConfigExistsOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface PushGetConfigOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getConfig operation. */
export type PushGetConfigResponse = Paths1C7Oun7V01AppsOwnerNameAppNamePushNotificationsConfigGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface PushSetConfigOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the setConfig operation. */
export type PushSetConfigResponse = Paths176Xq3CV01AppsOwnerNameAppNamePushNotificationsConfigPutResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface PushDeleteConfigOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface PushGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PushGetResponse = Paths1NjrudiV01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface PushListOptionalParams extends coreClient.OperationOptions {
  /** The maximum number of results to return. (0 will fetch all results) */
  top?: number;
  /** The value identifies a starting point in the collection of entities. This parameter along with limit is used to perform pagination. */
  skiptoken?: string;
  /** controls the sorting order and sorting based on which column */
  orderby?: string;
  /** Controls whether or not to include a count of all the items across all pages. */
  inlinecount?: Enum288;
  /** Include arhived push notifications */
  includeArchived?: boolean;
}

/** Contains response data for the list operation. */
export type PushListResponse = Paths1YjfjrmV01AppsOwnerNameAppNamePushNotificationsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface PushSendOptionalParams extends coreClient.OperationOptions {
  /** Type of Notification target (audiences, devices, user ids, account ids or broadcast). The object must include the correct properties for the specified target type except for broadcast. */
  notificationTarget?: PostContentSchemaNotificationTarget;
}

/** Contains response data for the send operation. */
export type PushSendResponse = PushSendHeaders &
  PathsKpnezyV01AppsOwnerNameAppNamePushNotificationsPostResponses202ContentApplicationJsonSchema;

/** Optional parameters. */
export interface PushDeleteOptionalParams extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface PushDeleteInstallIdOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface PushExportDevicesStatusOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the exportDevicesStatus operation. */
export type PushExportDevicesStatusResponse = Paths1UomvgvV01AppsOwnerNameAppNamePushDeviceExportsExportIdGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface PushExportDevicesOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the exportDevices operation. */
export type PushExportDevicesResponse = Paths11Qat48V01AppsOwnerNameAppNamePushDeviceExportsPostResponses202ContentApplicationJsonSchema;

/** Optional parameters. */
export interface FileAssetsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Any object */
  payload?: Record<string, unknown>;
}

/** Contains response data for the create operation. */
export type FileAssetsCreateResponse = PathsUd9Bz2V01AppsOwnerNameAppNameFileAssetPostResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ExportConfigurationsEnableOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface ExportConfigurationsDisableOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface ExportConfigurationsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ExportConfigurationsGetResponse = Paths1OysruzV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ExportConfigurationsPartialUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the partialUpdate operation. */
export type ExportConfigurationsPartialUpdateResponse = Paths420JlyV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdPatchResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ExportConfigurationsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface ExportConfigurationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ExportConfigurationsListResponse = Paths1FgwvpvV01AppsOwnerNameAppNameExportConfigurationsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ExportConfigurationsCreateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the create operation. */
export type ExportConfigurationsCreateResponse = Paths95VcrfV01AppsOwnerNameAppNameExportConfigurationsPostResponses202ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ErrorsListSessionLogsOptionalParams
  extends coreClient.OperationOptions {
  /** Date of data requested */
  date?: Date;
}

/** Contains response data for the listSessionLogs operation. */
export type ErrorsListSessionLogsResponse = PathsBfc8KpV01AppsOwnerNameAppNameErrorsErroridSessionlogsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ErrorsErrorAttachmentTextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the errorAttachmentText operation. */
export type ErrorsErrorAttachmentTextResponse = Paths11EzzhyV01AppsOwnerNameAppNameErrorsErroridAttachmentsAttachmentidTextGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ErrorsErrorAttachmentLocationOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the errorAttachmentLocation operation. */
export type ErrorsErrorAttachmentLocationResponse = Paths1Pujyq9V01AppsOwnerNameAppNameErrorsErroridAttachmentsAttachmentidLocationGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ErrorsErrorAttachmentsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the errorAttachments operation. */
export type ErrorsErrorAttachmentsResponse = Paths1M1B7O1V01AppsOwnerNameAppNameErrorsErroridAttachmentsGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface ErrorsErrorSearchOptionalParams
  extends coreClient.OperationOptions {
  /** A filter as specified in OData notation */
  filter?: string;
  /** A query string */
  q?: string;
  /** It controls the order of sorting */
  order?: Enum334;
  /** It controls the sort based on specified field */
  sort?: Enum335;
  /** The maximum number of results to return */
  top?: number;
  /** The offset (starting at 0) of the first result to return. This parameter along with limit is used to perform pagination. */
  skip?: number;
}

/** Contains response data for the errorSearch operation. */
export type ErrorsErrorSearchResponse = Paths10EnauhV01AppsOwnerNameAppNameErrorsSearchGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ErrorsPutRetentionSettingsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the putRetentionSettings operation. */
export type ErrorsPutRetentionSettingsResponse = PathsW5Guk3V01AppsOwnerNameAppNameErrorsRetentionSettingsPutResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ErrorsGetRetentionSettingsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getRetentionSettings operation. */
export type ErrorsGetRetentionSettingsResponse = Paths4IzvtlV01AppsOwnerNameAppNameErrorsRetentionSettingsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ErrorsErrorFreeDevicePercentagesOptionalParams
  extends coreClient.OperationOptions {
  /** Last date time in data in ISO 8601 date time format */
  end?: Date;
  /** description */
  versions?: string[];
  /** app build */
  appBuild?: string;
  /** Type of error (handled vs unhandled), excluding All */
  errorType?: Enum342;
}

/** Contains response data for the errorFreeDevicePercentages operation. */
export type ErrorsErrorFreeDevicePercentagesResponse = PathsXb2Xr7V01AppsOwnerNameAppNameErrorsErrorfreedevicepercentagesGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ErrorsGroupErrorStackTraceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the groupErrorStackTrace operation. */
export type ErrorsGroupErrorStackTraceResponse = DiagnosticsStackTrace;

/** Optional parameters. */
export interface ErrorsGroupOperatingSystemCountsOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of results to return. (0 will fetch all results till the max number.) */
  top?: number;
}

/** Contains response data for the groupOperatingSystemCounts operation. */
export type ErrorsGroupOperatingSystemCountsResponse = PathsAhgr5MV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidOperatingsystemsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ErrorsGroupModelCountsOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of results to return. (0 will fetch all results till the max number.) */
  top?: number;
}

/** Contains response data for the groupModelCounts operation. */
export type ErrorsGroupModelCountsResponse = PathsNvwrx0V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidModelsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ErrorsErrorStackTraceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the errorStackTrace operation. */
export type ErrorsErrorStackTraceResponse = DiagnosticsStackTrace;

/** Optional parameters. */
export interface ErrorsErrorLocationOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the errorLocation operation. */
export type ErrorsErrorLocationResponse = PathsPwx6QwV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridLocationGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ErrorsErrorDownloadOptionalParams
  extends coreClient.OperationOptions {
  /** the format of the crash log */
  format?: Enum353;
}

/** Contains response data for the errorDownload operation. */
export type ErrorsErrorDownloadResponse = {
  /**
   * BROWSER ONLY
   *
   * The response body as a browser Blob.
   * Always `undefined` in node.js.
   */
  blobBody?: Promise<Blob>;
  /**
   * NODEJS ONLY
   *
   * The response body as a node.js Readable stream.
   * Always `undefined` in the browser.
   */
  readableStreamBody?: NodeJS.ReadableStream;
};

/** Optional parameters. */
export interface ErrorsGetErrorDetailsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getErrorDetails operation. */
export type ErrorsGetErrorDetailsResponse = Paths1GvcgvwV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ErrorsDeleteErrorOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the deleteError operation. */
export type ErrorsDeleteErrorResponse = PathsNvbd0FV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridDeleteResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ErrorsLatestErrorDetailsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the latestErrorDetails operation. */
export type ErrorsLatestErrorDetailsResponse = Paths134SdxmV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsLatestGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ErrorsListForGroupOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of results to return. (0 will fetch all results till the max number.) */
  top?: number;
  /** Last date time in data in ISO 8601 date time format */
  end?: Date;
  /** test */
  model?: string;
  /** test */
  os?: string;
}

/** Contains response data for the listForGroup operation. */
export type ErrorsListForGroupResponse = Paths18I7702V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ErrorsGroupErrorFreeDevicePercentagesOptionalParams
  extends coreClient.OperationOptions {
  /** Last date time in data in ISO 8601 date time format */
  end?: Date;
}

/** Contains response data for the groupErrorFreeDevicePercentages operation. */
export type ErrorsGroupErrorFreeDevicePercentagesResponse = Paths1Eek5ByV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorfreedevicepercentagesGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ErrorsGroupCountsPerDayOptionalParams
  extends coreClient.OperationOptions {
  /** Last date time in data in ISO 8601 date time format */
  end?: Date;
  /** test */
  version?: string;
}

/** Contains response data for the groupCountsPerDay operation. */
export type ErrorsGroupCountsPerDayResponse = Paths1O2Ld6PV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorcountsperdayGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ErrorsGroupDetailsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the groupDetails operation. */
export type ErrorsGroupDetailsResponse = Paths1Xy5MxmV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ErrorsUpdateStateOptionalParams
  extends coreClient.OperationOptions {
  annotation?: string;
}

/** Contains response data for the updateState operation. */
export type ErrorsUpdateStateResponse = Paths1W42Yn6V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidPatchResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ErrorsErrorGroupsSearchOptionalParams
  extends coreClient.OperationOptions {
  /** A filter as specified in OData notation */
  filter?: string;
  /** A query string */
  q?: string;
  /** The maximum number of results to return */
  top?: number;
  /** The offset (starting at 0) of the first result to return. This parameter along with limit is used to perform pagination. */
  skip?: number;
  /** It controls the order of sorting */
  order?: Enum370;
  /** It controls the sort based on specified field */
  sort?: Enum371;
}

/** Contains response data for the errorGroupsSearch operation. */
export type ErrorsErrorGroupsSearchResponse = Paths3Uj0Q0V01AppsOwnerNameAppNameErrorsErrorgroupsSearchGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ErrorsGroupListOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of results to return. (0 will fetch all results till the max number.) */
  top?: number;
  /** controls the sorting order and sorting based on which column */
  orderby?: string;
  /** Last date time in data in ISO 8601 date time format */
  end?: Date;
  /** app build */
  appBuild?: string;
  /** test */
  version?: string;
  /** test */
  groupState?: string;
  /** Type of error (handled vs unhandled), including All */
  errorType?: Enum375;
}

/** Contains response data for the groupList operation. */
export type ErrorsGroupListResponse = Paths10KtxpjV01AppsOwnerNameAppNameErrorsErrorgroupsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ErrorsCountsPerDayOptionalParams
  extends coreClient.OperationOptions {
  /** Last date time in data in ISO 8601 date time format */
  end?: Date;
  /** app build */
  appBuild?: string;
  /** test */
  version?: string;
  /** Type of error (handled vs unhandled), excluding All */
  errorType?: Enum379;
}

/** Contains response data for the countsPerDay operation. */
export type ErrorsCountsPerDayResponse = Paths5Bnd9KV01AppsOwnerNameAppNameErrorsErrorcountsperdayGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ErrorsAvailableVersionsOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of results to return. (0 will fetch all results till the max number.) */
  top?: number;
  /** The offset (starting at 0) of the first result to return. This parameter along with limit is used to perform pagination. */
  skip?: number;
  /** Last date time in data in ISO 8601 date time format */
  end?: Date;
  /** A filter as specified in https://github.com/microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering. */
  filter?: string;
  /** Controls whether or not to include a count of all the items across all pages. */
  inlinecount?: Enum381;
  /** Type of error (handled vs unhandled), including All */
  errorType?: Enum382;
}

/** Contains response data for the availableVersions operation. */
export type ErrorsAvailableVersionsResponse = Paths1Wi49JqV01AppsOwnerNameAppNameErrorsAvailableVersionsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ErrorsAppBuildsListOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of results to return. (0 will fetch all results till the max number.) */
  top?: number;
  /** Last date time in data in ISO 8601 date time format */
  end?: Date;
  /** Type of error (handled vs unhandled), including All */
  errorType?: Enum384;
}

/** Contains response data for the appBuildsList operation. */
export type ErrorsAppBuildsListResponse = Paths1Cq491NV01AppsOwnerNameAppNameErrorsAvailableappbuildsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface StoreReleasesGetRealTimeStatusByReleaseIdOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getRealTimeStatusByReleaseId operation. */
export type StoreReleasesGetRealTimeStatusByReleaseIdResponse = PathsHaqcuV01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdRealtimestatusGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface StoreReleasesGetPublishErrorOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getPublishError operation. */
export type StoreReleasesGetPublishErrorResponse = PathsAk7Qf9V01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdPublishErrorDetailsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface StoreReleasesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type StoreReleasesGetResponse = Paths16Kcv4PV01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface StoreReleasesDeleteOptionalParams
  extends coreClient.OperationOptions {
  body?: string;
}

/** Optional parameters. */
export interface StoreReleasesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type StoreReleasesListResponse = PathsWia9WV01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface StoreReleasesGetLatestOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getLatest operation. */
export type StoreReleasesGetLatestResponse = PathsT560UdV01AppsOwnerNameAppNameDistributionStoresStoreNameLatestReleaseGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface StoreReleasePublishLogsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface StoresGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type StoresGetResponse = Paths17Ft4FaV01AppsOwnerNameAppNameDistributionStoresStoreNameGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface StoresPatchOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface StoresDeleteOptionalParams
  extends coreClient.OperationOptions {
  body?: string;
}

/** Optional parameters. */
export interface StoresCreateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the create operation. */
export type StoresCreateResponse = PathsM4SyzbV01AppsOwnerNameAppNameDistributionStoresPostResponses201ContentApplicationJsonSchema;

/** Optional parameters. */
export interface StoresListOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type StoresListResponse = Paths1WzhejqV01AppsOwnerNameAppNameDistributionStoresGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface MissingSymbolGroupsInfoOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the info operation. */
export type MissingSymbolGroupsInfoResponse = Paths11FvsglV01AppsOwnerNameAppNameDiagnosticsSymbolGroupsInfoGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface MissingSymbolGroupsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type MissingSymbolGroupsGetResponse = Paths12L0F2LV01AppsOwnerNameAppNameDiagnosticsSymbolGroupsSymbolGroupIdGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface MissingSymbolGroupsListOptionalParams
  extends coreClient.OperationOptions {
  /** query filter */
  filter?: string;
}

/** Contains response data for the list operation. */
export type MissingSymbolGroupsListResponse = PathsQn5ExjV01AppsOwnerNameAppNameDiagnosticsSymbolGroupsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AppBlockLogsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the blockLogs operation. */
export type AppBlockLogsResponse = {
  /** The parsed response body. */
  body: string;
};

/** Optional parameters. */
export interface CodePushDeploymentUploadCreateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the create operation. */
export type CodePushDeploymentUploadCreateResponse = Paths1Kb13FjV01AppsOwnerNameAppNameDeploymentsDeploymentNameUploadsPostResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface CodePushDeploymentReleaseRollbackOptionalParams
  extends coreClient.OperationOptions {
  label?: string;
}

/** Contains response data for the rollback operation. */
export type CodePushDeploymentReleaseRollbackResponse = PathsCv4Vu0V01AppsOwnerNameAppNameDeploymentsDeploymentNameRollbackReleasePostResponses201ContentApplicationJsonSchema;

/** Optional parameters. */
export interface DeploymentReleasesUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type DeploymentReleasesUpdateResponse = PathsIvaackV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesReleaseLabelPatchResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface CodePushDeploymentReleasesDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface CodePushDeploymentReleasesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type CodePushDeploymentReleasesGetResponse = PathsJ4L197V01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface CodePushDeploymentReleasesCreateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the create operation. */
export type CodePushDeploymentReleasesCreateResponse = Paths1N68We7V01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesPostResponses201ContentApplicationJsonSchema;

/** Optional parameters. */
export interface CodePushDeploymentsPromoteOptionalParams
  extends coreClient.OperationOptions {
  /** Release to be promoted, only needs to provide optional fields, description, label, disabled, mandatory, rollout, targetBinaryVersion */
  release?: PathsOn7Se0V01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostRequestbodyContentApplicationJsonSchema;
}

/** Contains response data for the promote operation. */
export type CodePushDeploymentsPromoteResponse = Paths1Ou643ZV01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface CodePushDeploymentsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Any object */
  body?: Record<string, unknown>;
}

/** Optional parameters. */
export interface CodePushDeploymentsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type CodePushDeploymentsGetResponse = PathsP17HdtV01AppsOwnerNameAppNameDeploymentsDeploymentNameGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface CodePushDeploymentsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface CodePushDeploymentsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type CodePushDeploymentsListResponse = Paths1Hq3VntV01AppsOwnerNameAppNameDeploymentsGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface CodePushDeploymentsCreateOptionalParams
  extends coreClient.OperationOptions {
  key?: string;
  latestRelease?: PostContentSchemaLatestRelease;
}

/** Contains response data for the create operation. */
export type CodePushDeploymentsCreateResponse = PathsPwjhi2V01AppsOwnerNameAppNameDeploymentsPostResponses201ContentApplicationJsonSchema;

/** Optional parameters. */
export interface CodePushDeploymentMetricsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type CodePushDeploymentMetricsGetResponse = Paths1Fpy0IjV01AppsOwnerNameAppNameDeploymentsDeploymentNameMetricsGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface DataGetResourceProvisioningOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getResourceProvisioning operation. */
export type DataGetResourceProvisioningResponse = {
  /**
   * BROWSER ONLY
   *
   * The response body as a browser Blob.
   * Always `undefined` in node.js.
   */
  blobBody?: Promise<Blob>;
  /**
   * NODEJS ONLY
   *
   * The response body as a node.js Readable stream.
   * Always `undefined` in the browser.
   */
  readableStreamBody?: NodeJS.ReadableStream;
};

/** Optional parameters. */
export interface DataPostResourceProvisioningOptionalParams
  extends coreClient.OperationOptions {
  provisionDatabaseParameters?: PathsA5R1LbV01AppsOwnerNameAppNameDataResourceProvisioningPostRequestbodyContentApplicationJsonSchema;
}

/** Contains response data for the postResourceProvisioning operation. */
export type DataPostResourceProvisioningResponse = PathsAv3L5YV01AppsOwnerNameAppNameDataResourceProvisioningPostResponses202ContentApplicationJsonSchema;

/** Optional parameters. */
export interface DataGetOverviewOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getOverview operation. */
export type DataGetOverviewResponse = {
  /**
   * BROWSER ONLY
   *
   * The response body as a browser Blob.
   * Always `undefined` in node.js.
   */
  blobBody?: Promise<Blob>;
  /**
   * NODEJS ONLY
   *
   * The response body as a node.js Readable stream.
   * Always `undefined` in the browser.
   */
  readableStreamBody?: NodeJS.ReadableStream;
};

/** Optional parameters. */
export interface DataCheckNameExistsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkNameExists operation. */
export type DataCheckNameExistsResponse = {
  /**
   * BROWSER ONLY
   *
   * The response body as a browser Blob.
   * Always `undefined` in node.js.
   */
  blobBody?: Promise<Blob>;
  /**
   * NODEJS ONLY
   *
   * The response body as a node.js Readable stream.
   * Always `undefined` in the browser.
   */
  readableStreamBody?: NodeJS.ReadableStream;
};

/** Optional parameters. */
export interface CrashGroupsGetStacktraceOptionalParams
  extends coreClient.OperationOptions {
  /** true if the stacktrace should be only the relevant thread / exception. Default is false */
  groupingOnly?: boolean;
}

/** Contains response data for the getStacktrace operation. */
export type CrashGroupsGetStacktraceResponse = Stacktrace;

/** Optional parameters. */
export interface CrashGroupsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type CrashGroupsGetResponse = PathsHnvr1EV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface CrashGroupsUpdateOptionalParams
  extends coreClient.OperationOptions {
  status?: Enum467;
  annotation?: string;
}

/** Contains response data for the update operation. */
export type CrashGroupsUpdateResponse = Paths6Qmpl3V01AppsOwnerNameAppNameCrashGroupsCrashGroupIdPatchResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface CrashGroupsListOptionalParams
  extends coreClient.OperationOptions {
  /** version */
  appVersion?: string;
  /** Earliest date when the last time a crash occured in a crash group */
  lastOccurrenceFrom?: Date;
  /** Latest date when the last time a crash occured in a crash group */
  lastOccurrenceTo?: Date;
  /** test */
  groupType?: Enum470;
  /** test */
  groupStatus?: Enum471;
  /** A freetext search that matches in crash, crash types, crash stack_traces and crash user */
  groupTextSearch?: string;
  /** the OData-like $orderby argument */
  orderby?: Enum472;
  /** Cassandra request continuation token. The token is used for pagination. */
  continuationToken?: string;
}

/** Contains response data for the list operation. */
export type CrashGroupsListResponse = PathsScc799V01AppsOwnerNameAppNameCrashGroupsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface CommitsListByShaListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByShaList operation. */
export type CommitsListByShaListResponse = PathsCbr4BhV01AppsOwnerNameAppNameCommitsBatchGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface BugTrackerGetRepoIssueFromCrashOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getRepoIssueFromCrash operation. */
export type BugTrackerGetRepoIssueFromCrashResponse = Paths1G7Ul4DV01AppsOwnerNameAppNameBugtrackerCrashgroupCrashGroupIdGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface BugTrackerGetSettingsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getSettings operation. */
export type BugTrackerGetSettingsResponse = Paths7O6EcbV01AppsOwnerNameAppNameBugtrackerGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface BranchConfigurationsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type BranchConfigurationsGetResponse = PathsRuhky8V01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface BranchConfigurationsCreateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the create operation. */
export type BranchConfigurationsCreateResponse = PathsYdemoiV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface BranchConfigurationsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type BranchConfigurationsUpdateResponse = PathsRa6DxlV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface BranchConfigurationsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Any object */
  payload?: Record<string, unknown>;
}

/** Contains response data for the delete operation. */
export type BranchConfigurationsDeleteResponse = PathsQs07S5V01AppsOwnerNameAppNameBranchesBranchConfigDeleteResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface IdentityGetUsersOptionalParams
  extends coreClient.OperationOptions {
  /** MSGraph Auth Token */
  aCAuthorizationAADGraph?: string;
  /** User search term */
  searchTerm?: string;
}

/** Contains response data for the getUsers operation. */
export type IdentityGetUsersResponse = {
  /**
   * BROWSER ONLY
   *
   * The response body as a browser Blob.
   * Always `undefined` in node.js.
   */
  blobBody?: Promise<Blob>;
  /**
   * NODEJS ONLY
   *
   * The response body as a node.js Readable stream.
   * Always `undefined` in the browser.
   */
  readableStreamBody?: NodeJS.ReadableStream;
};

/** Optional parameters. */
export interface AppleMappingTestFlightGroupsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the testFlightGroups operation. */
export type AppleMappingTestFlightGroupsResponse = PathsZew5JgV01AppsOwnerNameAppNameAppleTestFlightGroupsGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface AppleMappingGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AppleMappingGetResponse = PathsH96V4UV01AppsOwnerNameAppNameAppleMappingGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AppleMappingDeleteOptionalParams
  extends coreClient.OperationOptions {
  body?: string;
}

/** Optional parameters. */
export interface AppleMappingCreateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the create operation. */
export type AppleMappingCreateResponse = Paths1J6Tdl2V01AppsOwnerNameAppNameAppleMappingPostResponses201ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AppApiTokensDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the delete operation. */
export type AppApiTokensDeleteResponse = Paths1NebezpV01AppsOwnerNameAppNameApiTokensApiTokenIdDeleteResponses400ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AppApiTokensListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type AppApiTokensListResponse = PathsVpkwjrV01AppsOwnerNameAppNameApiTokensGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface AppApiTokensCreateOptionalParams
  extends coreClient.OperationOptions {
  /** The description of the token */
  description?: string;
  /** The scope for this token. */
  scope?: PostContentSchemaScopeItem[];
}

/** Contains response data for the create operation. */
export type AppApiTokensCreateResponse = Paths1FrjyzkV01AppsOwnerNameAppNameApiTokensPostResponses201ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AnalyticsVersionsOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of results to return. (0 will fetch all results) */
  top?: number;
  /** Last date time in data in ISO 8601 date time format. */
  end?: Date;
  /** test */
  versions?: string[];
}

/** Contains response data for the versions operation. */
export type AnalyticsVersionsResponse = Paths1Lu7Qn2V01AppsOwnerNameAppNameAnalyticsVersionsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AnalyticsPerDeviceCountsOptionalParams
  extends coreClient.OperationOptions {
  /** Last date time in data in ISO 8601 date time format. */
  end?: Date;
  /** test */
  versions?: string[];
}

/** Contains response data for the perDeviceCounts operation. */
export type AnalyticsPerDeviceCountsResponse = PathsG2CzwV01AppsOwnerNameAppNameAnalyticsSessionsPerDeviceGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AnalyticsSessionDurationsDistributionOptionalParams
  extends coreClient.OperationOptions {
  /** Last date time in data in ISO 8601 date time format. */
  end?: Date;
  /** test */
  versions?: string[];
}

/** Contains response data for the sessionDurationsDistribution operation. */
export type AnalyticsSessionDurationsDistributionResponse = PathsLck9IlV01AppsOwnerNameAppNameAnalyticsSessionDurationsDistributionGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AnalyticsSessionCountsOptionalParams
  extends coreClient.OperationOptions {
  /** Last date time in data in ISO 8601 date time format. */
  end?: Date;
  /** test */
  versions?: string[];
}

/** Contains response data for the sessionCounts operation. */
export type AnalyticsSessionCountsResponse = Paths1Exxd1EV01AppsOwnerNameAppNameAnalyticsSessionCountsGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface AnalyticsPlaceCountsOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of results to return. (0 will fetch all results) */
  top?: number;
  /** Last date time in data in ISO 8601 date time format. */
  end?: Date;
  /** test */
  versions?: string[];
}

/** Contains response data for the placeCounts operation. */
export type AnalyticsPlaceCountsResponse = PathsRxbv8DV01AppsOwnerNameAppNameAnalyticsPlacesGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AnalyticsOperatingSystemCountsOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of results to return. (0 will fetch all results) */
  top?: number;
  /** Last date time in data in ISO 8601 date time format. */
  end?: Date;
  /** test */
  versions?: string[];
}

/** Contains response data for the operatingSystemCounts operation. */
export type AnalyticsOperatingSystemCountsResponse = Paths19DmkkdV01AppsOwnerNameAppNameAnalyticsOsesGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AnalyticsModelCountsOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of results to return. (0 will fetch all results) */
  top?: number;
  /** Last date time in data in ISO 8601 date time format. */
  end?: Date;
  /** test */
  versions?: string[];
}

/** Contains response data for the modelCounts operation. */
export type AnalyticsModelCountsResponse = Paths814LkhV01AppsOwnerNameAppNameAnalyticsModelsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AnalyticsLogFlowOptionalParams
  extends coreClient.OperationOptions {
  /** Start date time in data in ISO 8601 date time format. It must be within the current day in the UTC timezone. The default value is the start time of the current day in UTC timezone. */
  start?: Date;
}

/** Contains response data for the logFlow operation. */
export type AnalyticsLogFlowResponse = PathsW9Dr0CV01AppsOwnerNameAppNameAnalyticsLogFlowGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AnalyticsLanguageCountsOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of results to return. (0 will fetch all results) */
  top?: number;
  /** Last date time in data in ISO 8601 date time format. */
  end?: Date;
  /** test */
  versions?: string[];
}

/** Contains response data for the languageCounts operation. */
export type AnalyticsLanguageCountsResponse = PathsD2NxbnV01AppsOwnerNameAppNameAnalyticsLanguagesGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AnalyticsGenericLogFlowOptionalParams
  extends coreClient.OperationOptions {
  /** Start date time in data in ISO 8601 date time format. It must be within the current day in the UTC timezone. The default value is the start time of the current day in UTC timezone. */
  start?: Date;
}

/** Contains response data for the genericLogFlow operation. */
export type AnalyticsGenericLogFlowResponse = Paths14I7I2XV01AppsOwnerNameAppNameAnalyticsGenericLogFlowGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AnalyticsEventPropertyCountsOptionalParams
  extends coreClient.OperationOptions {
  /** Last date time in data in ISO 8601 date time format. */
  end?: Date;
  /** test */
  versions?: string[];
  /** The number of property values to return. Set to 0 in order to fetch all results available. */
  top?: number;
}

/** Contains response data for the eventPropertyCounts operation. */
export type AnalyticsEventPropertyCountsResponse = PathsC87RxV01AppsOwnerNameAppNameAnalyticsEventsEventNamePropertiesEventPropertyNameCountsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AnalyticsEventPropertiesOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the eventProperties operation. */
export type AnalyticsEventPropertiesResponse = PathsU48L8WV01AppsOwnerNameAppNameAnalyticsEventsEventNamePropertiesGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AnalyticsEventCountOptionalParams
  extends coreClient.OperationOptions {
  /** Last date time in data in ISO 8601 date time format. */
  end?: Date;
  /** test */
  versions?: string[];
}

/** Contains response data for the eventCount operation. */
export type AnalyticsEventCountResponse = PathsTigd7TV01AppsOwnerNameAppNameAnalyticsEventsEventNameEventCountGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AnalyticsEventDeviceCountOptionalParams
  extends coreClient.OperationOptions {
  /** Last date time in data in ISO 8601 date time format. */
  end?: Date;
  /** test */
  versions?: string[];
}

/** Contains response data for the eventDeviceCount operation. */
export type AnalyticsEventDeviceCountResponse = PathsZz2O50V01AppsOwnerNameAppNameAnalyticsEventsEventNameDeviceCountGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AnalyticsEventPerSessionCountOptionalParams
  extends coreClient.OperationOptions {
  /** Last date time in data in ISO 8601 date time format. */
  end?: Date;
  /** test */
  versions?: string[];
}

/** Contains response data for the eventPerSessionCount operation. */
export type AnalyticsEventPerSessionCountResponse = Paths1Ggxk2EV01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerSessionGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AnalyticsEventPerDeviceCountOptionalParams
  extends coreClient.OperationOptions {
  /** Last date time in data in ISO 8601 date time format. */
  end?: Date;
  /** test */
  versions?: string[];
}

/** Contains response data for the eventPerDeviceCount operation. */
export type AnalyticsEventPerDeviceCountResponse = Paths1Eiee2V01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerDeviceGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AnalyticsEventsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface AnalyticsEventsOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of results to return. (0 will fetch all results) */
  top?: number;
  /** controls the sorting order and sorting based on which column */
  orderby?: string;
  /** The offset (starting at 0) of the first result to return. This parameter along with limit is used to perform pagination. */
  skip?: number;
  /** Last date time in data in ISO 8601 date time format. */
  end?: Date;
  /** test */
  versions?: string[];
  /** To select the specific events. */
  eventName?: string[];
  /** Controls whether or not to include a count of all the items across all pages. */
  inlinecount?: Enum553;
}

/** Contains response data for the events operation. */
export type AnalyticsEventsResponse = PathsDtblk4V01AppsOwnerNameAppNameAnalyticsEventsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AnalyticsEventsDeleteLogsOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface AnalyticsDistributionReleaseCountsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the distributionReleaseCounts operation. */
export type AnalyticsDistributionReleaseCountsResponse = Paths1Vmnk7OV01AppsOwnerNameAppNameAnalyticsDistributionReleaseCountsPostResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AnalyticsCrashFreeDevicePercentagesOptionalParams
  extends coreClient.OperationOptions {
  /** Last date time in data in ISO 8601 date time format. */
  end?: Date;
}

/** Contains response data for the crashFreeDevicePercentages operation. */
export type AnalyticsCrashFreeDevicePercentagesResponse = Paths1Evy1PhV01AppsOwnerNameAppNameAnalyticsCrashfreeDevicePercentagesGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AnalyticsCrashGroupTotalsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the crashGroupTotals operation. */
export type AnalyticsCrashGroupTotalsResponse = PathsBb6J7UV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdOverallGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AnalyticsCrashGroupOperatingSystemCountsOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of results to return. (0 will fetch all results) */
  top?: number;
}

/** Contains response data for the crashGroupOperatingSystemCounts operation. */
export type AnalyticsCrashGroupOperatingSystemCountsResponse = Paths1U5H2EiV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdOperatingSystemsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AnalyticsCrashGroupModelCountsOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of results to return. (0 will fetch all results) */
  top?: number;
}

/** Contains response data for the crashGroupModelCounts operation. */
export type AnalyticsCrashGroupModelCountsResponse = Paths130SxupV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdModelsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AnalyticsCrashGroupCountsOptionalParams
  extends coreClient.OperationOptions {
  /** Last date time in data in ISO 8601 date time format. */
  end?: Date;
}

/** Contains response data for the crashGroupCounts operation. */
export type AnalyticsCrashGroupCountsResponse = Paths1NileprV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdCrashCountsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AnalyticsCrashGroupsTotalsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the crashGroupsTotals operation. */
export type AnalyticsCrashGroupsTotalsResponse = PathsP18M6YV01AppsOwnerNameAppNameAnalyticsCrashGroupsPostResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface AnalyticsCrashCountsOptionalParams
  extends coreClient.OperationOptions {
  /** Last date time in data in ISO 8601 date time format. */
  end?: Date;
  /** test */
  versions?: string[];
}

/** Contains response data for the crashCounts operation. */
export type AnalyticsCrashCountsResponse = Paths5Ga8JpV01AppsOwnerNameAppNameAnalyticsCrashCountsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AnalyticsAudienceNameExistsOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface AnalyticsDeleteAudienceOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface AnalyticsGetAudienceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getAudience operation. */
export type AnalyticsGetAudienceResponse = Paths1Tl18ZeV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNameGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AnalyticsCreateOrUpdateAudienceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdateAudience operation. */
export type AnalyticsCreateOrUpdateAudienceResponse = PathsAem3LcV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNamePutResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AnalyticsListDevicePropertyValuesOptionalParams
  extends coreClient.OperationOptions {
  /** Contains string */
  contains?: string;
}

/** Contains response data for the listDevicePropertyValues operation. */
export type AnalyticsListDevicePropertyValuesResponse = PathsOw62VsV01AppsOwnerNameAppNameAnalyticsAudiencesMetadataDevicePropertiesPropertyNameValuesGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AnalyticsListDevicePropertiesOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listDeviceProperties operation. */
export type AnalyticsListDevicePropertiesResponse = Paths3Bwm02V01AppsOwnerNameAppNameAnalyticsAudiencesMetadataDevicePropertiesGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AnalyticsListCustomPropertiesOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listCustomProperties operation. */
export type AnalyticsListCustomPropertiesResponse = Paths6Mckw0V01AppsOwnerNameAppNameAnalyticsAudiencesMetadataCustomPropertiesGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AnalyticsTestAudienceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the testAudience operation. */
export type AnalyticsTestAudienceResponse = Paths3SvqoyV01AppsOwnerNameAppNameAnalyticsAudiencesDefinitionTestPostResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AnalyticsListAudiencesOptionalParams
  extends coreClient.OperationOptions {
  /** Include disabled audience definitions */
  includeDisabled?: boolean;
}

/** Contains response data for the listAudiences operation. */
export type AnalyticsListAudiencesResponse = PathsTx3PmsV01AppsOwnerNameAppNameAnalyticsAudiencesGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AnalyticsDeviceCountsOptionalParams
  extends coreClient.OperationOptions {
  /** Last date time in data in ISO 8601 date time format. */
  end?: Date;
  /** test */
  versions?: string[];
}

/** Contains response data for the deviceCounts operation. */
export type AnalyticsDeviceCountsResponse = PathsKudmomV01AppsOwnerNameAppNameAnalyticsActiveDeviceCountsGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface UserApiTokensDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the delete operation. */
export type UserApiTokensDeleteResponse = Paths1X61Db6V01ApiTokensApiTokenIdDeleteResponses400ContentApplicationJsonSchema;

/** Optional parameters. */
export interface UserApiTokensListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type UserApiTokensListResponse = Paths18ZssypV01ApiTokensGetResponses200ContentApplicationJsonSchemaItems[];

/** Optional parameters. */
export interface UserApiTokensCreateOptionalParams
  extends coreClient.OperationOptions {
  /** The description of the token */
  description?: string;
  /** The scope for this token. */
  scope?: Enum608[];
}

/** Contains response data for the create operation. */
export type UserApiTokensCreateResponse = PathsC2U0SxV01ApiTokensPostResponses201ContentApplicationJsonSchema;

/** Optional parameters. */
export interface AppCenterClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
