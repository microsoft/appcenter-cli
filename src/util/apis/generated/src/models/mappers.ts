/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const Paths1Jpgih6V01UsersUserIdDevicesRegisterPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Jpgih6V01UsersUserIdDevicesRegisterPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      udid: {
        serializedName: "udid",
        required: true,
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        type: {
          name: "String"
        }
      },
      serial: {
        serializedName: "serial",
        type: {
          name: "String"
        }
      },
      imei: {
        serializedName: "imei",
        type: {
          name: "String"
        }
      },
      ownerId: {
        serializedName: "owner_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths8WlmngV01UsersUserIdDevicesRegisterPostResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths8WlmngV01UsersUserIdDevicesRegisterPostResponses200ContentApplicationJsonSchema",
    modelProperties: {
      udid: {
        serializedName: "udid",
        required: true,
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        required: true,
        type: {
          name: "String"
        }
      },
      deviceName: {
        serializedName: "device_name",
        required: true,
        type: {
          name: "String"
        }
      },
      fullDeviceName: {
        serializedName: "full_device_name",
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      serial: {
        serializedName: "serial",
        type: {
          name: "String"
        }
      },
      imei: {
        serializedName: "imei",
        type: {
          name: "String"
        }
      },
      ownerId: {
        serializedName: "owner_id",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      registeredAt: {
        serializedName: "registered_at",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsCls8YvV01UsersUserIdDevicesRegisterPostResponses404ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsCls8YvV01UsersUserIdDevicesRegisterPostResponses404ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths182SsxvV01UserNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths182SsxvV01UserNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchemaAllof0",
    modelProperties: {
      requestId: {
        serializedName: "request_id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsKu8GnbV01UserNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsKu8GnbV01UserNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchemaAllof1",
    modelProperties: {
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "enabled",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      userId: {
        serializedName: "userId",
        type: {
          name: "String"
        }
      },
      settings: {
        serializedName: "settings",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Get200ApplicationJsonAllOfPropertiesItemsItem"
            }
          }
        }
      }
    }
  }
};

export const Get200ApplicationJsonAllOfPropertiesItemsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonAllOfPropertiesItemsItem",
    modelProperties: {
      eventType: {
        defaultValue: "crash_newCrashGroupCreated",
        isConstant: true,
        serializedName: "event_type",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "String"
        }
      },
      defaultValue: {
        serializedName: "default_value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1O95A70V01UserNotificationsEmailsettingsGetResponsesDefaultContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1O95A70V01UserNotificationsEmailsettingsGetResponsesDefaultContentApplicationJsonSchemaAllof0",
    modelProperties: {
      requestId: {
        serializedName: "request_id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1E5Yhn2V01UserNotificationsEmailsettingsGetResponsesDefaultContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1E5Yhn2V01UserNotificationsEmailsettingsGetResponsesDefaultContentApplicationJsonSchemaAllof1",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Bjp26QV01UserMetadataOptimizelyGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Bjp26QV01UserMetadataOptimizelyGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      userId: {
        serializedName: "userId",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const Paths15Bir6ZV01UserMetadataOptimizelyGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths15Bir6ZV01UserMetadataOptimizelyGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "GetDefaultApplicationJsonProperties"
        }
      }
    }
  }
};

export const GetDefaultApplicationJsonProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetDefaultApplicationJsonProperties",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Me00QfV01UserInvitationsOrgsInvitationTokenRejectPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Me00QfV01UserInvitationsOrgsInvitationTokenRejectPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "PostDefaultApplicationJsonProperties"
        }
      }
    }
  }
};

export const PostDefaultApplicationJsonProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PostDefaultApplicationJsonProperties",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsWyg1WoV01UserInvitationsOrgsInvitationTokenAcceptPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsWyg1WoV01UserInvitationsOrgsInvitationTokenAcceptPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1My56UdV01UserInvitationsOrgsInvitationTokenAcceptPostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1My56UdV01UserInvitationsOrgsInvitationTokenAcceptPostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1My56UdV01UserInvitationsOrgsInvitationTokenAcceptPostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths8ZdnzsV01UserInvitationsDistributionGroupsAcceptPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths8ZdnzsV01UserInvitationsDistributionGroupsAcceptPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1RmaeqqV01UserInvitationsDistributionGroupsAcceptPostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1RmaeqqV01UserInvitationsDistributionGroupsAcceptPostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1RmaeqqV01UserInvitationsDistributionGroupsAcceptPostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1De5Y4YV01UserInvitationsAppsInvitationTokenRejectPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1De5Y4YV01UserInvitationsAppsInvitationTokenRejectPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Qc6BfeV01UserInvitationsAppsInvitationTokenRejectPostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Qc6BfeV01UserInvitationsAppsInvitationTokenRejectPostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Qc6BfeV01UserInvitationsAppsInvitationTokenRejectPostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths14WkhazV01UserInvitationsAppsInvitationTokenAcceptPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths14WkhazV01UserInvitationsAppsInvitationTokenAcceptPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsKt6Uk0V01UserInvitationsAppsInvitationTokenAcceptPostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsKt6Uk0V01UserInvitationsAppsInvitationTokenAcceptPostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsKt6Uk0V01UserInvitationsAppsInvitationTokenAcceptPostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Get200ApplicationJsonItemsItem: coreClient.CompositeMapper = {
  serializedName: "Get200ApplicationJsonItemsItem",
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonItemsItem",
    uberParent: "Get200ApplicationJsonItemsItem",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      serviceType: {
        serializedName: "serviceType",
        required: true,
        type: {
          name: "String"
        }
      },
      credentialType: {
        serializedName: "credentialType",
        required: true,
        type: {
          name: "String"
        }
      },
      isValid: {
        serializedName: "isValid",
        type: {
          name: "Boolean"
        }
      },
      is2FA: {
        serializedName: "is2FA",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PathsIs7Fv3V01UserExportServiceconnectionsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsIs7Fv3V01UserExportServiceconnectionsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths18Qfkd0V01UserDsrExportTokenCancelPostResponses202ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths18Qfkd0V01UserDsrExportTokenCancelPostResponses202ContentApplicationJsonSchema",
    modelProperties: {
      token: {
        serializedName: "token",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        required: true,
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Paths1Tf7AbnV01UserDsrExportTokenCancelPostResponses503ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Tf7AbnV01UserDsrExportTokenCancelPostResponses503ContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "Post503ApplicationJsonProperties"
        }
      }
    }
  }
};

export const Post503ApplicationJsonProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Post503ApplicationJsonProperties",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsYldp5RV01UserDsrExportTokenCancelPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsYldp5RV01UserDsrExportTokenCancelPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths5Cc09TV01UserDsrExportTokenCancelPostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths5Cc09TV01UserDsrExportTokenCancelPostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths5Cc09TV01UserDsrExportTokenCancelPostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Krqtk7V01UserDsrExportTokenGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Krqtk7V01UserDsrExportTokenGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      sasUrl: {
        serializedName: "sasUrl",
        type: {
          name: "String"
        }
      },
      sasUrlExpired: {
        serializedName: "sasUrlExpired",
        type: {
          name: "Boolean"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsKhkcspV01UserDsrExportTokenGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsKhkcspV01UserDsrExportTokenGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1RoghbpV01UserDsrExportTokenGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1RoghbpV01UserDsrExportTokenGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1RoghbpV01UserDsrExportTokenGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1NpsrnaV01UserDsrExportPostResponses202ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1NpsrnaV01UserDsrExportPostResponses202ContentApplicationJsonSchema",
    modelProperties: {
      token: {
        serializedName: "token",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        required: true,
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Paths14JqlllV01UserDsrExportPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths14JqlllV01UserDsrExportPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1FayettV01UserDsrExportPostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1FayettV01UserDsrExportPostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1FayettV01UserDsrExportPostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsQga5LlV01UserDsrDeleteTokenCancelPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsQga5LlV01UserDsrDeleteTokenCancelPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsJv03TbV01UserDsrDeleteTokenCancelPostResponses202ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsJv03TbV01UserDsrDeleteTokenCancelPostResponses202ContentApplicationJsonSchema",
    modelProperties: {
      token: {
        serializedName: "token",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        required: true,
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Paths1Ysi41QV01UserDsrDeleteTokenCancelPostResponses503ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Ysi41QV01UserDsrDeleteTokenCancelPostResponses503ContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Ed0Ig5V01UserDsrDeleteTokenCancelPostResponses503ContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Ed0Ig5V01UserDsrDeleteTokenCancelPostResponses503ContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Ed0Ig5V01UserDsrDeleteTokenCancelPostResponses503ContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsE7Evb8V01UserDsrDeleteTokenCancelPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsE7Evb8V01UserDsrDeleteTokenCancelPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths435X0EV01UserDsrDeleteTokenCancelPostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths435X0EV01UserDsrDeleteTokenCancelPostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths435X0EV01UserDsrDeleteTokenCancelPostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsWwssknV01UserDsrDeleteTokenGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsWwssknV01UserDsrDeleteTokenGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      sasUrl: {
        serializedName: "sasUrl",
        type: {
          name: "String"
        }
      },
      sasUrlExpired: {
        serializedName: "sasUrlExpired",
        type: {
          name: "Boolean"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsSepmdaV01UserDsrDeleteTokenGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsSepmdaV01UserDsrDeleteTokenGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths11982EzV01UserDsrDeleteTokenGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths11982EzV01UserDsrDeleteTokenGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths11982EzV01UserDsrDeleteTokenGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Shlm9KV01UserDsrDeletePostResponses202ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Shlm9KV01UserDsrDeletePostResponses202ContentApplicationJsonSchema",
    modelProperties: {
      token: {
        serializedName: "token",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        required: true,
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Paths105AankV01UserDsrDeletePostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths105AankV01UserDsrDeletePostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths14Ijt9PV01UserDsrDeletePostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths14Ijt9PV01UserDsrDeletePostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths14Ijt9PV01UserDsrDeletePostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Cmt7BV01UserDevicesDeviceUdidGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Cmt7BV01UserDevicesDeviceUdidGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      udid: {
        serializedName: "udid",
        required: true,
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        required: true,
        type: {
          name: "String"
        }
      },
      deviceName: {
        serializedName: "device_name",
        required: true,
        type: {
          name: "String"
        }
      },
      fullDeviceName: {
        serializedName: "full_device_name",
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      serial: {
        serializedName: "serial",
        type: {
          name: "String"
        }
      },
      imei: {
        serializedName: "imei",
        type: {
          name: "String"
        }
      },
      ownerId: {
        serializedName: "owner_id",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      registeredAt: {
        serializedName: "registered_at",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsZ51JvlV01UserDevicesDeviceUdidGetResponses400ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsZ51JvlV01UserDevicesDeviceUdidGetResponses400ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Bbrb90V01UserDevicesDeviceUdidGetResponses403ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Bbrb90V01UserDevicesDeviceUdidGetResponses403ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1T6Akw2V01UserDevicesDeviceUdidGetResponses404ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1T6Akw2V01UserDevicesDeviceUdidGetResponses404ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsHdlzv9V01UserDevicesDeviceUdidDeleteResponses403ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsHdlzv9V01UserDevicesDeviceUdidDeleteResponses403ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths8DvmvfV01UserDevicesDeviceUdidDeleteResponses404ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths8DvmvfV01UserDevicesDeviceUdidDeleteResponses404ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsSu173DV01UserDevicesGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsSu173DV01UserDevicesGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      udid: {
        serializedName: "udid",
        required: true,
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        required: true,
        type: {
          name: "String"
        }
      },
      deviceName: {
        serializedName: "device_name",
        required: true,
        type: {
          name: "String"
        }
      },
      fullDeviceName: {
        serializedName: "full_device_name",
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      serial: {
        serializedName: "serial",
        type: {
          name: "String"
        }
      },
      imei: {
        serializedName: "imei",
        type: {
          name: "String"
        }
      },
      ownerId: {
        serializedName: "owner_id",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      registeredAt: {
        serializedName: "registered_at",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsUflabiV01UserDevicesGetResponses400ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsUflabiV01UserDevicesGetResponses400ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsY65BgyV01UserDevicesGetResponses403ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsY65BgyV01UserDevicesGetResponses403ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths12V17NbV01UserGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Paths12V17NbV01UserGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      canChangePassword: {
        serializedName: "can_change_password",
        type: {
          name: "Boolean"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      permissions: {
        serializedName: "permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths484N4EV01UserGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths484N4EV01UserGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsAaeoylV01UserGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsAaeoylV01UserGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsAaeoylV01UserGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths2EstpdV01UserPatchRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Paths2EstpdV01UserPatchRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Stph4IV01UserPatchResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Stph4IV01UserPatchResponses200ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      canChangePassword: {
        serializedName: "can_change_password",
        type: {
          name: "Boolean"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      permissions: {
        serializedName: "permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths4ScaxfV01UserPatchResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths4ScaxfV01UserPatchResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "PatchDefaultApplicationJsonProperties"
        }
      }
    }
  }
};

export const PatchDefaultApplicationJsonProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PatchDefaultApplicationJsonProperties",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsFvdb99V01TesterAppsGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsFvdb99V01TesterAppsGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      release: {
        serializedName: "release",
        type: {
          name: "Composite",
          className: "GetResponses200ContentApplicationJsonSchemaItemRelease"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      iconUrl: {
        serializedName: "icon_url",
        type: {
          name: "String"
        }
      },
      os: {
        serializedName: "os",
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className: "GetResponses200ContentApplicationJsonSchemaItemOwner"
        }
      }
    }
  }
};

export const Paths1R53U2ZV01TesterAppsGetResponses200ContentApplicationJsonSchemaItemsPropertiesReleaseAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1R53U2ZV01TesterAppsGetResponses200ContentApplicationJsonSchemaItemsPropertiesReleaseAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Number"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      shortVersion: {
        serializedName: "short_version",
        required: true,
        type: {
          name: "String"
        }
      },
      mandatoryUpdate: {
        serializedName: "mandatory_update",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      uploadedAt: {
        serializedName: "uploaded_at",
        required: true,
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "enabled",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      isExternalBuild: {
        serializedName: "is_external_build",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths4Gr131V01TesterAppsGetResponses200ContentApplicationJsonSchemaItemsPropertiesReleaseAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths4Gr131V01TesterAppsGetResponses200ContentApplicationJsonSchemaItemsPropertiesReleaseAllof1",
    modelProperties: {
      size: {
        serializedName: "size",
        required: true,
        type: {
          name: "Number"
        }
      },
      installUrl: {
        serializedName: "install_url",
        type: {
          name: "String"
        }
      },
      releaseNotes: {
        serializedName: "release_notes",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GetResponses200ContentApplicationJsonSchemaItemOwner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetResponses200ContentApplicationJsonSchemaItemOwner",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths3NwxqsV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths3NwxqsV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Number"
        }
      },
      appName: {
        serializedName: "app_name",
        required: true,
        type: {
          name: "String"
        }
      },
      appDisplayName: {
        serializedName: "app_display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      appOs: {
        serializedName: "app_os",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      shortVersion: {
        serializedName: "short_version",
        required: true,
        type: {
          name: "String"
        }
      },
      releaseNotes: {
        serializedName: "release_notes",
        type: {
          name: "String"
        }
      },
      provisioningProfileName: {
        serializedName: "provisioning_profile_name",
        type: {
          name: "String"
        }
      },
      provisioningProfileType: {
        serializedName: "provisioning_profile_type",
        type: {
          name: "String"
        }
      },
      provisioningProfileExpiryDate: {
        serializedName: "provisioning_profile_expiry_date",
        type: {
          name: "String"
        }
      },
      isProvisioningProfileSyncing: {
        serializedName: "is_provisioning_profile_syncing",
        type: {
          name: "Boolean"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      minOs: {
        serializedName: "min_os",
        type: {
          name: "String"
        }
      },
      deviceFamily: {
        serializedName: "device_family",
        type: {
          name: "String"
        }
      },
      androidMinApiLevel: {
        serializedName: "android_min_api_level",
        type: {
          name: "String"
        }
      },
      bundleIdentifier: {
        serializedName: "bundle_identifier",
        type: {
          name: "String"
        }
      },
      packageHashes: {
        serializedName: "package_hashes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      fingerprint: {
        serializedName: "fingerprint",
        type: {
          name: "String"
        }
      },
      uploadedAt: {
        serializedName: "uploaded_at",
        required: true,
        type: {
          name: "String"
        }
      },
      downloadUrl: {
        serializedName: "download_url",
        type: {
          name: "String"
        }
      },
      appIconUrl: {
        serializedName: "app_icon_url",
        required: true,
        type: {
          name: "String"
        }
      },
      installUrl: {
        serializedName: "install_url",
        type: {
          name: "String"
        }
      },
      destinationType: {
        serializedName: "destination_type",
        type: {
          name: "String"
        }
      },
      distributionGroups: {
        serializedName: "distribution_groups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths1ImihjiV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDistributionGroupsItems"
            }
          }
        }
      },
      distributionStores: {
        serializedName: "distribution_stores",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsH1Qu1NV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDistributionStoresItems"
            }
          }
        }
      },
      destinations: {
        serializedName: "destinations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsSelih9V01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItems"
            }
          }
        }
      },
      isUdidProvisioned: {
        serializedName: "is_udid_provisioned",
        type: {
          name: "Boolean"
        }
      },
      canResign: {
        serializedName: "can_resign",
        type: {
          name: "Boolean"
        }
      },
      build: {
        serializedName: "build",
        type: {
          name: "Composite",
          className:
            "Paths6IncqxV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesBuild"
        }
      },
      enabled: {
        serializedName: "enabled",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      isExternalBuild: {
        serializedName: "is_external_build",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths1ImihjiV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDistributionGroupsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1ImihjiV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDistributionGroupsItems",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsH1Qu1NV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDistributionStoresItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsH1Qu1NV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDistributionStoresItems",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      publishingStatus: {
        serializedName: "publishing_status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1PavtpvV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1PavtpvV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      publishingStatus: {
        serializedName: "publishing_status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths8M1UckV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0Allof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths8M1UckV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0Allof1",
    modelProperties: {
      isLatest: {
        serializedName: "is_latest",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PathsJ4K1S8V01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsJ4K1S8V01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof1",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsR7Mx7PV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof2: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsR7Mx7PV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof2",
    modelProperties: {
      destinationType: {
        serializedName: "destination_type",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths6IncqxV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesBuild: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths6IncqxV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesBuild",
    modelProperties: {
      branchName: {
        serializedName: "branch_name",
        type: {
          name: "String"
        }
      },
      commitHash: {
        serializedName: "commit_hash",
        type: {
          name: "String"
        }
      },
      commitMessage: {
        serializedName: "commit_message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths5W4BybV01SdkAppsAppSecretReleasesReleaseHashGetResponses404ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths5W4BybV01SdkAppsAppSecretReleasesReleaseHashGetResponses404ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Wkh2MwV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Wkh2MwV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Number"
        }
      },
      appName: {
        serializedName: "app_name",
        required: true,
        type: {
          name: "String"
        }
      },
      appDisplayName: {
        serializedName: "app_display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      appOs: {
        serializedName: "app_os",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      shortVersion: {
        serializedName: "short_version",
        required: true,
        type: {
          name: "String"
        }
      },
      releaseNotes: {
        serializedName: "release_notes",
        type: {
          name: "String"
        }
      },
      provisioningProfileName: {
        serializedName: "provisioning_profile_name",
        type: {
          name: "String"
        }
      },
      provisioningProfileType: {
        serializedName: "provisioning_profile_type",
        type: {
          name: "String"
        }
      },
      provisioningProfileExpiryDate: {
        serializedName: "provisioning_profile_expiry_date",
        type: {
          name: "String"
        }
      },
      isProvisioningProfileSyncing: {
        serializedName: "is_provisioning_profile_syncing",
        type: {
          name: "Boolean"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      minOs: {
        serializedName: "min_os",
        type: {
          name: "String"
        }
      },
      deviceFamily: {
        serializedName: "device_family",
        type: {
          name: "String"
        }
      },
      androidMinApiLevel: {
        serializedName: "android_min_api_level",
        type: {
          name: "String"
        }
      },
      bundleIdentifier: {
        serializedName: "bundle_identifier",
        type: {
          name: "String"
        }
      },
      packageHashes: {
        serializedName: "package_hashes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      fingerprint: {
        serializedName: "fingerprint",
        type: {
          name: "String"
        }
      },
      uploadedAt: {
        serializedName: "uploaded_at",
        required: true,
        type: {
          name: "String"
        }
      },
      downloadUrl: {
        serializedName: "download_url",
        type: {
          name: "String"
        }
      },
      appIconUrl: {
        serializedName: "app_icon_url",
        required: true,
        type: {
          name: "String"
        }
      },
      installUrl: {
        serializedName: "install_url",
        type: {
          name: "String"
        }
      },
      destinationType: {
        serializedName: "destination_type",
        type: {
          name: "String"
        }
      },
      distributionGroups: {
        serializedName: "distribution_groups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths4Hp5QtV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDistributionGroupsItems"
            }
          }
        }
      },
      distributionStores: {
        serializedName: "distribution_stores",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths10Is1M2V01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDistributionStoresItems"
            }
          }
        }
      },
      destinations: {
        serializedName: "destinations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths2H2GfhV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItems"
            }
          }
        }
      },
      isUdidProvisioned: {
        serializedName: "is_udid_provisioned",
        type: {
          name: "Boolean"
        }
      },
      canResign: {
        serializedName: "can_resign",
        type: {
          name: "Boolean"
        }
      },
      build: {
        serializedName: "build",
        type: {
          name: "Composite",
          className:
            "Paths1Mxpr5HV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesBuild"
        }
      },
      enabled: {
        serializedName: "enabled",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      isExternalBuild: {
        serializedName: "is_external_build",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths4Hp5QtV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDistributionGroupsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths4Hp5QtV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDistributionGroupsItems",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths10Is1M2V01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDistributionStoresItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths10Is1M2V01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDistributionStoresItems",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      publishingStatus: {
        serializedName: "publishing_status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths90FqqhV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths90FqqhV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      publishingStatus: {
        serializedName: "publishing_status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsBq45MpV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0Allof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsBq45MpV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0Allof1",
    modelProperties: {
      isLatest: {
        serializedName: "is_latest",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths17Mq2NrV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths17Mq2NrV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof1",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths7UlnvnV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof2: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths7UlnvnV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof2",
    modelProperties: {
      destinationType: {
        serializedName: "destination_type",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Mxpr5HV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesBuild: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Mxpr5HV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesBuild",
    modelProperties: {
      branchName: {
        serializedName: "branch_name",
        type: {
          name: "String"
        }
      },
      commitHash: {
        serializedName: "commit_hash",
        type: {
          name: "String"
        }
      },
      commitMessage: {
        serializedName: "commit_message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1WkrcwmV01SdkAppsAppSecretReleasesPrivateLatestGetResponses404ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1WkrcwmV01SdkAppsAppSecretReleasesPrivateLatestGetResponses404ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Cvct4XV01OrgsOrgNameUsersUserNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Cvct4XV01OrgsOrgNameUsersUserNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      releaseType: {
        serializedName: "release_type",
        type: {
          name: "String"
        }
      },
      iconUrl: {
        serializedName: "icon_url",
        type: {
          name: "String"
        }
      },
      iconSource: {
        serializedName: "icon_source",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      os: {
        serializedName: "os",
        required: true,
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className: "Get200ApplicationJsonItems0Owner"
        }
      }
    }
  }
};

export const Get200ApplicationJsonItems0Owner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonItems0Owner",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths4IoilmV01OrgsOrgNameUsersUserNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths4IoilmV01OrgsOrgNameUsersUserNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof1",
    modelProperties: {
      appSecret: {
        serializedName: "app_secret",
        type: {
          name: "String"
        }
      },
      azureSubscription: {
        serializedName: "azure_subscription",
        type: {
          name: "Composite",
          className: "Get200ApplicationJsonItems1AzureSubscription"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        type: {
          name: "String"
        }
      },
      memberPermissions: {
        serializedName: "member_permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Get200ApplicationJsonItems1AzureSubscription: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonItems1AzureSubscription",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscription_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      subscriptionName: {
        serializedName: "subscription_name",
        required: true,
        type: {
          name: "String"
        }
      },
      isBilling: {
        serializedName: "is_billing",
        type: {
          name: "Boolean"
        }
      },
      isBillable: {
        serializedName: "is_billable",
        type: {
          name: "Boolean"
        }
      },
      isMicrosoftInternal: {
        serializedName: "is_microsoft_internal",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PathsBzcytsV01OrgsOrgNameUsersUserNameAppsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsBzcytsV01OrgsOrgNameUsersUserNameAppsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsT544DeV01OrgsOrgNameUsersUserNameAppsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsT544DeV01OrgsOrgNameUsersUserNameAppsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsT544DeV01OrgsOrgNameUsersUserNameAppsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsP1N751V01OrgsOrgNameUsersUserNamePatchRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsP1N751V01OrgsOrgNameUsersUserNamePatchRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      role: {
        serializedName: "role",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsPp9E5UV01OrgsOrgNameUsersUserNamePatchResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsPp9E5UV01OrgsOrgNameUsersUserNamePatchResponses200ContentApplicationJsonSchema",
    modelProperties: {
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      joinedAt: {
        serializedName: "joined_at",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      role: {
        serializedName: "role",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsAmri8GV01OrgsOrgNameUsersUserNamePatchResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsAmri8GV01OrgsOrgNameUsersUserNamePatchResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Bjfxu6V01OrgsOrgNameUsersUserNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Bjfxu6V01OrgsOrgNameUsersUserNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Bjfxu6V01OrgsOrgNameUsersUserNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths13YqyzyV01OrgsOrgNameUsersUserNameDeleteResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths13YqyzyV01OrgsOrgNameUsersUserNameDeleteResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "DeleteDefaultApplicationJsonProperties"
        }
      }
    }
  }
};

export const DeleteDefaultApplicationJsonProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeleteDefaultApplicationJsonProperties",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsJys8A7V01OrgsOrgNameUsersUserNameGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsJys8A7V01OrgsOrgNameUsersUserNameGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      joinedAt: {
        serializedName: "joined_at",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      role: {
        serializedName: "role",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1H2Meo6V01OrgsOrgNameUsersUserNameGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1H2Meo6V01OrgsOrgNameUsersUserNameGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths156Do09V01OrgsOrgNameUsersUserNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths156Do09V01OrgsOrgNameUsersUserNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths156Do09V01OrgsOrgNameUsersUserNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsCwimmqV01OrgsOrgNameUsersGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsCwimmqV01OrgsOrgNameUsersGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      joinedAt: {
        serializedName: "joined_at",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      role: {
        serializedName: "role",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Repp9WV01OrgsOrgNameUsersGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Repp9WV01OrgsOrgNameUsersGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths11Lj1XjV01OrgsOrgNameUsersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths11Lj1XjV01OrgsOrgNameUsersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths11Lj1XjV01OrgsOrgNameUsersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsZcvkocV01OrgsOrgNameTestersGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsZcvkocV01OrgsOrgNameTestersGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths10C9NtgV01OrgsOrgNameTestersGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths10C9NtgV01OrgsOrgNameTestersGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths3R06R9V01OrgsOrgNameTestersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths3R06R9V01OrgsOrgNameTestersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths3R06R9V01OrgsOrgNameTestersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsL86WmaV01OrgsOrgNameTeamsTeamNameUsersUserNameDeleteResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsL86WmaV01OrgsOrgNameTeamsTeamNameUsersUserNameDeleteResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths19SzypbV01OrgsOrgNameTeamsTeamNameUsersUserNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths19SzypbV01OrgsOrgNameTeamsTeamNameUsersUserNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths19SzypbV01OrgsOrgNameTeamsTeamNameUsersUserNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsQ6Nk57V01OrgsOrgNameTeamsTeamNameUsersGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsQ6Nk57V01OrgsOrgNameTeamsTeamNameUsersGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      role: {
        serializedName: "role",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths10Bx1MpV01OrgsOrgNameTeamsTeamNameUsersGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths10Bx1MpV01OrgsOrgNameTeamsTeamNameUsersGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1A4Kwu5V01OrgsOrgNameTeamsTeamNameUsersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1A4Kwu5V01OrgsOrgNameTeamsTeamNameUsersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1A4Kwu5V01OrgsOrgNameTeamsTeamNameUsersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Cc9FkbV01OrgsOrgNameTeamsTeamNameUsersPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Cc9FkbV01OrgsOrgNameTeamsTeamNameUsersPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      userEmail: {
        serializedName: "user_email",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsY6FsqxV01OrgsOrgNameTeamsTeamNameUsersPostResponses201ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsY6FsqxV01OrgsOrgNameTeamsTeamNameUsersPostResponses201ContentApplicationJsonSchema",
    modelProperties: {
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      role: {
        serializedName: "role",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths41XckqV01OrgsOrgNameTeamsTeamNameUsersPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths41XckqV01OrgsOrgNameTeamsTeamNameUsersPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Fht6McV01OrgsOrgNameTeamsTeamNameUsersPostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Fht6McV01OrgsOrgNameTeamsTeamNameUsersPostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Fht6McV01OrgsOrgNameTeamsTeamNameUsersPostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1HiscesV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1HiscesV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      permissions: {
        serializedName: "permissions",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PathsX6KtmiV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsX6KtmiV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchemaAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      releaseType: {
        serializedName: "release_type",
        type: {
          name: "String"
        }
      },
      iconUrl: {
        serializedName: "icon_url",
        type: {
          name: "String"
        }
      },
      iconSource: {
        serializedName: "icon_source",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      os: {
        serializedName: "os",
        required: true,
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className:
            "Paths1MnbyynV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner"
        }
      }
    }
  }
};

export const Paths1MnbyynV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1MnbyynV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1G7Kvy1V01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchemaAllof0Allof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1G7Kvy1V01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchemaAllof0Allof1",
    modelProperties: {
      appSecret: {
        serializedName: "app_secret",
        type: {
          name: "String"
        }
      },
      azureSubscription: {
        serializedName: "azure_subscription",
        type: {
          name: "Composite",
          className:
            "Paths1Qtq1OiV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchemaAllof0Allof1PropertiesAzureSubscription"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        type: {
          name: "String"
        }
      },
      memberPermissions: {
        serializedName: "member_permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Paths1Qtq1OiV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchemaAllof0Allof1PropertiesAzureSubscription: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Qtq1OiV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchemaAllof0Allof1PropertiesAzureSubscription",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscription_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      subscriptionName: {
        serializedName: "subscription_name",
        required: true,
        type: {
          name: "String"
        }
      },
      isBilling: {
        serializedName: "is_billing",
        type: {
          name: "Boolean"
        }
      },
      isBillable: {
        serializedName: "is_billable",
        type: {
          name: "Boolean"
        }
      },
      isMicrosoftInternal: {
        serializedName: "is_microsoft_internal",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PathsF63NbmV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsF63NbmV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchemaAllof1",
    modelProperties: {
      teamPermissions: {
        serializedName: "team_permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Paths1Beedi7V01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Beedi7V01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths14V8GczV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths14V8GczV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths14V8GczV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Pofxg3V01OrgsOrgNameTeamsTeamNameAppsAppNameDeleteResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Pofxg3V01OrgsOrgNameTeamsTeamNameAppsAppNameDeleteResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Wnqj3QV01OrgsOrgNameTeamsTeamNameAppsAppNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Wnqj3QV01OrgsOrgNameTeamsTeamNameAppsAppNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Wnqj3QV01OrgsOrgNameTeamsTeamNameAppsAppNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths3K4Kv5V01OrgsOrgNameTeamsTeamNameAppsPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths3K4Kv5V01OrgsOrgNameTeamsTeamNameAppsPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsT7Lg34V01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsT7Lg34V01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchemaAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      releaseType: {
        serializedName: "release_type",
        type: {
          name: "String"
        }
      },
      iconUrl: {
        serializedName: "icon_url",
        type: {
          name: "String"
        }
      },
      iconSource: {
        serializedName: "icon_source",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      os: {
        serializedName: "os",
        required: true,
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className:
            "PathsTh7L6RV01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchemaAllof0PropertiesOwner"
        }
      }
    }
  }
};

export const PathsTh7L6RV01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchemaAllof0PropertiesOwner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsTh7L6RV01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchemaAllof0PropertiesOwner",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsJ34NfmV01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchemaAllof0Allof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsJ34NfmV01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchemaAllof0Allof1",
    modelProperties: {
      appSecret: {
        serializedName: "app_secret",
        type: {
          name: "String"
        }
      },
      azureSubscription: {
        serializedName: "azure_subscription",
        type: {
          name: "Composite",
          className:
            "Paths1UaovdtV01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchemaAllof0Allof1PropertiesAzureSubscription"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        type: {
          name: "String"
        }
      },
      memberPermissions: {
        serializedName: "member_permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Paths1UaovdtV01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchemaAllof0Allof1PropertiesAzureSubscription: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1UaovdtV01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchemaAllof0Allof1PropertiesAzureSubscription",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscription_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      subscriptionName: {
        serializedName: "subscription_name",
        required: true,
        type: {
          name: "String"
        }
      },
      isBilling: {
        serializedName: "is_billing",
        type: {
          name: "Boolean"
        }
      },
      isBillable: {
        serializedName: "is_billable",
        type: {
          name: "Boolean"
        }
      },
      isMicrosoftInternal: {
        serializedName: "is_microsoft_internal",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths1H4Oj8KV01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1H4Oj8KV01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchemaAllof1",
    modelProperties: {
      teamPermissions: {
        serializedName: "team_permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Paths1YpvsyyV01OrgsOrgNameTeamsTeamNameAppsPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1YpvsyyV01OrgsOrgNameTeamsTeamNameAppsPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths167LfzyV01OrgsOrgNameTeamsTeamNameAppsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths167LfzyV01OrgsOrgNameTeamsTeamNameAppsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths167LfzyV01OrgsOrgNameTeamsTeamNameAppsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsV1407RV01OrgsOrgNameTeamsTeamNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsV1407RV01OrgsOrgNameTeamsTeamNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      releaseType: {
        serializedName: "release_type",
        type: {
          name: "String"
        }
      },
      iconUrl: {
        serializedName: "icon_url",
        type: {
          name: "String"
        }
      },
      iconSource: {
        serializedName: "icon_source",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      os: {
        serializedName: "os",
        required: true,
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className: "Get200ApplicationJsonItems00Owner"
        }
      }
    }
  }
};

export const Get200ApplicationJsonItems00Owner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonItems00Owner",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsO3Iv87V01OrgsOrgNameTeamsTeamNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0Allof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsO3Iv87V01OrgsOrgNameTeamsTeamNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0Allof1",
    modelProperties: {
      appSecret: {
        serializedName: "app_secret",
        type: {
          name: "String"
        }
      },
      azureSubscription: {
        serializedName: "azure_subscription",
        type: {
          name: "Composite",
          className: "Get200ApplicationJsonItems01AzureSubscription"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        type: {
          name: "String"
        }
      },
      memberPermissions: {
        serializedName: "member_permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Get200ApplicationJsonItems01AzureSubscription: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonItems01AzureSubscription",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscription_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      subscriptionName: {
        serializedName: "subscription_name",
        required: true,
        type: {
          name: "String"
        }
      },
      isBilling: {
        serializedName: "is_billing",
        type: {
          name: "Boolean"
        }
      },
      isBillable: {
        serializedName: "is_billable",
        type: {
          name: "Boolean"
        }
      },
      isMicrosoftInternal: {
        serializedName: "is_microsoft_internal",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths73QlfV01OrgsOrgNameTeamsTeamNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths73QlfV01OrgsOrgNameTeamsTeamNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof1",
    modelProperties: {
      teamPermissions: {
        serializedName: "team_permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PathsH0Ns4HV01OrgsOrgNameTeamsTeamNameAppsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsH0Ns4HV01OrgsOrgNameTeamsTeamNameAppsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1SjjytyV01OrgsOrgNameTeamsTeamNameAppsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1SjjytyV01OrgsOrgNameTeamsTeamNameAppsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1SjjytyV01OrgsOrgNameTeamsTeamNameAppsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsUii78RV01OrgsOrgNameTeamsTeamNameGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsUii78RV01OrgsOrgNameTeamsTeamNameGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths16B1TziV01OrgsOrgNameTeamsTeamNameGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths16B1TziV01OrgsOrgNameTeamsTeamNameGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths17Oxoi1V01OrgsOrgNameTeamsTeamNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths17Oxoi1V01OrgsOrgNameTeamsTeamNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths17Oxoi1V01OrgsOrgNameTeamsTeamNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1HybnvwV01OrgsOrgNameTeamsTeamNameDeleteResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1HybnvwV01OrgsOrgNameTeamsTeamNameDeleteResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsI8IuhdV01OrgsOrgNameTeamsTeamNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsI8IuhdV01OrgsOrgNameTeamsTeamNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsI8IuhdV01OrgsOrgNameTeamsTeamNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1414Qm7V01OrgsOrgNameTeamsTeamNamePatchRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1414Qm7V01OrgsOrgNameTeamsTeamNamePatchRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1L1EevaV01OrgsOrgNameTeamsTeamNamePatchResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1L1EevaV01OrgsOrgNameTeamsTeamNamePatchResponses200ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Ga78SuV01OrgsOrgNameTeamsTeamNamePatchResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Ga78SuV01OrgsOrgNameTeamsTeamNamePatchResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1JegctxV01OrgsOrgNameTeamsTeamNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1JegctxV01OrgsOrgNameTeamsTeamNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1JegctxV01OrgsOrgNameTeamsTeamNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths63Ea35V01OrgsOrgNameTeamsGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths63Ea35V01OrgsOrgNameTeamsGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1WbpnrnV01OrgsOrgNameTeamsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1WbpnrnV01OrgsOrgNameTeamsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsNb5Vb6V01OrgsOrgNameTeamsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsNb5Vb6V01OrgsOrgNameTeamsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsNb5Vb6V01OrgsOrgNameTeamsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Iu7UzV01OrgsOrgNameTeamsPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Iu7UzV01OrgsOrgNameTeamsPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Post201ApplicationJsonItemsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Post201ApplicationJsonItemsItem",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1P5700PV01OrgsOrgNameTeamsPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1P5700PV01OrgsOrgNameTeamsPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1J65GdgV01OrgsOrgNameTeamsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1J65GdgV01OrgsOrgNameTeamsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1J65GdgV01OrgsOrgNameTeamsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Qkfv3PV01OrgsOrgNameInvitationsEmailRevokePostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Qkfv3PV01OrgsOrgNameInvitationsEmailRevokePostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsLacoltV01OrgsOrgNameInvitationsEmailRevokePostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsLacoltV01OrgsOrgNameInvitationsEmailRevokePostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsLacoltV01OrgsOrgNameInvitationsEmailRevokePostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsMtzmgwV01OrgsOrgNameInvitationsEmailResendPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsMtzmgwV01OrgsOrgNameInvitationsEmailResendPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      role: {
        serializedName: "role",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1W4JklnV01OrgsOrgNameInvitationsEmailResendPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1W4JklnV01OrgsOrgNameInvitationsEmailResendPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsYm7S9LV01OrgsOrgNameInvitationsEmailResendPostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsYm7S9LV01OrgsOrgNameInvitationsEmailResendPostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsYm7S9LV01OrgsOrgNameInvitationsEmailResendPostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths8S96O5V01OrgsOrgNameInvitationsEmailPatchRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths8S96O5V01OrgsOrgNameInvitationsEmailPatchRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      role: {
        serializedName: "role",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1B4403V01OrgsOrgNameInvitationsEmailPatchResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1B4403V01OrgsOrgNameInvitationsEmailPatchResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsRowjxqV01OrgsOrgNameInvitationsEmailPatchResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsRowjxqV01OrgsOrgNameInvitationsEmailPatchResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsRowjxqV01OrgsOrgNameInvitationsEmailPatchResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsVoxne2V01OrgsOrgNameInvitationsPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsVoxne2V01OrgsOrgNameInvitationsPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      userEmail: {
        serializedName: "user_email",
        required: true,
        type: {
          name: "String"
        }
      },
      role: {
        serializedName: "role",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsIlk0YtV01OrgsOrgNameInvitationsPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsIlk0YtV01OrgsOrgNameInvitationsPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Q76Y6ZV01OrgsOrgNameInvitationsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Q76Y6ZV01OrgsOrgNameInvitationsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Q76Y6ZV01OrgsOrgNameInvitationsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths2KqsncV01OrgsOrgNameInvitationsDeleteRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths2KqsncV01OrgsOrgNameInvitationsDeleteRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      userEmail: {
        serializedName: "user_email",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1PjqhddV01OrgsOrgNameInvitationsDeleteResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1PjqhddV01OrgsOrgNameInvitationsDeleteResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths60ZdzrV01OrgsOrgNameInvitationsDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths60ZdzrV01OrgsOrgNameInvitationsDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths60ZdzrV01OrgsOrgNameInvitationsDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Hzhjt9V01OrgsOrgNameInvitationsGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Hzhjt9V01OrgsOrgNameInvitationsGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      role: {
        serializedName: "role",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsFqvnp1V01OrgsOrgNameInvitationsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsFqvnp1V01OrgsOrgNameInvitationsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Nc00J0V01OrgsOrgNameInvitationsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Nc00J0V01OrgsOrgNameInvitationsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Nc00J0V01OrgsOrgNameInvitationsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1AbdgaoV01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1AbdgaoV01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItemsAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      },
      isPublic: {
        serializedName: "is_public",
        required: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths128BpnsV01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItemsAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths128BpnsV01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItemsAllof1",
    modelProperties: {
      totalAppsCount: {
        serializedName: "total_apps_count",
        type: {
          name: "Number"
        }
      },
      totalUsersCount: {
        serializedName: "total_users_count",
        type: {
          name: "Number"
        }
      },
      apps: {
        serializedName: "apps",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Get200ApplicationJsonItems1AppsItem"
            }
          }
        }
      }
    }
  }
};

export const Paths1Mb8UcrV01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesAppsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Mb8UcrV01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesAppsItemsAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      releaseType: {
        serializedName: "release_type",
        type: {
          name: "String"
        }
      },
      iconUrl: {
        serializedName: "icon_url",
        type: {
          name: "String"
        }
      },
      iconSource: {
        serializedName: "icon_source",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      os: {
        serializedName: "os",
        required: true,
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className:
            "Paths1H5PolwV01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesAppsItemsAllof0PropertiesOwner"
        }
      }
    }
  }
};

export const Paths1H5PolwV01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesAppsItemsAllof0PropertiesOwner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1H5PolwV01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesAppsItemsAllof0PropertiesOwner",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1E6JkmgV01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesAppsItemsAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1E6JkmgV01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesAppsItemsAllof1",
    modelProperties: {
      appSecret: {
        serializedName: "app_secret",
        type: {
          name: "String"
        }
      },
      azureSubscription: {
        serializedName: "azure_subscription",
        type: {
          name: "Composite",
          className:
            "Paths16Kve4V01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesAppsItemsAllof1PropertiesAzureSubscription"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        type: {
          name: "String"
        }
      },
      memberPermissions: {
        serializedName: "member_permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Paths16Kve4V01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesAppsItemsAllof1PropertiesAzureSubscription: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths16Kve4V01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesAppsItemsAllof1PropertiesAzureSubscription",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscription_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      subscriptionName: {
        serializedName: "subscription_name",
        required: true,
        type: {
          name: "String"
        }
      },
      isBilling: {
        serializedName: "is_billing",
        type: {
          name: "Boolean"
        }
      },
      isBillable: {
        serializedName: "is_billable",
        type: {
          name: "Boolean"
        }
      },
      isMicrosoftInternal: {
        serializedName: "is_microsoft_internal",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths1Qqyun6V01OrgsOrgNameDistributionGroupsDetailsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Qqyun6V01OrgsOrgNameDistributionGroupsDetailsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Ftwj8V01OrgsOrgNameDistributionGroupsDetailsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Ftwj8V01OrgsOrgNameDistributionGroupsDetailsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Ftwj8V01OrgsOrgNameDistributionGroupsDetailsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths3EixoV01OrgsOrgNameDistributionGroupsDistributionGroupNameResendInvitePostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths3EixoV01OrgsOrgNameDistributionGroupsDistributionGroupNameResendInvitePostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      userEmails: {
        constraints: {
          MinItems: 1
        },
        serializedName: "user_emails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Paths1Mw5PtqV01OrgsOrgNameDistributionGroupsDistributionGroupNameResendInvitePostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Mw5PtqV01OrgsOrgNameDistributionGroupsDistributionGroupNameResendInvitePostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths23Jg1TV01OrgsOrgNameDistributionGroupsDistributionGroupNameResendInvitePostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths23Jg1TV01OrgsOrgNameDistributionGroupsDistributionGroupNameResendInvitePostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths23Jg1TV01OrgsOrgNameDistributionGroupsDistributionGroupNameResendInvitePostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths10EomnwV01OrgsOrgNameDistributionGroupsDistributionGroupNameMembersBulkDeletePostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths10EomnwV01OrgsOrgNameDistributionGroupsDistributionGroupNameMembersBulkDeletePostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      userEmails: {
        constraints: {
          MinItems: 1
        },
        serializedName: "user_emails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Paths1Emeq4QV01OrgsOrgNameDistributionGroupsDistributionGroupNameMembersGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Emeq4QV01OrgsOrgNameDistributionGroupsDistributionGroupNameMembersGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      canChangePassword: {
        serializedName: "can_change_password",
        type: {
          name: "Boolean"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      invitePending: {
        serializedName: "invite_pending",
        type: {
          name: "Boolean"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Xv7MxwV01OrgsOrgNameDistributionGroupsDistributionGroupNameMembersGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Xv7MxwV01OrgsOrgNameDistributionGroupsDistributionGroupNameMembersGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths13Op7UdV01OrgsOrgNameDistributionGroupsDistributionGroupNameMembersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths13Op7UdV01OrgsOrgNameDistributionGroupsDistributionGroupNameMembersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths13Op7UdV01OrgsOrgNameDistributionGroupsDistributionGroupNameMembersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsSmhj37V01OrgsOrgNameDistributionGroupsDistributionGroupNameMembersPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsSmhj37V01OrgsOrgNameDistributionGroupsDistributionGroupNameMembersPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      userEmails: {
        constraints: {
          MinItems: 1
        },
        serializedName: "user_emails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Post200ApplicationJsonItemsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Post200ApplicationJsonItemsItem",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      invitePending: {
        serializedName: "invite_pending",
        type: {
          name: "Boolean"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "Number"
        }
      },
      userEmail: {
        serializedName: "user_email",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Bvy48CV01OrgsOrgNameDistributionGroupsDistributionGroupNameMembersPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Bvy48CV01OrgsOrgNameDistributionGroupsDistributionGroupNameMembersPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsXqfotbV01OrgsOrgNameDistributionGroupsDistributionGroupNameMembersPostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsXqfotbV01OrgsOrgNameDistributionGroupsDistributionGroupNameMembersPostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsXqfotbV01OrgsOrgNameDistributionGroupsDistributionGroupNameMembersPostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsMs4QhdV01OrgsOrgNameDistributionGroupsDistributionGroupNameAppsBulkDeletePostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsMs4QhdV01OrgsOrgNameDistributionGroupsDistributionGroupNameAppsBulkDeletePostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      apps: {
        constraints: {
          MinItems: 1
        },
        serializedName: "apps",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PostContentSchemaAppsItem"
            }
          }
        }
      }
    }
  }
};

export const PostContentSchemaAppsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PostContentSchemaAppsItem",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsK6Tv9V01OrgsOrgNameDistributionGroupsDistributionGroupNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsK6Tv9V01OrgsOrgNameDistributionGroupsDistributionGroupNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      releaseType: {
        serializedName: "release_type",
        type: {
          name: "String"
        }
      },
      iconUrl: {
        serializedName: "icon_url",
        type: {
          name: "String"
        }
      },
      iconSource: {
        serializedName: "icon_source",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      os: {
        serializedName: "os",
        required: true,
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className:
            "Paths10IsvgrV01OrgsOrgNameDistributionGroupsDistributionGroupNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0PropertiesOwner"
        }
      }
    }
  }
};

export const Paths10IsvgrV01OrgsOrgNameDistributionGroupsDistributionGroupNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0PropertiesOwner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths10IsvgrV01OrgsOrgNameDistributionGroupsDistributionGroupNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0PropertiesOwner",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsVbaitqV01OrgsOrgNameDistributionGroupsDistributionGroupNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsVbaitqV01OrgsOrgNameDistributionGroupsDistributionGroupNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof1",
    modelProperties: {
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsIy66N7V01OrgsOrgNameDistributionGroupsDistributionGroupNameAppsPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsIy66N7V01OrgsOrgNameDistributionGroupsDistributionGroupNameAppsPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      apps: {
        serializedName: "apps",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsJ09Ix2V01OrgsOrgNameDistributionGroupsDistributionGroupNameAppsPostRequestbodyContentApplicationJsonSchemaPropertiesAppsItems"
            }
          }
        }
      }
    }
  }
};

export const PathsJ09Ix2V01OrgsOrgNameDistributionGroupsDistributionGroupNameAppsPostRequestbodyContentApplicationJsonSchemaPropertiesAppsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsJ09Ix2V01OrgsOrgNameDistributionGroupsDistributionGroupNameAppsPostRequestbodyContentApplicationJsonSchemaPropertiesAppsItems",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1O9EmfnV01OrgsOrgNameDistributionGroupsDistributionGroupNameGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1O9EmfnV01OrgsOrgNameDistributionGroupsDistributionGroupNameGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      },
      isPublic: {
        serializedName: "is_public",
        required: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths18ObgfsV01OrgsOrgNameDistributionGroupsDistributionGroupNameGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths18ObgfsV01OrgsOrgNameDistributionGroupsDistributionGroupNameGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsB6KwtdV01OrgsOrgNameDistributionGroupsDistributionGroupNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsB6KwtdV01OrgsOrgNameDistributionGroupsDistributionGroupNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsB6KwtdV01OrgsOrgNameDistributionGroupsDistributionGroupNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths6RaacuV01OrgsOrgNameDistributionGroupsDistributionGroupNamePatchRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths6RaacuV01OrgsOrgNameDistributionGroupsDistributionGroupNamePatchRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      isPublic: {
        serializedName: "is_public",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths8Ig5HaV01OrgsOrgNameDistributionGroupsDistributionGroupNamePatchResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths8Ig5HaV01OrgsOrgNameDistributionGroupsDistributionGroupNamePatchResponses200ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      },
      isPublic: {
        serializedName: "is_public",
        required: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PathsFf3Vb5V01OrgsOrgNameDistributionGroupsDistributionGroupNamePatchResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsFf3Vb5V01OrgsOrgNameDistributionGroupsDistributionGroupNamePatchResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Dp4D1FV01OrgsOrgNameDistributionGroupsDistributionGroupNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Dp4D1FV01OrgsOrgNameDistributionGroupsDistributionGroupNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Dp4D1FV01OrgsOrgNameDistributionGroupsDistributionGroupNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsG4K3OdV01OrgsOrgNameDistributionGroupsDistributionGroupNameDeleteResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsG4K3OdV01OrgsOrgNameDistributionGroupsDistributionGroupNameDeleteResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Cdwp85V01OrgsOrgNameDistributionGroupsDistributionGroupNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Cdwp85V01OrgsOrgNameDistributionGroupsDistributionGroupNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Cdwp85V01OrgsOrgNameDistributionGroupsDistributionGroupNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths150Qpz7V01OrgsOrgNameDistributionGroupsPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths150Qpz7V01OrgsOrgNameDistributionGroupsPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths19Pq8TpV01OrgsOrgNameDistributionGroupsPostResponses201ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths19Pq8TpV01OrgsOrgNameDistributionGroupsPostResponses201ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      },
      isPublic: {
        serializedName: "is_public",
        required: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths210VmzV01OrgsOrgNameDistributionGroupsPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths210VmzV01OrgsOrgNameDistributionGroupsPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsI0GiccV01OrgsOrgNameDistributionGroupsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsI0GiccV01OrgsOrgNameDistributionGroupsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsI0GiccV01OrgsOrgNameDistributionGroupsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Get201ApplicationJsonItemsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get201ApplicationJsonItemsItem",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      },
      isPublic: {
        serializedName: "is_public",
        required: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths5T6Uy5V01OrgsOrgNameDistributionGroupsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths5T6Uy5V01OrgsOrgNameDistributionGroupsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsVimdtoV01OrgsOrgNameDistributionGroupsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsVimdtoV01OrgsOrgNameDistributionGroupsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsVimdtoV01OrgsOrgNameDistributionGroupsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1R8N8WnV01OrgsOrgNameAzureSubscriptionsGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1R8N8WnV01OrgsOrgNameAzureSubscriptionsGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscription_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      subscriptionName: {
        serializedName: "subscription_name",
        required: true,
        type: {
          name: "String"
        }
      },
      isBilling: {
        serializedName: "is_billing",
        type: {
          name: "Boolean"
        }
      },
      isBillable: {
        serializedName: "is_billable",
        type: {
          name: "Boolean"
        }
      },
      isMicrosoftInternal: {
        serializedName: "is_microsoft_internal",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths1Ocwvn4V01OrgsOrgNameAzureSubscriptionsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Ocwvn4V01OrgsOrgNameAzureSubscriptionsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsQnnblgV01OrgsOrgNameAzureSubscriptionsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsQnnblgV01OrgsOrgNameAzureSubscriptionsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsQnnblgV01OrgsOrgNameAzureSubscriptionsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths7Mbu6OV01OrgsOrgNameAvatarPostResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths7Mbu6OV01OrgsOrgNameAvatarPostResponses200ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        required: true,
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths2Bw88TV01OrgsOrgNameAvatarPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths2Bw88TV01OrgsOrgNameAvatarPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1L124V6V01OrgsOrgNameAvatarPostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1L124V6V01OrgsOrgNameAvatarPostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1L124V6V01OrgsOrgNameAvatarPostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsQe14CxV01OrgsOrgNameAvatarDeleteResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsQe14CxV01OrgsOrgNameAvatarDeleteResponses200ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        required: true,
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Ytl347V01OrgsOrgNameAvatarDeleteResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Ytl347V01OrgsOrgNameAvatarDeleteResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsUgy2OsV01OrgsOrgNameAvatarDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsUgy2OsV01OrgsOrgNameAvatarDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsUgy2OsV01OrgsOrgNameAvatarDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsDf5UdfV01OrgsOrgNameAppsPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsDf5UdfV01OrgsOrgNameAppsPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      releaseType: {
        serializedName: "release_type",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      os: {
        serializedName: "os",
        required: true,
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Dw0Mx6V01OrgsOrgNameAppsPostResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Dw0Mx6V01OrgsOrgNameAppsPostResponses200ContentApplicationJsonSchemaAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      releaseType: {
        serializedName: "release_type",
        type: {
          name: "String"
        }
      },
      iconUrl: {
        serializedName: "icon_url",
        type: {
          name: "String"
        }
      },
      iconSource: {
        serializedName: "icon_source",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      os: {
        serializedName: "os",
        required: true,
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className:
            "PathsQujxthV01OrgsOrgNameAppsPostResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner"
        }
      }
    }
  }
};

export const PathsQujxthV01OrgsOrgNameAppsPostResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsQujxthV01OrgsOrgNameAppsPostResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1S1MjxkV01OrgsOrgNameAppsPostResponses200ContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1S1MjxkV01OrgsOrgNameAppsPostResponses200ContentApplicationJsonSchemaAllof1",
    modelProperties: {
      appSecret: {
        serializedName: "app_secret",
        type: {
          name: "String"
        }
      },
      azureSubscription: {
        serializedName: "azure_subscription",
        type: {
          name: "Composite",
          className:
            "PathsVt2NerV01OrgsOrgNameAppsPostResponses200ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        type: {
          name: "String"
        }
      },
      memberPermissions: {
        serializedName: "member_permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PathsVt2NerV01OrgsOrgNameAppsPostResponses200ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsVt2NerV01OrgsOrgNameAppsPostResponses200ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscription_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      subscriptionName: {
        serializedName: "subscription_name",
        required: true,
        type: {
          name: "String"
        }
      },
      isBilling: {
        serializedName: "is_billing",
        type: {
          name: "Boolean"
        }
      },
      isBillable: {
        serializedName: "is_billable",
        type: {
          name: "Boolean"
        }
      },
      isMicrosoftInternal: {
        serializedName: "is_microsoft_internal",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths1Khm1L1V01OrgsOrgNameAppsPostResponses201ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Khm1L1V01OrgsOrgNameAppsPostResponses201ContentApplicationJsonSchemaAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      releaseType: {
        serializedName: "release_type",
        type: {
          name: "String"
        }
      },
      iconUrl: {
        serializedName: "icon_url",
        type: {
          name: "String"
        }
      },
      iconSource: {
        serializedName: "icon_source",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      os: {
        serializedName: "os",
        required: true,
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className:
            "PathsP00B3IV01OrgsOrgNameAppsPostResponses201ContentApplicationJsonSchemaAllof0PropertiesOwner"
        }
      }
    }
  }
};

export const PathsP00B3IV01OrgsOrgNameAppsPostResponses201ContentApplicationJsonSchemaAllof0PropertiesOwner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsP00B3IV01OrgsOrgNameAppsPostResponses201ContentApplicationJsonSchemaAllof0PropertiesOwner",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1RmugtV01OrgsOrgNameAppsPostResponses201ContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1RmugtV01OrgsOrgNameAppsPostResponses201ContentApplicationJsonSchemaAllof1",
    modelProperties: {
      appSecret: {
        serializedName: "app_secret",
        type: {
          name: "String"
        }
      },
      azureSubscription: {
        serializedName: "azure_subscription",
        type: {
          name: "Composite",
          className:
            "PathsNqnbz4V01OrgsOrgNameAppsPostResponses201ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        type: {
          name: "String"
        }
      },
      memberPermissions: {
        serializedName: "member_permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PathsNqnbz4V01OrgsOrgNameAppsPostResponses201ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsNqnbz4V01OrgsOrgNameAppsPostResponses201ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscription_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      subscriptionName: {
        serializedName: "subscription_name",
        required: true,
        type: {
          name: "String"
        }
      },
      isBilling: {
        serializedName: "is_billing",
        type: {
          name: "Boolean"
        }
      },
      isBillable: {
        serializedName: "is_billable",
        type: {
          name: "Boolean"
        }
      },
      isMicrosoftInternal: {
        serializedName: "is_microsoft_internal",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths7Ywy9V01OrgsOrgNameAppsPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths7Ywy9V01OrgsOrgNameAppsPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1T7YgduV01OrgsOrgNameAppsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1T7YgduV01OrgsOrgNameAppsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1T7YgduV01OrgsOrgNameAppsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1H84Up2V01OrgsOrgNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1H84Up2V01OrgsOrgNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      releaseType: {
        serializedName: "release_type",
        type: {
          name: "String"
        }
      },
      iconUrl: {
        serializedName: "icon_url",
        type: {
          name: "String"
        }
      },
      iconSource: {
        serializedName: "icon_source",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      os: {
        serializedName: "os",
        required: true,
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className:
            "PathsLi7Z1TV01OrgsOrgNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0PropertiesOwner"
        }
      }
    }
  }
};

export const PathsLi7Z1TV01OrgsOrgNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0PropertiesOwner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsLi7Z1TV01OrgsOrgNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0PropertiesOwner",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths9U0PvjV01OrgsOrgNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths9U0PvjV01OrgsOrgNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof1",
    modelProperties: {
      appSecret: {
        serializedName: "app_secret",
        type: {
          name: "String"
        }
      },
      azureSubscription: {
        serializedName: "azure_subscription",
        type: {
          name: "Composite",
          className:
            "Paths1Spw5TqV01OrgsOrgNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesAzureSubscription"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        type: {
          name: "String"
        }
      },
      memberPermissions: {
        serializedName: "member_permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Paths1Spw5TqV01OrgsOrgNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesAzureSubscription: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Spw5TqV01OrgsOrgNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesAzureSubscription",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscription_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      subscriptionName: {
        serializedName: "subscription_name",
        required: true,
        type: {
          name: "String"
        }
      },
      isBilling: {
        serializedName: "is_billing",
        type: {
          name: "Boolean"
        }
      },
      isBillable: {
        serializedName: "is_billable",
        type: {
          name: "Boolean"
        }
      },
      isMicrosoftInternal: {
        serializedName: "is_microsoft_internal",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths14Atv4RV01OrgsOrgNameAppsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths14Atv4RV01OrgsOrgNameAppsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Khl0O8V01OrgsOrgNameAppsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Khl0O8V01OrgsOrgNameAppsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Khl0O8V01OrgsOrgNameAppsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Sl6Qy7V01OrgsOrgNameGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Sl6Qy7V01OrgsOrgNameGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        required: true,
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths16NvgokV01OrgsOrgNameGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths16NvgokV01OrgsOrgNameGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1TpqyqlV01OrgsOrgNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1TpqyqlV01OrgsOrgNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1TpqyqlV01OrgsOrgNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths600DxeV01OrgsOrgNamePatchRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths600DxeV01OrgsOrgNamePatchRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Vgfr6WV01OrgsOrgNamePatchResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Vgfr6WV01OrgsOrgNamePatchResponses200ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        required: true,
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths11Pjgn9V01OrgsOrgNamePatchResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths11Pjgn9V01OrgsOrgNamePatchResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsLr1XxaV01OrgsOrgNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsLr1XxaV01OrgsOrgNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsLr1XxaV01OrgsOrgNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths9Ngr72V01OrgsOrgNameDeleteResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths9Ngr72V01OrgsOrgNameDeleteResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsRkg2V3V01OrgsOrgNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsRkg2V3V01OrgsOrgNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsRkg2V3V01OrgsOrgNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsI4V0ItV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsI4V0ItV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      billingPlans: {
        serializedName: "billingPlans",
        type: {
          name: "Composite",
          className:
            "PathsDrx757V01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplans"
        }
      },
      usage: {
        serializedName: "usage",
        type: {
          name: "Composite",
          className:
            "Paths1O6G28HV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsage"
        }
      },
      azureSubscriptionId: {
        serializedName: "azureSubscriptionId",
        type: {
          name: "String"
        }
      },
      azureSubscriptionState: {
        serializedName: "azureSubscriptionState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsDrx757V01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplans: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsDrx757V01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplans",
    modelProperties: {
      buildService: {
        serializedName: "buildService",
        type: {
          name: "Composite",
          className:
            "Paths1Xtfer8V01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservice"
        }
      },
      testService: {
        serializedName: "testService",
        type: {
          name: "Composite",
          className:
            "Paths10G44BrV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservice"
        }
      }
    }
  }
};

export const Paths1Xtfer8V01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservice: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Xtfer8V01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservice",
    modelProperties: {
      canSelectTrialPlan: {
        serializedName: "canSelectTrialPlan",
        type: {
          name: "Boolean"
        }
      },
      lastTrialPlanExpirationTime: {
        serializedName: "lastTrialPlanExpirationTime",
        type: {
          name: "String"
        }
      },
      currentBillingPeriod: {
        serializedName: "currentBillingPeriod",
        type: {
          name: "Composite",
          className:
            "Paths1Osgu8EV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiod"
        }
      }
    }
  }
};

export const Paths1Osgu8EV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiod: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Osgu8EV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiod",
    modelProperties: {
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "String"
        }
      },
      byAccount: {
        serializedName: "byAccount",
        type: {
          name: "Composite",
          className:
            "PathsFs55AdV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiodPropertiesByaccount"
        }
      }
    }
  }
};

export const PathsFs55AdV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiodPropertiesByaccount: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsFs55AdV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiodPropertiesByaccount",
    modelProperties: {
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      plan: {
        serializedName: "plan",
        type: {
          name: "Composite",
          className:
            "Paths16U1N2HV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiodPropertiesByaccountPropertiesPlan"
        }
      }
    }
  }
};

export const Paths16U1N2HV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiodPropertiesByaccountPropertiesPlan: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths16U1N2HV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiodPropertiesByaccountPropertiesPlan",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      price: {
        serializedName: "price",
        type: {
          name: "Number"
        }
      },
      paymentSource: {
        serializedName: "paymentSource",
        type: {
          name: "String"
        }
      },
      service: {
        serializedName: "service",
        type: {
          name: "String"
        }
      },
      limits: {
        serializedName: "limits",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } }
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } }
          }
        }
      },
      parentId: {
        serializedName: "parentId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths10G44BrV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservice: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths10G44BrV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservice",
    modelProperties: {
      canSelectTrialPlan: {
        serializedName: "canSelectTrialPlan",
        type: {
          name: "Boolean"
        }
      },
      lastTrialPlanExpirationTime: {
        serializedName: "lastTrialPlanExpirationTime",
        type: {
          name: "String"
        }
      },
      currentBillingPeriod: {
        serializedName: "currentBillingPeriod",
        type: {
          name: "Composite",
          className:
            "Paths4VceciV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiod"
        }
      }
    }
  }
};

export const Paths4VceciV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiod: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths4VceciV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiod",
    modelProperties: {
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "String"
        }
      },
      byAccount: {
        serializedName: "byAccount",
        type: {
          name: "Composite",
          className:
            "Paths8B89MlV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiodPropertiesByaccount"
        }
      }
    }
  }
};

export const Paths8B89MlV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiodPropertiesByaccount: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths8B89MlV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiodPropertiesByaccount",
    modelProperties: {
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      plan: {
        serializedName: "plan",
        type: {
          name: "Composite",
          className:
            "PathsHfo40PV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiodPropertiesByaccountPropertiesPlan"
        }
      }
    }
  }
};

export const PathsHfo40PV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiodPropertiesByaccountPropertiesPlan: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsHfo40PV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiodPropertiesByaccountPropertiesPlan",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      price: {
        serializedName: "price",
        type: {
          name: "Number"
        }
      },
      paymentSource: {
        serializedName: "paymentSource",
        type: {
          name: "String"
        }
      },
      service: {
        serializedName: "service",
        type: {
          name: "String"
        }
      },
      limits: {
        serializedName: "limits",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } }
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } }
          }
        }
      },
      parentId: {
        serializedName: "parentId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1O6G28HV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1O6G28HV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsage",
    modelProperties: {
      buildService: {
        serializedName: "buildService",
        type: {
          name: "Composite",
          className:
            "Paths6BqcpcV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesBuildservice"
        }
      },
      testService: {
        serializedName: "testService",
        type: {
          name: "Composite",
          className:
            "Paths169LdneV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesTestservice"
        }
      }
    }
  }
};

export const Paths6BqcpcV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesBuildservice: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths6BqcpcV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesBuildservice",
    modelProperties: {
      currentUsagePeriod: {
        serializedName: "currentUsagePeriod",
        type: {
          name: "Composite",
          className:
            "PathsO0Ik8RV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesBuildservicePropertiesCurrentusageperiod"
        }
      }
    }
  }
};

export const PathsO0Ik8RV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesBuildservicePropertiesCurrentusageperiod: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsO0Ik8RV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesBuildservicePropertiesCurrentusageperiod",
    modelProperties: {
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "String"
        }
      },
      byAccount: {
        serializedName: "byAccount",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } }
        }
      },
      byApp: {
        serializedName: "byApp",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "Number" } } }
          }
        }
      }
    }
  }
};

export const Paths169LdneV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesTestservice: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths169LdneV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesTestservice",
    modelProperties: {
      currentUsagePeriod: {
        serializedName: "currentUsagePeriod",
        type: {
          name: "Composite",
          className:
            "Paths3P5EulV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesTestservicePropertiesCurrentusageperiod"
        }
      }
    }
  }
};

export const Paths3P5EulV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesTestservicePropertiesCurrentusageperiod: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths3P5EulV01OrgsOrgnameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesTestservicePropertiesCurrentusageperiod",
    modelProperties: {
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "String"
        }
      },
      byAccount: {
        serializedName: "byAccount",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } }
        }
      },
      byApp: {
        serializedName: "byApp",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "Number" } } }
          }
        }
      }
    }
  }
};

export const Paths17En3P7V01OrgsOrgnameBillingAggregatedGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths17En3P7V01OrgsOrgnameBillingAggregatedGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Qu2E0V01OrgsOrgnameBillingAggregatedGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Qu2E0V01OrgsOrgnameBillingAggregatedGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Qu2E0V01OrgsOrgnameBillingAggregatedGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths184FzfwV01OrgsPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Paths184FzfwV01OrgsPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths5Gk61LV01OrgsPostResponses201ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Paths5Gk61LV01OrgsPostResponses201ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        required: true,
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths92RvyjV01OrgsPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths92RvyjV01OrgsPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsQ9PeznV01OrgsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsQ9PeznV01OrgsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsQ9PeznV01OrgsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Ft71BmV01OrgsGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Ft71BmV01OrgsGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsZre2DkV01OrgsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsZre2DkV01OrgsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsMfe2OzV01OrgsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsMfe2OzV01OrgsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsMfe2OzV01OrgsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsJ7Rnt8V01LegacyUpdatecheckGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsJ7Rnt8V01LegacyUpdatecheckGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      updateInfo: {
        serializedName: "updateInfo",
        type: {
          name: "Composite",
          className:
            "Paths1Y9EjsmV01LegacyUpdatecheckGetResponses200ContentApplicationJsonSchemaPropertiesUpdateinfo"
        }
      }
    }
  }
};

export const Paths13Ux7UhV01LegacyUpdatecheckGetResponses200ContentApplicationJsonSchemaPropertiesUpdateinfoAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths13Ux7UhV01LegacyUpdatecheckGetResponses200ContentApplicationJsonSchemaPropertiesUpdateinfoAllof0",
    modelProperties: {
      appVersion: {
        serializedName: "appVersion",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      isDisabled: {
        serializedName: "isDisabled",
        type: {
          name: "Boolean"
        }
      },
      isMandatory: {
        serializedName: "isMandatory",
        type: {
          name: "Boolean"
        }
      },
      rollout: {
        serializedName: "rollout",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths1Gf0E4FV01LegacyUpdatecheckGetResponses200ContentApplicationJsonSchemaPropertiesUpdateinfoAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Gf0E4FV01LegacyUpdatecheckGetResponses200ContentApplicationJsonSchemaPropertiesUpdateinfoAllof1",
    modelProperties: {
      downloadURL: {
        serializedName: "downloadURL",
        type: {
          name: "String"
        }
      },
      isAvailable: {
        serializedName: "isAvailable",
        type: {
          name: "Boolean"
        }
      },
      packageSize: {
        serializedName: "packageSize",
        type: {
          name: "Number"
        }
      },
      shouldRunBinaryVersion: {
        serializedName: "shouldRunBinaryVersion",
        type: {
          name: "Boolean"
        }
      },
      updateAppVersion: {
        serializedName: "updateAppVersion",
        type: {
          name: "Boolean"
        }
      },
      packageHash: {
        serializedName: "packageHash",
        type: {
          name: "String"
        }
      },
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsNsgzhkV01LegacyUpdatecheckGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsNsgzhkV01LegacyUpdatecheckGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsPkpkpaV01LegacyReportstatusDownloadPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsPkpkpaV01LegacyReportstatusDownloadPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      deploymentKey: {
        serializedName: "deploymentKey",
        type: {
          name: "String"
        }
      },
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "appVersion",
        type: {
          name: "String"
        }
      },
      previousDeploymentKey: {
        serializedName: "previousDeploymentKey",
        type: {
          name: "String"
        }
      },
      previousLabelOrAppVersion: {
        serializedName: "previousLabelOrAppVersion",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      clientUniqueId: {
        serializedName: "clientUniqueId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths6DbuoaV01LegacyReportstatusDownloadPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths6DbuoaV01LegacyReportstatusDownloadPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsIy9KlqV01LegacyReportstatusDeployPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsIy9KlqV01LegacyReportstatusDeployPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      deploymentKey: {
        serializedName: "deploymentKey",
        type: {
          name: "String"
        }
      },
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "appVersion",
        type: {
          name: "String"
        }
      },
      previousDeploymentKey: {
        serializedName: "previousDeploymentKey",
        type: {
          name: "String"
        }
      },
      previousLabelOrAppVersion: {
        serializedName: "previousLabelOrAppVersion",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      clientUniqueId: {
        serializedName: "clientUniqueId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Ho5Wt0V01LegacyReportstatusDeployPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Ho5Wt0V01LegacyReportstatusDeployPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1O7H121V01InvitationsSentGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1O7H121V01InvitationsSentGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      invitationId: {
        serializedName: "invitation_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      organization: {
        serializedName: "organization",
        type: {
          name: "Composite",
          className:
            "GetResponses200ContentApplicationJsonSchemaItemOrganization"
        }
      },
      app: {
        serializedName: "app",
        type: {
          name: "Composite",
          className: "GetResponses200ContentApplicationJsonSchemaItemApp"
        }
      }
    }
  }
};

export const GetResponses200ContentApplicationJsonSchemaItemOrganization: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetResponses200ContentApplicationJsonSchemaItemOrganization",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        required: true,
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsC6NjndV01InvitationsSentGetResponses200ContentApplicationJsonSchemaItemsPropertiesAppAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsC6NjndV01InvitationsSentGetResponses200ContentApplicationJsonSchemaItemsPropertiesAppAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      releaseType: {
        serializedName: "release_type",
        type: {
          name: "String"
        }
      },
      iconUrl: {
        serializedName: "icon_url",
        type: {
          name: "String"
        }
      },
      iconSource: {
        serializedName: "icon_source",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      os: {
        serializedName: "os",
        required: true,
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className: "Get200ApplicationJsonItemsApp0Owner"
        }
      }
    }
  }
};

export const Get200ApplicationJsonItemsApp0Owner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonItemsApp0Owner",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsGjcam3V01InvitationsSentGetResponses200ContentApplicationJsonSchemaItemsPropertiesAppAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsGjcam3V01InvitationsSentGetResponses200ContentApplicationJsonSchemaItemsPropertiesAppAllof1",
    modelProperties: {
      appSecret: {
        serializedName: "app_secret",
        type: {
          name: "String"
        }
      },
      azureSubscription: {
        serializedName: "azure_subscription",
        type: {
          name: "Composite",
          className: "Get200ApplicationJsonItemsApp1AzureSubscription"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        type: {
          name: "String"
        }
      },
      memberPermissions: {
        serializedName: "member_permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Get200ApplicationJsonItemsApp1AzureSubscription: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonItemsApp1AzureSubscription",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscription_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      subscriptionName: {
        serializedName: "subscription_name",
        required: true,
        type: {
          name: "String"
        }
      },
      isBilling: {
        serializedName: "is_billing",
        type: {
          name: "Boolean"
        }
      },
      isBillable: {
        serializedName: "is_billable",
        type: {
          name: "Boolean"
        }
      },
      isMicrosoftInternal: {
        serializedName: "is_microsoft_internal",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths1CtdoowV01InvitationsSentGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1CtdoowV01InvitationsSentGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsJwo4TqV01InvitationsSentGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsJwo4TqV01InvitationsSentGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsJwo4TqV01InvitationsSentGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths19Yz4JgV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths19Yz4JgV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      aggregatedBillings: {
        serializedName: "aggregatedBillings",
        type: {
          name: "Composite",
          className:
            "Paths1Y6O21GV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillings"
        }
      }
    }
  }
};

export const Paths1Y6O21GV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Y6O21GV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillings",
    modelProperties: {
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      billingPlans: {
        serializedName: "billingPlans",
        type: {
          name: "Composite",
          className:
            "Paths1I0CfbaV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplans"
        }
      },
      usage: {
        serializedName: "usage",
        type: {
          name: "Composite",
          className:
            "PathsPsarsvV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesUsage"
        }
      },
      azureSubscriptionId: {
        serializedName: "azureSubscriptionId",
        type: {
          name: "String"
        }
      },
      azureSubscriptionState: {
        serializedName: "azureSubscriptionState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1I0CfbaV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplans: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1I0CfbaV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplans",
    modelProperties: {
      buildService: {
        serializedName: "buildService",
        type: {
          name: "Composite",
          className:
            "PathsQkckhxV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesBuildservice"
        }
      },
      testService: {
        serializedName: "testService",
        type: {
          name: "Composite",
          className:
            "Paths10ZoldqV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesTestservice"
        }
      }
    }
  }
};

export const PathsQkckhxV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesBuildservice: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsQkckhxV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesBuildservice",
    modelProperties: {
      canSelectTrialPlan: {
        serializedName: "canSelectTrialPlan",
        type: {
          name: "Boolean"
        }
      },
      lastTrialPlanExpirationTime: {
        serializedName: "lastTrialPlanExpirationTime",
        type: {
          name: "String"
        }
      },
      currentBillingPeriod: {
        serializedName: "currentBillingPeriod",
        type: {
          name: "Composite",
          className:
            "Paths14R3BxnV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiod"
        }
      }
    }
  }
};

export const Paths14R3BxnV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiod: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths14R3BxnV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiod",
    modelProperties: {
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "String"
        }
      },
      byAccount: {
        serializedName: "byAccount",
        type: {
          name: "Composite",
          className:
            "PathsTuilg8V01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiodPropertiesByaccount"
        }
      }
    }
  }
};

export const PathsTuilg8V01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiodPropertiesByaccount: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsTuilg8V01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiodPropertiesByaccount",
    modelProperties: {
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      plan: {
        serializedName: "plan",
        type: {
          name: "Composite",
          className:
            "Paths1Irmvh2V01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiodPropertiesByaccountPropertiesPlan"
        }
      }
    }
  }
};

export const Paths1Irmvh2V01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiodPropertiesByaccountPropertiesPlan: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Irmvh2V01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiodPropertiesByaccountPropertiesPlan",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      price: {
        serializedName: "price",
        type: {
          name: "Number"
        }
      },
      paymentSource: {
        serializedName: "paymentSource",
        type: {
          name: "String"
        }
      },
      service: {
        serializedName: "service",
        type: {
          name: "String"
        }
      },
      limits: {
        serializedName: "limits",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } }
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } }
          }
        }
      },
      parentId: {
        serializedName: "parentId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths10ZoldqV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesTestservice: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths10ZoldqV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesTestservice",
    modelProperties: {
      canSelectTrialPlan: {
        serializedName: "canSelectTrialPlan",
        type: {
          name: "Boolean"
        }
      },
      lastTrialPlanExpirationTime: {
        serializedName: "lastTrialPlanExpirationTime",
        type: {
          name: "String"
        }
      },
      currentBillingPeriod: {
        serializedName: "currentBillingPeriod",
        type: {
          name: "Composite",
          className:
            "Paths1Vmwtx1V01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiod"
        }
      }
    }
  }
};

export const Paths1Vmwtx1V01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiod: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Vmwtx1V01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiod",
    modelProperties: {
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "String"
        }
      },
      byAccount: {
        serializedName: "byAccount",
        type: {
          name: "Composite",
          className:
            "Paths11UfwyrV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiodPropertiesByaccount"
        }
      }
    }
  }
};

export const Paths11UfwyrV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiodPropertiesByaccount: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths11UfwyrV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiodPropertiesByaccount",
    modelProperties: {
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      plan: {
        serializedName: "plan",
        type: {
          name: "Composite",
          className:
            "Paths1Fvt1F7V01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiodPropertiesByaccountPropertiesPlan"
        }
      }
    }
  }
};

export const Paths1Fvt1F7V01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiodPropertiesByaccountPropertiesPlan: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Fvt1F7V01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiodPropertiesByaccountPropertiesPlan",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      price: {
        serializedName: "price",
        type: {
          name: "Number"
        }
      },
      paymentSource: {
        serializedName: "paymentSource",
        type: {
          name: "String"
        }
      },
      service: {
        serializedName: "service",
        type: {
          name: "String"
        }
      },
      limits: {
        serializedName: "limits",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } }
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } }
          }
        }
      },
      parentId: {
        serializedName: "parentId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsPsarsvV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesUsage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsPsarsvV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesUsage",
    modelProperties: {
      buildService: {
        serializedName: "buildService",
        type: {
          name: "Composite",
          className:
            "PathsBdhx2OV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesUsagePropertiesBuildservice"
        }
      },
      testService: {
        serializedName: "testService",
        type: {
          name: "Composite",
          className:
            "Paths1XkzlciV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesUsagePropertiesTestservice"
        }
      }
    }
  }
};

export const PathsBdhx2OV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesUsagePropertiesBuildservice: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsBdhx2OV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesUsagePropertiesBuildservice",
    modelProperties: {
      currentUsagePeriod: {
        serializedName: "currentUsagePeriod",
        type: {
          name: "Composite",
          className:
            "PathsO8QgrgV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesUsagePropertiesBuildservicePropertiesCurrentusageperiod"
        }
      }
    }
  }
};

export const PathsO8QgrgV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesUsagePropertiesBuildservicePropertiesCurrentusageperiod: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsO8QgrgV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesUsagePropertiesBuildservicePropertiesCurrentusageperiod",
    modelProperties: {
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "String"
        }
      },
      byAccount: {
        serializedName: "byAccount",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } }
        }
      },
      byApp: {
        serializedName: "byApp",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "Number" } } }
          }
        }
      }
    }
  }
};

export const Paths1XkzlciV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesUsagePropertiesTestservice: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1XkzlciV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesUsagePropertiesTestservice",
    modelProperties: {
      currentUsagePeriod: {
        serializedName: "currentUsagePeriod",
        type: {
          name: "Composite",
          className:
            "Paths1Ko6BdfV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesUsagePropertiesTestservicePropertiesCurrentusageperiod"
        }
      }
    }
  }
};

export const Paths1Ko6BdfV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesUsagePropertiesTestservicePropertiesCurrentusageperiod: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Ko6BdfV01BillingAllaccountsaggregatedGetResponses200ContentApplicationJsonSchemaPropertiesAggregatedbillingsPropertiesUsagePropertiesTestservicePropertiesCurrentusageperiod",
    modelProperties: {
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "String"
        }
      },
      byAccount: {
        serializedName: "byAccount",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } }
        }
      },
      byApp: {
        serializedName: "byApp",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "Number" } } }
          }
        }
      }
    }
  }
};

export const Paths1Pm9ZzuV01BillingAllaccountsaggregatedGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Pm9ZzuV01BillingAllaccountsaggregatedGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsF8VgtfV01BillingAllaccountsaggregatedGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsF8VgtfV01BillingAllaccountsaggregatedGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsF8VgtfV01BillingAllaccountsaggregatedGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Wv9DecV01AzureSubscriptionsGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Wv9DecV01AzureSubscriptionsGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscription_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      subscriptionName: {
        serializedName: "subscription_name",
        required: true,
        type: {
          name: "String"
        }
      },
      isBilling: {
        serializedName: "is_billing",
        type: {
          name: "Boolean"
        }
      },
      isBillable: {
        serializedName: "is_billable",
        type: {
          name: "Boolean"
        }
      },
      isMicrosoftInternal: {
        serializedName: "is_microsoft_internal",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PathsSing2IV01AzureSubscriptionsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsSing2IV01AzureSubscriptionsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsBd41LiV01AzureSubscriptionsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsBd41LiV01AzureSubscriptionsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsBd41LiV01AzureSubscriptionsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsSnbseaV01AppsOwnerNameAppNameXcodeVersionsGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsSnbseaV01AppsOwnerNameAppNameXcodeVersionsGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      current: {
        serializedName: "current",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths9Yy0MkV01AppsOwnerNameAppNameXcodeVersionsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths9Yy0MkV01AppsOwnerNameAppNameXcodeVersionsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Nv9E3SV01AppsOwnerNameAppNameXamarinSdkBundlesGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Nv9E3SV01AppsOwnerNameAppNameXamarinSdkBundlesGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      monoVersion: {
        serializedName: "monoVersion",
        type: {
          name: "String"
        }
      },
      sdkBundle: {
        serializedName: "sdkBundle",
        type: {
          name: "String"
        }
      },
      current: {
        serializedName: "current",
        type: {
          name: "Boolean"
        }
      },
      stable: {
        serializedName: "stable",
        type: {
          name: "Boolean"
        }
      },
      xcodeVersions: {
        serializedName: "xcodeVersions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Paths1G32ByzV01AppsOwnerNameAppNameXamarinSdkBundlesGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1G32ByzV01AppsOwnerNameAppNameXamarinSdkBundlesGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsQn2DimV01AppsOwnerNameAppNameWebhooksGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsQn2DimV01AppsOwnerNameAppNameWebhooksGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      values: {
        serializedName: "values",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths15Qq4FaV01AppsOwnerNameAppNameWebhooksGetResponses200ContentApplicationJsonSchemaPropertiesValuesItems"
            }
          }
        }
      }
    }
  }
};

export const Paths15Qq4FaV01AppsOwnerNameAppNameWebhooksGetResponses200ContentApplicationJsonSchemaPropertiesValuesItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths15Qq4FaV01AppsOwnerNameAppNameWebhooksGetResponses200ContentApplicationJsonSchemaPropertiesValuesItems",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        constraints: {
          MaxLength: 512
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      eventTypes: {
        serializedName: "event_types",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Paths16Kfo10V01AppsOwnerNameAppNameWebhooksGetResponsesDefaultContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths16Kfo10V01AppsOwnerNameAppNameWebhooksGetResponsesDefaultContentApplicationJsonSchemaAllof0",
    modelProperties: {
      requestId: {
        serializedName: "request_id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsIss5SmV01AppsOwnerNameAppNameWebhooksGetResponsesDefaultContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsIss5SmV01AppsOwnerNameAppNameWebhooksGetResponsesDefaultContentApplicationJsonSchemaAllof1",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1MuofruV01AppsOwnerNameAppNameVersionsGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1MuofruV01AppsOwnerNameAppNameVersionsGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      appVersionId: {
        serializedName: "app_version_id",
        required: true,
        type: {
          name: "String"
        }
      },
      appId: {
        serializedName: "app_id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      buildNumber: {
        serializedName: "build_number",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsDgnk0AV01AppsOwnerNameAppNameVersionsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsDgnk0AV01AppsOwnerNameAppNameVersionsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths7XqutjV01AppsOwnerNameAppNameUsersUserEmailDeleteResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths7XqutjV01AppsOwnerNameAppNameUsersUserEmailDeleteResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsE4C475V01AppsOwnerNameAppNameUsersUserEmailDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsE4C475V01AppsOwnerNameAppNameUsersUserEmailDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsE4C475V01AppsOwnerNameAppNameUsersUserEmailDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsG6C5PhV01AppsOwnerNameAppNameUsersUserEmailPatchRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsG6C5PhV01AppsOwnerNameAppNameUsersUserEmailPatchRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      permissions: {
        serializedName: "permissions",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Paths19GxrayV01AppsOwnerNameAppNameUsersUserEmailPatchResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths19GxrayV01AppsOwnerNameAppNameUsersUserEmailPatchResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1MuamfyV01AppsOwnerNameAppNameUsersUserEmailPatchResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1MuamfyV01AppsOwnerNameAppNameUsersUserEmailPatchResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1MuamfyV01AppsOwnerNameAppNameUsersUserEmailPatchResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsMm38I5V01AppsOwnerNameAppNameUsersGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsMm38I5V01AppsOwnerNameAppNameUsersGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      canChangePassword: {
        serializedName: "can_change_password",
        type: {
          name: "Boolean"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      permissions: {
        serializedName: "permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsBpjejcV01AppsOwnerNameAppNameUsersGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsBpjejcV01AppsOwnerNameAppNameUsersGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsEbiijaV01AppsOwnerNameAppNameUsersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsEbiijaV01AppsOwnerNameAppNameUsersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsEbiijaV01AppsOwnerNameAppNameUsersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceSet: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceSet",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      manufacturerCount: {
        serializedName: "manufacturerCount",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      slug: {
        serializedName: "slug",
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className:
            "PathsF7KfonV01AppsOwnerNameAppNameUserDeviceSetsIdGetResponses200ContentApplicationJsonSchemaPropertiesOwner"
        }
      },
      osVersionCount: {
        serializedName: "osVersionCount",
        type: {
          name: "Number"
        }
      },
      deviceConfigurations: {
        serializedName: "deviceConfigurations",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths5K5GzmV01AppsOwnerNameAppNameUserDeviceSetsIdGetResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItems"
            }
          }
        }
      }
    }
  }
};

export const PathsF7KfonV01AppsOwnerNameAppNameUserDeviceSetsIdGetResponses200ContentApplicationJsonSchemaPropertiesOwner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsF7KfonV01AppsOwnerNameAppNameUserDeviceSetsIdGetResponses200ContentApplicationJsonSchemaPropertiesOwner",
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths5K5GzmV01AppsOwnerNameAppNameUserDeviceSetsIdGetResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths5K5GzmV01AppsOwnerNameAppNameUserDeviceSetsIdGetResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItems",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      image: {
        serializedName: "image",
        type: {
          name: "Composite",
          className:
            "GetResponses200ContentApplicationJsonSchemaDeviceConfigurationsItemImage"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "Composite",
          className:
            "GetResponses200ContentApplicationJsonSchemaDeviceConfigurationsItemModel"
        }
      },
      os: {
        serializedName: "os",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "osName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GetResponses200ContentApplicationJsonSchemaDeviceConfigurationsItemImage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "GetResponses200ContentApplicationJsonSchemaDeviceConfigurationsItemImage",
    modelProperties: {
      thumb: {
        serializedName: "thumb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GetResponses200ContentApplicationJsonSchemaDeviceConfigurationsItemModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "GetResponses200ContentApplicationJsonSchemaDeviceConfigurationsItemModel",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      manufacturer: {
        serializedName: "manufacturer",
        type: {
          name: "String"
        }
      },
      releaseDate: {
        serializedName: "releaseDate",
        type: {
          name: "String"
        }
      },
      formFactor: {
        serializedName: "formFactor",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceSetUpdateInformation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceSetUpdateInformation",
    modelProperties: {
      devices: {
        serializedName: "devices",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceSet0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceSet0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      manufacturerCount: {
        serializedName: "manufacturerCount",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      slug: {
        serializedName: "slug",
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className:
            "Paths1PxbebeV01AppsOwnerNameAppNameUserDeviceSetsIdPutResponses200ContentApplicationJsonSchemaPropertiesOwner"
        }
      },
      osVersionCount: {
        serializedName: "osVersionCount",
        type: {
          name: "Number"
        }
      },
      deviceConfigurations: {
        serializedName: "deviceConfigurations",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Put200ApplicationJsonPropertiesItemsItem"
            }
          }
        }
      }
    }
  }
};

export const Paths1PxbebeV01AppsOwnerNameAppNameUserDeviceSetsIdPutResponses200ContentApplicationJsonSchemaPropertiesOwner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1PxbebeV01AppsOwnerNameAppNameUserDeviceSetsIdPutResponses200ContentApplicationJsonSchemaPropertiesOwner",
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Put200ApplicationJsonPropertiesItemsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Put200ApplicationJsonPropertiesItemsItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      image: {
        serializedName: "image",
        type: {
          name: "Composite",
          className:
            "PutResponses200ContentApplicationJsonSchemaDeviceConfigurationsItemImage"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "Composite",
          className:
            "PutResponses200ContentApplicationJsonSchemaDeviceConfigurationsItemModel"
        }
      },
      os: {
        serializedName: "os",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "osName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PutResponses200ContentApplicationJsonSchemaDeviceConfigurationsItemImage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PutResponses200ContentApplicationJsonSchemaDeviceConfigurationsItemImage",
    modelProperties: {
      thumb: {
        serializedName: "thumb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PutResponses200ContentApplicationJsonSchemaDeviceConfigurationsItemModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PutResponses200ContentApplicationJsonSchemaDeviceConfigurationsItemModel",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      manufacturer: {
        serializedName: "manufacturer",
        type: {
          name: "String"
        }
      },
      releaseDate: {
        serializedName: "releaseDate",
        type: {
          name: "String"
        }
      },
      formFactor: {
        serializedName: "formFactor",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestCloudErrorDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestCloudErrorDetails",
    modelProperties: {
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths17Qazt1V01AppsOwnerNameAppNameUserDeviceSetsGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths17Qazt1V01AppsOwnerNameAppNameUserDeviceSetsGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      manufacturerCount: {
        serializedName: "manufacturerCount",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      slug: {
        serializedName: "slug",
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className:
            "Paths19Kpw4DV01AppsOwnerNameAppNameUserDeviceSetsGetResponses200ContentApplicationJsonSchemaItemsPropertiesOwner"
        }
      },
      osVersionCount: {
        serializedName: "osVersionCount",
        type: {
          name: "Number"
        }
      },
      deviceConfigurations: {
        serializedName: "deviceConfigurations",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Get200ApplicationJsonItemsDeviceConfigurationsItem"
            }
          }
        }
      }
    }
  }
};

export const Paths19Kpw4DV01AppsOwnerNameAppNameUserDeviceSetsGetResponses200ContentApplicationJsonSchemaItemsPropertiesOwner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths19Kpw4DV01AppsOwnerNameAppNameUserDeviceSetsGetResponses200ContentApplicationJsonSchemaItemsPropertiesOwner",
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Get200ApplicationJsonItemsDeviceConfigurationsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonItemsDeviceConfigurationsItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      image: {
        serializedName: "image",
        type: {
          name: "Composite",
          className:
            "GetResponses200ContentApplicationJsonSchemaItemDeviceConfigurationsItemImage"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "Composite",
          className:
            "GetResponses200ContentApplicationJsonSchemaItemDeviceConfigurationsItemModel"
        }
      },
      os: {
        serializedName: "os",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "osName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GetResponses200ContentApplicationJsonSchemaItemDeviceConfigurationsItemImage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "GetResponses200ContentApplicationJsonSchemaItemDeviceConfigurationsItemImage",
    modelProperties: {
      thumb: {
        serializedName: "thumb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GetResponses200ContentApplicationJsonSchemaItemDeviceConfigurationsItemModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "GetResponses200ContentApplicationJsonSchemaItemDeviceConfigurationsItemModel",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      manufacturer: {
        serializedName: "manufacturer",
        type: {
          name: "String"
        }
      },
      releaseDate: {
        serializedName: "releaseDate",
        type: {
          name: "String"
        }
      },
      formFactor: {
        serializedName: "formFactor",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceSetUpdateInformation0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceSetUpdateInformation0",
    modelProperties: {
      devices: {
        serializedName: "devices",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceSet1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceSet1",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      manufacturerCount: {
        serializedName: "manufacturerCount",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      slug: {
        serializedName: "slug",
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className:
            "Paths1Sbi3DV01AppsOwnerNameAppNameUserDeviceSetsPostResponses201ContentApplicationJsonSchemaPropertiesOwner"
        }
      },
      osVersionCount: {
        serializedName: "osVersionCount",
        type: {
          name: "Number"
        }
      },
      deviceConfigurations: {
        serializedName: "deviceConfigurations",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Post201ApplicationJsonPropertiesItemsItem"
            }
          }
        }
      }
    }
  }
};

export const Paths1Sbi3DV01AppsOwnerNameAppNameUserDeviceSetsPostResponses201ContentApplicationJsonSchemaPropertiesOwner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Sbi3DV01AppsOwnerNameAppNameUserDeviceSetsPostResponses201ContentApplicationJsonSchemaPropertiesOwner",
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Post201ApplicationJsonPropertiesItemsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Post201ApplicationJsonPropertiesItemsItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      image: {
        serializedName: "image",
        type: {
          name: "Composite",
          className:
            "PostResponses201ContentApplicationJsonSchemaDeviceConfigurationsItemImage"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "Composite",
          className:
            "PostResponses201ContentApplicationJsonSchemaDeviceConfigurationsItemModel"
        }
      },
      os: {
        serializedName: "os",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "osName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PostResponses201ContentApplicationJsonSchemaDeviceConfigurationsItemImage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PostResponses201ContentApplicationJsonSchemaDeviceConfigurationsItemImage",
    modelProperties: {
      thumb: {
        serializedName: "thumb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PostResponses201ContentApplicationJsonSchemaDeviceConfigurationsItemModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PostResponses201ContentApplicationJsonSchemaDeviceConfigurationsItemModel",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      manufacturer: {
        serializedName: "manufacturer",
        type: {
          name: "String"
        }
      },
      releaseDate: {
        serializedName: "releaseDate",
        type: {
          name: "String"
        }
      },
      formFactor: {
        serializedName: "formFactor",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestCloudErrorDetails0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestCloudErrorDetails0",
    modelProperties: {
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1LnjnxdV01AppsOwnerNameAppNameTransferToOrgPostResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1LnjnxdV01AppsOwnerNameAppNameTransferToOrgPostResponses200ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        required: true,
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsE169PrV01AppsOwnerNameAppNameTransferToOrgPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsE169PrV01AppsOwnerNameAppNameTransferToOrgPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1311Ub5V01AppsOwnerNameAppNameTransferToOrgPostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1311Ub5V01AppsOwnerNameAppNameTransferToOrgPostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1311Ub5V01AppsOwnerNameAppNameTransferToOrgPostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1V9Hz9HV01AppsOwnerNameAppNameTransferDestinationOwnerNamePostResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1V9Hz9HV01AppsOwnerNameAppNameTransferDestinationOwnerNamePostResponses200ContentApplicationJsonSchemaAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      releaseType: {
        serializedName: "release_type",
        type: {
          name: "String"
        }
      },
      iconUrl: {
        serializedName: "icon_url",
        type: {
          name: "String"
        }
      },
      iconSource: {
        serializedName: "icon_source",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      os: {
        serializedName: "os",
        required: true,
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className:
            "Paths1Ojs084V01AppsOwnerNameAppNameTransferDestinationOwnerNamePostResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner"
        }
      }
    }
  }
};

export const Paths1Ojs084V01AppsOwnerNameAppNameTransferDestinationOwnerNamePostResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Ojs084V01AppsOwnerNameAppNameTransferDestinationOwnerNamePostResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Uuv6QgV01AppsOwnerNameAppNameTransferDestinationOwnerNamePostResponses200ContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Uuv6QgV01AppsOwnerNameAppNameTransferDestinationOwnerNamePostResponses200ContentApplicationJsonSchemaAllof1",
    modelProperties: {
      appSecret: {
        serializedName: "app_secret",
        type: {
          name: "String"
        }
      },
      azureSubscription: {
        serializedName: "azure_subscription",
        type: {
          name: "Composite",
          className:
            "PathsPgoeniV01AppsOwnerNameAppNameTransferDestinationOwnerNamePostResponses200ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        type: {
          name: "String"
        }
      },
      memberPermissions: {
        serializedName: "member_permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PathsPgoeniV01AppsOwnerNameAppNameTransferDestinationOwnerNamePostResponses200ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsPgoeniV01AppsOwnerNameAppNameTransferDestinationOwnerNamePostResponses200ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscription_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      subscriptionName: {
        serializedName: "subscription_name",
        required: true,
        type: {
          name: "String"
        }
      },
      isBilling: {
        serializedName: "is_billing",
        type: {
          name: "Boolean"
        }
      },
      isBillable: {
        serializedName: "is_billable",
        type: {
          name: "Boolean"
        }
      },
      isMicrosoftInternal: {
        serializedName: "is_microsoft_internal",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths15Hmn0IV01AppsOwnerNameAppNameTransferDestinationOwnerNamePostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths15Hmn0IV01AppsOwnerNameAppNameTransferDestinationOwnerNamePostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsRje6L6V01AppsOwnerNameAppNameTransferDestinationOwnerNamePostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsRje6L6V01AppsOwnerNameAppNameTransferDestinationOwnerNamePostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsRje6L6V01AppsOwnerNameAppNameTransferDestinationOwnerNamePostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsJw4J38V01AppsOwnerNameAppNameToolsetsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsJw4J38V01AppsOwnerNameAppNameToolsetsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      xamarin: {
        serializedName: "xamarin",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsXjpov1V01AppsOwnerNameAppNameToolsetsGetResponses200ContentApplicationJsonSchemaPropertiesXamarinItems"
            }
          }
        }
      },
      xcode: {
        serializedName: "xcode",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsNo2OfiV01AppsOwnerNameAppNameToolsetsGetResponses200ContentApplicationJsonSchemaPropertiesXcodeItems"
            }
          }
        }
      },
      node: {
        serializedName: "node",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths11P8SztV01AppsOwnerNameAppNameToolsetsGetResponses200ContentApplicationJsonSchemaPropertiesNodeItems"
            }
          }
        }
      }
    }
  }
};

export const PathsXjpov1V01AppsOwnerNameAppNameToolsetsGetResponses200ContentApplicationJsonSchemaPropertiesXamarinItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsXjpov1V01AppsOwnerNameAppNameToolsetsGetResponses200ContentApplicationJsonSchemaPropertiesXamarinItems",
    modelProperties: {
      monoVersion: {
        serializedName: "monoVersion",
        type: {
          name: "String"
        }
      },
      sdkBundle: {
        serializedName: "sdkBundle",
        type: {
          name: "String"
        }
      },
      current: {
        serializedName: "current",
        type: {
          name: "Boolean"
        }
      },
      stable: {
        serializedName: "stable",
        type: {
          name: "Boolean"
        }
      },
      xcodeVersions: {
        serializedName: "xcodeVersions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PathsNo2OfiV01AppsOwnerNameAppNameToolsetsGetResponses200ContentApplicationJsonSchemaPropertiesXcodeItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsNo2OfiV01AppsOwnerNameAppNameToolsetsGetResponses200ContentApplicationJsonSchemaPropertiesXcodeItems",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      current: {
        serializedName: "current",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths11P8SztV01AppsOwnerNameAppNameToolsetsGetResponses200ContentApplicationJsonSchemaPropertiesNodeItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths11P8SztV01AppsOwnerNameAppNameToolsetsGetResponses200ContentApplicationJsonSchemaPropertiesNodeItems",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      current: {
        serializedName: "current",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths1Dh1CmbV01AppsOwnerNameAppNameToolsetsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Dh1CmbV01AppsOwnerNameAppNameToolsetsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths16X7GfoV01AppsOwnerNameAppNameTestersTesterIdDeleteResponses404ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths16X7GfoV01AppsOwnerNameAppNameTestersTesterIdDeleteResponses404ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths9J1VrgV01AppsOwnerNameAppNameTestersGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths9J1VrgV01AppsOwnerNameAppNameTestersGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      canChangePassword: {
        serializedName: "can_change_password",
        type: {
          name: "Boolean"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      permissions: {
        serializedName: "permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths2WblseV01AppsOwnerNameAppNameTestersGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths2WblseV01AppsOwnerNameAppNameTestersGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths19I0Up4V01AppsOwnerNameAppNameTestersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths19I0Up4V01AppsOwnerNameAppNameTestersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths19I0Up4V01AppsOwnerNameAppNameTestersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsShbmt3V01AppsOwnerNameAppNameTestSeriesSlugTestRunsGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsShbmt3V01AppsOwnerNameAppNameTestSeriesSlugTestRunsGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      date: {
        serializedName: "date",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "appVersion",
        type: {
          name: "String"
        }
      },
      testSeries: {
        serializedName: "testSeries",
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      runStatus: {
        serializedName: "runStatus",
        type: {
          name: "String"
        }
      },
      resultStatus: {
        serializedName: "resultStatus",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      stats: {
        serializedName: "stats",
        type: {
          name: "Composite",
          className: "GetResponses200ContentApplicationJsonSchemaItemStats"
        }
      },
      testType: {
        serializedName: "testType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GetResponses200ContentApplicationJsonSchemaItemStats: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetResponses200ContentApplicationJsonSchemaItemStats",
    modelProperties: {
      devices: {
        serializedName: "devices",
        type: {
          name: "Number"
        }
      },
      devicesFinished: {
        serializedName: "devicesFinished",
        type: {
          name: "Number"
        }
      },
      devicesFailed: {
        serializedName: "devicesFailed",
        type: {
          name: "Number"
        }
      },
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      },
      passed: {
        serializedName: "passed",
        type: {
          name: "Number"
        }
      },
      failed: {
        serializedName: "failed",
        type: {
          name: "Number"
        }
      },
      skipped: {
        serializedName: "skipped",
        type: {
          name: "Number"
        }
      },
      peakMemory: {
        serializedName: "peakMemory",
        type: {
          name: "Number"
        }
      },
      totalDeviceMinutes: {
        serializedName: "totalDeviceMinutes",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const NameOfTheTestSeries: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NameOfTheTestSeries",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestSeries: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestSeries",
    modelProperties: {
      slug: {
        serializedName: "slug",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      mostRecentActivity: {
        serializedName: "mostRecentActivity",
        type: {
          name: "String"
        }
      },
      testRuns: {
        serializedName: "testRuns",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths1HhtfuuV01AppsOwnerNameAppNameTestSeriesSlugPatchResponses200ContentApplicationJsonSchemaPropertiesTestrunsItems"
            }
          }
        }
      }
    }
  }
};

export const Paths1HhtfuuV01AppsOwnerNameAppNameTestSeriesSlugPatchResponses200ContentApplicationJsonSchemaPropertiesTestrunsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1HhtfuuV01AppsOwnerNameAppNameTestSeriesSlugPatchResponses200ContentApplicationJsonSchemaPropertiesTestrunsItems",
    modelProperties: {
      date: {
        serializedName: "date",
        type: {
          name: "String"
        }
      },
      statusDescription: {
        serializedName: "statusDescription",
        type: {
          name: "String"
        }
      },
      failed: {
        serializedName: "failed",
        type: {
          name: "Number"
        }
      },
      passed: {
        serializedName: "passed",
        type: {
          name: "Number"
        }
      },
      completed: {
        serializedName: "completed",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PathsAd8C7FV01AppsOwnerNameAppNameTestSeriesGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsAd8C7FV01AppsOwnerNameAppNameTestSeriesGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      slug: {
        serializedName: "slug",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      mostRecentActivity: {
        serializedName: "mostRecentActivity",
        type: {
          name: "String"
        }
      },
      testRuns: {
        serializedName: "testRuns",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Get200ApplicationJsonItemsTestRunsItem"
            }
          }
        }
      }
    }
  }
};

export const Get200ApplicationJsonItemsTestRunsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonItemsTestRunsItem",
    modelProperties: {
      date: {
        serializedName: "date",
        type: {
          name: "String"
        }
      },
      statusDescription: {
        serializedName: "statusDescription",
        type: {
          name: "String"
        }
      },
      failed: {
        serializedName: "failed",
        type: {
          name: "Number"
        }
      },
      passed: {
        serializedName: "passed",
        type: {
          name: "Number"
        }
      },
      completed: {
        serializedName: "completed",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const NameOfTheTestSeries0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NameOfTheTestSeries0",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestSeries0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestSeries0",
    modelProperties: {
      slug: {
        serializedName: "slug",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      mostRecentActivity: {
        serializedName: "mostRecentActivity",
        type: {
          name: "String"
        }
      },
      testRuns: {
        serializedName: "testRuns",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Post200ApplicationJsonPropertiesItemsItem"
            }
          }
        }
      }
    }
  }
};

export const Post200ApplicationJsonPropertiesItemsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Post200ApplicationJsonPropertiesItemsItem",
    modelProperties: {
      date: {
        serializedName: "date",
        type: {
          name: "String"
        }
      },
      statusDescription: {
        serializedName: "statusDescription",
        type: {
          name: "String"
        }
      },
      failed: {
        serializedName: "failed",
        type: {
          name: "Number"
        }
      },
      passed: {
        serializedName: "passed",
        type: {
          name: "Number"
        }
      },
      completed: {
        serializedName: "completed",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const TestCloudErrorDetails1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestCloudErrorDetails1",
    modelProperties: {
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestRun: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestRun",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      date: {
        serializedName: "date",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "appVersion",
        type: {
          name: "String"
        }
      },
      testSeries: {
        serializedName: "testSeries",
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      runStatus: {
        serializedName: "runStatus",
        type: {
          name: "String"
        }
      },
      resultStatus: {
        serializedName: "resultStatus",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      stats: {
        serializedName: "stats",
        type: {
          name: "Composite",
          className:
            "Paths1Mn12JaV01AppsOwnerNameAppNameTestRunsTestRunIdStopPutResponses200ContentApplicationJsonSchemaPropertiesStats"
        }
      },
      testType: {
        serializedName: "testType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Mn12JaV01AppsOwnerNameAppNameTestRunsTestRunIdStopPutResponses200ContentApplicationJsonSchemaPropertiesStats: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Mn12JaV01AppsOwnerNameAppNameTestRunsTestRunIdStopPutResponses200ContentApplicationJsonSchemaPropertiesStats",
    modelProperties: {
      devices: {
        serializedName: "devices",
        type: {
          name: "Number"
        }
      },
      devicesFinished: {
        serializedName: "devicesFinished",
        type: {
          name: "Number"
        }
      },
      devicesFailed: {
        serializedName: "devicesFailed",
        type: {
          name: "Number"
        }
      },
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      },
      passed: {
        serializedName: "passed",
        type: {
          name: "Number"
        }
      },
      failed: {
        serializedName: "failed",
        type: {
          name: "Number"
        }
      },
      skipped: {
        serializedName: "skipped",
        type: {
          name: "Number"
        }
      },
      peakMemory: {
        serializedName: "peakMemory",
        type: {
          name: "Number"
        }
      },
      totalDeviceMinutes: {
        serializedName: "totalDeviceMinutes",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const TestRunState: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestRunState",
    modelProperties: {
      message: {
        serializedName: "message",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      waitTime: {
        serializedName: "wait_time",
        type: {
          name: "Number"
        }
      },
      exitCode: {
        serializedName: "exit_code",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const TestCloudStartTestRunOptions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestCloudStartTestRunOptions",
    modelProperties: {
      testFramework: {
        serializedName: "test_framework",
        required: true,
        type: {
          name: "String"
        }
      },
      deviceSelection: {
        serializedName: "device_selection",
        required: true,
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      locale: {
        serializedName: "locale",
        type: {
          name: "String"
        }
      },
      testSeries: {
        serializedName: "test_series",
        type: {
          name: "String"
        }
      },
      testParameters: {
        serializedName: "test_parameters",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const TestCloudTestRunStartResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestCloudTestRunStartResult",
    modelProperties: {
      acceptedDevices: {
        serializedName: "accepted_devices",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      rejectedDevices: {
        serializedName: "rejected_devices",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PathsRj1AeoV01AppsOwnerNameAppNameTestRunsTestRunIdReportGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsRj1AeoV01AppsOwnerNameAppNameTestRunsTestRunIdReportGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      appUploadId: {
        serializedName: "app_upload_id",
        required: true,
        type: {
          name: "String"
        }
      },
      date: {
        serializedName: "date",
        required: true,
        type: {
          name: "String"
        }
      },
      testType: {
        serializedName: "testType",
        required: true,
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        required: true,
        type: {
          name: "String"
        }
      },
      stats: {
        serializedName: "stats",
        type: {
          name: "Composite",
          className:
            "Paths1Lc0D3RV01AppsOwnerNameAppNameTestRunsTestRunIdReportGetResponses200ContentApplicationJsonSchemaPropertiesStats"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      schemaVersion: {
        serializedName: "schema_version",
        required: true,
        type: {
          name: "Number"
        }
      },
      revision: {
        serializedName: "revision",
        required: true,
        type: {
          name: "Number"
        }
      },
      features: {
        serializedName: "features",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths1NktjoiV01AppsOwnerNameAppNameTestRunsTestRunIdReportGetResponses200ContentApplicationJsonSchemaPropertiesFeaturesItems"
            }
          }
        }
      },
      finishedDeviceSnapshots: {
        serializedName: "finished_device_snapshots",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      deviceLogs: {
        serializedName: "device_logs",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsT325WyV01AppsOwnerNameAppNameTestRunsTestRunIdReportGetResponses200ContentApplicationJsonSchemaPropertiesDeviceLogsItems"
            }
          }
        }
      },
      dateFinished: {
        serializedName: "date_finished",
        required: true,
        type: {
          name: "String"
        }
      },
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String"
        }
      },
      snapshotFatalErrors: {
        serializedName: "snapshot_fatal_errors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths62M0KyV01AppsOwnerNameAppNameTestRunsTestRunIdReportGetResponses200ContentApplicationJsonSchemaPropertiesSnapshotFatalErrorsItems"
            }
          }
        }
      }
    }
  }
};

export const Paths1Lc0D3RV01AppsOwnerNameAppNameTestRunsTestRunIdReportGetResponses200ContentApplicationJsonSchemaPropertiesStats: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Lc0D3RV01AppsOwnerNameAppNameTestRunsTestRunIdReportGetResponses200ContentApplicationJsonSchemaPropertiesStats",
    modelProperties: {
      os: {
        serializedName: "os",
        required: true,
        type: {
          name: "Number"
        }
      },
      devices: {
        serializedName: "devices",
        required: true,
        type: {
          name: "Number"
        }
      },
      filesize: {
        serializedName: "filesize",
        required: true,
        type: {
          name: "Number"
        }
      },
      totalDeviceMinutes: {
        serializedName: "totalDeviceMinutes",
        required: true,
        type: {
          name: "Number"
        }
      },
      devicesNotRunned: {
        serializedName: "devices_not_runned",
        required: true,
        type: {
          name: "Number"
        }
      },
      failed: {
        serializedName: "failed",
        required: true,
        type: {
          name: "Number"
        }
      },
      skipped: {
        serializedName: "skipped",
        required: true,
        type: {
          name: "Number"
        }
      },
      passed: {
        serializedName: "passed",
        required: true,
        type: {
          name: "Number"
        }
      },
      total: {
        serializedName: "total",
        required: true,
        type: {
          name: "Number"
        }
      },
      devicesFinished: {
        serializedName: "devices_finished",
        required: true,
        type: {
          name: "Number"
        }
      },
      devicesFailed: {
        serializedName: "devices_failed",
        required: true,
        type: {
          name: "Number"
        }
      },
      devicesSkipped: {
        serializedName: "devices_skipped",
        required: true,
        type: {
          name: "Number"
        }
      },
      stepCount: {
        serializedName: "step_count",
        required: true,
        type: {
          name: "Number"
        }
      },
      artifacts: {
        serializedName: "artifacts",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const Paths1NktjoiV01AppsOwnerNameAppNameTestRunsTestRunIdReportGetResponses200ContentApplicationJsonSchemaPropertiesFeaturesItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1NktjoiV01AppsOwnerNameAppNameTestRunsTestRunIdReportGetResponses200ContentApplicationJsonSchemaPropertiesFeaturesItems",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      tests: {
        serializedName: "tests",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Get200ApplicationJsonPropertiesItemsTestsItem"
            }
          }
        }
      },
      failed: {
        serializedName: "failed",
        type: {
          name: "Number"
        }
      },
      skipped: {
        serializedName: "skipped",
        type: {
          name: "Number"
        }
      },
      peakMemory: {
        serializedName: "peakMemory",
        type: {
          name: "Number"
        }
      },
      peakDuration: {
        serializedName: "peakDuration",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Get200ApplicationJsonPropertiesItemsTestsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonPropertiesItemsTestsItem",
    modelProperties: {
      testName: {
        serializedName: "testName",
        type: {
          name: "String"
        }
      },
      runs: {
        serializedName: "runs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Get200ApplicationJsonPropertiesItemsTestsPropertiesItemsItem"
            }
          }
        }
      },
      peakMemory: {
        serializedName: "peakMemory",
        type: {
          name: "Number"
        }
      },
      peakDuration: {
        serializedName: "peakDuration",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Get200ApplicationJsonPropertiesItemsTestsPropertiesItemsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonPropertiesItemsTestsPropertiesItemsItem",
    modelProperties: {
      number: {
        serializedName: "number",
        type: {
          name: "Number"
        }
      },
      steps: {
        serializedName: "steps",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Get200ApplicationJsonPropertiesItemsTestsPropertiesItemsStepsItem"
            }
          }
        }
      },
      failed: {
        serializedName: "failed",
        type: {
          name: "Number"
        }
      },
      skipped: {
        serializedName: "skipped",
        type: {
          name: "Number"
        }
      },
      reportUrl: {
        serializedName: "report_url",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Get200ApplicationJsonPropertiesItemsTestsPropertiesItemsStepsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Get200ApplicationJsonPropertiesItemsTestsPropertiesItemsStepsItem",
    modelProperties: {
      stepName: {
        serializedName: "stepName",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      stepExecutions: {
        serializedName: "stepExecutions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Get200ApplicationJsonPropertiesItemsTestsPropertiesItemsStepsPropertiesItemsItem"
            }
          }
        }
      },
      failed: {
        serializedName: "failed",
        type: {
          name: "Number"
        }
      },
      skipped: {
        serializedName: "skipped",
        type: {
          name: "Number"
        }
      },
      stepReportUrl: {
        serializedName: "step_report_url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Get200ApplicationJsonPropertiesItemsTestsPropertiesItemsStepsPropertiesItemsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Get200ApplicationJsonPropertiesItemsTestsPropertiesItemsStepsPropertiesItemsItem",
    modelProperties: {
      deviceSnapshotId: {
        serializedName: "device_snapshot_id",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PathsT325WyV01AppsOwnerNameAppNameTestRunsTestRunIdReportGetResponses200ContentApplicationJsonSchemaPropertiesDeviceLogsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsT325WyV01AppsOwnerNameAppNameTestRunsTestRunIdReportGetResponses200ContentApplicationJsonSchemaPropertiesDeviceLogsItems",
    modelProperties: {
      deviceSnapshotId: {
        serializedName: "device_snapshot_id",
        type: {
          name: "String"
        }
      },
      deviceLog: {
        serializedName: "device_log",
        type: {
          name: "String"
        }
      },
      testLog: {
        serializedName: "test_log",
        type: {
          name: "String"
        }
      },
      appiumLog: {
        serializedName: "appium_log",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths62M0KyV01AppsOwnerNameAppNameTestRunsTestRunIdReportGetResponses200ContentApplicationJsonSchemaPropertiesSnapshotFatalErrorsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths62M0KyV01AppsOwnerNameAppNameTestRunsTestRunIdReportGetResponses200ContentApplicationJsonSchemaPropertiesSnapshotFatalErrorsItems",
    modelProperties: {
      deviceSnapshotId: {
        serializedName: "device_snapshot_id",
        type: {
          name: "String"
        }
      },
      errorMessage: {
        serializedName: "error_message",
        type: {
          name: "String"
        }
      },
      errorTitle: {
        serializedName: "error_title",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PostContentSchemaItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PostContentSchemaItem",
    modelProperties: {
      fileType: {
        serializedName: "fileType",
        required: true,
        type: {
          name: "String"
        }
      },
      checksum: {
        serializedName: "checksum",
        required: true,
        type: {
          name: "String"
        }
      },
      relativePath: {
        serializedName: "relativePath",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsH1EvszV01AppsOwnerNameAppNameTestRunsTestRunIdHashesBatchPostResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsH1EvszV01AppsOwnerNameAppNameTestRunsTestRunIdHashesBatchPostResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      fileType: {
        serializedName: "fileType",
        required: true,
        type: {
          name: "String"
        }
      },
      checksum: {
        serializedName: "checksum",
        required: true,
        type: {
          name: "String"
        }
      },
      relativePath: {
        serializedName: "relativePath",
        type: {
          name: "String"
        }
      },
      uploadStatus: {
        serializedName: "uploadStatus",
        type: {
          name: "Composite",
          className:
            "PostResponses200ContentApplicationJsonSchemaItemUploadStatus"
        }
      }
    }
  }
};

export const PostResponses200ContentApplicationJsonSchemaItemUploadStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PostResponses200ContentApplicationJsonSchemaItemUploadStatus",
    modelProperties: {
      statusCode: {
        serializedName: "statusCode",
        required: true,
        type: {
          name: "Number"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestCloudFileHash: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestCloudFileHash",
    modelProperties: {
      fileType: {
        serializedName: "file_type",
        required: true,
        type: {
          name: "String"
        }
      },
      checksum: {
        serializedName: "checksum",
        required: true,
        type: {
          name: "String"
        }
      },
      relativePath: {
        serializedName: "relative_path",
        required: true,
        type: {
          name: "String"
        }
      },
      byteRange: {
        serializedName: "byte_range",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestRun0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestRun0",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      date: {
        serializedName: "date",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "appVersion",
        type: {
          name: "String"
        }
      },
      testSeries: {
        serializedName: "testSeries",
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      runStatus: {
        serializedName: "runStatus",
        type: {
          name: "String"
        }
      },
      resultStatus: {
        serializedName: "resultStatus",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      stats: {
        serializedName: "stats",
        type: {
          name: "Composite",
          className:
            "PathsCck0GmV01AppsOwnerNameAppNameTestRunsTestRunIdGetResponses200ContentApplicationJsonSchemaPropertiesStats"
        }
      },
      testType: {
        serializedName: "testType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsCck0GmV01AppsOwnerNameAppNameTestRunsTestRunIdGetResponses200ContentApplicationJsonSchemaPropertiesStats: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsCck0GmV01AppsOwnerNameAppNameTestRunsTestRunIdGetResponses200ContentApplicationJsonSchemaPropertiesStats",
    modelProperties: {
      devices: {
        serializedName: "devices",
        type: {
          name: "Number"
        }
      },
      devicesFinished: {
        serializedName: "devicesFinished",
        type: {
          name: "Number"
        }
      },
      devicesFailed: {
        serializedName: "devicesFailed",
        type: {
          name: "Number"
        }
      },
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      },
      passed: {
        serializedName: "passed",
        type: {
          name: "Number"
        }
      },
      failed: {
        serializedName: "failed",
        type: {
          name: "Number"
        }
      },
      skipped: {
        serializedName: "skipped",
        type: {
          name: "Number"
        }
      },
      peakMemory: {
        serializedName: "peakMemory",
        type: {
          name: "Number"
        }
      },
      totalDeviceMinutes: {
        serializedName: "totalDeviceMinutes",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const TestRun1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestRun1",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      date: {
        serializedName: "date",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "appVersion",
        type: {
          name: "String"
        }
      },
      testSeries: {
        serializedName: "testSeries",
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      runStatus: {
        serializedName: "runStatus",
        type: {
          name: "String"
        }
      },
      resultStatus: {
        serializedName: "resultStatus",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      stats: {
        serializedName: "stats",
        type: {
          name: "Composite",
          className:
            "Paths1G2XcloV01AppsOwnerNameAppNameTestRunsTestRunIdDeleteResponses200ContentApplicationJsonSchemaPropertiesStats"
        }
      },
      testType: {
        serializedName: "testType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1G2XcloV01AppsOwnerNameAppNameTestRunsTestRunIdDeleteResponses200ContentApplicationJsonSchemaPropertiesStats: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1G2XcloV01AppsOwnerNameAppNameTestRunsTestRunIdDeleteResponses200ContentApplicationJsonSchemaPropertiesStats",
    modelProperties: {
      devices: {
        serializedName: "devices",
        type: {
          name: "Number"
        }
      },
      devicesFinished: {
        serializedName: "devicesFinished",
        type: {
          name: "Number"
        }
      },
      devicesFailed: {
        serializedName: "devicesFailed",
        type: {
          name: "Number"
        }
      },
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      },
      passed: {
        serializedName: "passed",
        type: {
          name: "Number"
        }
      },
      failed: {
        serializedName: "failed",
        type: {
          name: "Number"
        }
      },
      skipped: {
        serializedName: "skipped",
        type: {
          name: "Number"
        }
      },
      peakMemory: {
        serializedName: "peakMemory",
        type: {
          name: "Number"
        }
      },
      totalDeviceMinutes: {
        serializedName: "totalDeviceMinutes",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths1CxzjsgV01AppsOwnerNameAppNameTestRunsGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1CxzjsgV01AppsOwnerNameAppNameTestRunsGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      date: {
        serializedName: "date",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "appVersion",
        type: {
          name: "String"
        }
      },
      testSeries: {
        serializedName: "testSeries",
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      runStatus: {
        serializedName: "runStatus",
        type: {
          name: "String"
        }
      },
      resultStatus: {
        serializedName: "resultStatus",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      stats: {
        serializedName: "stats",
        type: {
          name: "Composite",
          className:
            "Paths1772YzwV01AppsOwnerNameAppNameTestRunsGetResponses200ContentApplicationJsonSchemaItemsPropertiesStats"
        }
      },
      testType: {
        serializedName: "testType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1772YzwV01AppsOwnerNameAppNameTestRunsGetResponses200ContentApplicationJsonSchemaItemsPropertiesStats: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1772YzwV01AppsOwnerNameAppNameTestRunsGetResponses200ContentApplicationJsonSchemaItemsPropertiesStats",
    modelProperties: {
      devices: {
        serializedName: "devices",
        type: {
          name: "Number"
        }
      },
      devicesFinished: {
        serializedName: "devicesFinished",
        type: {
          name: "Number"
        }
      },
      devicesFailed: {
        serializedName: "devicesFailed",
        type: {
          name: "Number"
        }
      },
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      },
      passed: {
        serializedName: "passed",
        type: {
          name: "Number"
        }
      },
      failed: {
        serializedName: "failed",
        type: {
          name: "Number"
        }
      },
      skipped: {
        serializedName: "skipped",
        type: {
          name: "Number"
        }
      },
      peakMemory: {
        serializedName: "peakMemory",
        type: {
          name: "Number"
        }
      },
      totalDeviceMinutes: {
        serializedName: "totalDeviceMinutes",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths1UxedxfV01AppsOwnerNameAppNameTestExportTestrunsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1UxedxfV01AppsOwnerNameAppNameTestExportTestrunsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      appHashFileId: {
        serializedName: "app_hash_file_id",
        type: {
          name: "Uuid"
        }
      },
      locale: {
        serializedName: "locale",
        type: {
          name: "String"
        }
      },
      dsymHashFileId: {
        serializedName: "dsym_hash_file_id",
        type: {
          name: "Uuid"
        }
      },
      appHashFileUrl: {
        serializedName: "app_hash_file_url",
        type: {
          name: "String"
        }
      },
      dsymHashFileUrl: {
        serializedName: "dsym_hash_file_url",
        type: {
          name: "String"
        }
      },
      appIconUrl: {
        serializedName: "app_icon_url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths17A5P9IV01AppsOwnerNameAppNameTestExportPipelinetestsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths17A5P9IV01AppsOwnerNameAppNameTestExportPipelinetestsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      appUploadId: {
        serializedName: "app_upload_id",
        type: {
          name: "Uuid"
        }
      },
      testParameters: {
        serializedName: "test_parameters",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const PathsQpbfbqV01AppsOwnerNameAppNameTestExportHashfilesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsQpbfbqV01AppsOwnerNameAppNameTestExportHashfilesGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      filename: {
        serializedName: "filename",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths18Bwc0DV01AppsOwnerNameAppNameTestExportFilesetfilesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths18Bwc0DV01AppsOwnerNameAppNameTestExportFilesetfilesGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      path: {
        serializedName: "path",
        type: {
          name: "String"
        }
      },
      hashFileId: {
        serializedName: "hash_file_id",
        type: {
          name: "Uuid"
        }
      },
      appUploadId: {
        serializedName: "app_upload_id",
        type: {
          name: "Uuid"
        }
      },
      hashFileUrl: {
        serializedName: "hash_file_url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1D5PwtqV01AppsOwnerNameAppNameTestExportAppsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1D5PwtqV01AppsOwnerNameAppNameTestExportAppsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      hashFilesUrl: {
        serializedName: "hash_files_url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsTbqb7JV01AppsOwnerNameAppNameTestExportGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsTbqb7JV01AppsOwnerNameAppNameTestExportGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      resources: {
        serializedName: "resources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths1Hvxwn3V01AppsOwnerNameAppNameTestExportGetResponses200ContentApplicationJsonSchemaPropertiesResourcesItems"
            }
          }
        }
      }
    }
  }
};

export const Paths1Hvxwn3V01AppsOwnerNameAppNameTestExportGetResponses200ContentApplicationJsonSchemaPropertiesResourcesItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Hvxwn3V01AppsOwnerNameAppNameTestExportGetResponses200ContentApplicationJsonSchemaPropertiesResourcesItems",
    modelProperties: {
      rel: {
        serializedName: "rel",
        type: {
          name: "String"
        }
      },
      path: {
        serializedName: "path",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Sla7TvV01AppsOwnerNameAppNameTeamsGetResponses200ContentApplicationJsonSchemaItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Sla7TvV01AppsOwnerNameAppNameTeamsGetResponses200ContentApplicationJsonSchemaItemsAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Qevyq4V01AppsOwnerNameAppNameTeamsGetResponses200ContentApplicationJsonSchemaItemsAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Qevyq4V01AppsOwnerNameAppNameTeamsGetResponses200ContentApplicationJsonSchemaItemsAllof1",
    modelProperties: {
      permissions: {
        serializedName: "permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Paths1YwiryhV01AppsOwnerNameAppNameTeamsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1YwiryhV01AppsOwnerNameAppNameTeamsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsFzb4KzV01AppsOwnerNameAppNameTeamsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsFzb4KzV01AppsOwnerNameAppNameTeamsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsFzb4KzV01AppsOwnerNameAppNameTeamsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsZwg80MV01AppsOwnerNameAppNameSymbolsSymbolIdStatusGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsZwg80MV01AppsOwnerNameAppNameSymbolsSymbolIdStatusGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      symbolId: {
        serializedName: "symbol_id",
        required: true,
        type: {
          name: "String"
        }
      },
      appId: {
        serializedName: "app_id",
        required: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsRm34DsV01AppsOwnerNameAppNameSymbolsSymbolIdStatusGetResponses403ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsRm34DsV01AppsOwnerNameAppNameSymbolsSymbolIdStatusGetResponses403ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths3NgdjqV01AppsOwnerNameAppNameSymbolsSymbolIdStatusGetResponses404ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths3NgdjqV01AppsOwnerNameAppNameSymbolsSymbolIdStatusGetResponses404ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsZyl9UsV01AppsOwnerNameAppNameSymbolsSymbolIdStatusGetResponses500ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsZyl9UsV01AppsOwnerNameAppNameSymbolsSymbolIdStatusGetResponses500ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1PukseV01AppsOwnerNameAppNameSymbolsSymbolIdLocationGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1PukseV01AppsOwnerNameAppNameSymbolsSymbolIdLocationGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      uri: {
        serializedName: "uri",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths10EfwkV01AppsOwnerNameAppNameSymbolsSymbolIdLocationGetResponses403ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths10EfwkV01AppsOwnerNameAppNameSymbolsSymbolIdLocationGetResponses403ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsAi9SksV01AppsOwnerNameAppNameSymbolsSymbolIdLocationGetResponses404ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsAi9SksV01AppsOwnerNameAppNameSymbolsSymbolIdLocationGetResponses404ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1OloyvoV01AppsOwnerNameAppNameSymbolsSymbolIdLocationGetResponses500ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1OloyvoV01AppsOwnerNameAppNameSymbolsSymbolIdLocationGetResponses500ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1K4YzazV01AppsOwnerNameAppNameSymbolsSymbolIdIgnorePostResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1K4YzazV01AppsOwnerNameAppNameSymbolsSymbolIdIgnorePostResponses200ContentApplicationJsonSchema",
    modelProperties: {
      symbolId: {
        serializedName: "symbol_id",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      appId: {
        serializedName: "app_id",
        required: true,
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        required: true,
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      },
      alternateSymbolIds: {
        serializedName: "alternate_symbol_ids",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      build: {
        serializedName: "build",
        type: {
          name: "String"
        }
      },
      symbolUploadId: {
        serializedName: "symbol_upload_id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1YawolbV01AppsOwnerNameAppNameSymbolsSymbolIdIgnorePostResponses403ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1YawolbV01AppsOwnerNameAppNameSymbolsSymbolIdIgnorePostResponses403ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1RxhxhnV01AppsOwnerNameAppNameSymbolsSymbolIdIgnorePostResponses404ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1RxhxhnV01AppsOwnerNameAppNameSymbolsSymbolIdIgnorePostResponses404ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsX0B659V01AppsOwnerNameAppNameSymbolsSymbolIdIgnorePostResponses500ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsX0B659V01AppsOwnerNameAppNameSymbolsSymbolIdIgnorePostResponses500ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsK9XnpbV01AppsOwnerNameAppNameSymbolsSymbolIdGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsK9XnpbV01AppsOwnerNameAppNameSymbolsSymbolIdGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      symbolId: {
        serializedName: "symbol_id",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      appId: {
        serializedName: "app_id",
        required: true,
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        required: true,
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      },
      alternateSymbolIds: {
        serializedName: "alternate_symbol_ids",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      build: {
        serializedName: "build",
        type: {
          name: "String"
        }
      },
      symbolUploadId: {
        serializedName: "symbol_upload_id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Vhz9IlV01AppsOwnerNameAppNameSymbolsSymbolIdGetResponses403ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Vhz9IlV01AppsOwnerNameAppNameSymbolsSymbolIdGetResponses403ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1DykrkvV01AppsOwnerNameAppNameSymbolsSymbolIdGetResponses404ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1DykrkvV01AppsOwnerNameAppNameSymbolsSymbolIdGetResponses404ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsVqx0ExV01AppsOwnerNameAppNameSymbolsSymbolIdGetResponses500ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsVqx0ExV01AppsOwnerNameAppNameSymbolsSymbolIdGetResponses500ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsRp7XckV01AppsOwnerNameAppNameSymbolsGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsRp7XckV01AppsOwnerNameAppNameSymbolsGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      symbolId: {
        serializedName: "symbol_id",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      appId: {
        serializedName: "app_id",
        required: true,
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        required: true,
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      },
      alternateSymbolIds: {
        serializedName: "alternate_symbol_ids",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      build: {
        serializedName: "build",
        type: {
          name: "String"
        }
      },
      symbolUploadId: {
        serializedName: "symbol_upload_id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsZha4ZiV01AppsOwnerNameAppNameSymbolsGetResponses403ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsZha4ZiV01AppsOwnerNameAppNameSymbolsGetResponses403ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1CjrzdcV01AppsOwnerNameAppNameSymbolsGetResponses500ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1CjrzdcV01AppsOwnerNameAppNameSymbolsGetResponses500ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths18Q3NddV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdLocationGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths18Q3NddV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdLocationGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      uri: {
        serializedName: "uri",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths3IyV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdLocationGetResponses403ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths3IyV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdLocationGetResponses403ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsL7Clp0V01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdLocationGetResponses404ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsL7Clp0V01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdLocationGetResponses404ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1N7F3U2V01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdLocationGetResponses500ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1N7F3U2V01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdLocationGetResponses500ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Eu1ZwcV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Eu1ZwcV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      symbolUploadId: {
        serializedName: "symbol_upload_id",
        required: true,
        type: {
          name: "String"
        }
      },
      appId: {
        serializedName: "app_id",
        required: true,
        type: {
          name: "String"
        }
      },
      user: {
        serializedName: "user",
        type: {
          name: "Composite",
          className:
            "PathsLchkcoV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdGetResponses200ContentApplicationJsonSchemaPropertiesUser"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      symbolType: {
        serializedName: "symbol_type",
        required: true,
        type: {
          name: "String"
        }
      },
      symbolsUploaded: {
        serializedName: "symbols_uploaded",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths69DrrbV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdGetResponses200ContentApplicationJsonSchemaPropertiesSymbolsUploadedItems"
            }
          }
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      fileName: {
        serializedName: "file_name",
        type: {
          name: "String"
        }
      },
      fileSize: {
        serializedName: "file_size",
        type: {
          name: "Number"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const PathsLchkcoV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdGetResponses200ContentApplicationJsonSchemaPropertiesUser: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsLchkcoV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdGetResponses200ContentApplicationJsonSchemaPropertiesUser",
    modelProperties: {
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths69DrrbV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdGetResponses200ContentApplicationJsonSchemaPropertiesSymbolsUploadedItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths69DrrbV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdGetResponses200ContentApplicationJsonSchemaPropertiesSymbolsUploadedItems",
    modelProperties: {
      symbolId: {
        serializedName: "symbol_id",
        required: true,
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths13BxjsnV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdGetResponses403ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths13BxjsnV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdGetResponses403ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Tfz2NwV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdGetResponses404ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Tfz2NwV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdGetResponses404ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths12AtszV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdGetResponses500ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths12AtszV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdGetResponses500ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsQse2V9V01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdPatchRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsQse2V9V01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdPatchRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths2Sc2IcV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdPatchResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths2Sc2IcV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdPatchResponses200ContentApplicationJsonSchema",
    modelProperties: {
      symbolUploadId: {
        serializedName: "symbol_upload_id",
        required: true,
        type: {
          name: "String"
        }
      },
      appId: {
        serializedName: "app_id",
        required: true,
        type: {
          name: "String"
        }
      },
      user: {
        serializedName: "user",
        type: {
          name: "Composite",
          className:
            "Paths1NwdyxkV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdPatchResponses200ContentApplicationJsonSchemaPropertiesUser"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      symbolType: {
        serializedName: "symbol_type",
        required: true,
        type: {
          name: "String"
        }
      },
      symbolsUploaded: {
        serializedName: "symbols_uploaded",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths1EdvctrV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdPatchResponses200ContentApplicationJsonSchemaPropertiesSymbolsUploadedItems"
            }
          }
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      fileName: {
        serializedName: "file_name",
        type: {
          name: "String"
        }
      },
      fileSize: {
        serializedName: "file_size",
        type: {
          name: "Number"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Paths1NwdyxkV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdPatchResponses200ContentApplicationJsonSchemaPropertiesUser: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1NwdyxkV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdPatchResponses200ContentApplicationJsonSchemaPropertiesUser",
    modelProperties: {
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1EdvctrV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdPatchResponses200ContentApplicationJsonSchemaPropertiesSymbolsUploadedItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1EdvctrV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdPatchResponses200ContentApplicationJsonSchemaPropertiesSymbolsUploadedItems",
    modelProperties: {
      symbolId: {
        serializedName: "symbol_id",
        required: true,
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsS5X5VpV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdPatchResponses400ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsS5X5VpV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdPatchResponses400ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Ccf2OgV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdPatchResponses403ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Ccf2OgV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdPatchResponses403ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths124Q9H8V01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdPatchResponses500ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths124Q9H8V01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdPatchResponses500ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsH20WogV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdDeleteResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsH20WogV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdDeleteResponses200ContentApplicationJsonSchema",
    modelProperties: {
      symbolUploadId: {
        serializedName: "symbol_upload_id",
        required: true,
        type: {
          name: "String"
        }
      },
      appId: {
        serializedName: "app_id",
        required: true,
        type: {
          name: "String"
        }
      },
      user: {
        serializedName: "user",
        type: {
          name: "Composite",
          className:
            "Paths14Dc1KbV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdDeleteResponses200ContentApplicationJsonSchemaPropertiesUser"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      symbolType: {
        serializedName: "symbol_type",
        required: true,
        type: {
          name: "String"
        }
      },
      symbolsUploaded: {
        serializedName: "symbols_uploaded",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Delete200ApplicationJsonPropertiesItemsItem"
            }
          }
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      fileName: {
        serializedName: "file_name",
        type: {
          name: "String"
        }
      },
      fileSize: {
        serializedName: "file_size",
        type: {
          name: "Number"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Paths14Dc1KbV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdDeleteResponses200ContentApplicationJsonSchemaPropertiesUser: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths14Dc1KbV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdDeleteResponses200ContentApplicationJsonSchemaPropertiesUser",
    modelProperties: {
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Delete200ApplicationJsonPropertiesItemsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Delete200ApplicationJsonPropertiesItemsItem",
    modelProperties: {
      symbolId: {
        serializedName: "symbol_id",
        required: true,
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths16F8Fw3V01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdDeleteResponses403ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths16F8Fw3V01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdDeleteResponses403ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsIabzs6V01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdDeleteResponses404ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsIabzs6V01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdDeleteResponses404ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1AenlgkV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdDeleteResponses500ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1AenlgkV01AppsOwnerNameAppNameSymbolUploadsSymbolUploadIdDeleteResponses500ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths5Jmb0FV01AppsOwnerNameAppNameSymbolUploadsGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths5Jmb0FV01AppsOwnerNameAppNameSymbolUploadsGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      symbolUploadId: {
        serializedName: "symbol_upload_id",
        required: true,
        type: {
          name: "String"
        }
      },
      appId: {
        serializedName: "app_id",
        required: true,
        type: {
          name: "String"
        }
      },
      user: {
        serializedName: "user",
        type: {
          name: "Composite",
          className: "GetResponses200ContentApplicationJsonSchemaItemUser"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      symbolType: {
        serializedName: "symbol_type",
        required: true,
        type: {
          name: "String"
        }
      },
      symbolsUploaded: {
        serializedName: "symbols_uploaded",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Get200ApplicationJsonItemsSymbolsUploadedItem"
            }
          }
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      fileName: {
        serializedName: "file_name",
        type: {
          name: "String"
        }
      },
      fileSize: {
        serializedName: "file_size",
        type: {
          name: "Number"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const GetResponses200ContentApplicationJsonSchemaItemUser: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetResponses200ContentApplicationJsonSchemaItemUser",
    modelProperties: {
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Get200ApplicationJsonItemsSymbolsUploadedItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonItemsSymbolsUploadedItem",
    modelProperties: {
      symbolId: {
        serializedName: "symbol_id",
        required: true,
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths15Ox23KV01AppsOwnerNameAppNameSymbolUploadsGetResponses403ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths15Ox23KV01AppsOwnerNameAppNameSymbolUploadsGetResponses403ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths11Twl9GV01AppsOwnerNameAppNameSymbolUploadsGetResponses500ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths11Twl9GV01AppsOwnerNameAppNameSymbolUploadsGetResponses500ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths18RbyikV01AppsOwnerNameAppNameSymbolUploadsPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths18RbyikV01AppsOwnerNameAppNameSymbolUploadsPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      symbolType: {
        serializedName: "symbol_type",
        required: true,
        type: {
          name: "String"
        }
      },
      clientCallback: {
        serializedName: "client_callback",
        type: {
          name: "String"
        }
      },
      fileName: {
        serializedName: "file_name",
        type: {
          name: "String"
        }
      },
      build: {
        serializedName: "build",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1B3N0BtV01AppsOwnerNameAppNameSymbolUploadsPostResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1B3N0BtV01AppsOwnerNameAppNameSymbolUploadsPostResponses200ContentApplicationJsonSchema",
    modelProperties: {
      symbolUploadId: {
        serializedName: "symbol_upload_id",
        required: true,
        type: {
          name: "String"
        }
      },
      uploadUrl: {
        serializedName: "upload_url",
        required: true,
        type: {
          name: "String"
        }
      },
      expirationDate: {
        serializedName: "expiration_date",
        required: true,
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const PathsGu8CaoV01AppsOwnerNameAppNameSymbolUploadsPostResponses400ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsGu8CaoV01AppsOwnerNameAppNameSymbolUploadsPostResponses400ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths11OusrnV01AppsOwnerNameAppNameSymbolUploadsPostResponses403ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths11OusrnV01AppsOwnerNameAppNameSymbolUploadsPostResponses403ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsGsz3YxV01AppsOwnerNameAppNameSymbolUploadsPostResponses500ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsGsz3YxV01AppsOwnerNameAppNameSymbolUploadsPostResponses500ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Subscription0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Subscription0",
    modelProperties: {
      startsAt: {
        serializedName: "startsAt",
        type: {
          name: "String"
        }
      },
      endsAt: {
        serializedName: "endsAt",
        type: {
          name: "String"
        }
      },
      daysLeft: {
        serializedName: "daysLeft",
        type: {
          name: "Number"
        }
      },
      tier: {
        serializedName: "tier",
        type: {
          name: "Composite",
          className:
            "Paths13Qyp9PV01AppsOwnerNameAppNameSubscriptionsGetResponses200ContentApplicationJsonSchemaPropertiesTier"
        }
      },
      active: {
        serializedName: "active",
        type: {
          name: "Boolean"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const Paths13Qyp9PV01AppsOwnerNameAppNameSubscriptionsGetResponses200ContentApplicationJsonSchemaPropertiesTier: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths13Qyp9PV01AppsOwnerNameAppNameSubscriptionsGetResponses200ContentApplicationJsonSchemaPropertiesTier",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Subscription1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Subscription1",
    modelProperties: {
      startsAt: {
        serializedName: "startsAt",
        type: {
          name: "String"
        }
      },
      endsAt: {
        serializedName: "endsAt",
        type: {
          name: "String"
        }
      },
      daysLeft: {
        serializedName: "daysLeft",
        type: {
          name: "Number"
        }
      },
      tier: {
        serializedName: "tier",
        type: {
          name: "Composite",
          className:
            "Paths1D6F1LqV01AppsOwnerNameAppNameSubscriptionsPostResponses201ContentApplicationJsonSchemaPropertiesTier"
        }
      },
      active: {
        serializedName: "active",
        type: {
          name: "Boolean"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const Paths1D6F1LqV01AppsOwnerNameAppNameSubscriptionsPostResponses201ContentApplicationJsonSchemaPropertiesTier: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1D6F1LqV01AppsOwnerNameAppNameSubscriptionsPostResponses201ContentApplicationJsonSchemaPropertiesTier",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths18FdbxcV01AppsOwnerNameAppNameStoreServiceStatusGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths18FdbxcV01AppsOwnerNameAppNameStoreServiceStatusGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      service: {
        serializedName: "service",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      validUntil: {
        serializedName: "valid_until",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths1Yn7B37V01AppsOwnerNameAppNameStoreServiceStatusGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Yn7B37V01AppsOwnerNameAppNameStoreServiceStatusGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsFt7OwuV01AppsOwnerNameAppNameSourceHostsSourceHostRepositoriesGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsFt7OwuV01AppsOwnerNameAppNameSourceHostsSourceHostRepositoriesGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      cloneUrl: {
        serializedName: "clone_url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths19B6FnrV01AppsOwnerNameAppNameSourceHostsSourceHostRepositoriesGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths19B6FnrV01AppsOwnerNameAppNameSourceHostsSourceHostRepositoriesGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsT02O1YV01AppsOwnerNameAppNameRepoConfigGetResponses200ContentApplicationJsonSchemaItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsT02O1YV01AppsOwnerNameAppNameRepoConfigGetResponses200ContentApplicationJsonSchemaItemsAllof0",
    modelProperties: {
      repoUrl: {
        serializedName: "repo_url",
        type: {
          name: "String"
        }
      },
      repoId: {
        serializedName: "repo_id",
        type: {
          name: "String"
        }
      },
      externalUserId: {
        serializedName: "external_user_id",
        type: {
          name: "String"
        }
      },
      serviceConnectionId: {
        serializedName: "service_connection_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsPitaxjV01AppsOwnerNameAppNameRepoConfigGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsPitaxjV01AppsOwnerNameAppNameRepoConfigGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsAqvv1UV01AppsOwnerNameAppNameRepoConfigPostRequestbodyContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsAqvv1UV01AppsOwnerNameAppNameRepoConfigPostRequestbodyContentApplicationJsonSchemaAllof0",
    modelProperties: {
      repoUrl: {
        serializedName: "repo_url",
        type: {
          name: "String"
        }
      },
      repoId: {
        serializedName: "repo_id",
        type: {
          name: "String"
        }
      },
      externalUserId: {
        serializedName: "external_user_id",
        type: {
          name: "String"
        }
      },
      serviceConnectionId: {
        serializedName: "service_connection_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1I47WvgV01AppsOwnerNameAppNameRepoConfigPostResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1I47WvgV01AppsOwnerNameAppNameRepoConfigPostResponses200ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsP7E5UzV01AppsOwnerNameAppNameRepoConfigPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsP7E5UzV01AppsOwnerNameAppNameRepoConfigPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsX38Gw3V01AppsOwnerNameAppNameRepoConfigDeleteResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsX38Gw3V01AppsOwnerNameAppNameRepoConfigDeleteResponses200ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Lqz171V01AppsOwnerNameAppNameRepoConfigDeleteResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Lqz171V01AppsOwnerNameAppNameRepoConfigDeleteResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths13R6WlgV01AppsOwnerNameAppNameReleasesReleaseIdUpdateDevicesResignIdGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths13R6WlgV01AppsOwnerNameAppNameReleasesReleaseIdUpdateDevicesResignIdGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      errorCode: {
        serializedName: "error_code",
        type: {
          name: "String"
        }
      },
      errorMessage: {
        serializedName: "error_message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1O1G9I2V01AppsOwnerNameAppNameReleasesReleaseIdUpdateDevicesResignIdGetResponses400ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1O1G9I2V01AppsOwnerNameAppNameReleasesReleaseIdUpdateDevicesResignIdGetResponses400ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsRigtgjV01AppsOwnerNameAppNameReleasesReleaseIdUpdateDevicesResignIdGetResponses404ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsRigtgjV01AppsOwnerNameAppNameReleasesReleaseIdUpdateDevicesResignIdGetResponses404ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsOjvewzV01AppsOwnerNameAppNameReleasesReleaseIdTestersTesterIdPutRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsOjvewzV01AppsOwnerNameAppNameReleasesReleaseIdTestersTesterIdPutRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      mandatoryUpdate: {
        serializedName: "mandatory_update",
        required: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths7J8CcmV01AppsOwnerNameAppNameReleasesReleaseIdTestersTesterIdPutResponses404ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths7J8CcmV01AppsOwnerNameAppNameReleasesReleaseIdTestersTesterIdPutResponses404ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1RmbaiiV01AppsOwnerNameAppNameReleasesReleaseIdTestersTesterIdDeleteResponses404ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1RmbaiiV01AppsOwnerNameAppNameReleasesReleaseIdTestersTesterIdDeleteResponses404ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsF6Ye6UV01AppsOwnerNameAppNameReleasesReleaseIdTestersPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsF6Ye6UV01AppsOwnerNameAppNameReleasesReleaseIdTestersPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      mandatoryUpdate: {
        serializedName: "mandatory_update",
        type: {
          name: "Boolean"
        }
      },
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      notifyTesters: {
        defaultValue: true,
        serializedName: "notify_testers",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PathsKdtsm0V01AppsOwnerNameAppNameReleasesReleaseIdTestersPostResponses201ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsKdtsm0V01AppsOwnerNameAppNameReleasesReleaseIdTestersPostResponses201ContentApplicationJsonSchemaAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths12D41JpV01AppsOwnerNameAppNameReleasesReleaseIdTestersPostResponses201ContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths12D41JpV01AppsOwnerNameAppNameReleasesReleaseIdTestersPostResponses201ContentApplicationJsonSchemaAllof1",
    modelProperties: {
      mandatoryUpdate: {
        serializedName: "mandatory_update",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      provisioningStatusUrl: {
        serializedName: "provisioning_status_url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsVb1DjeV01AppsOwnerNameAppNameReleasesReleaseIdTestersPostResponses400ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsVb1DjeV01AppsOwnerNameAppNameReleasesReleaseIdTestersPostResponses400ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1P68AoeV01AppsOwnerNameAppNameReleasesReleaseIdTestersPostResponses404ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1P68AoeV01AppsOwnerNameAppNameReleasesReleaseIdTestersPostResponses404ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1BbvdowV01AppsOwnerNameAppNameReleasesReleaseIdStoresStoreIdDeleteResponses404ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1BbvdowV01AppsOwnerNameAppNameReleasesReleaseIdStoresStoreIdDeleteResponses404ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths19I3T9ZV01AppsOwnerNameAppNameReleasesReleaseIdStoresPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths19I3T9ZV01AppsOwnerNameAppNameReleasesReleaseIdStoresPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const Paths1Tn9O5V01AppsOwnerNameAppNameReleasesReleaseIdStoresPostResponses201ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Tn9O5V01AppsOwnerNameAppNameReleasesReleaseIdStoresPostResponses201ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Kf4BpnV01AppsOwnerNameAppNameReleasesReleaseIdStoresPostResponses400ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Kf4BpnV01AppsOwnerNameAppNameReleasesReleaseIdStoresPostResponses400ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1T5QljtV01AppsOwnerNameAppNameReleasesReleaseIdStoresPostResponses404ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1T5QljtV01AppsOwnerNameAppNameReleasesReleaseIdStoresPostResponses404ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProvisioningProfileResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProvisioningProfileResponse",
    modelProperties: {
      provisioningProfileType: {
        serializedName: "provisioning_profile_type",
        required: true,
        type: {
          name: "String"
        }
      },
      udids: {
        serializedName: "udids",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      provisioningProfileName: {
        serializedName: "provisioning_profile_name",
        type: {
          name: "String"
        }
      },
      teamIdentifier: {
        serializedName: "team_identifier",
        type: {
          name: "String"
        }
      },
      provisioningBundleId: {
        serializedName: "provisioning_bundle_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsI43JzkV01AppsOwnerNameAppNameReleasesReleaseIdProvisioningProfileGetResponses400ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsI43JzkV01AppsOwnerNameAppNameReleasesReleaseIdProvisioningProfileGetResponses400ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Y3U3TvV01AppsOwnerNameAppNameReleasesReleaseIdGroupsGroupIdPutRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Y3U3TvV01AppsOwnerNameAppNameReleasesReleaseIdGroupsGroupIdPutRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      mandatoryUpdate: {
        serializedName: "mandatory_update",
        required: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths11Dzu4BV01AppsOwnerNameAppNameReleasesReleaseIdGroupsGroupIdPutResponses404ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths11Dzu4BV01AppsOwnerNameAppNameReleasesReleaseIdGroupsGroupIdPutResponses404ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Nrzr5YV01AppsOwnerNameAppNameReleasesReleaseIdGroupsGroupIdDeleteResponses404ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Nrzr5YV01AppsOwnerNameAppNameReleasesReleaseIdGroupsGroupIdDeleteResponses404ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths17Lp2JiV01AppsOwnerNameAppNameReleasesReleaseIdGroupsPostRequestbodyContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths17Lp2JiV01AppsOwnerNameAppNameReleasesReleaseIdGroupsPostRequestbodyContentApplicationJsonSchemaAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const Paths17MosqV01AppsOwnerNameAppNameReleasesReleaseIdGroupsPostRequestbodyContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths17MosqV01AppsOwnerNameAppNameReleasesReleaseIdGroupsPostRequestbodyContentApplicationJsonSchemaAllof1",
    modelProperties: {
      mandatoryUpdate: {
        serializedName: "mandatory_update",
        type: {
          name: "Boolean"
        }
      },
      notifyTesters: {
        defaultValue: true,
        serializedName: "notify_testers",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths14K4HpV01AppsOwnerNameAppNameReleasesReleaseIdGroupsPostResponses201ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths14K4HpV01AppsOwnerNameAppNameReleasesReleaseIdGroupsPostResponses201ContentApplicationJsonSchemaAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1489G45V01AppsOwnerNameAppNameReleasesReleaseIdGroupsPostResponses201ContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1489G45V01AppsOwnerNameAppNameReleasesReleaseIdGroupsPostResponses201ContentApplicationJsonSchemaAllof1",
    modelProperties: {
      mandatoryUpdate: {
        serializedName: "mandatory_update",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      provisioningStatusUrl: {
        serializedName: "provisioning_status_url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsPtrb07V01AppsOwnerNameAppNameReleasesReleaseIdGroupsPostResponses400ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsPtrb07V01AppsOwnerNameAppNameReleasesReleaseIdGroupsPostResponses400ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths19Ueda8V01AppsOwnerNameAppNameReleasesReleaseIdGroupsPostResponses404ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths19Ueda8V01AppsOwnerNameAppNameReleasesReleaseIdGroupsPostResponses404ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Wtl5HpV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Wtl5HpV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Number"
        }
      },
      appName: {
        serializedName: "app_name",
        required: true,
        type: {
          name: "String"
        }
      },
      appDisplayName: {
        serializedName: "app_display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      appOs: {
        serializedName: "app_os",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      shortVersion: {
        serializedName: "short_version",
        required: true,
        type: {
          name: "String"
        }
      },
      releaseNotes: {
        serializedName: "release_notes",
        type: {
          name: "String"
        }
      },
      provisioningProfileName: {
        serializedName: "provisioning_profile_name",
        type: {
          name: "String"
        }
      },
      provisioningProfileType: {
        serializedName: "provisioning_profile_type",
        type: {
          name: "String"
        }
      },
      provisioningProfileExpiryDate: {
        serializedName: "provisioning_profile_expiry_date",
        type: {
          name: "String"
        }
      },
      isProvisioningProfileSyncing: {
        serializedName: "is_provisioning_profile_syncing",
        type: {
          name: "Boolean"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      minOs: {
        serializedName: "min_os",
        type: {
          name: "String"
        }
      },
      deviceFamily: {
        serializedName: "device_family",
        type: {
          name: "String"
        }
      },
      androidMinApiLevel: {
        serializedName: "android_min_api_level",
        type: {
          name: "String"
        }
      },
      bundleIdentifier: {
        serializedName: "bundle_identifier",
        type: {
          name: "String"
        }
      },
      packageHashes: {
        serializedName: "package_hashes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      fingerprint: {
        serializedName: "fingerprint",
        type: {
          name: "String"
        }
      },
      uploadedAt: {
        serializedName: "uploaded_at",
        required: true,
        type: {
          name: "String"
        }
      },
      downloadUrl: {
        serializedName: "download_url",
        type: {
          name: "String"
        }
      },
      appIconUrl: {
        serializedName: "app_icon_url",
        required: true,
        type: {
          name: "String"
        }
      },
      installUrl: {
        serializedName: "install_url",
        type: {
          name: "String"
        }
      },
      destinationType: {
        serializedName: "destination_type",
        type: {
          name: "String"
        }
      },
      distributionGroups: {
        serializedName: "distribution_groups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsNf9DrV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDistributionGroupsItems"
            }
          }
        }
      },
      distributionStores: {
        serializedName: "distribution_stores",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths11M0CpxV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDistributionStoresItems"
            }
          }
        }
      },
      destinations: {
        serializedName: "destinations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsEgsmktV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItems"
            }
          }
        }
      },
      isUdidProvisioned: {
        serializedName: "is_udid_provisioned",
        type: {
          name: "Boolean"
        }
      },
      canResign: {
        serializedName: "can_resign",
        type: {
          name: "Boolean"
        }
      },
      build: {
        serializedName: "build",
        type: {
          name: "Composite",
          className:
            "Paths1993OjcV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesBuild"
        }
      },
      enabled: {
        serializedName: "enabled",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      isExternalBuild: {
        serializedName: "is_external_build",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PathsNf9DrV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDistributionGroupsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsNf9DrV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDistributionGroupsItems",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths11M0CpxV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDistributionStoresItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths11M0CpxV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDistributionStoresItems",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      publishingStatus: {
        serializedName: "publishing_status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths13SftyjV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths13SftyjV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      publishingStatus: {
        serializedName: "publishing_status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsWkq29YV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0Allof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsWkq29YV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0Allof1",
    modelProperties: {
      isLatest: {
        serializedName: "is_latest",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths13J8DbyV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths13J8DbyV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof1",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Pu9X8V01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof2: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Pu9X8V01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof2",
    modelProperties: {
      destinationType: {
        serializedName: "destination_type",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1993OjcV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesBuild: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1993OjcV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesBuild",
    modelProperties: {
      branchName: {
        serializedName: "branch_name",
        type: {
          name: "String"
        }
      },
      commitHash: {
        serializedName: "commit_hash",
        type: {
          name: "String"
        }
      },
      commitMessage: {
        serializedName: "commit_message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1LeydabV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses400ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1LeydabV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses400ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths6Hivb0V01AppsOwnerNameAppNameReleasesReleaseIdGetResponses404ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths6Hivb0V01AppsOwnerNameAppNameReleasesReleaseIdGetResponses404ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsQ3NwdwV01AppsOwnerNameAppNameReleasesReleaseIdPutRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsQ3NwdwV01AppsOwnerNameAppNameReleasesReleaseIdPutRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      releaseNotes: {
        serializedName: "release_notes",
        type: {
          name: "String"
        }
      },
      build: {
        serializedName: "build",
        type: {
          name: "Composite",
          className: "PutContentSchemaBuild"
        }
      }
    }
  }
};

export const PutContentSchemaBuild: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PutContentSchemaBuild",
    modelProperties: {
      branchName: {
        serializedName: "branch_name",
        type: {
          name: "String"
        }
      },
      commitHash: {
        serializedName: "commit_hash",
        type: {
          name: "String"
        }
      },
      commitMessage: {
        serializedName: "commit_message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsMeoh5V01AppsOwnerNameAppNameReleasesReleaseIdPutResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsMeoh5V01AppsOwnerNameAppNameReleasesReleaseIdPutResponses200ContentApplicationJsonSchema",
    modelProperties: {
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      mandatoryUpdate: {
        serializedName: "mandatory_update",
        type: {
          name: "Boolean"
        }
      },
      releaseNotes: {
        serializedName: "release_notes",
        type: {
          name: "String"
        }
      },
      provisioningStatusUrl: {
        serializedName: "provisioning_status_url",
        type: {
          name: "String"
        }
      },
      destinations: {
        serializedName: "destinations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths1RxivxnV01AppsOwnerNameAppNameReleasesReleaseIdPutResponses200ContentApplicationJsonSchemaPropertiesDestinationsItems"
            }
          }
        }
      }
    }
  }
};

export const Paths1RxivxnV01AppsOwnerNameAppNameReleasesReleaseIdPutResponses200ContentApplicationJsonSchemaPropertiesDestinationsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1RxivxnV01AppsOwnerNameAppNameReleasesReleaseIdPutResponses200ContentApplicationJsonSchemaPropertiesDestinationsItems",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths17Qi9DpV01AppsOwnerNameAppNameReleasesReleaseIdPutResponses400ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths17Qi9DpV01AppsOwnerNameAppNameReleasesReleaseIdPutResponses400ContentApplicationJsonSchemaAllof0",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Y3IqbjV01AppsOwnerNameAppNameReleasesReleaseIdPutResponses400ContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Y3IqbjV01AppsOwnerNameAppNameReleasesReleaseIdPutResponses400ContentApplicationJsonSchemaAllof1",
    modelProperties: {
      releaseNotes: {
        serializedName: "release_notes",
        type: {
          name: "String"
        }
      },
      mandatoryUpdate: {
        serializedName: "mandatory_update",
        type: {
          name: "Boolean"
        }
      },
      destinations: {
        serializedName: "destinations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Put400ApplicationJsonAllOfPropertiesItemsItem"
            }
          }
        }
      }
    }
  }
};

export const Put400ApplicationJsonAllOfPropertiesItemsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Put400ApplicationJsonAllOfPropertiesItemsItem",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsAuajt0V01AppsOwnerNameAppNameReleasesReleaseIdPutResponses404ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsAuajt0V01AppsOwnerNameAppNameReleasesReleaseIdPutResponses404ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Veut4NV01AppsOwnerNameAppNameReleasesReleaseIdPatchRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Veut4NV01AppsOwnerNameAppNameReleasesReleaseIdPatchRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      distributionGroupName: {
        serializedName: "distribution_group_name",
        type: {
          name: "String"
        }
      },
      distributionGroupId: {
        serializedName: "distribution_group_id",
        type: {
          name: "String"
        }
      },
      destinationName: {
        serializedName: "destination_name",
        type: {
          name: "String"
        }
      },
      destinationId: {
        serializedName: "destination_id",
        type: {
          name: "String"
        }
      },
      destinationType: {
        serializedName: "destination_type",
        type: {
          name: "String"
        }
      },
      releaseNotes: {
        serializedName: "release_notes",
        type: {
          name: "String"
        }
      },
      mandatoryUpdate: {
        serializedName: "mandatory_update",
        type: {
          name: "Boolean"
        }
      },
      destinations: {
        serializedName: "destinations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PatchContentSchemaDestinationsItem"
            }
          }
        }
      },
      build: {
        serializedName: "build",
        type: {
          name: "Composite",
          className: "PatchContentSchemaBuild"
        }
      },
      notifyTesters: {
        defaultValue: true,
        serializedName: "notify_testers",
        type: {
          name: "Boolean"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "PatchContentSchemaMetadata"
        }
      }
    }
  }
};

export const PatchContentSchemaDestinationsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PatchContentSchemaDestinationsItem",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PatchContentSchemaBuild: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PatchContentSchemaBuild",
    modelProperties: {
      branchName: {
        serializedName: "branch_name",
        type: {
          name: "String"
        }
      },
      commitHash: {
        serializedName: "commit_hash",
        type: {
          name: "String"
        }
      },
      commitMessage: {
        serializedName: "commit_message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PatchContentSchemaMetadata: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PatchContentSchemaMetadata",
    modelProperties: {
      dsaSignature: {
        serializedName: "dsa_signature",
        type: {
          name: "String"
        }
      },
      edSignature: {
        serializedName: "ed_signature",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1FopftvV01AppsOwnerNameAppNameReleasesReleaseIdPatchResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1FopftvV01AppsOwnerNameAppNameReleasesReleaseIdPatchResponses200ContentApplicationJsonSchema",
    modelProperties: {
      releaseNotes: {
        serializedName: "release_notes",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsRtr6U2V01AppsOwnerNameAppNameReleasesReleaseIdPatchResponses400ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsRtr6U2V01AppsOwnerNameAppNameReleasesReleaseIdPatchResponses400ContentApplicationJsonSchemaAllof0",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsP5E57AV01AppsOwnerNameAppNameReleasesReleaseIdPatchResponses400ContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsP5E57AV01AppsOwnerNameAppNameReleasesReleaseIdPatchResponses400ContentApplicationJsonSchemaAllof1",
    modelProperties: {
      releaseNotes: {
        serializedName: "release_notes",
        type: {
          name: "String"
        }
      },
      mandatoryUpdate: {
        serializedName: "mandatory_update",
        type: {
          name: "Boolean"
        }
      },
      destinations: {
        serializedName: "destinations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Patch400ApplicationJsonAllOfPropertiesItemsItem"
            }
          }
        }
      }
    }
  }
};

export const Patch400ApplicationJsonAllOfPropertiesItemsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Patch400ApplicationJsonAllOfPropertiesItemsItem",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsW9K4UlV01AppsOwnerNameAppNameReleasesReleaseIdPatchResponses404ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsW9K4UlV01AppsOwnerNameAppNameReleasesReleaseIdPatchResponses404ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsQra1HiV01AppsOwnerNameAppNameReleasesReleaseIdDeleteResponses404ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsQra1HiV01AppsOwnerNameAppNameReleasesReleaseIdDeleteResponses404ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Lqk8FbV01AppsOwnerNameAppNameReleasesReleaseIdDeleteResponses500ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Lqk8FbV01AppsOwnerNameAppNameReleasesReleaseIdDeleteResponses500ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths146V2RtV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths146V2RtV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Number"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      shortVersion: {
        serializedName: "short_version",
        required: true,
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "enabled",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      uploadedAt: {
        serializedName: "uploaded_at",
        required: true,
        type: {
          name: "String"
        }
      },
      destinationType: {
        serializedName: "destination_type",
        type: {
          name: "String"
        }
      },
      distributionGroups: {
        serializedName: "distribution_groups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Get200ApplicationJsonItemsDistributionGroupsItem"
            }
          }
        }
      },
      distributionStores: {
        serializedName: "distribution_stores",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Get200ApplicationJsonItemsDistributionStoresItem"
            }
          }
        }
      },
      destinations: {
        serializedName: "destinations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Get200ApplicationJsonItemsDestinationsItem"
            }
          }
        }
      },
      build: {
        serializedName: "build",
        type: {
          name: "Composite",
          className:
            "PathsBk4EdhV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesBuild"
        }
      },
      isExternalBuild: {
        serializedName: "is_external_build",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths10J5Pj9V01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths10J5Pj9V01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItemsAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsW3XrsbV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItemsAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsW3XrsbV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItemsAllof1",
    modelProperties: {
      isLatest: {
        serializedName: "is_latest",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PathsP9RqxrV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsP9RqxrV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItemsAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      publishingStatus: {
        serializedName: "publishing_status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths7Pkkp8V01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItemsAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths7Pkkp8V01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItemsAllof1",
    modelProperties: {
      isLatest: {
        serializedName: "is_latest",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths18Irl7JV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths18Irl7JV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      publishingStatus: {
        serializedName: "publishing_status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsJ60E2EV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0Allof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsJ60E2EV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0Allof1",
    modelProperties: {
      isLatest: {
        serializedName: "is_latest",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PathsLdmfwzV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsLdmfwzV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof1",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1F6N8B4V01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof2: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1F6N8B4V01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof2",
    modelProperties: {
      destinationType: {
        serializedName: "destination_type",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsBk4EdhV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesBuild: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsBk4EdhV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesBuild",
    modelProperties: {
      branchName: {
        serializedName: "branch_name",
        type: {
          name: "String"
        }
      },
      commitHash: {
        serializedName: "commit_hash",
        type: {
          name: "String"
        }
      },
      commitMessage: {
        serializedName: "commit_message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths13M4B1YV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths13M4B1YV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Number"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      shortVersion: {
        serializedName: "short_version",
        required: true,
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "enabled",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      uploadedAt: {
        serializedName: "uploaded_at",
        required: true,
        type: {
          name: "String"
        }
      },
      destinationType: {
        serializedName: "destination_type",
        type: {
          name: "String"
        }
      },
      distributionGroups: {
        serializedName: "distribution_groups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsQc9WyxV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItems"
            }
          }
        }
      },
      distributionStores: {
        serializedName: "distribution_stores",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths15Ddi2KV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItems"
            }
          }
        }
      },
      destinations: {
        serializedName: "destinations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths2S32RgV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItems"
            }
          }
        }
      },
      build: {
        serializedName: "build",
        type: {
          name: "Composite",
          className:
            "PathsC8XxqtV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesBuild"
        }
      },
      isExternalBuild: {
        serializedName: "is_external_build",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths1Fwr664V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Fwr664V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItemsAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsOjwcvoV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItemsAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsOjwcvoV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItemsAllof1",
    modelProperties: {
      isLatest: {
        serializedName: "is_latest",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PathsUii8Z4V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsUii8Z4V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItemsAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      publishingStatus: {
        serializedName: "publishing_status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsGd6D92V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItemsAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsGd6D92V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItemsAllof1",
    modelProperties: {
      isLatest: {
        serializedName: "is_latest",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths1612Hh6V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1612Hh6V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      publishingStatus: {
        serializedName: "publishing_status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths12Nyzp4V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0Allof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths12Nyzp4V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0Allof1",
    modelProperties: {
      isLatest: {
        serializedName: "is_latest",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths16Wfds7V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths16Wfds7V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof1",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths2Wsk71V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof2: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths2Wsk71V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof2",
    modelProperties: {
      destinationType: {
        serializedName: "destination_type",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsC8XxqtV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesBuild: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsC8XxqtV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesBuild",
    modelProperties: {
      branchName: {
        serializedName: "branch_name",
        type: {
          name: "String"
        }
      },
      commitHash: {
        serializedName: "commit_hash",
        type: {
          name: "String"
        }
      },
      commitMessage: {
        serializedName: "commit_message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsYi44H6V01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsYi44H6V01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Number"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      shortVersion: {
        serializedName: "short_version",
        required: true,
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "enabled",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      uploadedAt: {
        serializedName: "uploaded_at",
        required: true,
        type: {
          name: "String"
        }
      },
      destinationType: {
        serializedName: "destination_type",
        type: {
          name: "String"
        }
      },
      distributionGroups: {
        serializedName: "distribution_groups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths14BtkccV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItems"
            }
          }
        }
      },
      distributionStores: {
        serializedName: "distribution_stores",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths1Yxm0T8V01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItems"
            }
          }
        }
      },
      destinations: {
        serializedName: "destinations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsM69GgsV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItems"
            }
          }
        }
      },
      build: {
        serializedName: "build",
        type: {
          name: "Composite",
          className:
            "PathsKdfzV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesBuild"
        }
      },
      isExternalBuild: {
        serializedName: "is_external_build",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths1S10KqwV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1S10KqwV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItemsAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsWb4NtlV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItemsAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsWb4NtlV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItemsAllof1",
    modelProperties: {
      isLatest: {
        serializedName: "is_latest",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths1UjvvjlV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1UjvvjlV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItemsAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      publishingStatus: {
        serializedName: "publishing_status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths11O5OrcV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItemsAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths11O5OrcV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItemsAllof1",
    modelProperties: {
      isLatest: {
        serializedName: "is_latest",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PathsG3O3KxV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsG3O3KxV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      publishingStatus: {
        serializedName: "publishing_status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1LkdigmV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0Allof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1LkdigmV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0Allof1",
    modelProperties: {
      isLatest: {
        serializedName: "is_latest",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths1Os0Y5OV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Os0Y5OV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof1",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Qd7R1NV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof2: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Qd7R1NV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof2",
    modelProperties: {
      destinationType: {
        serializedName: "destination_type",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsKdfzV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesBuild: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsKdfzV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesBuild",
    modelProperties: {
      branchName: {
        serializedName: "branch_name",
        type: {
          name: "String"
        }
      },
      commitHash: {
        serializedName: "commit_hash",
        type: {
          name: "String"
        }
      },
      commitMessage: {
        serializedName: "commit_message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Hot65IV01AppsOwnerNameAppNamePushNotificationsConfigHeadResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Hot65IV01AppsOwnerNameAppNamePushNotificationsConfigHeadResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "HeadDefaultApplicationJsonProperties"
        }
      }
    }
  }
};

export const HeadDefaultApplicationJsonProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HeadDefaultApplicationJsonProperties",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1C7Oun7V01AppsOwnerNameAppNamePushNotificationsConfigGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  serializedName:
    "Paths1C7Oun7V01AppsOwnerNameAppNamePushNotificationsConfigGetResponses200ContentApplicationJsonSchema",
  type: {
    name: "Composite",
    className:
      "Paths1C7Oun7V01AppsOwnerNameAppNamePushNotificationsConfigGetResponses200ContentApplicationJsonSchema",
    uberParent:
      "Paths1C7Oun7V01AppsOwnerNameAppNamePushNotificationsConfigGetResponses200ContentApplicationJsonSchema",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsO0Ll17V01AppsOwnerNameAppNamePushNotificationsConfigGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsO0Ll17V01AppsOwnerNameAppNamePushNotificationsConfigGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Vuj69KV01AppsOwnerNameAppNamePushNotificationsConfigGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Vuj69KV01AppsOwnerNameAppNamePushNotificationsConfigGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Vuj69KV01AppsOwnerNameAppNamePushNotificationsConfigGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Nw7A47V01AppsOwnerNameAppNamePushNotificationsConfigPutRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  serializedName:
    "Paths1Nw7A47V01AppsOwnerNameAppNamePushNotificationsConfigPutRequestbodyContentApplicationJsonSchema",
  type: {
    name: "Composite",
    className:
      "Paths1Nw7A47V01AppsOwnerNameAppNamePushNotificationsConfigPutRequestbodyContentApplicationJsonSchema",
    uberParent:
      "Paths1Nw7A47V01AppsOwnerNameAppNamePushNotificationsConfigPutRequestbodyContentApplicationJsonSchema",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths176Xq3CV01AppsOwnerNameAppNamePushNotificationsConfigPutResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  serializedName:
    "Paths176Xq3CV01AppsOwnerNameAppNamePushNotificationsConfigPutResponses200ContentApplicationJsonSchema",
  type: {
    name: "Composite",
    className:
      "Paths176Xq3CV01AppsOwnerNameAppNamePushNotificationsConfigPutResponses200ContentApplicationJsonSchema",
    uberParent:
      "Paths176Xq3CV01AppsOwnerNameAppNamePushNotificationsConfigPutResponses200ContentApplicationJsonSchema",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsFgy7YfV01AppsOwnerNameAppNamePushNotificationsConfigPutResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsFgy7YfV01AppsOwnerNameAppNamePushNotificationsConfigPutResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "PutDefaultApplicationJsonProperties"
        }
      }
    }
  }
};

export const PutDefaultApplicationJsonProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PutDefaultApplicationJsonProperties",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsFm6Bs9V01AppsOwnerNameAppNamePushNotificationsConfigDeleteResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsFm6Bs9V01AppsOwnerNameAppNamePushNotificationsConfigDeleteResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsAky7AtV01AppsOwnerNameAppNamePushNotificationsConfigDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsAky7AtV01AppsOwnerNameAppNamePushNotificationsConfigDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsAky7AtV01AppsOwnerNameAppNamePushNotificationsConfigDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsX4Uqn0V01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponses200ContentApplicationJsonSchemaPropertiesNotificationContent: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsX4Uqn0V01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponses200ContentApplicationJsonSchemaPropertiesNotificationContent",
    modelProperties: {
      name: {
        constraints: {
          MaxLength: 64,
          MinLength: 3
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      title: {
        constraints: {
          MaxLength: 128
        },
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      body: {
        constraints: {
          MaxLength: 4000,
          MinLength: 1
        },
        serializedName: "body",
        type: {
          name: "String"
        }
      },
      customData: {
        serializedName: "custom_data",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const Paths1V4Or6MV01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponses200ContentApplicationJsonSchemaPropertiesFailureOutcomesItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1V4Or6MV01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponses200ContentApplicationJsonSchemaPropertiesFailureOutcomesItems",
    modelProperties: {
      failureReason: {
        serializedName: "failure_reason",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PathsM85ZfmV01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsM85ZfmV01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponses200ContentApplicationJsonSchemaAllof0",
    modelProperties: {
      notificationId: {
        serializedName: "notification_id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        constraints: {
          MaxLength: 64
        },
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      notificationTarget: {
        serializedName: "notification_target",
        type: {
          name: "Composite",
          className:
            "Paths1Ym8ZayV01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponses200ContentApplicationJsonSchemaAllof0PropertiesNotificationTarget"
        }
      },
      sendTime: {
        serializedName: "send_time",
        type: {
          name: "DateTime"
        }
      },
      pnsSendFailure: {
        serializedName: "pns_send_failure",
        type: {
          name: "Number"
        }
      },
      pnsSendSuccess: {
        serializedName: "pns_send_success",
        type: {
          name: "Number"
        }
      },
      state: {
        serializedName: "state",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Ym8ZayV01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponses200ContentApplicationJsonSchemaAllof0PropertiesNotificationTarget: coreClient.CompositeMapper = {
  serializedName:
    "Paths1Ym8ZayV01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponses200ContentApplicationJsonSchemaAllof0PropertiesNotificationTarget",
  type: {
    name: "Composite",
    className:
      "Paths1Ym8ZayV01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponses200ContentApplicationJsonSchemaAllof0PropertiesNotificationTarget",
    uberParent:
      "Paths1Ym8ZayV01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponses200ContentApplicationJsonSchemaAllof0PropertiesNotificationTarget",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsY2MpnfV01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsY2MpnfV01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Vi0HjqV01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Vi0HjqV01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Vi0HjqV01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1YjfjrmV01AppsOwnerNameAppNamePushNotificationsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1YjfjrmV01AppsOwnerNameAppNamePushNotificationsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      values: {
        serializedName: "values",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths1PpqnzdV01AppsOwnerNameAppNamePushNotificationsGetResponses200ContentApplicationJsonSchemaPropertiesValuesItems"
            }
          }
        }
      },
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1PpqnzdV01AppsOwnerNameAppNamePushNotificationsGetResponses200ContentApplicationJsonSchemaPropertiesValuesItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1PpqnzdV01AppsOwnerNameAppNamePushNotificationsGetResponses200ContentApplicationJsonSchemaPropertiesValuesItems",
    modelProperties: {
      notificationId: {
        serializedName: "notification_id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        constraints: {
          MaxLength: 64
        },
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      notificationTarget: {
        serializedName: "notification_target",
        type: {
          name: "Composite",
          className:
            "GetResponses200ContentApplicationJsonSchemaValuesItemNotificationTarget"
        }
      },
      sendTime: {
        serializedName: "send_time",
        type: {
          name: "DateTime"
        }
      },
      pnsSendFailure: {
        serializedName: "pns_send_failure",
        type: {
          name: "Number"
        }
      },
      pnsSendSuccess: {
        serializedName: "pns_send_success",
        type: {
          name: "Number"
        }
      },
      state: {
        serializedName: "state",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GetResponses200ContentApplicationJsonSchemaValuesItemNotificationTarget: coreClient.CompositeMapper = {
  serializedName:
    "GetResponses200ContentApplicationJsonSchemaValuesItemNotificationTarget",
  type: {
    name: "Composite",
    className:
      "GetResponses200ContentApplicationJsonSchemaValuesItemNotificationTarget",
    uberParent:
      "GetResponses200ContentApplicationJsonSchemaValuesItemNotificationTarget",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Ua4CuvV01AppsOwnerNameAppNamePushNotificationsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Ua4CuvV01AppsOwnerNameAppNamePushNotificationsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1176Y01V01AppsOwnerNameAppNamePushNotificationsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1176Y01V01AppsOwnerNameAppNamePushNotificationsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1176Y01V01AppsOwnerNameAppNamePushNotificationsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths13Dzhd2V01AppsOwnerNameAppNamePushNotificationsPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths13Dzhd2V01AppsOwnerNameAppNamePushNotificationsPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      notificationTarget: {
        serializedName: "notification_target",
        type: {
          name: "Composite",
          className: "PostContentSchemaNotificationTarget"
        }
      },
      notificationContent: {
        serializedName: "notification_content",
        type: {
          name: "Composite",
          className: "PostContentSchemaNotificationContent"
        }
      }
    }
  }
};

export const PostContentSchemaNotificationTarget: coreClient.CompositeMapper = {
  serializedName: "PostContentSchemaNotificationTarget",
  type: {
    name: "Composite",
    className: "PostContentSchemaNotificationTarget",
    uberParent: "PostContentSchemaNotificationTarget",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PostContentSchemaNotificationContent: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PostContentSchemaNotificationContent",
    modelProperties: {
      name: {
        constraints: {
          MaxLength: 64,
          MinLength: 3
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      title: {
        constraints: {
          MaxLength: 128
        },
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      body: {
        constraints: {
          MaxLength: 4000,
          MinLength: 1
        },
        serializedName: "body",
        type: {
          name: "String"
        }
      },
      customData: {
        serializedName: "custom_data",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const PathsKpnezyV01AppsOwnerNameAppNamePushNotificationsPostResponses202ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsKpnezyV01AppsOwnerNameAppNamePushNotificationsPostResponses202ContentApplicationJsonSchema",
    modelProperties: {
      notificationId: {
        serializedName: "notification_id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Kwjsi2V01AppsOwnerNameAppNamePushNotificationsPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Kwjsi2V01AppsOwnerNameAppNamePushNotificationsPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsDnpbs4V01AppsOwnerNameAppNamePushNotificationsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsDnpbs4V01AppsOwnerNameAppNamePushNotificationsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsDnpbs4V01AppsOwnerNameAppNamePushNotificationsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths5M7Cf2V01AppsOwnerNameAppNamePushNotificationsDeleteRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths5M7Cf2V01AppsOwnerNameAppNamePushNotificationsDeleteRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      values: {
        serializedName: "values",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PathsC8NkptV01AppsOwnerNameAppNamePushNotificationsDeleteResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsC8NkptV01AppsOwnerNameAppNamePushNotificationsDeleteResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths10R6M0YV01AppsOwnerNameAppNamePushNotificationsDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths10R6M0YV01AppsOwnerNameAppNamePushNotificationsDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths10R6M0YV01AppsOwnerNameAppNamePushNotificationsDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths11E7Jh9V01AppsOwnerNameAppNamePushDevicesInstallIdDeleteResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths11E7Jh9V01AppsOwnerNameAppNamePushDevicesInstallIdDeleteResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths15YgnyyV01AppsOwnerNameAppNamePushDevicesInstallIdDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths15YgnyyV01AppsOwnerNameAppNamePushDevicesInstallIdDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths15YgnyyV01AppsOwnerNameAppNamePushDevicesInstallIdDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1UomvgvV01AppsOwnerNameAppNamePushDeviceExportsExportIdGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1UomvgvV01AppsOwnerNameAppNamePushDeviceExportsExportIdGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      exportId: {
        serializedName: "export_id",
        required: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "Enum",
          allowedValues: ["InProgress", "Completed", "Failed"]
        }
      }
    }
  }
};

export const Paths18Cvs3GV01AppsOwnerNameAppNamePushDeviceExportsExportIdGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths18Cvs3GV01AppsOwnerNameAppNamePushDeviceExportsExportIdGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Squgf0V01AppsOwnerNameAppNamePushDeviceExportsExportIdGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Squgf0V01AppsOwnerNameAppNamePushDeviceExportsExportIdGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Squgf0V01AppsOwnerNameAppNamePushDeviceExportsExportIdGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1H0K4SgV01AppsOwnerNameAppNamePushDeviceExportsPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1H0K4SgV01AppsOwnerNameAppNamePushDeviceExportsPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      blobContainerSasUri: {
        serializedName: "blob_container_sas_uri",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths11Qat48V01AppsOwnerNameAppNamePushDeviceExportsPostResponses202ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths11Qat48V01AppsOwnerNameAppNamePushDeviceExportsPostResponses202ContentApplicationJsonSchema",
    modelProperties: {
      exportId: {
        serializedName: "export_id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths801PuuV01AppsOwnerNameAppNamePushDeviceExportsPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths801PuuV01AppsOwnerNameAppNamePushDeviceExportsPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Psx6UuV01AppsOwnerNameAppNamePushDeviceExportsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Psx6UuV01AppsOwnerNameAppNamePushDeviceExportsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Psx6UuV01AppsOwnerNameAppNamePushDeviceExportsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceSet2: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceSet2",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      manufacturerCount: {
        serializedName: "manufacturerCount",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      slug: {
        serializedName: "slug",
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className:
            "PathsDgxcdrV01AppsOwnerNameAppNameOwnerDeviceSetsIdGetResponses200ContentApplicationJsonSchemaPropertiesOwner"
        }
      },
      osVersionCount: {
        serializedName: "osVersionCount",
        type: {
          name: "Number"
        }
      },
      deviceConfigurations: {
        serializedName: "deviceConfigurations",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths1PggvdrV01AppsOwnerNameAppNameOwnerDeviceSetsIdGetResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItems"
            }
          }
        }
      }
    }
  }
};

export const PathsDgxcdrV01AppsOwnerNameAppNameOwnerDeviceSetsIdGetResponses200ContentApplicationJsonSchemaPropertiesOwner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsDgxcdrV01AppsOwnerNameAppNameOwnerDeviceSetsIdGetResponses200ContentApplicationJsonSchemaPropertiesOwner",
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1PggvdrV01AppsOwnerNameAppNameOwnerDeviceSetsIdGetResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1PggvdrV01AppsOwnerNameAppNameOwnerDeviceSetsIdGetResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItems",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      image: {
        serializedName: "image",
        type: {
          name: "Composite",
          className:
            "Paths1T751P9V01AppsOwnerNameAppNameOwnerDeviceSetsIdGetResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItemsPropertiesImage"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "Composite",
          className:
            "Paths1789Yx1V01AppsOwnerNameAppNameOwnerDeviceSetsIdGetResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItemsPropertiesModel"
        }
      },
      os: {
        serializedName: "os",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "osName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1T751P9V01AppsOwnerNameAppNameOwnerDeviceSetsIdGetResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItemsPropertiesImage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1T751P9V01AppsOwnerNameAppNameOwnerDeviceSetsIdGetResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItemsPropertiesImage",
    modelProperties: {
      thumb: {
        serializedName: "thumb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1789Yx1V01AppsOwnerNameAppNameOwnerDeviceSetsIdGetResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItemsPropertiesModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1789Yx1V01AppsOwnerNameAppNameOwnerDeviceSetsIdGetResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItemsPropertiesModel",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      manufacturer: {
        serializedName: "manufacturer",
        type: {
          name: "String"
        }
      },
      releaseDate: {
        serializedName: "releaseDate",
        type: {
          name: "String"
        }
      },
      formFactor: {
        serializedName: "formFactor",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceSetUpdateInformation1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceSetUpdateInformation1",
    modelProperties: {
      devices: {
        serializedName: "devices",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceSet3: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceSet3",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      manufacturerCount: {
        serializedName: "manufacturerCount",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      slug: {
        serializedName: "slug",
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className:
            "Paths1Xa6Q5RV01AppsOwnerNameAppNameOwnerDeviceSetsIdPutResponses200ContentApplicationJsonSchemaPropertiesOwner"
        }
      },
      osVersionCount: {
        serializedName: "osVersionCount",
        type: {
          name: "Number"
        }
      },
      deviceConfigurations: {
        serializedName: "deviceConfigurations",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths1V1B4LjV01AppsOwnerNameAppNameOwnerDeviceSetsIdPutResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItems"
            }
          }
        }
      }
    }
  }
};

export const Paths1Xa6Q5RV01AppsOwnerNameAppNameOwnerDeviceSetsIdPutResponses200ContentApplicationJsonSchemaPropertiesOwner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Xa6Q5RV01AppsOwnerNameAppNameOwnerDeviceSetsIdPutResponses200ContentApplicationJsonSchemaPropertiesOwner",
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1V1B4LjV01AppsOwnerNameAppNameOwnerDeviceSetsIdPutResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1V1B4LjV01AppsOwnerNameAppNameOwnerDeviceSetsIdPutResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItems",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      image: {
        serializedName: "image",
        type: {
          name: "Composite",
          className:
            "PathsT1FkomV01AppsOwnerNameAppNameOwnerDeviceSetsIdPutResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItemsPropertiesImage"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "Composite",
          className:
            "Paths1Og6JqsV01AppsOwnerNameAppNameOwnerDeviceSetsIdPutResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItemsPropertiesModel"
        }
      },
      os: {
        serializedName: "os",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "osName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsT1FkomV01AppsOwnerNameAppNameOwnerDeviceSetsIdPutResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItemsPropertiesImage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsT1FkomV01AppsOwnerNameAppNameOwnerDeviceSetsIdPutResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItemsPropertiesImage",
    modelProperties: {
      thumb: {
        serializedName: "thumb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Og6JqsV01AppsOwnerNameAppNameOwnerDeviceSetsIdPutResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItemsPropertiesModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Og6JqsV01AppsOwnerNameAppNameOwnerDeviceSetsIdPutResponses200ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItemsPropertiesModel",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      manufacturer: {
        serializedName: "manufacturer",
        type: {
          name: "String"
        }
      },
      releaseDate: {
        serializedName: "releaseDate",
        type: {
          name: "String"
        }
      },
      formFactor: {
        serializedName: "formFactor",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestCloudErrorDetails2: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestCloudErrorDetails2",
    modelProperties: {
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Qu9NsjV01AppsOwnerNameAppNameOwnerDeviceSetsGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Qu9NsjV01AppsOwnerNameAppNameOwnerDeviceSetsGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      manufacturerCount: {
        serializedName: "manufacturerCount",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      slug: {
        serializedName: "slug",
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className:
            "PathsZnhpeeV01AppsOwnerNameAppNameOwnerDeviceSetsGetResponses200ContentApplicationJsonSchemaItemsPropertiesOwner"
        }
      },
      osVersionCount: {
        serializedName: "osVersionCount",
        type: {
          name: "Number"
        }
      },
      deviceConfigurations: {
        serializedName: "deviceConfigurations",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsSwb0V2V01AppsOwnerNameAppNameOwnerDeviceSetsGetResponses200ContentApplicationJsonSchemaItemsPropertiesDeviceconfigurationsItems"
            }
          }
        }
      }
    }
  }
};

export const PathsZnhpeeV01AppsOwnerNameAppNameOwnerDeviceSetsGetResponses200ContentApplicationJsonSchemaItemsPropertiesOwner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsZnhpeeV01AppsOwnerNameAppNameOwnerDeviceSetsGetResponses200ContentApplicationJsonSchemaItemsPropertiesOwner",
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsSwb0V2V01AppsOwnerNameAppNameOwnerDeviceSetsGetResponses200ContentApplicationJsonSchemaItemsPropertiesDeviceconfigurationsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsSwb0V2V01AppsOwnerNameAppNameOwnerDeviceSetsGetResponses200ContentApplicationJsonSchemaItemsPropertiesDeviceconfigurationsItems",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      image: {
        serializedName: "image",
        type: {
          name: "Composite",
          className:
            "PathsIekuqdV01AppsOwnerNameAppNameOwnerDeviceSetsGetResponses200ContentApplicationJsonSchemaItemsPropertiesDeviceconfigurationsItemsPropertiesImage"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "Composite",
          className:
            "Paths1Sk8N6QV01AppsOwnerNameAppNameOwnerDeviceSetsGetResponses200ContentApplicationJsonSchemaItemsPropertiesDeviceconfigurationsItemsPropertiesModel"
        }
      },
      os: {
        serializedName: "os",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "osName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsIekuqdV01AppsOwnerNameAppNameOwnerDeviceSetsGetResponses200ContentApplicationJsonSchemaItemsPropertiesDeviceconfigurationsItemsPropertiesImage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsIekuqdV01AppsOwnerNameAppNameOwnerDeviceSetsGetResponses200ContentApplicationJsonSchemaItemsPropertiesDeviceconfigurationsItemsPropertiesImage",
    modelProperties: {
      thumb: {
        serializedName: "thumb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Sk8N6QV01AppsOwnerNameAppNameOwnerDeviceSetsGetResponses200ContentApplicationJsonSchemaItemsPropertiesDeviceconfigurationsItemsPropertiesModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Sk8N6QV01AppsOwnerNameAppNameOwnerDeviceSetsGetResponses200ContentApplicationJsonSchemaItemsPropertiesDeviceconfigurationsItemsPropertiesModel",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      manufacturer: {
        serializedName: "manufacturer",
        type: {
          name: "String"
        }
      },
      releaseDate: {
        serializedName: "releaseDate",
        type: {
          name: "String"
        }
      },
      formFactor: {
        serializedName: "formFactor",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceSetUpdateInformation2: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceSetUpdateInformation2",
    modelProperties: {
      devices: {
        serializedName: "devices",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceSet4: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceSet4",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      manufacturerCount: {
        serializedName: "manufacturerCount",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      slug: {
        serializedName: "slug",
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className:
            "Paths1Wvz3UrV01AppsOwnerNameAppNameOwnerDeviceSetsPostResponses201ContentApplicationJsonSchemaPropertiesOwner"
        }
      },
      osVersionCount: {
        serializedName: "osVersionCount",
        type: {
          name: "Number"
        }
      },
      deviceConfigurations: {
        serializedName: "deviceConfigurations",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths127TvwlV01AppsOwnerNameAppNameOwnerDeviceSetsPostResponses201ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItems"
            }
          }
        }
      }
    }
  }
};

export const Paths1Wvz3UrV01AppsOwnerNameAppNameOwnerDeviceSetsPostResponses201ContentApplicationJsonSchemaPropertiesOwner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Wvz3UrV01AppsOwnerNameAppNameOwnerDeviceSetsPostResponses201ContentApplicationJsonSchemaPropertiesOwner",
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths127TvwlV01AppsOwnerNameAppNameOwnerDeviceSetsPostResponses201ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths127TvwlV01AppsOwnerNameAppNameOwnerDeviceSetsPostResponses201ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItems",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      image: {
        serializedName: "image",
        type: {
          name: "Composite",
          className:
            "PathsV3Igf9V01AppsOwnerNameAppNameOwnerDeviceSetsPostResponses201ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItemsPropertiesImage"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "Composite",
          className:
            "Paths1Fbq1Q7V01AppsOwnerNameAppNameOwnerDeviceSetsPostResponses201ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItemsPropertiesModel"
        }
      },
      os: {
        serializedName: "os",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "osName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsV3Igf9V01AppsOwnerNameAppNameOwnerDeviceSetsPostResponses201ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItemsPropertiesImage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsV3Igf9V01AppsOwnerNameAppNameOwnerDeviceSetsPostResponses201ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItemsPropertiesImage",
    modelProperties: {
      thumb: {
        serializedName: "thumb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Fbq1Q7V01AppsOwnerNameAppNameOwnerDeviceSetsPostResponses201ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItemsPropertiesModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Fbq1Q7V01AppsOwnerNameAppNameOwnerDeviceSetsPostResponses201ContentApplicationJsonSchemaPropertiesDeviceconfigurationsItemsPropertiesModel",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      manufacturer: {
        serializedName: "manufacturer",
        type: {
          name: "String"
        }
      },
      releaseDate: {
        serializedName: "releaseDate",
        type: {
          name: "String"
        }
      },
      formFactor: {
        serializedName: "formFactor",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestCloudErrorDetails3: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestCloudErrorDetails3",
    modelProperties: {
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Lv5TgxV01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Lv5TgxV01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchemaAllof0",
    modelProperties: {
      requestId: {
        serializedName: "request_id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Exn54RV01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchemaAllof0Allof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Exn54RV01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchemaAllof0Allof1",
    modelProperties: {
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "enabled",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      userId: {
        serializedName: "userId",
        type: {
          name: "String"
        }
      },
      settings: {
        serializedName: "settings",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Get200ApplicationJsonAllOfAllOfPropertiesItemsItem"
            }
          }
        }
      }
    }
  }
};

export const Get200ApplicationJsonAllOfAllOfPropertiesItemsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonAllOfAllOfPropertiesItemsItem",
    modelProperties: {
      eventType: {
        defaultValue: "crash_newCrashGroupCreated",
        isConstant: true,
        serializedName: "event_type",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "String"
        }
      },
      defaultValue: {
        serializedName: "default_value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths12H1WryV01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths12H1WryV01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchemaAllof1",
    modelProperties: {
      appId: {
        serializedName: "appId",
        type: {
          name: "String"
        }
      },
      userEnabled: {
        serializedName: "user_enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PathsMyxjuqV01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponsesDefaultContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsMyxjuqV01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponsesDefaultContentApplicationJsonSchemaAllof0",
    modelProperties: {
      requestId: {
        serializedName: "request_id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsLinqw9V01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponsesDefaultContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsLinqw9V01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponsesDefaultContentApplicationJsonSchemaAllof1",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1HhwggV01AppsOwnerNameAppNameInvitationsUserEmailPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1HhwggV01AppsOwnerNameAppNameInvitationsUserEmailPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Gerxl3V01AppsOwnerNameAppNameInvitationsUserEmailPostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Gerxl3V01AppsOwnerNameAppNameInvitationsUserEmailPostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Gerxl3V01AppsOwnerNameAppNameInvitationsUserEmailPostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Uclv96V01AppsOwnerNameAppNameInvitationsUserEmailPatchRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Uclv96V01AppsOwnerNameAppNameInvitationsUserEmailPatchRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      permissions: {
        serializedName: "permissions",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Paths8Hsxc2V01AppsOwnerNameAppNameInvitationsUserEmailPatchResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths8Hsxc2V01AppsOwnerNameAppNameInvitationsUserEmailPatchResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsOxh137V01AppsOwnerNameAppNameInvitationsUserEmailPatchResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsOxh137V01AppsOwnerNameAppNameInvitationsUserEmailPatchResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsOxh137V01AppsOwnerNameAppNameInvitationsUserEmailPatchResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsTcxwc4V01AppsOwnerNameAppNameInvitationsUserEmailDeleteResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsTcxwc4V01AppsOwnerNameAppNameInvitationsUserEmailDeleteResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Tm9T38V01AppsOwnerNameAppNameInvitationsUserEmailDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Tm9T38V01AppsOwnerNameAppNameInvitationsUserEmailDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Tm9T38V01AppsOwnerNameAppNameInvitationsUserEmailDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1CzjavmV01AppsOwnerNameAppNameInvitationsPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1CzjavmV01AppsOwnerNameAppNameInvitationsPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      userEmail: {
        serializedName: "user_email",
        required: true,
        type: {
          name: "String"
        }
      },
      role: {
        serializedName: "role",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths86Npv6V01AppsOwnerNameAppNameInvitationsPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths86Npv6V01AppsOwnerNameAppNameInvitationsPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths3Yu15JV01AppsOwnerNameAppNameInvitationsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths3Yu15JV01AppsOwnerNameAppNameInvitationsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths3Yu15JV01AppsOwnerNameAppNameInvitationsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsIn5115V01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsIn5115V01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      app: {
        serializedName: "app",
        type: {
          name: "Composite",
          className:
            "Paths1R5Rn5OV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesApp"
        }
      },
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      inviteType: {
        serializedName: "invite_type",
        required: true,
        type: {
          name: "String"
        }
      },
      invitedBy: {
        serializedName: "invited_by",
        type: {
          name: "Composite",
          className:
            "Paths6NfbvnV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesInvitedBy"
        }
      },
      isExistingUser: {
        serializedName: "is_existing_user",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      permissions: {
        serializedName: "permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      appCount: {
        serializedName: "app_count",
        type: {
          name: "Number"
        }
      },
      distributionGroup: {
        serializedName: "distribution_group",
        type: {
          name: "Composite",
          className:
            "PathsQwfeuaV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesDistributionGroup"
        }
      }
    }
  }
};

export const PathsR19UixV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesAppAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsR19UixV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesAppAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      releaseType: {
        serializedName: "release_type",
        type: {
          name: "String"
        }
      },
      iconUrl: {
        serializedName: "icon_url",
        type: {
          name: "String"
        }
      },
      iconSource: {
        serializedName: "icon_source",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      os: {
        serializedName: "os",
        required: true,
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className:
            "Paths12UznlxV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesAppAllof0PropertiesOwner"
        }
      }
    }
  }
};

export const Paths12UznlxV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesAppAllof0PropertiesOwner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths12UznlxV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesAppAllof0PropertiesOwner",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths39Q34WV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesAppAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths39Q34WV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesAppAllof1",
    modelProperties: {
      appSecret: {
        serializedName: "app_secret",
        type: {
          name: "String"
        }
      },
      azureSubscription: {
        serializedName: "azure_subscription",
        type: {
          name: "Composite",
          className:
            "Paths15L69XV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesAppAllof1PropertiesAzureSubscription"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        type: {
          name: "String"
        }
      },
      memberPermissions: {
        serializedName: "member_permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Paths15L69XV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesAppAllof1PropertiesAzureSubscription: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths15L69XV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesAppAllof1PropertiesAzureSubscription",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscription_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      subscriptionName: {
        serializedName: "subscription_name",
        required: true,
        type: {
          name: "String"
        }
      },
      isBilling: {
        serializedName: "is_billing",
        type: {
          name: "Boolean"
        }
      },
      isBillable: {
        serializedName: "is_billable",
        type: {
          name: "Boolean"
        }
      },
      isMicrosoftInternal: {
        serializedName: "is_microsoft_internal",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths6NfbvnV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesInvitedBy: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths6NfbvnV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesInvitedBy",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      canChangePassword: {
        serializedName: "can_change_password",
        type: {
          name: "Boolean"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      permissions: {
        serializedName: "permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsQwfeuaV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesDistributionGroup: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsQwfeuaV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesDistributionGroup",
    modelProperties: {
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className:
            "Paths9Dzi6JV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesDistributionGroupPropertiesOwner"
        }
      }
    }
  }
};

export const Paths9Dzi6JV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesDistributionGroupPropertiesOwner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths9Dzi6JV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesDistributionGroupPropertiesOwner",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths8D56KcV01AppsOwnerNameAppNameInvitationsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths8D56KcV01AppsOwnerNameAppNameInvitationsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsRkjqqhV01AppsOwnerNameAppNameInvitationsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsRkjqqhV01AppsOwnerNameAppNameInvitationsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsRkjqqhV01AppsOwnerNameAppNameInvitationsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsUd9Bz2V01AppsOwnerNameAppNameFileAssetPostResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsUd9Bz2V01AppsOwnerNameAppNameFileAssetPostResponses200ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      token: {
        serializedName: "token",
        type: {
          name: "String"
        }
      },
      uploadDomain: {
        serializedName: "uploadDomain",
        type: {
          name: "String"
        }
      },
      uploadWindowLocation: {
        serializedName: "uploadWindowLocation",
        type: {
          name: "String"
        }
      },
      urlEncodedToken: {
        serializedName: "urlEncodedToken",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1V86Qb5V01AppsOwnerNameAppNameFileAssetPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1V86Qb5V01AppsOwnerNameAppNameFileAssetPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths42AbxiV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdEnablePostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths42AbxiV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdEnablePostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Tul1VsV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdEnablePostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Tul1VsV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdEnablePostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Tul1VsV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdEnablePostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsNstgqpV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdDisablePostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsNstgqpV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdDisablePostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Hqbck1V01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdDisablePostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Hqbck1V01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdDisablePostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Hqbck1V01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdDisablePostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1OysruzV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1OysruzV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      exportType: {
        serializedName: "export_type",
        required: true,
        type: {
          name: "Enum",
          allowedValues: ["BlobStorage", "AppInsights"]
        }
      },
      creationTime: {
        serializedName: "creation_time",
        required: true,
        type: {
          name: "String"
        }
      },
      lastRunTime: {
        serializedName: "last_run_time",
        type: {
          name: "String"
        }
      },
      exportEntities: {
        serializedName: "export_entities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["crashes", "errors", "attachments", "no_logs"]
            }
          }
        }
      },
      state: {
        serializedName: "state",
        required: true,
        type: {
          name: "Enum",
          allowedValues: [
            "Enabled",
            "Disabled",
            "Pending",
            "Deleted",
            "Invalid"
          ]
        }
      },
      stateInfo: {
        serializedName: "state_info",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resource_group",
        type: {
          name: "String"
        }
      },
      resourceName: {
        serializedName: "resource_name",
        type: {
          name: "String"
        }
      },
      exportConfiguration: {
        serializedName: "export_configuration",
        type: {
          name: "Composite",
          className:
            "PathsR53S6WV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdGetResponses200ContentApplicationJsonSchemaPropertiesExportConfiguration"
        }
      }
    }
  }
};

export const PathsR53S6WV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdGetResponses200ContentApplicationJsonSchemaPropertiesExportConfiguration: coreClient.CompositeMapper = {
  serializedName:
    "PathsR53S6WV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdGetResponses200ContentApplicationJsonSchemaPropertiesExportConfiguration",
  type: {
    name: "Composite",
    className:
      "PathsR53S6WV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdGetResponses200ContentApplicationJsonSchemaPropertiesExportConfiguration",
    uberParent:
      "PathsR53S6WV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdGetResponses200ContentApplicationJsonSchemaPropertiesExportConfiguration",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      exportEntities: {
        serializedName: "export_entities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["crashes", "errors", "attachments", "no_logs"]
            }
          }
        }
      },
      resourceName: {
        serializedName: "resource_name",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resource_group",
        type: {
          name: "String"
        }
      },
      backfill: {
        serializedName: "backfill",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths1J8YtkwV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1J8YtkwV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths19D426NV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths19D426NV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths19D426NV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsEhcfgaV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdPatchRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  serializedName:
    "PathsEhcfgaV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdPatchRequestbodyContentApplicationJsonSchema",
  type: {
    name: "Composite",
    className:
      "PathsEhcfgaV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdPatchRequestbodyContentApplicationJsonSchema",
    uberParent:
      "PathsEhcfgaV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdPatchRequestbodyContentApplicationJsonSchema",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      exportEntities: {
        serializedName: "export_entities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["crashes", "errors", "attachments", "no_logs"]
            }
          }
        }
      },
      resourceName: {
        serializedName: "resource_name",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resource_group",
        type: {
          name: "String"
        }
      },
      backfill: {
        serializedName: "backfill",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths420JlyV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdPatchResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths420JlyV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdPatchResponses200ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      exportType: {
        serializedName: "export_type",
        required: true,
        type: {
          name: "Enum",
          allowedValues: ["BlobStorage", "AppInsights"]
        }
      },
      creationTime: {
        serializedName: "creation_time",
        required: true,
        type: {
          name: "String"
        }
      },
      lastRunTime: {
        serializedName: "last_run_time",
        type: {
          name: "String"
        }
      },
      exportEntities: {
        serializedName: "export_entities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["crashes", "errors", "attachments", "no_logs"]
            }
          }
        }
      },
      state: {
        serializedName: "state",
        required: true,
        type: {
          name: "Enum",
          allowedValues: [
            "Enabled",
            "Disabled",
            "Pending",
            "Deleted",
            "Invalid"
          ]
        }
      },
      stateInfo: {
        serializedName: "state_info",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resource_group",
        type: {
          name: "String"
        }
      },
      resourceName: {
        serializedName: "resource_name",
        type: {
          name: "String"
        }
      },
      exportConfiguration: {
        serializedName: "export_configuration",
        type: {
          name: "Composite",
          className:
            "Paths2Az9PjV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdPatchResponses200ContentApplicationJsonSchemaPropertiesExportConfiguration"
        }
      }
    }
  }
};

export const Paths2Az9PjV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdPatchResponses200ContentApplicationJsonSchemaPropertiesExportConfiguration: coreClient.CompositeMapper = {
  serializedName:
    "Paths2Az9PjV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdPatchResponses200ContentApplicationJsonSchemaPropertiesExportConfiguration",
  type: {
    name: "Composite",
    className:
      "Paths2Az9PjV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdPatchResponses200ContentApplicationJsonSchemaPropertiesExportConfiguration",
    uberParent:
      "Paths2Az9PjV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdPatchResponses200ContentApplicationJsonSchemaPropertiesExportConfiguration",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      exportEntities: {
        serializedName: "export_entities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["crashes", "errors", "attachments", "no_logs"]
            }
          }
        }
      },
      resourceName: {
        serializedName: "resource_name",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resource_group",
        type: {
          name: "String"
        }
      },
      backfill: {
        serializedName: "backfill",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths1Gnrj58V01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdPatchResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Gnrj58V01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdPatchResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths17Vzuc1V01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdPatchResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths17Vzuc1V01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdPatchResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths17Vzuc1V01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdPatchResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsVg92GuV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdDeleteResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsVg92GuV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdDeleteResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1H6DccdV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1H6DccdV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1H6DccdV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1FgwvpvV01AppsOwnerNameAppNameExportConfigurationsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1FgwvpvV01AppsOwnerNameAppNameExportConfigurationsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      values: {
        serializedName: "values",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsAkol8QV01AppsOwnerNameAppNameExportConfigurationsGetResponses200ContentApplicationJsonSchemaPropertiesValuesItems"
            }
          }
        }
      },
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsAkol8QV01AppsOwnerNameAppNameExportConfigurationsGetResponses200ContentApplicationJsonSchemaPropertiesValuesItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsAkol8QV01AppsOwnerNameAppNameExportConfigurationsGetResponses200ContentApplicationJsonSchemaPropertiesValuesItems",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      exportType: {
        serializedName: "export_type",
        required: true,
        type: {
          name: "Enum",
          allowedValues: ["BlobStorage", "AppInsights"]
        }
      },
      creationTime: {
        serializedName: "creation_time",
        required: true,
        type: {
          name: "String"
        }
      },
      lastRunTime: {
        serializedName: "last_run_time",
        type: {
          name: "String"
        }
      },
      exportEntities: {
        serializedName: "export_entities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["crashes", "errors", "attachments", "no_logs"]
            }
          }
        }
      },
      state: {
        serializedName: "state",
        required: true,
        type: {
          name: "Enum",
          allowedValues: [
            "Enabled",
            "Disabled",
            "Pending",
            "Deleted",
            "Invalid"
          ]
        }
      },
      stateInfo: {
        serializedName: "state_info",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resource_group",
        type: {
          name: "String"
        }
      },
      resourceName: {
        serializedName: "resource_name",
        type: {
          name: "String"
        }
      },
      exportConfiguration: {
        serializedName: "export_configuration",
        type: {
          name: "Composite",
          className:
            "GetResponses200ContentApplicationJsonSchemaValuesItemExportConfiguration"
        }
      }
    }
  }
};

export const GetResponses200ContentApplicationJsonSchemaValuesItemExportConfiguration: coreClient.CompositeMapper = {
  serializedName:
    "GetResponses200ContentApplicationJsonSchemaValuesItemExportConfiguration",
  type: {
    name: "Composite",
    className:
      "GetResponses200ContentApplicationJsonSchemaValuesItemExportConfiguration",
    uberParent:
      "GetResponses200ContentApplicationJsonSchemaValuesItemExportConfiguration",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      exportEntities: {
        serializedName: "export_entities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["crashes", "errors", "attachments", "no_logs"]
            }
          }
        }
      },
      resourceName: {
        serializedName: "resource_name",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resource_group",
        type: {
          name: "String"
        }
      },
      backfill: {
        serializedName: "backfill",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths1QpjuboV01AppsOwnerNameAppNameExportConfigurationsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1QpjuboV01AppsOwnerNameAppNameExportConfigurationsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsNoyr8HV01AppsOwnerNameAppNameExportConfigurationsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsNoyr8HV01AppsOwnerNameAppNameExportConfigurationsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsNoyr8HV01AppsOwnerNameAppNameExportConfigurationsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1QllskkV01AppsOwnerNameAppNameExportConfigurationsPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  serializedName:
    "Paths1QllskkV01AppsOwnerNameAppNameExportConfigurationsPostRequestbodyContentApplicationJsonSchema",
  type: {
    name: "Composite",
    className:
      "Paths1QllskkV01AppsOwnerNameAppNameExportConfigurationsPostRequestbodyContentApplicationJsonSchema",
    uberParent:
      "Paths1QllskkV01AppsOwnerNameAppNameExportConfigurationsPostRequestbodyContentApplicationJsonSchema",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      exportEntities: {
        serializedName: "export_entities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["crashes", "errors", "attachments", "no_logs"]
            }
          }
        }
      },
      resourceName: {
        serializedName: "resource_name",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resource_group",
        type: {
          name: "String"
        }
      },
      backfill: {
        serializedName: "backfill",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths95VcrfV01AppsOwnerNameAppNameExportConfigurationsPostResponses202ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths95VcrfV01AppsOwnerNameAppNameExportConfigurationsPostResponses202ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      exportType: {
        serializedName: "export_type",
        required: true,
        type: {
          name: "Enum",
          allowedValues: ["BlobStorage", "AppInsights"]
        }
      },
      creationTime: {
        serializedName: "creation_time",
        required: true,
        type: {
          name: "String"
        }
      },
      lastRunTime: {
        serializedName: "last_run_time",
        type: {
          name: "String"
        }
      },
      exportEntities: {
        serializedName: "export_entities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["crashes", "errors", "attachments", "no_logs"]
            }
          }
        }
      },
      state: {
        serializedName: "state",
        required: true,
        type: {
          name: "Enum",
          allowedValues: [
            "Enabled",
            "Disabled",
            "Pending",
            "Deleted",
            "Invalid"
          ]
        }
      },
      stateInfo: {
        serializedName: "state_info",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resource_group",
        type: {
          name: "String"
        }
      },
      resourceName: {
        serializedName: "resource_name",
        type: {
          name: "String"
        }
      },
      exportConfiguration: {
        serializedName: "export_configuration",
        type: {
          name: "Composite",
          className:
            "Paths3V81N3V01AppsOwnerNameAppNameExportConfigurationsPostResponses202ContentApplicationJsonSchemaPropertiesExportConfiguration"
        }
      }
    }
  }
};

export const Paths3V81N3V01AppsOwnerNameAppNameExportConfigurationsPostResponses202ContentApplicationJsonSchemaPropertiesExportConfiguration: coreClient.CompositeMapper = {
  serializedName:
    "Paths3V81N3V01AppsOwnerNameAppNameExportConfigurationsPostResponses202ContentApplicationJsonSchemaPropertiesExportConfiguration",
  type: {
    name: "Composite",
    className:
      "Paths3V81N3V01AppsOwnerNameAppNameExportConfigurationsPostResponses202ContentApplicationJsonSchemaPropertiesExportConfiguration",
    uberParent:
      "Paths3V81N3V01AppsOwnerNameAppNameExportConfigurationsPostResponses202ContentApplicationJsonSchemaPropertiesExportConfiguration",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      exportEntities: {
        serializedName: "export_entities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["crashes", "errors", "attachments", "no_logs"]
            }
          }
        }
      },
      resourceName: {
        serializedName: "resource_name",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resource_group",
        type: {
          name: "String"
        }
      },
      backfill: {
        serializedName: "backfill",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PathsElutorV01AppsOwnerNameAppNameExportConfigurationsPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsElutorV01AppsOwnerNameAppNameExportConfigurationsPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsGbz3ZnV01AppsOwnerNameAppNameExportConfigurationsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsGbz3ZnV01AppsOwnerNameAppNameExportConfigurationsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsGbz3ZnV01AppsOwnerNameAppNameExportConfigurationsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsBfc8KpV01AppsOwnerNameAppNameErrorsErroridSessionlogsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsBfc8KpV01AppsOwnerNameAppNameErrorsErroridSessionlogsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      exceededMaxLimit: {
        serializedName: "exceeded_max_limit",
        type: {
          name: "Boolean"
        }
      },
      lastReceivedLogTimestamp: {
        serializedName: "last_received_log_timestamp",
        type: {
          name: "DateTime"
        }
      },
      logs: {
        serializedName: "logs",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths1Rdl0NeV01AppsOwnerNameAppNameErrorsErroridSessionlogsGetResponses200ContentApplicationJsonSchemaPropertiesLogsItems"
            }
          }
        }
      }
    }
  }
};

export const Paths1Rdl0NeV01AppsOwnerNameAppNameErrorsErroridSessionlogsGetResponses200ContentApplicationJsonSchemaPropertiesLogsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Rdl0NeV01AppsOwnerNameAppNameErrorsErroridSessionlogsGetResponses200ContentApplicationJsonSchemaPropertiesLogsItems",
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      sessionId: {
        serializedName: "session_id",
        type: {
          name: "Uuid"
        }
      },
      eventId: {
        serializedName: "event_id",
        type: {
          name: "String"
        }
      },
      eventName: {
        serializedName: "event_name",
        type: {
          name: "String"
        }
      },
      messageId: {
        serializedName: "message_id",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "GetResponses200ContentApplicationJsonSchemaLogsItemDevice"
        }
      }
    }
  }
};

export const GetResponses200ContentApplicationJsonSchemaLogsItemDevice: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetResponses200ContentApplicationJsonSchemaLogsItemDevice",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1DhmnxtV01AppsOwnerNameAppNameErrorsErroridSessionlogsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1DhmnxtV01AppsOwnerNameAppNameErrorsErroridSessionlogsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Bly4LlV01AppsOwnerNameAppNameErrorsErroridSessionlogsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Bly4LlV01AppsOwnerNameAppNameErrorsErroridSessionlogsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Bly4LlV01AppsOwnerNameAppNameErrorsErroridSessionlogsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths11EzzhyV01AppsOwnerNameAppNameErrorsErroridAttachmentsAttachmentidTextGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths11EzzhyV01AppsOwnerNameAppNameErrorsErroridAttachmentsAttachmentidTextGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      content: {
        serializedName: "content",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1J3SejwV01AppsOwnerNameAppNameErrorsErroridAttachmentsAttachmentidTextGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1J3SejwV01AppsOwnerNameAppNameErrorsErroridAttachmentsAttachmentidTextGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Lwh1IhV01AppsOwnerNameAppNameErrorsErroridAttachmentsAttachmentidTextGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Lwh1IhV01AppsOwnerNameAppNameErrorsErroridAttachmentsAttachmentidTextGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Lwh1IhV01AppsOwnerNameAppNameErrorsErroridAttachmentsAttachmentidTextGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Pujyq9V01AppsOwnerNameAppNameErrorsErroridAttachmentsAttachmentidLocationGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Pujyq9V01AppsOwnerNameAppNameErrorsErroridAttachmentsAttachmentidLocationGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      uri: {
        serializedName: "uri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths5X19N2V01AppsOwnerNameAppNameErrorsErroridAttachmentsAttachmentidLocationGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths5X19N2V01AppsOwnerNameAppNameErrorsErroridAttachmentsAttachmentidLocationGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsR99T10V01AppsOwnerNameAppNameErrorsErroridAttachmentsAttachmentidLocationGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsR99T10V01AppsOwnerNameAppNameErrorsErroridAttachmentsAttachmentidLocationGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsR99T10V01AppsOwnerNameAppNameErrorsErroridAttachmentsAttachmentidLocationGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1M1B7O1V01AppsOwnerNameAppNameErrorsErroridAttachmentsGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1M1B7O1V01AppsOwnerNameAppNameErrorsErroridAttachmentsGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      appId: {
        serializedName: "appId",
        type: {
          name: "String"
        }
      },
      attachmentId: {
        serializedName: "attachmentId",
        type: {
          name: "String"
        }
      },
      crashId: {
        serializedName: "crashId",
        type: {
          name: "String"
        }
      },
      blobLocation: {
        serializedName: "blobLocation",
        type: {
          name: "String"
        }
      },
      contentType: {
        serializedName: "contentType",
        type: {
          name: "String"
        }
      },
      fileName: {
        serializedName: "fileName",
        type: {
          name: "String"
        }
      },
      createdTime: {
        serializedName: "createdTime",
        type: {
          name: "DateTime"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PathsB1HukrV01AppsOwnerNameAppNameErrorsErroridAttachmentsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsB1HukrV01AppsOwnerNameAppNameErrorsErroridAttachmentsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Wxbk5JV01AppsOwnerNameAppNameErrorsErroridAttachmentsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Wxbk5JV01AppsOwnerNameAppNameErrorsErroridAttachmentsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Wxbk5JV01AppsOwnerNameAppNameErrorsErroridAttachmentsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths10EnauhV01AppsOwnerNameAppNameErrorsSearchGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths10EnauhV01AppsOwnerNameAppNameErrorsSearchGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      hasMoreResults: {
        serializedName: "hasMoreResults",
        type: {
          name: "Boolean"
        }
      },
      errors: {
        serializedName: "errors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths1W538XxV01AppsOwnerNameAppNameErrorsSearchGetResponses200ContentApplicationJsonSchemaPropertiesErrorsItems"
            }
          }
        }
      }
    }
  }
};

export const Paths1W538XxV01AppsOwnerNameAppNameErrorsSearchGetResponses200ContentApplicationJsonSchemaPropertiesErrorsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1W538XxV01AppsOwnerNameAppNameErrorsSearchGetResponses200ContentApplicationJsonSchemaPropertiesErrorsItems",
    modelProperties: {
      errorId: {
        serializedName: "errorId",
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      deviceName: {
        serializedName: "deviceName",
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "osVersion",
        type: {
          name: "String"
        }
      },
      osType: {
        serializedName: "osType",
        type: {
          name: "String"
        }
      },
      country: {
        serializedName: "country",
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "userId",
        type: {
          name: "String"
        }
      },
      hasBreadcrumbs: {
        serializedName: "hasBreadcrumbs",
        type: {
          name: "Boolean"
        }
      },
      hasAttachments: {
        serializedName: "hasAttachments",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths12BwkkqV01AppsOwnerNameAppNameErrorsSearchGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths12BwkkqV01AppsOwnerNameAppNameErrorsSearchGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Lhvzu1V01AppsOwnerNameAppNameErrorsSearchGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Lhvzu1V01AppsOwnerNameAppNameErrorsSearchGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Lhvzu1V01AppsOwnerNameAppNameErrorsSearchGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1V83InnV01AppsOwnerNameAppNameErrorsRetentionSettingsPutRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1V83InnV01AppsOwnerNameAppNameErrorsRetentionSettingsPutRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      retentionInDays: {
        serializedName: "retention_in_days",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PathsW5Guk3V01AppsOwnerNameAppNameErrorsRetentionSettingsPutResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsW5Guk3V01AppsOwnerNameAppNameErrorsRetentionSettingsPutResponses200ContentApplicationJsonSchema",
    modelProperties: {
      retentionInDays: {
        serializedName: "retention_in_days",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths1Pjyuj9V01AppsOwnerNameAppNameErrorsRetentionSettingsPutResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Pjyuj9V01AppsOwnerNameAppNameErrorsRetentionSettingsPutResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths5L67B6V01AppsOwnerNameAppNameErrorsRetentionSettingsPutResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths5L67B6V01AppsOwnerNameAppNameErrorsRetentionSettingsPutResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths5L67B6V01AppsOwnerNameAppNameErrorsRetentionSettingsPutResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths4IzvtlV01AppsOwnerNameAppNameErrorsRetentionSettingsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths4IzvtlV01AppsOwnerNameAppNameErrorsRetentionSettingsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      retentionInDays: {
        serializedName: "retention_in_days",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths1EgnpuqV01AppsOwnerNameAppNameErrorsRetentionSettingsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1EgnpuqV01AppsOwnerNameAppNameErrorsRetentionSettingsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1J4JjcV01AppsOwnerNameAppNameErrorsRetentionSettingsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1J4JjcV01AppsOwnerNameAppNameErrorsRetentionSettingsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1J4JjcV01AppsOwnerNameAppNameErrorsRetentionSettingsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsXb2Xr7V01AppsOwnerNameAppNameErrorsErrorfreedevicepercentagesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsXb2Xr7V01AppsOwnerNameAppNameErrorsErrorfreedevicepercentagesGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      averagePercentage: {
        serializedName: "averagePercentage",
        type: {
          name: "Number"
        }
      },
      dailyPercentages: {
        serializedName: "dailyPercentages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsSehbt6V01AppsOwnerNameAppNameErrorsErrorfreedevicepercentagesGetResponses200ContentApplicationJsonSchemaPropertiesDailypercentagesItems"
            }
          }
        }
      }
    }
  }
};

export const PathsSehbt6V01AppsOwnerNameAppNameErrorsErrorfreedevicepercentagesGetResponses200ContentApplicationJsonSchemaPropertiesDailypercentagesItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsSehbt6V01AppsOwnerNameAppNameErrorsErrorfreedevicepercentagesGetResponses200ContentApplicationJsonSchemaPropertiesDailypercentagesItems",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      percentage: {
        serializedName: "percentage",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths11Dw7J1V01AppsOwnerNameAppNameErrorsErrorfreedevicepercentagesGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths11Dw7J1V01AppsOwnerNameAppNameErrorsErrorfreedevicepercentagesGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths15Ak9YsV01AppsOwnerNameAppNameErrorsErrorfreedevicepercentagesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths15Ak9YsV01AppsOwnerNameAppNameErrorsErrorfreedevicepercentagesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths15Ak9YsV01AppsOwnerNameAppNameErrorsErrorfreedevicepercentagesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiagnosticsStackTrace: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DiagnosticsStackTrace",
    modelProperties: {
      title: {
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      threads: {
        serializedName: "threads",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DiagnosticsThread"
            }
          }
        }
      },
      exception: {
        serializedName: "exception",
        type: {
          name: "Composite",
          className: "DiagnosticsException"
        }
      }
    }
  }
};

export const DiagnosticsThread: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DiagnosticsThread",
    modelProperties: {
      title: {
        serializedName: "title",
        required: true,
        type: {
          name: "String"
        }
      },
      frames: {
        serializedName: "frames",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DiagnosticsThreadFramesItem"
            }
          }
        }
      },
      exception: {
        serializedName: "exception",
        type: {
          name: "Composite",
          className: "DiagnosticsException"
        }
      },
      relevant: {
        serializedName: "relevant",
        type: {
          name: "Boolean"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      crashed: {
        serializedName: "crashed",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const DiagnosticsThreadFramesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DiagnosticsThreadFramesItem",
    modelProperties: {
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      className: {
        serializedName: "class_name",
        type: {
          name: "String"
        }
      },
      method: {
        serializedName: "method",
        type: {
          name: "String"
        }
      },
      classMethod: {
        serializedName: "class_method",
        type: {
          name: "Boolean"
        }
      },
      file: {
        serializedName: "file",
        type: {
          name: "String"
        }
      },
      line: {
        serializedName: "line",
        type: {
          name: "Number"
        }
      },
      appCode: {
        serializedName: "app_code",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      frameworkName: {
        serializedName: "framework_name",
        type: {
          name: "String"
        }
      },
      codeRaw: {
        serializedName: "code_raw",
        required: true,
        type: {
          name: "String"
        }
      },
      codeFormatted: {
        serializedName: "code_formatted",
        required: true,
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      relevant: {
        serializedName: "relevant",
        type: {
          name: "Boolean"
        }
      },
      methodParams: {
        serializedName: "method_params",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiagnosticsException: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DiagnosticsException",
    modelProperties: {
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      frames: {
        serializedName: "frames",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DiagnosticsExceptionFramesItem"
            }
          }
        }
      },
      relevant: {
        serializedName: "relevant",
        type: {
          name: "Boolean"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiagnosticsExceptionFramesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DiagnosticsExceptionFramesItem",
    modelProperties: {
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      className: {
        serializedName: "class_name",
        type: {
          name: "String"
        }
      },
      method: {
        serializedName: "method",
        type: {
          name: "String"
        }
      },
      classMethod: {
        serializedName: "class_method",
        type: {
          name: "Boolean"
        }
      },
      file: {
        serializedName: "file",
        type: {
          name: "String"
        }
      },
      line: {
        serializedName: "line",
        type: {
          name: "Number"
        }
      },
      appCode: {
        serializedName: "app_code",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      frameworkName: {
        serializedName: "framework_name",
        type: {
          name: "String"
        }
      },
      codeRaw: {
        serializedName: "code_raw",
        required: true,
        type: {
          name: "String"
        }
      },
      codeFormatted: {
        serializedName: "code_formatted",
        required: true,
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      relevant: {
        serializedName: "relevant",
        type: {
          name: "Boolean"
        }
      },
      methodParams: {
        serializedName: "method_params",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsA2E4EkV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidStacktraceGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsA2E4EkV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidStacktraceGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsBayg60V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidStacktraceGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsBayg60V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidStacktraceGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsBayg60V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidStacktraceGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsAhgr5MV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidOperatingsystemsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsAhgr5MV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidOperatingsystemsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      errorCount: {
        serializedName: "errorCount",
        type: {
          name: "Number"
        }
      },
      operatingSystems: {
        serializedName: "operatingSystems",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsBlj5OjV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidOperatingsystemsGetResponses200ContentApplicationJsonSchemaPropertiesOperatingsystemsItems"
            }
          }
        }
      }
    }
  }
};

export const PathsBlj5OjV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidOperatingsystemsGetResponses200ContentApplicationJsonSchemaPropertiesOperatingsystemsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsBlj5OjV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidOperatingsystemsGetResponses200ContentApplicationJsonSchemaPropertiesOperatingsystemsItems",
    modelProperties: {
      operatingSystemName: {
        serializedName: "operatingSystemName",
        type: {
          name: "String"
        }
      },
      errorCount: {
        serializedName: "errorCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths1K006VjV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidOperatingsystemsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1K006VjV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidOperatingsystemsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1HyyyyyV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidOperatingsystemsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1HyyyyyV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidOperatingsystemsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1HyyyyyV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidOperatingsystemsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsNvwrx0V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidModelsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsNvwrx0V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidModelsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      errorCount: {
        serializedName: "errorCount",
        type: {
          name: "Number"
        }
      },
      models: {
        serializedName: "models",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsOkxnpnV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidModelsGetResponses200ContentApplicationJsonSchemaPropertiesModelsItems"
            }
          }
        }
      }
    }
  }
};

export const PathsOkxnpnV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidModelsGetResponses200ContentApplicationJsonSchemaPropertiesModelsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsOkxnpnV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidModelsGetResponses200ContentApplicationJsonSchemaPropertiesModelsItems",
    modelProperties: {
      modelName: {
        serializedName: "modelName",
        type: {
          name: "String"
        }
      },
      modelCode: {
        serializedName: "modelCode",
        type: {
          name: "String"
        }
      },
      errorCount: {
        serializedName: "errorCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths1Opz894V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidModelsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Opz894V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidModelsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Tatl0XV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidModelsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Tatl0XV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidModelsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Tatl0XV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidModelsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Jybj3TV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridStacktraceGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Jybj3TV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridStacktraceGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsEkj2SwV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridStacktraceGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsEkj2SwV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridStacktraceGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsEkj2SwV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridStacktraceGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsPwx6QwV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridLocationGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsPwx6QwV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridLocationGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      uri: {
        serializedName: "uri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1LbtbuwV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridLocationGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1LbtbuwV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridLocationGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1O8ZrfiV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridLocationGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1O8ZrfiV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridLocationGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1O8ZrfiV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridLocationGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsL404BsV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridDownloadGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsL404BsV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridDownloadGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsZib2F1V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridDownloadGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsZib2F1V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridDownloadGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsZib2F1V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridDownloadGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsIus8TpV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridGetResponses200ContentApplicationJsonSchemaPropertiesReasonframesItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsIus8TpV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridGetResponses200ContentApplicationJsonSchemaPropertiesReasonframesItems",
    modelProperties: {
      className: {
        serializedName: "className",
        type: {
          name: "String"
        }
      },
      method: {
        serializedName: "method",
        type: {
          name: "String"
        }
      },
      classMethod: {
        serializedName: "classMethod",
        type: {
          name: "Boolean"
        }
      },
      file: {
        serializedName: "file",
        type: {
          name: "String"
        }
      },
      line: {
        serializedName: "line",
        type: {
          name: "Number"
        }
      },
      appCode: {
        serializedName: "appCode",
        type: {
          name: "Boolean"
        }
      },
      frameworkName: {
        serializedName: "frameworkName",
        type: {
          name: "String"
        }
      },
      codeFormatted: {
        serializedName: "codeFormatted",
        type: {
          name: "String"
        }
      },
      codeRaw: {
        serializedName: "codeRaw",
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      methodParams: {
        serializedName: "methodParams",
        type: {
          name: "String"
        }
      },
      exceptionType: {
        serializedName: "exceptionType",
        type: {
          name: "String"
        }
      },
      osExceptionType: {
        serializedName: "osExceptionType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1A0E8RfV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1A0E8RfV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridGetResponses200ContentApplicationJsonSchemaAllof0",
    modelProperties: {
      errorId: {
        serializedName: "errorId",
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      deviceName: {
        serializedName: "deviceName",
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "osVersion",
        type: {
          name: "String"
        }
      },
      osType: {
        serializedName: "osType",
        type: {
          name: "String"
        }
      },
      country: {
        serializedName: "country",
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "userId",
        type: {
          name: "String"
        }
      },
      hasBreadcrumbs: {
        serializedName: "hasBreadcrumbs",
        type: {
          name: "Boolean"
        }
      },
      hasAttachments: {
        serializedName: "hasAttachments",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths1Bug1WoV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Bug1WoV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths11N1ZoV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths11N1ZoV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths11N1ZoV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsNvbd0FV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridDeleteResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsNvbd0FV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridDeleteResponses200ContentApplicationJsonSchema",
    modelProperties: {
      appId: {
        serializedName: "appId",
        type: {
          name: "String"
        }
      },
      errorGroupId: {
        serializedName: "errorGroupId",
        type: {
          name: "String"
        }
      },
      errorId: {
        serializedName: "errorId",
        type: {
          name: "String"
        }
      },
      errorsDeleted: {
        serializedName: "errorsDeleted",
        type: {
          name: "Number"
        }
      },
      attachmentsDeleted: {
        serializedName: "attachmentsDeleted",
        type: {
          name: "Number"
        }
      },
      blobsSucceeded: {
        serializedName: "blobsSucceeded",
        type: {
          name: "Number"
        }
      },
      blobsFailed: {
        serializedName: "blobsFailed",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths1U63Q3BV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridDeleteResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1U63Q3BV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridDeleteResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Vw0KinV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Vw0KinV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Vw0KinV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths4M2P0UV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsLatestGetResponses200ContentApplicationJsonSchemaPropertiesReasonframesItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths4M2P0UV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsLatestGetResponses200ContentApplicationJsonSchemaPropertiesReasonframesItems",
    modelProperties: {
      className: {
        serializedName: "className",
        type: {
          name: "String"
        }
      },
      method: {
        serializedName: "method",
        type: {
          name: "String"
        }
      },
      classMethod: {
        serializedName: "classMethod",
        type: {
          name: "Boolean"
        }
      },
      file: {
        serializedName: "file",
        type: {
          name: "String"
        }
      },
      line: {
        serializedName: "line",
        type: {
          name: "Number"
        }
      },
      appCode: {
        serializedName: "appCode",
        type: {
          name: "Boolean"
        }
      },
      frameworkName: {
        serializedName: "frameworkName",
        type: {
          name: "String"
        }
      },
      codeFormatted: {
        serializedName: "codeFormatted",
        type: {
          name: "String"
        }
      },
      codeRaw: {
        serializedName: "codeRaw",
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      methodParams: {
        serializedName: "methodParams",
        type: {
          name: "String"
        }
      },
      exceptionType: {
        serializedName: "exceptionType",
        type: {
          name: "String"
        }
      },
      osExceptionType: {
        serializedName: "osExceptionType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1W62YatV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsLatestGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1W62YatV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsLatestGetResponses200ContentApplicationJsonSchemaAllof0",
    modelProperties: {
      errorId: {
        serializedName: "errorId",
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      deviceName: {
        serializedName: "deviceName",
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "osVersion",
        type: {
          name: "String"
        }
      },
      osType: {
        serializedName: "osType",
        type: {
          name: "String"
        }
      },
      country: {
        serializedName: "country",
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "userId",
        type: {
          name: "String"
        }
      },
      hasBreadcrumbs: {
        serializedName: "hasBreadcrumbs",
        type: {
          name: "Boolean"
        }
      },
      hasAttachments: {
        serializedName: "hasAttachments",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths14Y18DhV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsLatestGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths14Y18DhV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsLatestGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsUg0IawV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsLatestGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsUg0IawV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsLatestGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsUg0IawV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsLatestGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths18I7702V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths18I7702V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      errors: {
        serializedName: "errors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths1Fm6V81V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsGetResponses200ContentApplicationJsonSchemaPropertiesErrorsItems"
            }
          }
        }
      }
    }
  }
};

export const Paths1Fm6V81V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsGetResponses200ContentApplicationJsonSchemaPropertiesErrorsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Fm6V81V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsGetResponses200ContentApplicationJsonSchemaPropertiesErrorsItems",
    modelProperties: {
      errorId: {
        serializedName: "errorId",
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      deviceName: {
        serializedName: "deviceName",
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "osVersion",
        type: {
          name: "String"
        }
      },
      osType: {
        serializedName: "osType",
        type: {
          name: "String"
        }
      },
      country: {
        serializedName: "country",
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "userId",
        type: {
          name: "String"
        }
      },
      hasBreadcrumbs: {
        serializedName: "hasBreadcrumbs",
        type: {
          name: "Boolean"
        }
      },
      hasAttachments: {
        serializedName: "hasAttachments",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths6Yh9NlV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths6Yh9NlV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Oh18VvV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Oh18VvV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Oh18VvV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Eek5ByV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorfreedevicepercentagesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Eek5ByV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorfreedevicepercentagesGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      averagePercentage: {
        serializedName: "averagePercentage",
        type: {
          name: "Number"
        }
      },
      dailyPercentages: {
        serializedName: "dailyPercentages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths1OxifgfV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorfreedevicepercentagesGetResponses200ContentApplicationJsonSchemaPropertiesDailypercentagesItems"
            }
          }
        }
      }
    }
  }
};

export const Paths1OxifgfV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorfreedevicepercentagesGetResponses200ContentApplicationJsonSchemaPropertiesDailypercentagesItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1OxifgfV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorfreedevicepercentagesGetResponses200ContentApplicationJsonSchemaPropertiesDailypercentagesItems",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      percentage: {
        serializedName: "percentage",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PathsGggyq9V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorfreedevicepercentagesGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsGggyq9V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorfreedevicepercentagesGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths9Rp2CfV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorfreedevicepercentagesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths9Rp2CfV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorfreedevicepercentagesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths9Rp2CfV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorfreedevicepercentagesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1O2Ld6PV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorcountsperdayGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1O2Ld6PV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorcountsperdayGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      errors: {
        serializedName: "errors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths19Ck6PV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorcountsperdayGetResponses200ContentApplicationJsonSchemaPropertiesErrorsItems"
            }
          }
        }
      }
    }
  }
};

export const Paths19Ck6PV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorcountsperdayGetResponses200ContentApplicationJsonSchemaPropertiesErrorsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths19Ck6PV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorcountsperdayGetResponses200ContentApplicationJsonSchemaPropertiesErrorsItems",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PathsSjngesV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorcountsperdayGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsSjngesV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorcountsperdayGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsEav0KtV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorcountsperdayGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsEav0KtV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorcountsperdayGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsEav0KtV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorcountsperdayGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsHk1U21V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidGetResponses200ContentApplicationJsonSchemaPropertiesReasonframesItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsHk1U21V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidGetResponses200ContentApplicationJsonSchemaPropertiesReasonframesItems",
    modelProperties: {
      className: {
        serializedName: "className",
        type: {
          name: "String"
        }
      },
      method: {
        serializedName: "method",
        type: {
          name: "String"
        }
      },
      classMethod: {
        serializedName: "classMethod",
        type: {
          name: "Boolean"
        }
      },
      file: {
        serializedName: "file",
        type: {
          name: "String"
        }
      },
      line: {
        serializedName: "line",
        type: {
          name: "Number"
        }
      },
      appCode: {
        serializedName: "appCode",
        type: {
          name: "Boolean"
        }
      },
      frameworkName: {
        serializedName: "frameworkName",
        type: {
          name: "String"
        }
      },
      codeFormatted: {
        serializedName: "codeFormatted",
        type: {
          name: "String"
        }
      },
      codeRaw: {
        serializedName: "codeRaw",
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      methodParams: {
        serializedName: "methodParams",
        type: {
          name: "String"
        }
      },
      exceptionType: {
        serializedName: "exceptionType",
        type: {
          name: "String"
        }
      },
      osExceptionType: {
        serializedName: "osExceptionType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsUg1W4GV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsUg1W4GV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidGetResponses200ContentApplicationJsonSchemaAllof0",
    modelProperties: {
      state: {
        serializedName: "state",
        required: true,
        type: {
          name: "String"
        }
      },
      annotation: {
        serializedName: "annotation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsNve630V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsNve630V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths8Bt8TwV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths8Bt8TwV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths8Bt8TwV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsHpm6KuV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidPatchRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsHpm6KuV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidPatchRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      state: {
        serializedName: "state",
        required: true,
        type: {
          name: "String"
        }
      },
      annotation: {
        serializedName: "annotation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsMvkf3KV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidPatchResponses200ContentApplicationJsonSchemaPropertiesReasonframesItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsMvkf3KV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidPatchResponses200ContentApplicationJsonSchemaPropertiesReasonframesItems",
    modelProperties: {
      className: {
        serializedName: "className",
        type: {
          name: "String"
        }
      },
      method: {
        serializedName: "method",
        type: {
          name: "String"
        }
      },
      classMethod: {
        serializedName: "classMethod",
        type: {
          name: "Boolean"
        }
      },
      file: {
        serializedName: "file",
        type: {
          name: "String"
        }
      },
      line: {
        serializedName: "line",
        type: {
          name: "Number"
        }
      },
      appCode: {
        serializedName: "appCode",
        type: {
          name: "Boolean"
        }
      },
      frameworkName: {
        serializedName: "frameworkName",
        type: {
          name: "String"
        }
      },
      codeFormatted: {
        serializedName: "codeFormatted",
        type: {
          name: "String"
        }
      },
      codeRaw: {
        serializedName: "codeRaw",
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      methodParams: {
        serializedName: "methodParams",
        type: {
          name: "String"
        }
      },
      exceptionType: {
        serializedName: "exceptionType",
        type: {
          name: "String"
        }
      },
      osExceptionType: {
        serializedName: "osExceptionType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths13AsklyV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidPatchResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths13AsklyV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidPatchResponses200ContentApplicationJsonSchemaAllof0",
    modelProperties: {
      state: {
        serializedName: "state",
        required: true,
        type: {
          name: "String"
        }
      },
      annotation: {
        serializedName: "annotation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Mu5I03V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidPatchResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Mu5I03V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidPatchResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1W9Su2UV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidPatchResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1W9Su2UV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidPatchResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1W9Su2UV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidPatchResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths3Uj0Q0V01AppsOwnerNameAppNameErrorsErrorgroupsSearchGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths3Uj0Q0V01AppsOwnerNameAppNameErrorsErrorgroupsSearchGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      hasMoreResults: {
        serializedName: "hasMoreResults",
        type: {
          name: "Boolean"
        }
      },
      errorGroups: {
        serializedName: "errorGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsDapaw8V01AppsOwnerNameAppNameErrorsErrorgroupsSearchGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItems"
            }
          }
        }
      }
    }
  }
};

export const Get200ApplicationJsonPropertiesItems0ReasonFramesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonPropertiesItems0ReasonFramesItem",
    modelProperties: {
      className: {
        serializedName: "className",
        type: {
          name: "String"
        }
      },
      method: {
        serializedName: "method",
        type: {
          name: "String"
        }
      },
      classMethod: {
        serializedName: "classMethod",
        type: {
          name: "Boolean"
        }
      },
      file: {
        serializedName: "file",
        type: {
          name: "String"
        }
      },
      line: {
        serializedName: "line",
        type: {
          name: "Number"
        }
      },
      appCode: {
        serializedName: "appCode",
        type: {
          name: "Boolean"
        }
      },
      frameworkName: {
        serializedName: "frameworkName",
        type: {
          name: "String"
        }
      },
      codeFormatted: {
        serializedName: "codeFormatted",
        type: {
          name: "String"
        }
      },
      codeRaw: {
        serializedName: "codeRaw",
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      methodParams: {
        serializedName: "methodParams",
        type: {
          name: "String"
        }
      },
      exceptionType: {
        serializedName: "exceptionType",
        type: {
          name: "String"
        }
      },
      osExceptionType: {
        serializedName: "osExceptionType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsGpexkdV01AppsOwnerNameAppNameErrorsErrorgroupsSearchGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsGpexkdV01AppsOwnerNameAppNameErrorsErrorgroupsSearchGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItemsAllof0",
    modelProperties: {
      state: {
        serializedName: "state",
        required: true,
        type: {
          name: "String"
        }
      },
      annotation: {
        serializedName: "annotation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths15I10UwV01AppsOwnerNameAppNameErrorsErrorgroupsSearchGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths15I10UwV01AppsOwnerNameAppNameErrorsErrorgroupsSearchGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsJhpd5MV01AppsOwnerNameAppNameErrorsErrorgroupsSearchGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsJhpd5MV01AppsOwnerNameAppNameErrorsErrorgroupsSearchGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsJhpd5MV01AppsOwnerNameAppNameErrorsErrorgroupsSearchGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths10KtxpjV01AppsOwnerNameAppNameErrorsErrorgroupsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths10KtxpjV01AppsOwnerNameAppNameErrorsErrorgroupsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      errorGroups: {
        serializedName: "errorGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths1X029LnV01AppsOwnerNameAppNameErrorsErrorgroupsGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItems"
            }
          }
        }
      }
    }
  }
};

export const Paths6YokraV01AppsOwnerNameAppNameErrorsErrorgroupsGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItemsAllof0PropertiesReasonframesItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths6YokraV01AppsOwnerNameAppNameErrorsErrorgroupsGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItemsAllof0PropertiesReasonframesItems",
    modelProperties: {
      className: {
        serializedName: "className",
        type: {
          name: "String"
        }
      },
      method: {
        serializedName: "method",
        type: {
          name: "String"
        }
      },
      classMethod: {
        serializedName: "classMethod",
        type: {
          name: "Boolean"
        }
      },
      file: {
        serializedName: "file",
        type: {
          name: "String"
        }
      },
      line: {
        serializedName: "line",
        type: {
          name: "Number"
        }
      },
      appCode: {
        serializedName: "appCode",
        type: {
          name: "Boolean"
        }
      },
      frameworkName: {
        serializedName: "frameworkName",
        type: {
          name: "String"
        }
      },
      codeFormatted: {
        serializedName: "codeFormatted",
        type: {
          name: "String"
        }
      },
      codeRaw: {
        serializedName: "codeRaw",
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      methodParams: {
        serializedName: "methodParams",
        type: {
          name: "String"
        }
      },
      exceptionType: {
        serializedName: "exceptionType",
        type: {
          name: "String"
        }
      },
      osExceptionType: {
        serializedName: "osExceptionType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths9Zowz3V01AppsOwnerNameAppNameErrorsErrorgroupsGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths9Zowz3V01AppsOwnerNameAppNameErrorsErrorgroupsGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItemsAllof0",
    modelProperties: {
      state: {
        serializedName: "state",
        required: true,
        type: {
          name: "String"
        }
      },
      annotation: {
        serializedName: "annotation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsUwsddyV01AppsOwnerNameAppNameErrorsErrorgroupsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsUwsddyV01AppsOwnerNameAppNameErrorsErrorgroupsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsByblq7V01AppsOwnerNameAppNameErrorsErrorgroupsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsByblq7V01AppsOwnerNameAppNameErrorsErrorgroupsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsByblq7V01AppsOwnerNameAppNameErrorsErrorgroupsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths5Bnd9KV01AppsOwnerNameAppNameErrorsErrorcountsperdayGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths5Bnd9KV01AppsOwnerNameAppNameErrorsErrorcountsperdayGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      errors: {
        serializedName: "errors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths6Kmu91V01AppsOwnerNameAppNameErrorsErrorcountsperdayGetResponses200ContentApplicationJsonSchemaPropertiesErrorsItems"
            }
          }
        }
      }
    }
  }
};

export const Paths6Kmu91V01AppsOwnerNameAppNameErrorsErrorcountsperdayGetResponses200ContentApplicationJsonSchemaPropertiesErrorsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths6Kmu91V01AppsOwnerNameAppNameErrorsErrorcountsperdayGetResponses200ContentApplicationJsonSchemaPropertiesErrorsItems",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PathsN8QcejV01AppsOwnerNameAppNameErrorsErrorcountsperdayGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsN8QcejV01AppsOwnerNameAppNameErrorsErrorcountsperdayGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsOi504RV01AppsOwnerNameAppNameErrorsErrorcountsperdayGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsOi504RV01AppsOwnerNameAppNameErrorsErrorcountsperdayGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsOi504RV01AppsOwnerNameAppNameErrorsErrorcountsperdayGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Wi49JqV01AppsOwnerNameAppNameErrorsAvailableVersionsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Wi49JqV01AppsOwnerNameAppNameErrorsAvailableVersionsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      versions: {
        serializedName: "versions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      totalCount: {
        serializedName: "total_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths13Rlhb7V01AppsOwnerNameAppNameErrorsAvailableVersionsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths13Rlhb7V01AppsOwnerNameAppNameErrorsAvailableVersionsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1P3Wvz1V01AppsOwnerNameAppNameErrorsAvailableVersionsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1P3Wvz1V01AppsOwnerNameAppNameErrorsAvailableVersionsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1P3Wvz1V01AppsOwnerNameAppNameErrorsAvailableVersionsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Cq491NV01AppsOwnerNameAppNameErrorsAvailableappbuildsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Cq491NV01AppsOwnerNameAppNameErrorsAvailableappbuildsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      appBuilds: {
        serializedName: "appBuilds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Paths1Loji0OV01AppsOwnerNameAppNameErrorsAvailableappbuildsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Loji0OV01AppsOwnerNameAppNameErrorsAvailableappbuildsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsY36PfV01AppsOwnerNameAppNameErrorsAvailableappbuildsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsY36PfV01AppsOwnerNameAppNameErrorsAvailableappbuildsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsY36PfV01AppsOwnerNameAppNameErrorsAvailableappbuildsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsHaqcuV01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdRealtimestatusGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsHaqcuV01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdRealtimestatusGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      releaseId: {
        serializedName: "release_id",
        type: {
          name: "String"
        }
      },
      appId: {
        serializedName: "app_id",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className:
            "Paths1Tlj5KsV01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdRealtimestatusGetResponses200ContentApplicationJsonSchemaPropertiesStatus"
        }
      }
    }
  }
};

export const Paths1Tlj5KsV01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdRealtimestatusGetResponses200ContentApplicationJsonSchemaPropertiesStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Tlj5KsV01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdRealtimestatusGetResponses200ContentApplicationJsonSchemaPropertiesStatus",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      storetype: {
        serializedName: "storetype",
        type: {
          name: "String"
        }
      },
      track: {
        serializedName: "track",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsVb34MV01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdRealtimestatusGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsVb34MV01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdRealtimestatusGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsEm3U11V01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdPublishLogsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsEm3U11V01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdPublishLogsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsAk7Qf9V01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdPublishErrorDetailsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsAk7Qf9V01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdPublishErrorDetailsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      isLogAvailable: {
        serializedName: "is_log_available",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths1S5Ty9V01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdPublishErrorDetailsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1S5Ty9V01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdPublishErrorDetailsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths16Kcv4PV01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths16Kcv4PV01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      appName: {
        serializedName: "app_name",
        type: {
          name: "String"
        }
      },
      appDisplayName: {
        serializedName: "app_display_name",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      shortVersion: {
        serializedName: "short_version",
        type: {
          name: "String"
        }
      },
      releaseNotes: {
        serializedName: "release_notes",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      minOs: {
        serializedName: "min_os",
        type: {
          name: "String"
        }
      },
      androidMinApiLevel: {
        serializedName: "android_min_api_level",
        type: {
          name: "String"
        }
      },
      bundleIdentifier: {
        serializedName: "bundle_identifier",
        type: {
          name: "String"
        }
      },
      fingerprint: {
        serializedName: "fingerprint",
        type: {
          name: "String"
        }
      },
      uploadedAt: {
        serializedName: "uploaded_at",
        type: {
          name: "String"
        }
      },
      downloadUrl: {
        serializedName: "download_url",
        type: {
          name: "String"
        }
      },
      installUrl: {
        serializedName: "install_url",
        type: {
          name: "String"
        }
      },
      distributionStores: {
        serializedName: "distribution_stores",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths2DxexzV01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItems"
            }
          }
        }
      }
    }
  }
};

export const Paths2DxexzV01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths2DxexzV01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItems",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      publishingStatus: {
        serializedName: "publishing_status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsMk8Dv4V01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsMk8Dv4V01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsFj6ZdaV01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdDeleteResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsFj6ZdaV01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdDeleteResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsWia9WV01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsWia9WV01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      shortVersion: {
        serializedName: "short_version",
        type: {
          name: "String"
        }
      },
      uploadedAt: {
        serializedName: "uploaded_at",
        type: {
          name: "String"
        }
      },
      destinationType: {
        serializedName: "destination_type",
        type: {
          name: "String"
        }
      },
      distributionStores: {
        serializedName: "distribution_stores",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths1FuujvgV01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItems"
            }
          }
        }
      }
    }
  }
};

export const Paths1FuujvgV01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1FuujvgV01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItems",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      publishingStatus: {
        serializedName: "publishing_status",
        type: {
          name: "String"
        }
      },
      isLatest: {
        serializedName: "is_latest",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PathsWnkcq1V01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsWnkcq1V01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsT560UdV01AppsOwnerNameAppNameDistributionStoresStoreNameLatestReleaseGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsT560UdV01AppsOwnerNameAppNameDistributionStoresStoreNameLatestReleaseGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      appName: {
        serializedName: "app_name",
        type: {
          name: "String"
        }
      },
      appDisplayName: {
        serializedName: "app_display_name",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      shortVersion: {
        serializedName: "short_version",
        type: {
          name: "String"
        }
      },
      releaseNotes: {
        serializedName: "release_notes",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      minOs: {
        serializedName: "min_os",
        type: {
          name: "String"
        }
      },
      androidMinApiLevel: {
        serializedName: "android_min_api_level",
        type: {
          name: "String"
        }
      },
      bundleIdentifier: {
        serializedName: "bundle_identifier",
        type: {
          name: "String"
        }
      },
      fingerprint: {
        serializedName: "fingerprint",
        type: {
          name: "String"
        }
      },
      uploadedAt: {
        serializedName: "uploaded_at",
        type: {
          name: "String"
        }
      },
      downloadUrl: {
        serializedName: "download_url",
        type: {
          name: "String"
        }
      },
      installUrl: {
        serializedName: "install_url",
        type: {
          name: "String"
        }
      },
      distributionStores: {
        serializedName: "distribution_stores",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsXopyuvV01AppsOwnerNameAppNameDistributionStoresStoreNameLatestReleaseGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItems"
            }
          }
        }
      }
    }
  }
};

export const PathsXopyuvV01AppsOwnerNameAppNameDistributionStoresStoreNameLatestReleaseGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsXopyuvV01AppsOwnerNameAppNameDistributionStoresStoreNameLatestReleaseGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItems",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      publishingStatus: {
        serializedName: "publishing_status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths8Yjtv1V01AppsOwnerNameAppNameDistributionStoresStoreNameLatestReleaseGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths8Yjtv1V01AppsOwnerNameAppNameDistributionStoresStoreNameLatestReleaseGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths17Ft4FaV01AppsOwnerNameAppNameDistributionStoresStoreNameGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths17Ft4FaV01AppsOwnerNameAppNameDistributionStoresStoreNameGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      track: {
        serializedName: "track",
        type: {
          name: "String"
        }
      },
      intuneDetails: {
        serializedName: "intune_details",
        type: {
          name: "Composite",
          className:
            "Paths2Lc3KvV01AppsOwnerNameAppNameDistributionStoresStoreNameGetResponses200ContentApplicationJsonSchemaPropertiesIntuneDetails"
        }
      },
      serviceConnectionId: {
        serializedName: "service_connection_id",
        type: {
          name: "String"
        }
      },
      createdBy: {
        serializedName: "created_by",
        type: {
          name: "String"
        }
      },
      createdByPrincipalType: {
        serializedName: "created_by_principal_type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths2Lc3KvV01AppsOwnerNameAppNameDistributionStoresStoreNameGetResponses200ContentApplicationJsonSchemaPropertiesIntuneDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths2Lc3KvV01AppsOwnerNameAppNameDistributionStoresStoreNameGetResponses200ContentApplicationJsonSchemaPropertiesIntuneDetails",
    modelProperties: {
      targetAudience: {
        serializedName: "target_audience",
        type: {
          name: "Composite",
          className:
            "Paths1U8S5GtV01AppsOwnerNameAppNameDistributionStoresStoreNameGetResponses200ContentApplicationJsonSchemaPropertiesIntuneDetailsPropertiesTargetAudience"
        }
      },
      appCategory: {
        serializedName: "app_category",
        type: {
          name: "Composite",
          className:
            "PathsBj3Xa5V01AppsOwnerNameAppNameDistributionStoresStoreNameGetResponses200ContentApplicationJsonSchemaPropertiesIntuneDetailsPropertiesAppCategory"
        }
      }
    }
  }
};

export const Paths1U8S5GtV01AppsOwnerNameAppNameDistributionStoresStoreNameGetResponses200ContentApplicationJsonSchemaPropertiesIntuneDetailsPropertiesTargetAudience: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1U8S5GtV01AppsOwnerNameAppNameDistributionStoresStoreNameGetResponses200ContentApplicationJsonSchemaPropertiesIntuneDetailsPropertiesTargetAudience",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsBj3Xa5V01AppsOwnerNameAppNameDistributionStoresStoreNameGetResponses200ContentApplicationJsonSchemaPropertiesIntuneDetailsPropertiesAppCategory: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsBj3Xa5V01AppsOwnerNameAppNameDistributionStoresStoreNameGetResponses200ContentApplicationJsonSchemaPropertiesIntuneDetailsPropertiesAppCategory",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsTg2NhfV01AppsOwnerNameAppNameDistributionStoresStoreNameGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsTg2NhfV01AppsOwnerNameAppNameDistributionStoresStoreNameGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Yf5Jp5V01AppsOwnerNameAppNameDistributionStoresStoreNamePatchRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Yf5Jp5V01AppsOwnerNameAppNameDistributionStoresStoreNamePatchRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      serviceConnectionId: {
        serializedName: "service_connection_id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsAqfpleV01AppsOwnerNameAppNameDistributionStoresStoreNamePatchResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsAqfpleV01AppsOwnerNameAppNameDistributionStoresStoreNamePatchResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths14Io730V01AppsOwnerNameAppNameDistributionStoresStoreNameDeleteResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths14Io730V01AppsOwnerNameAppNameDistributionStoresStoreNameDeleteResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsPwsnpuV01AppsOwnerNameAppNameDistributionStoresPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsPwsnpuV01AppsOwnerNameAppNameDistributionStoresPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      track: {
        serializedName: "track",
        type: {
          name: "String"
        }
      },
      intuneDetails: {
        serializedName: "intune_details",
        type: {
          name: "Composite",
          className: "PostContentSchemaIntuneDetails"
        }
      },
      serviceConnectionId: {
        serializedName: "service_connection_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PostContentSchemaIntuneDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PostContentSchemaIntuneDetails",
    modelProperties: {
      secretJson: {
        serializedName: "secret_json",
        type: {
          name: "Composite",
          className: "PostContentSchemaIntuneDetailsSecretJson"
        }
      },
      targetAudience: {
        serializedName: "target_audience",
        type: {
          name: "Composite",
          className: "PostContentSchemaIntuneDetailsTargetAudience"
        }
      },
      appCategory: {
        serializedName: "app_category",
        type: {
          name: "Composite",
          className: "PostContentSchemaIntuneDetailsAppCategory"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PostContentSchemaIntuneDetailsSecretJson: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PostContentSchemaIntuneDetailsSecretJson",
    modelProperties: {
      idToken: {
        serializedName: "id_token",
        type: {
          name: "String"
        }
      },
      refreshToken: {
        serializedName: "refresh_token",
        type: {
          name: "String"
        }
      },
      refreshTokenExpiry: {
        serializedName: "refresh_token_expiry",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PostContentSchemaIntuneDetailsTargetAudience: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PostContentSchemaIntuneDetailsTargetAudience",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PostContentSchemaIntuneDetailsAppCategory: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PostContentSchemaIntuneDetailsAppCategory",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsM4SyzbV01AppsOwnerNameAppNameDistributionStoresPostResponses201ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsM4SyzbV01AppsOwnerNameAppNameDistributionStoresPostResponses201ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      track: {
        serializedName: "track",
        type: {
          name: "String"
        }
      },
      intuneDetails: {
        serializedName: "intune_details",
        type: {
          name: "Composite",
          className:
            "PathsE4FfluV01AppsOwnerNameAppNameDistributionStoresPostResponses201ContentApplicationJsonSchemaPropertiesIntuneDetails"
        }
      },
      serviceConnectionId: {
        serializedName: "service_connection_id",
        type: {
          name: "String"
        }
      },
      createdBy: {
        serializedName: "created_by",
        type: {
          name: "String"
        }
      },
      createdByPrincipalType: {
        serializedName: "created_by_principal_type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsE4FfluV01AppsOwnerNameAppNameDistributionStoresPostResponses201ContentApplicationJsonSchemaPropertiesIntuneDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsE4FfluV01AppsOwnerNameAppNameDistributionStoresPostResponses201ContentApplicationJsonSchemaPropertiesIntuneDetails",
    modelProperties: {
      targetAudience: {
        serializedName: "target_audience",
        type: {
          name: "Composite",
          className:
            "Paths1323AffV01AppsOwnerNameAppNameDistributionStoresPostResponses201ContentApplicationJsonSchemaPropertiesIntuneDetailsPropertiesTargetAudience"
        }
      },
      appCategory: {
        serializedName: "app_category",
        type: {
          name: "Composite",
          className:
            "Paths8L099OV01AppsOwnerNameAppNameDistributionStoresPostResponses201ContentApplicationJsonSchemaPropertiesIntuneDetailsPropertiesAppCategory"
        }
      }
    }
  }
};

export const Paths1323AffV01AppsOwnerNameAppNameDistributionStoresPostResponses201ContentApplicationJsonSchemaPropertiesIntuneDetailsPropertiesTargetAudience: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1323AffV01AppsOwnerNameAppNameDistributionStoresPostResponses201ContentApplicationJsonSchemaPropertiesIntuneDetailsPropertiesTargetAudience",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths8L099OV01AppsOwnerNameAppNameDistributionStoresPostResponses201ContentApplicationJsonSchemaPropertiesIntuneDetailsPropertiesAppCategory: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths8L099OV01AppsOwnerNameAppNameDistributionStoresPostResponses201ContentApplicationJsonSchemaPropertiesIntuneDetailsPropertiesAppCategory",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsMlw3HcV01AppsOwnerNameAppNameDistributionStoresPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsMlw3HcV01AppsOwnerNameAppNameDistributionStoresPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1WzhejqV01AppsOwnerNameAppNameDistributionStoresGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1WzhejqV01AppsOwnerNameAppNameDistributionStoresGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      track: {
        serializedName: "track",
        type: {
          name: "String"
        }
      },
      intuneDetails: {
        serializedName: "intune_details",
        type: {
          name: "Composite",
          className:
            "GetResponses200ContentApplicationJsonSchemaItemIntuneDetails"
        }
      },
      serviceConnectionId: {
        serializedName: "service_connection_id",
        type: {
          name: "String"
        }
      },
      createdBy: {
        serializedName: "created_by",
        type: {
          name: "String"
        }
      },
      createdByPrincipalType: {
        serializedName: "created_by_principal_type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GetResponses200ContentApplicationJsonSchemaItemIntuneDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetResponses200ContentApplicationJsonSchemaItemIntuneDetails",
    modelProperties: {
      targetAudience: {
        serializedName: "target_audience",
        type: {
          name: "Composite",
          className: "Get200ApplicationJsonItemsIntuneDetailsTargetAudience"
        }
      },
      appCategory: {
        serializedName: "app_category",
        type: {
          name: "Composite",
          className: "Get200ApplicationJsonItemsIntuneDetailsAppCategory"
        }
      }
    }
  }
};

export const Get200ApplicationJsonItemsIntuneDetailsTargetAudience: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonItemsIntuneDetailsTargetAudience",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Get200ApplicationJsonItemsIntuneDetailsAppCategory: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonItemsIntuneDetailsAppCategory",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1C26JzV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameResendInvitePostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1C26JzV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameResendInvitePostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      userEmails: {
        constraints: {
          MinItems: 1
        },
        serializedName: "user_emails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Paths1NlleszV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameResendInvitePostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1NlleszV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameResendInvitePostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsRk3N3PV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameResendInvitePostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsRk3N3PV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameResendInvitePostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsRk3N3PV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameResendInvitePostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths7CegcuV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths7CegcuV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Number"
        }
      },
      appName: {
        serializedName: "app_name",
        required: true,
        type: {
          name: "String"
        }
      },
      appDisplayName: {
        serializedName: "app_display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      appOs: {
        serializedName: "app_os",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      shortVersion: {
        serializedName: "short_version",
        required: true,
        type: {
          name: "String"
        }
      },
      releaseNotes: {
        serializedName: "release_notes",
        type: {
          name: "String"
        }
      },
      provisioningProfileName: {
        serializedName: "provisioning_profile_name",
        type: {
          name: "String"
        }
      },
      provisioningProfileType: {
        serializedName: "provisioning_profile_type",
        type: {
          name: "String"
        }
      },
      provisioningProfileExpiryDate: {
        serializedName: "provisioning_profile_expiry_date",
        type: {
          name: "String"
        }
      },
      isProvisioningProfileSyncing: {
        serializedName: "is_provisioning_profile_syncing",
        type: {
          name: "Boolean"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      minOs: {
        serializedName: "min_os",
        type: {
          name: "String"
        }
      },
      deviceFamily: {
        serializedName: "device_family",
        type: {
          name: "String"
        }
      },
      androidMinApiLevel: {
        serializedName: "android_min_api_level",
        type: {
          name: "String"
        }
      },
      bundleIdentifier: {
        serializedName: "bundle_identifier",
        type: {
          name: "String"
        }
      },
      packageHashes: {
        serializedName: "package_hashes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      fingerprint: {
        serializedName: "fingerprint",
        type: {
          name: "String"
        }
      },
      uploadedAt: {
        serializedName: "uploaded_at",
        required: true,
        type: {
          name: "String"
        }
      },
      downloadUrl: {
        serializedName: "download_url",
        type: {
          name: "String"
        }
      },
      appIconUrl: {
        serializedName: "app_icon_url",
        required: true,
        type: {
          name: "String"
        }
      },
      installUrl: {
        serializedName: "install_url",
        type: {
          name: "String"
        }
      },
      destinationType: {
        serializedName: "destination_type",
        type: {
          name: "String"
        }
      },
      distributionGroups: {
        serializedName: "distribution_groups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsQwfap8V01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDistributionGroupsItems"
            }
          }
        }
      },
      distributionStores: {
        serializedName: "distribution_stores",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsY1Jr0XV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDistributionStoresItems"
            }
          }
        }
      },
      destinations: {
        serializedName: "destinations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths141Gsz2V01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItems"
            }
          }
        }
      },
      isUdidProvisioned: {
        serializedName: "is_udid_provisioned",
        type: {
          name: "Boolean"
        }
      },
      canResign: {
        serializedName: "can_resign",
        type: {
          name: "Boolean"
        }
      },
      build: {
        serializedName: "build",
        type: {
          name: "Composite",
          className:
            "PathsKzpnV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesBuild"
        }
      },
      enabled: {
        serializedName: "enabled",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      isExternalBuild: {
        serializedName: "is_external_build",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PathsQwfap8V01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDistributionGroupsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsQwfap8V01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDistributionGroupsItems",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsY1Jr0XV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDistributionStoresItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsY1Jr0XV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDistributionStoresItems",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      publishingStatus: {
        serializedName: "publishing_status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsJ2Qqa3V01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsJ2Qqa3V01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      publishingStatus: {
        serializedName: "publishing_status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths12P7F7IV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0Allof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths12P7F7IV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0Allof1",
    modelProperties: {
      isLatest: {
        serializedName: "is_latest",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths18M4XcxV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths18M4XcxV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof1",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths8Byq2JV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof2: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths8Byq2JV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof2",
    modelProperties: {
      destinationType: {
        serializedName: "destination_type",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsKzpnV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesBuild: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsKzpnV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesBuild",
    modelProperties: {
      branchName: {
        serializedName: "branch_name",
        type: {
          name: "String"
        }
      },
      commitHash: {
        serializedName: "commit_hash",
        type: {
          name: "String"
        }
      },
      commitMessage: {
        serializedName: "commit_message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Hpnd2WV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses404ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Hpnd2WV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses404ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsOst83YV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses501ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsOst83YV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses501ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsHninlmV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsHninlmV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Number"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      shortVersion: {
        serializedName: "short_version",
        required: true,
        type: {
          name: "String"
        }
      },
      mandatoryUpdate: {
        serializedName: "mandatory_update",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      uploadedAt: {
        serializedName: "uploaded_at",
        required: true,
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "enabled",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      isExternalBuild: {
        serializedName: "is_external_build",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths1JakpdqV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesGetResponses404ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1JakpdqV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesGetResponses404ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsLx7ZdvV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersBulkDeletePostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsLx7ZdvV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersBulkDeletePostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      userEmails: {
        constraints: {
          MinItems: 1
        },
        serializedName: "user_emails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PathsH5A3IoV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersBulkDeletePostResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsH5A3IoV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersBulkDeletePostResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "Number"
        }
      },
      userEmail: {
        serializedName: "user_email",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsAiyp0KV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersBulkDeletePostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsAiyp0KV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersBulkDeletePostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1LpdkgkV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersBulkDeletePostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1LpdkgkV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersBulkDeletePostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1LpdkgkV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersBulkDeletePostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsV8RijtV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsV8RijtV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      canChangePassword: {
        serializedName: "can_change_password",
        type: {
          name: "Boolean"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      invitePending: {
        serializedName: "invite_pending",
        type: {
          name: "Boolean"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsDswa3EV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsDswa3EV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsUf7IliV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsUf7IliV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsUf7IliV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths9330UyV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths9330UyV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      userEmails: {
        constraints: {
          MinItems: 1
        },
        serializedName: "user_emails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PathsQb9V9JV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersPostResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsQb9V9JV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersPostResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      invitePending: {
        serializedName: "invite_pending",
        type: {
          name: "Boolean"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "Number"
        }
      },
      userEmail: {
        serializedName: "user_email",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths27EeybV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths27EeybV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1HugfkwV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersPostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1HugfkwV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersPostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1HugfkwV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameMembersPostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsPetbu0V01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameDevicesDownloadDevicesListGetResponses400ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsPetbu0V01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameDevicesDownloadDevicesListGetResponses400ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Lf13O3V01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameDevicesDownloadDevicesListGetResponses404ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Lf13O3V01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameDevicesDownloadDevicesListGetResponses404ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1LlermxV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameDevicesDownloadDevicesListGetResponses500ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1LlermxV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameDevicesDownloadDevicesListGetResponses500ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsTsc2V7V01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameDevicesGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsTsc2V7V01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameDevicesGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      udid: {
        serializedName: "udid",
        required: true,
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        required: true,
        type: {
          name: "String"
        }
      },
      deviceName: {
        serializedName: "device_name",
        required: true,
        type: {
          name: "String"
        }
      },
      fullDeviceName: {
        serializedName: "full_device_name",
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      serial: {
        serializedName: "serial",
        type: {
          name: "String"
        }
      },
      imei: {
        serializedName: "imei",
        type: {
          name: "String"
        }
      },
      ownerId: {
        serializedName: "owner_id",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      registeredAt: {
        serializedName: "registered_at",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths12Hwzd4V01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameDevicesGetResponses400ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths12Hwzd4V01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameDevicesGetResponses400ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsWkyzigV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameDevicesGetResponses404ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsWkyzigV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameDevicesGetResponses404ContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Wh2QvoV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Wh2QvoV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      },
      isPublic: {
        serializedName: "is_public",
        required: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PathsM9Ao2YV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsM9Ao2YV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths2Dja2CV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths2Dja2CV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths2Dja2CV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Y98SmdV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNamePatchRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Y98SmdV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNamePatchRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      isPublic: {
        serializedName: "is_public",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths15Yrg8NV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNamePatchResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths15Yrg8NV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNamePatchResponses200ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      },
      isPublic: {
        serializedName: "is_public",
        required: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths1Nibs8HV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNamePatchResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Nibs8HV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNamePatchResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths135MjxyV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths135MjxyV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths135MjxyV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsKwupmvV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameDeleteResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsKwupmvV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameDeleteResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths74HcibV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths74HcibV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths74HcibV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1O1HkymV01AppsOwnerNameAppNameDistributionGroupsGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1O1HkymV01AppsOwnerNameAppNameDistributionGroupsGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      },
      isPublic: {
        serializedName: "is_public",
        required: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths9Wjl67V01AppsOwnerNameAppNameDistributionGroupsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths9Wjl67V01AppsOwnerNameAppNameDistributionGroupsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsTqoq5TV01AppsOwnerNameAppNameDistributionGroupsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsTqoq5TV01AppsOwnerNameAppNameDistributionGroupsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsTqoq5TV01AppsOwnerNameAppNameDistributionGroupsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsFdbuo5V01AppsOwnerNameAppNameDistributionGroupsPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsFdbuo5V01AppsOwnerNameAppNameDistributionGroupsPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths7NhijrV01AppsOwnerNameAppNameDistributionGroupsPostResponses201ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths7NhijrV01AppsOwnerNameAppNameDistributionGroupsPostResponses201ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      },
      isPublic: {
        serializedName: "is_public",
        required: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths5IifpfV01AppsOwnerNameAppNameDistributionGroupsPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths5IifpfV01AppsOwnerNameAppNameDistributionGroupsPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Ed3IkrV01AppsOwnerNameAppNameDistributionGroupsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Ed3IkrV01AppsOwnerNameAppNameDistributionGroupsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Ed3IkrV01AppsOwnerNameAppNameDistributionGroupsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths11FvsglV01AppsOwnerNameAppNameDiagnosticsSymbolGroupsInfoGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths11FvsglV01AppsOwnerNameAppNameDiagnosticsSymbolGroupsInfoGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      totalCrashCount: {
        serializedName: "total_crash_count",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths1WfkyxuV01AppsOwnerNameAppNameDiagnosticsSymbolGroupsInfoGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1WfkyxuV01AppsOwnerNameAppNameDiagnosticsSymbolGroupsInfoGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths12L0F2LV01AppsOwnerNameAppNameDiagnosticsSymbolGroupsSymbolGroupIdGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths12L0F2LV01AppsOwnerNameAppNameDiagnosticsSymbolGroupsSymbolGroupIdGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      totalCrashCount: {
        serializedName: "total_crash_count",
        required: true,
        type: {
          name: "Number"
        }
      },
      groups: {
        serializedName: "groups",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths1BfgrzpV01AppsOwnerNameAppNameDiagnosticsSymbolGroupsSymbolGroupIdGetResponses200ContentApplicationJsonSchemaPropertiesGroupsItems"
            }
          }
        }
      }
    }
  }
};

export const Paths1BfgrzpV01AppsOwnerNameAppNameDiagnosticsSymbolGroupsSymbolGroupIdGetResponses200ContentApplicationJsonSchemaPropertiesGroupsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1BfgrzpV01AppsOwnerNameAppNameDiagnosticsSymbolGroupsSymbolGroupIdGetResponses200ContentApplicationJsonSchemaPropertiesGroupsItems",
    modelProperties: {
      symbolGroupId: {
        serializedName: "symbol_group_id",
        required: true,
        type: {
          name: "String"
        }
      },
      crashCount: {
        serializedName: "crash_count",
        type: {
          name: "Number"
        }
      },
      errorCount: {
        serializedName: "error_count",
        type: {
          name: "Number"
        }
      },
      appId: {
        serializedName: "app_id",
        required: true,
        type: {
          name: "String"
        }
      },
      appVer: {
        serializedName: "app_ver",
        required: true,
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      lastModified: {
        serializedName: "last_modified",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      missingSymbols: {
        serializedName: "missing_symbols",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Get200ApplicationJsonPropertiesItemsMissingSymbolsItem"
            }
          }
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Get200ApplicationJsonPropertiesItemsMissingSymbolsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonPropertiesItemsMissingSymbolsItem",
    modelProperties: {
      symbolId: {
        serializedName: "symbol_id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths4Cl255V01AppsOwnerNameAppNameDiagnosticsSymbolGroupsSymbolGroupIdGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths4Cl255V01AppsOwnerNameAppNameDiagnosticsSymbolGroupsSymbolGroupIdGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsQn5ExjV01AppsOwnerNameAppNameDiagnosticsSymbolGroupsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsQn5ExjV01AppsOwnerNameAppNameDiagnosticsSymbolGroupsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      totalCrashCount: {
        serializedName: "total_crash_count",
        required: true,
        type: {
          name: "Number"
        }
      },
      groups: {
        serializedName: "groups",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsOz8MxcV01AppsOwnerNameAppNameDiagnosticsSymbolGroupsGetResponses200ContentApplicationJsonSchemaPropertiesGroupsItems"
            }
          }
        }
      }
    }
  }
};

export const PathsOz8MxcV01AppsOwnerNameAppNameDiagnosticsSymbolGroupsGetResponses200ContentApplicationJsonSchemaPropertiesGroupsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsOz8MxcV01AppsOwnerNameAppNameDiagnosticsSymbolGroupsGetResponses200ContentApplicationJsonSchemaPropertiesGroupsItems",
    modelProperties: {
      symbolGroupId: {
        serializedName: "symbol_group_id",
        required: true,
        type: {
          name: "String"
        }
      },
      crashCount: {
        serializedName: "crash_count",
        type: {
          name: "Number"
        }
      },
      errorCount: {
        serializedName: "error_count",
        type: {
          name: "Number"
        }
      },
      appId: {
        serializedName: "app_id",
        required: true,
        type: {
          name: "String"
        }
      },
      appVer: {
        serializedName: "app_ver",
        required: true,
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      lastModified: {
        serializedName: "last_modified",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      missingSymbols: {
        serializedName: "missing_symbols",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths1Lnr615V01AppsOwnerNameAppNameDiagnosticsSymbolGroupsGetResponses200ContentApplicationJsonSchemaPropertiesGroupsItemsPropertiesMissingSymbolsItems"
            }
          }
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Lnr615V01AppsOwnerNameAppNameDiagnosticsSymbolGroupsGetResponses200ContentApplicationJsonSchemaPropertiesGroupsItemsPropertiesMissingSymbolsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Lnr615V01AppsOwnerNameAppNameDiagnosticsSymbolGroupsGetResponses200ContentApplicationJsonSchemaPropertiesGroupsItemsPropertiesMissingSymbolsItems",
    modelProperties: {
      symbolId: {
        serializedName: "symbol_id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1ByvenaV01AppsOwnerNameAppNameDiagnosticsSymbolGroupsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1ByvenaV01AppsOwnerNameAppNameDiagnosticsSymbolGroupsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceList",
    modelProperties: {
      devices: {
        serializedName: "devices",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const DeviceSelection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceSelection",
    modelProperties: {
      shortId: {
        serializedName: "shortId",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestCloudErrorDetails4: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestCloudErrorDetails4",
    modelProperties: {
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Wime0YV01AppsOwnerNameAppNameDeviceConfigurationsGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Wime0YV01AppsOwnerNameAppNameDeviceConfigurationsGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      tier: {
        serializedName: "tier",
        type: {
          name: "Number"
        }
      },
      image: {
        serializedName: "image",
        type: {
          name: "Composite",
          className: "GetResponses200ContentApplicationJsonSchemaItemImage"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "Composite",
          className:
            "PathsUjn3BvV01AppsOwnerNameAppNameDeviceConfigurationsGetResponses200ContentApplicationJsonSchemaItemsPropertiesModel"
        }
      },
      os: {
        serializedName: "os",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "osName",
        type: {
          name: "String"
        }
      },
      marketShare: {
        serializedName: "marketShare",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const GetResponses200ContentApplicationJsonSchemaItemImage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetResponses200ContentApplicationJsonSchemaItemImage",
    modelProperties: {
      full: {
        serializedName: "full",
        type: {
          name: "String"
        }
      },
      thumb: {
        serializedName: "thumb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsUjn3BvV01AppsOwnerNameAppNameDeviceConfigurationsGetResponses200ContentApplicationJsonSchemaItemsPropertiesModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsUjn3BvV01AppsOwnerNameAppNameDeviceConfigurationsGetResponses200ContentApplicationJsonSchemaItemsPropertiesModel",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      manufacturer: {
        serializedName: "manufacturer",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      dimensions: {
        serializedName: "dimensions",
        type: {
          name: "Composite",
          className: "Get200ApplicationJsonItemsModelDimensions"
        }
      },
      resolution: {
        serializedName: "resolution",
        type: {
          name: "Composite",
          className: "Get200ApplicationJsonItemsModelResolution"
        }
      },
      releaseDate: {
        serializedName: "releaseDate",
        type: {
          name: "String"
        }
      },
      formFactor: {
        serializedName: "formFactor",
        type: {
          name: "String"
        }
      },
      screenSize: {
        serializedName: "screenSize",
        type: {
          name: "Composite",
          className: "Get200ApplicationJsonItemsModelScreenSize"
        }
      },
      cpu: {
        serializedName: "cpu",
        type: {
          name: "Composite",
          className: "Get200ApplicationJsonItemsModelCpu"
        }
      },
      memory: {
        serializedName: "memory",
        type: {
          name: "Composite",
          className: "Get200ApplicationJsonItemsModelMemory"
        }
      },
      screenRotation: {
        serializedName: "screenRotation",
        type: {
          name: "Number"
        }
      },
      deviceFrame: {
        serializedName: "deviceFrame",
        type: {
          name: "Composite",
          className: "Get200ApplicationJsonItemsModelDeviceFrame"
        }
      },
      availabilityCount: {
        serializedName: "availabilityCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Get200ApplicationJsonItemsModelDimensions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonItemsModelDimensions",
    modelProperties: {
      depth: {
        serializedName: "depth",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      height: {
        serializedName: "height",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      width: {
        serializedName: "width",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const Get200ApplicationJsonItemsModelResolution: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonItemsModelResolution",
    modelProperties: {
      height: {
        serializedName: "height",
        type: {
          name: "String"
        }
      },
      width: {
        serializedName: "width",
        type: {
          name: "String"
        }
      },
      ppi: {
        serializedName: "ppi",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Get200ApplicationJsonItemsModelScreenSize: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonItemsModelScreenSize",
    modelProperties: {
      cm: {
        serializedName: "cm",
        type: {
          name: "String"
        }
      },
      in: {
        serializedName: "in",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Get200ApplicationJsonItemsModelCpu: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonItemsModelCpu",
    modelProperties: {
      frequency: {
        serializedName: "frequency",
        type: {
          name: "String"
        }
      },
      core: {
        serializedName: "core",
        type: {
          name: "String"
        }
      },
      text: {
        serializedName: "text",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Get200ApplicationJsonItemsModelMemory: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonItemsModelMemory",
    modelProperties: {
      formattedSize: {
        serializedName: "formattedSize",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Get200ApplicationJsonItemsModelDeviceFrame: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonItemsModelDeviceFrame",
    modelProperties: {
      grid: {
        serializedName: "grid",
        type: {
          name: "Composite",
          className: "Get200ApplicationJsonItemsModelDeviceFrameGrid"
        }
      },
      full: {
        serializedName: "full",
        type: {
          name: "Composite",
          className: "Get200ApplicationJsonItemsModelDeviceFrameFull"
        }
      }
    }
  }
};

export const Get200ApplicationJsonItemsModelDeviceFrameGrid: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonItemsModelDeviceFrameGrid",
    modelProperties: {
      width: {
        serializedName: "width",
        type: {
          name: "Number"
        }
      },
      height: {
        serializedName: "height",
        type: {
          name: "Number"
        }
      },
      frameUrl: {
        serializedName: "frameUrl",
        type: {
          name: "String"
        }
      },
      screen: {
        serializedName: "screen",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      }
    }
  }
};

export const Get200ApplicationJsonItemsModelDeviceFrameFull: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonItemsModelDeviceFrameFull",
    modelProperties: {
      width: {
        serializedName: "width",
        type: {
          name: "Number"
        }
      },
      height: {
        serializedName: "height",
        type: {
          name: "Number"
        }
      },
      frameUrl: {
        serializedName: "frameUrl",
        type: {
          name: "String"
        }
      },
      screen: {
        serializedName: "screen",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      }
    }
  }
};

export const Paths1Kb13FjV01AppsOwnerNameAppNameDeploymentsDeploymentNameUploadsPostResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Kb13FjV01AppsOwnerNameAppNameDeploymentsDeploymentNameUploadsPostResponses200ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      uploadDomain: {
        serializedName: "upload_domain",
        required: true,
        type: {
          name: "String"
        }
      },
      token: {
        serializedName: "token",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsO9B77WV01AppsOwnerNameAppNameDeploymentsDeploymentNameUploadsPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsO9B77WV01AppsOwnerNameAppNameDeploymentsDeploymentNameUploadsPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1G1PzhgV01AppsOwnerNameAppNameDeploymentsDeploymentNameRollbackReleasePostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1G1PzhgV01AppsOwnerNameAppNameDeploymentsDeploymentNameRollbackReleasePostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsQ8034WV01AppsOwnerNameAppNameDeploymentsDeploymentNameRollbackReleasePostResponses201ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsQ8034WV01AppsOwnerNameAppNameDeploymentsDeploymentNameRollbackReleasePostResponses201ContentApplicationJsonSchemaAllof0",
    modelProperties: {
      targetBinaryRange: {
        serializedName: "target_binary_range",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      isDisabled: {
        serializedName: "is_disabled",
        type: {
          name: "Boolean"
        }
      },
      isMandatory: {
        serializedName: "is_mandatory",
        type: {
          name: "Boolean"
        }
      },
      rollout: {
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 1
        },
        serializedName: "rollout",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths50Kz7V01AppsOwnerNameAppNameDeploymentsDeploymentNameRollbackReleasePostResponses201ContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths50Kz7V01AppsOwnerNameAppNameDeploymentsDeploymentNameRollbackReleasePostResponses201ContentApplicationJsonSchemaAllof1",
    modelProperties: {
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      packageHash: {
        serializedName: "package_hash",
        type: {
          name: "String"
        }
      },
      blobUrl: {
        serializedName: "blob_url",
        type: {
          name: "String"
        }
      },
      diffPackageMap: {
        serializedName: "diff_package_map",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className:
                "Paths1NnmvfhV01AppsOwnerNameAppNameDeploymentsDeploymentNameRollbackReleasePostResponses201ContentApplicationJsonSchemaAllof1PropertiesDiffPackageMapAdditionalproperties"
            }
          }
        }
      },
      originalDeployment: {
        serializedName: "original_deployment",
        type: {
          name: "String"
        }
      },
      originalLabel: {
        serializedName: "original_label",
        type: {
          name: "String"
        }
      },
      releasedBy: {
        serializedName: "released_by",
        type: {
          name: "String"
        }
      },
      releaseMethod: {
        serializedName: "release_method",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      uploadTime: {
        serializedName: "upload_time",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths1NnmvfhV01AppsOwnerNameAppNameDeploymentsDeploymentNameRollbackReleasePostResponses201ContentApplicationJsonSchemaAllof1PropertiesDiffPackageMapAdditionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1NnmvfhV01AppsOwnerNameAppNameDeploymentsDeploymentNameRollbackReleasePostResponses201ContentApplicationJsonSchemaAllof1PropertiesDiffPackageMapAdditionalproperties",
    modelProperties: {
      size: {
        serializedName: "size",
        required: true,
        type: {
          name: "Number"
        }
      },
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsC97F7PV01AppsOwnerNameAppNameDeploymentsDeploymentNameRollbackReleasePostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsC97F7PV01AppsOwnerNameAppNameDeploymentsDeploymentNameRollbackReleasePostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsK12I6HV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesReleaseLabelPatchRequestbodyContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsK12I6HV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesReleaseLabelPatchRequestbodyContentApplicationJsonSchemaAllof0",
    modelProperties: {
      targetBinaryRange: {
        serializedName: "target_binary_range",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      isDisabled: {
        serializedName: "is_disabled",
        type: {
          name: "Boolean"
        }
      },
      isMandatory: {
        serializedName: "is_mandatory",
        type: {
          name: "Boolean"
        }
      },
      rollout: {
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 1
        },
        serializedName: "rollout",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths1Yea874V01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesReleaseLabelPatchResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Yea874V01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesReleaseLabelPatchResponses200ContentApplicationJsonSchemaAllof0",
    modelProperties: {
      targetBinaryRange: {
        serializedName: "target_binary_range",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      isDisabled: {
        serializedName: "is_disabled",
        type: {
          name: "Boolean"
        }
      },
      isMandatory: {
        serializedName: "is_mandatory",
        type: {
          name: "Boolean"
        }
      },
      rollout: {
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 1
        },
        serializedName: "rollout",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PathsYibmhkV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesReleaseLabelPatchResponses200ContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsYibmhkV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesReleaseLabelPatchResponses200ContentApplicationJsonSchemaAllof1",
    modelProperties: {
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      packageHash: {
        serializedName: "package_hash",
        type: {
          name: "String"
        }
      },
      blobUrl: {
        serializedName: "blob_url",
        type: {
          name: "String"
        }
      },
      diffPackageMap: {
        serializedName: "diff_package_map",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className:
                "Paths6E7NbiV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesReleaseLabelPatchResponses200ContentApplicationJsonSchemaAllof1PropertiesDiffPackageMapAdditionalproperties"
            }
          }
        }
      },
      originalDeployment: {
        serializedName: "original_deployment",
        type: {
          name: "String"
        }
      },
      originalLabel: {
        serializedName: "original_label",
        type: {
          name: "String"
        }
      },
      releasedBy: {
        serializedName: "released_by",
        type: {
          name: "String"
        }
      },
      releaseMethod: {
        serializedName: "release_method",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      uploadTime: {
        serializedName: "upload_time",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths6E7NbiV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesReleaseLabelPatchResponses200ContentApplicationJsonSchemaAllof1PropertiesDiffPackageMapAdditionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths6E7NbiV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesReleaseLabelPatchResponses200ContentApplicationJsonSchemaAllof1PropertiesDiffPackageMapAdditionalproperties",
    modelProperties: {
      size: {
        serializedName: "size",
        required: true,
        type: {
          name: "Number"
        }
      },
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsIsso8KV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesReleaseLabelPatchResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsIsso8KV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesReleaseLabelPatchResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths2Uoo4MV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesDeleteResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths2Uoo4MV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesDeleteResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1FevdlzV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesGetResponses200ContentApplicationJsonSchemaItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1FevdlzV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesGetResponses200ContentApplicationJsonSchemaItemsAllof0",
    modelProperties: {
      targetBinaryRange: {
        serializedName: "target_binary_range",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      isDisabled: {
        serializedName: "is_disabled",
        type: {
          name: "Boolean"
        }
      },
      isMandatory: {
        serializedName: "is_mandatory",
        type: {
          name: "Boolean"
        }
      },
      rollout: {
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 1
        },
        serializedName: "rollout",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PathsLr93OtV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesGetResponses200ContentApplicationJsonSchemaItemsAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsLr93OtV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesGetResponses200ContentApplicationJsonSchemaItemsAllof1",
    modelProperties: {
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      packageHash: {
        serializedName: "package_hash",
        type: {
          name: "String"
        }
      },
      blobUrl: {
        serializedName: "blob_url",
        type: {
          name: "String"
        }
      },
      diffPackageMap: {
        serializedName: "diff_package_map",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className:
                "PathsIgx569V01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesDiffPackageMapAdditionalproperties"
            }
          }
        }
      },
      originalDeployment: {
        serializedName: "original_deployment",
        type: {
          name: "String"
        }
      },
      originalLabel: {
        serializedName: "original_label",
        type: {
          name: "String"
        }
      },
      releasedBy: {
        serializedName: "released_by",
        type: {
          name: "String"
        }
      },
      releaseMethod: {
        serializedName: "release_method",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      uploadTime: {
        serializedName: "upload_time",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PathsIgx569V01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesDiffPackageMapAdditionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsIgx569V01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesDiffPackageMapAdditionalproperties",
    modelProperties: {
      size: {
        serializedName: "size",
        required: true,
        type: {
          name: "Number"
        }
      },
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsSxykieV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsSxykieV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Q5DgwjV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Q5DgwjV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      releaseUpload: {
        serializedName: "release_upload",
        type: {
          name: "Composite",
          className: "PostContentSchemaReleaseUpload"
        }
      },
      targetBinaryVersion: {
        serializedName: "target_binary_version",
        required: true,
        type: {
          name: "String"
        }
      },
      deploymentName: {
        serializedName: "deployment_name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      disabled: {
        serializedName: "disabled",
        type: {
          name: "Boolean"
        }
      },
      mandatory: {
        serializedName: "mandatory",
        type: {
          name: "Boolean"
        }
      },
      noDuplicateReleaseError: {
        serializedName: "no_duplicate_release_error",
        type: {
          name: "Boolean"
        }
      },
      rollout: {
        serializedName: "rollout",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PostContentSchemaReleaseUpload: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PostContentSchemaReleaseUpload",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      uploadDomain: {
        serializedName: "upload_domain",
        required: true,
        type: {
          name: "String"
        }
      },
      token: {
        serializedName: "token",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Vd5IukV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesPostResponses201ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Vd5IukV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesPostResponses201ContentApplicationJsonSchemaAllof0",
    modelProperties: {
      targetBinaryRange: {
        serializedName: "target_binary_range",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      isDisabled: {
        serializedName: "is_disabled",
        type: {
          name: "Boolean"
        }
      },
      isMandatory: {
        serializedName: "is_mandatory",
        type: {
          name: "Boolean"
        }
      },
      rollout: {
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 1
        },
        serializedName: "rollout",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths17WmuvlV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesPostResponses201ContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths17WmuvlV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesPostResponses201ContentApplicationJsonSchemaAllof1",
    modelProperties: {
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      packageHash: {
        serializedName: "package_hash",
        type: {
          name: "String"
        }
      },
      blobUrl: {
        serializedName: "blob_url",
        type: {
          name: "String"
        }
      },
      diffPackageMap: {
        serializedName: "diff_package_map",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className:
                "PathsPamihwV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesPostResponses201ContentApplicationJsonSchemaAllof1PropertiesDiffPackageMapAdditionalproperties"
            }
          }
        }
      },
      originalDeployment: {
        serializedName: "original_deployment",
        type: {
          name: "String"
        }
      },
      originalLabel: {
        serializedName: "original_label",
        type: {
          name: "String"
        }
      },
      releasedBy: {
        serializedName: "released_by",
        type: {
          name: "String"
        }
      },
      releaseMethod: {
        serializedName: "release_method",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      uploadTime: {
        serializedName: "upload_time",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PathsPamihwV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesPostResponses201ContentApplicationJsonSchemaAllof1PropertiesDiffPackageMapAdditionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsPamihwV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesPostResponses201ContentApplicationJsonSchemaAllof1PropertiesDiffPackageMapAdditionalproperties",
    modelProperties: {
      size: {
        serializedName: "size",
        required: true,
        type: {
          name: "Number"
        }
      },
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsWqgstxV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsWqgstxV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths622D52V01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostRequestbodyContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths622D52V01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostRequestbodyContentApplicationJsonSchemaAllof0",
    modelProperties: {
      targetBinaryRange: {
        serializedName: "target_binary_range",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      isDisabled: {
        serializedName: "is_disabled",
        type: {
          name: "Boolean"
        }
      },
      isMandatory: {
        serializedName: "is_mandatory",
        type: {
          name: "Boolean"
        }
      },
      rollout: {
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 1
        },
        serializedName: "rollout",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths17F39DpV01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostRequestbodyContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths17F39DpV01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostRequestbodyContentApplicationJsonSchemaAllof1",
    modelProperties: {
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Ublt1UV01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Ublt1UV01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostResponses200ContentApplicationJsonSchemaAllof0",
    modelProperties: {
      targetBinaryRange: {
        serializedName: "target_binary_range",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      isDisabled: {
        serializedName: "is_disabled",
        type: {
          name: "Boolean"
        }
      },
      isMandatory: {
        serializedName: "is_mandatory",
        type: {
          name: "Boolean"
        }
      },
      rollout: {
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 1
        },
        serializedName: "rollout",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths17Kc85CV01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostResponses200ContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths17Kc85CV01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostResponses200ContentApplicationJsonSchemaAllof1",
    modelProperties: {
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      packageHash: {
        serializedName: "package_hash",
        type: {
          name: "String"
        }
      },
      blobUrl: {
        serializedName: "blob_url",
        type: {
          name: "String"
        }
      },
      diffPackageMap: {
        serializedName: "diff_package_map",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className:
                "Paths1WklejaV01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostResponses200ContentApplicationJsonSchemaAllof1PropertiesDiffPackageMapAdditionalproperties"
            }
          }
        }
      },
      originalDeployment: {
        serializedName: "original_deployment",
        type: {
          name: "String"
        }
      },
      originalLabel: {
        serializedName: "original_label",
        type: {
          name: "String"
        }
      },
      releasedBy: {
        serializedName: "released_by",
        type: {
          name: "String"
        }
      },
      releaseMethod: {
        serializedName: "release_method",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      uploadTime: {
        serializedName: "upload_time",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths1WklejaV01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostResponses200ContentApplicationJsonSchemaAllof1PropertiesDiffPackageMapAdditionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1WklejaV01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostResponses200ContentApplicationJsonSchemaAllof1PropertiesDiffPackageMapAdditionalproperties",
    modelProperties: {
      size: {
        serializedName: "size",
        required: true,
        type: {
          name: "Number"
        }
      },
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Qz2Z0EV01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Qz2Z0EV01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Fpy0IjV01AppsOwnerNameAppNameDeploymentsDeploymentNameMetricsGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Fpy0IjV01AppsOwnerNameAppNameDeploymentsDeploymentNameMetricsGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      label: {
        serializedName: "label",
        required: true,
        type: {
          name: "String"
        }
      },
      active: {
        serializedName: "active",
        required: true,
        type: {
          name: "Number"
        }
      },
      downloaded: {
        serializedName: "downloaded",
        type: {
          name: "Number"
        }
      },
      failed: {
        serializedName: "failed",
        type: {
          name: "Number"
        }
      },
      installed: {
        serializedName: "installed",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths1U65Jj1V01AppsOwnerNameAppNameDeploymentsDeploymentNameMetricsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1U65Jj1V01AppsOwnerNameAppNameDeploymentsDeploymentNameMetricsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths3Tai91V01AppsOwnerNameAppNameDeploymentsDeploymentNameDeleteResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths3Tai91V01AppsOwnerNameAppNameDeploymentsDeploymentNameDeleteResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsP17HdtV01AppsOwnerNameAppNameDeploymentsDeploymentNameGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsP17HdtV01AppsOwnerNameAppNameDeploymentsDeploymentNameGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      key: {
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      latestRelease: {
        serializedName: "latest_release",
        type: {
          name: "Composite",
          className:
            "PathsI5Bj4DV01AppsOwnerNameAppNameDeploymentsDeploymentNameGetResponses200ContentApplicationJsonSchemaPropertiesLatestRelease"
        }
      }
    }
  }
};

export const PathsCr0BufV01AppsOwnerNameAppNameDeploymentsDeploymentNameGetResponses200ContentApplicationJsonSchemaPropertiesLatestReleaseAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsCr0BufV01AppsOwnerNameAppNameDeploymentsDeploymentNameGetResponses200ContentApplicationJsonSchemaPropertiesLatestReleaseAllof0",
    modelProperties: {
      targetBinaryRange: {
        serializedName: "target_binary_range",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      isDisabled: {
        serializedName: "is_disabled",
        type: {
          name: "Boolean"
        }
      },
      isMandatory: {
        serializedName: "is_mandatory",
        type: {
          name: "Boolean"
        }
      },
      rollout: {
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 1
        },
        serializedName: "rollout",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PathsGw9MspV01AppsOwnerNameAppNameDeploymentsDeploymentNameGetResponses200ContentApplicationJsonSchemaPropertiesLatestReleaseAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsGw9MspV01AppsOwnerNameAppNameDeploymentsDeploymentNameGetResponses200ContentApplicationJsonSchemaPropertiesLatestReleaseAllof1",
    modelProperties: {
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      packageHash: {
        serializedName: "package_hash",
        type: {
          name: "String"
        }
      },
      blobUrl: {
        serializedName: "blob_url",
        type: {
          name: "String"
        }
      },
      diffPackageMap: {
        serializedName: "diff_package_map",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className:
                "Paths1Oui7HeV01AppsOwnerNameAppNameDeploymentsDeploymentNameGetResponses200ContentApplicationJsonSchemaPropertiesLatestReleaseAllof1PropertiesDiffPackageMapAdditionalproperties"
            }
          }
        }
      },
      originalDeployment: {
        serializedName: "original_deployment",
        type: {
          name: "String"
        }
      },
      originalLabel: {
        serializedName: "original_label",
        type: {
          name: "String"
        }
      },
      releasedBy: {
        serializedName: "released_by",
        type: {
          name: "String"
        }
      },
      releaseMethod: {
        serializedName: "release_method",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      uploadTime: {
        serializedName: "upload_time",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths1Oui7HeV01AppsOwnerNameAppNameDeploymentsDeploymentNameGetResponses200ContentApplicationJsonSchemaPropertiesLatestReleaseAllof1PropertiesDiffPackageMapAdditionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Oui7HeV01AppsOwnerNameAppNameDeploymentsDeploymentNameGetResponses200ContentApplicationJsonSchemaPropertiesLatestReleaseAllof1PropertiesDiffPackageMapAdditionalproperties",
    modelProperties: {
      size: {
        serializedName: "size",
        required: true,
        type: {
          name: "Number"
        }
      },
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths2Je1MzV01AppsOwnerNameAppNameDeploymentsDeploymentNameGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths2Je1MzV01AppsOwnerNameAppNameDeploymentsDeploymentNameGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsUaqn8EV01AppsOwnerNameAppNameDeploymentsDeploymentNamePatchRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsUaqn8EV01AppsOwnerNameAppNameDeploymentsDeploymentNamePatchRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      name: {
        constraints: {
          MaxLength: 1000,
          MinLength: 1
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1O9H9InV01AppsOwnerNameAppNameDeploymentsDeploymentNamePatchResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1O9H9InV01AppsOwnerNameAppNameDeploymentsDeploymentNamePatchResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Hq3VntV01AppsOwnerNameAppNameDeploymentsGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Hq3VntV01AppsOwnerNameAppNameDeploymentsGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      key: {
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      latestRelease: {
        serializedName: "latest_release",
        type: {
          name: "Composite",
          className:
            "GetResponses200ContentApplicationJsonSchemaItemLatestRelease"
        }
      }
    }
  }
};

export const Paths1Bf3DjfV01AppsOwnerNameAppNameDeploymentsGetResponses200ContentApplicationJsonSchemaItemsPropertiesLatestReleaseAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Bf3DjfV01AppsOwnerNameAppNameDeploymentsGetResponses200ContentApplicationJsonSchemaItemsPropertiesLatestReleaseAllof0",
    modelProperties: {
      targetBinaryRange: {
        serializedName: "target_binary_range",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      isDisabled: {
        serializedName: "is_disabled",
        type: {
          name: "Boolean"
        }
      },
      isMandatory: {
        serializedName: "is_mandatory",
        type: {
          name: "Boolean"
        }
      },
      rollout: {
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 1
        },
        serializedName: "rollout",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PathsNsdjsyV01AppsOwnerNameAppNameDeploymentsGetResponses200ContentApplicationJsonSchemaItemsPropertiesLatestReleaseAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsNsdjsyV01AppsOwnerNameAppNameDeploymentsGetResponses200ContentApplicationJsonSchemaItemsPropertiesLatestReleaseAllof1",
    modelProperties: {
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      packageHash: {
        serializedName: "package_hash",
        type: {
          name: "String"
        }
      },
      blobUrl: {
        serializedName: "blob_url",
        type: {
          name: "String"
        }
      },
      diffPackageMap: {
        serializedName: "diff_package_map",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className:
                "PathsV0EczrV01AppsOwnerNameAppNameDeploymentsGetResponses200ContentApplicationJsonSchemaItemsPropertiesLatestReleaseAllof1PropertiesDiffPackageMapAdditionalproperties"
            }
          }
        }
      },
      originalDeployment: {
        serializedName: "original_deployment",
        type: {
          name: "String"
        }
      },
      originalLabel: {
        serializedName: "original_label",
        type: {
          name: "String"
        }
      },
      releasedBy: {
        serializedName: "released_by",
        type: {
          name: "String"
        }
      },
      releaseMethod: {
        serializedName: "release_method",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      uploadTime: {
        serializedName: "upload_time",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PathsV0EczrV01AppsOwnerNameAppNameDeploymentsGetResponses200ContentApplicationJsonSchemaItemsPropertiesLatestReleaseAllof1PropertiesDiffPackageMapAdditionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsV0EczrV01AppsOwnerNameAppNameDeploymentsGetResponses200ContentApplicationJsonSchemaItemsPropertiesLatestReleaseAllof1PropertiesDiffPackageMapAdditionalproperties",
    modelProperties: {
      size: {
        serializedName: "size",
        required: true,
        type: {
          name: "Number"
        }
      },
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsBg34XwV01AppsOwnerNameAppNameDeploymentsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsBg34XwV01AppsOwnerNameAppNameDeploymentsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Fgvm7MV01AppsOwnerNameAppNameDeploymentsPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Fgvm7MV01AppsOwnerNameAppNameDeploymentsPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      key: {
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      latestRelease: {
        serializedName: "latest_release",
        type: {
          name: "Composite",
          className: "PostContentSchemaLatestRelease"
        }
      }
    }
  }
};

export const PathsZehv0UV01AppsOwnerNameAppNameDeploymentsPostRequestbodyContentApplicationJsonSchemaPropertiesLatestReleaseAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsZehv0UV01AppsOwnerNameAppNameDeploymentsPostRequestbodyContentApplicationJsonSchemaPropertiesLatestReleaseAllof0",
    modelProperties: {
      targetBinaryRange: {
        serializedName: "target_binary_range",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      isDisabled: {
        serializedName: "is_disabled",
        type: {
          name: "Boolean"
        }
      },
      isMandatory: {
        serializedName: "is_mandatory",
        type: {
          name: "Boolean"
        }
      },
      rollout: {
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 1
        },
        serializedName: "rollout",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths9Kw16BV01AppsOwnerNameAppNameDeploymentsPostRequestbodyContentApplicationJsonSchemaPropertiesLatestReleaseAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths9Kw16BV01AppsOwnerNameAppNameDeploymentsPostRequestbodyContentApplicationJsonSchemaPropertiesLatestReleaseAllof1",
    modelProperties: {
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      packageHash: {
        serializedName: "package_hash",
        type: {
          name: "String"
        }
      },
      blobUrl: {
        serializedName: "blob_url",
        type: {
          name: "String"
        }
      },
      diffPackageMap: {
        serializedName: "diff_package_map",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className:
                "Paths4JsvjwV01AppsOwnerNameAppNameDeploymentsPostRequestbodyContentApplicationJsonSchemaPropertiesLatestReleaseAllof1PropertiesDiffPackageMapAdditionalproperties"
            }
          }
        }
      },
      originalDeployment: {
        serializedName: "original_deployment",
        type: {
          name: "String"
        }
      },
      originalLabel: {
        serializedName: "original_label",
        type: {
          name: "String"
        }
      },
      releasedBy: {
        serializedName: "released_by",
        type: {
          name: "String"
        }
      },
      releaseMethod: {
        serializedName: "release_method",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      uploadTime: {
        serializedName: "upload_time",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths4JsvjwV01AppsOwnerNameAppNameDeploymentsPostRequestbodyContentApplicationJsonSchemaPropertiesLatestReleaseAllof1PropertiesDiffPackageMapAdditionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths4JsvjwV01AppsOwnerNameAppNameDeploymentsPostRequestbodyContentApplicationJsonSchemaPropertiesLatestReleaseAllof1PropertiesDiffPackageMapAdditionalproperties",
    modelProperties: {
      size: {
        serializedName: "size",
        required: true,
        type: {
          name: "Number"
        }
      },
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsPwjhi2V01AppsOwnerNameAppNameDeploymentsPostResponses201ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsPwjhi2V01AppsOwnerNameAppNameDeploymentsPostResponses201ContentApplicationJsonSchema",
    modelProperties: {
      key: {
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      latestRelease: {
        serializedName: "latest_release",
        type: {
          name: "Composite",
          className:
            "PathsKc6I0MV01AppsOwnerNameAppNameDeploymentsPostResponses201ContentApplicationJsonSchemaPropertiesLatestRelease"
        }
      }
    }
  }
};

export const Paths1Kdzg16V01AppsOwnerNameAppNameDeploymentsPostResponses201ContentApplicationJsonSchemaPropertiesLatestReleaseAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Kdzg16V01AppsOwnerNameAppNameDeploymentsPostResponses201ContentApplicationJsonSchemaPropertiesLatestReleaseAllof0",
    modelProperties: {
      targetBinaryRange: {
        serializedName: "target_binary_range",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      isDisabled: {
        serializedName: "is_disabled",
        type: {
          name: "Boolean"
        }
      },
      isMandatory: {
        serializedName: "is_mandatory",
        type: {
          name: "Boolean"
        }
      },
      rollout: {
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 1
        },
        serializedName: "rollout",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PathsX1HeibV01AppsOwnerNameAppNameDeploymentsPostResponses201ContentApplicationJsonSchemaPropertiesLatestReleaseAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsX1HeibV01AppsOwnerNameAppNameDeploymentsPostResponses201ContentApplicationJsonSchemaPropertiesLatestReleaseAllof1",
    modelProperties: {
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      packageHash: {
        serializedName: "package_hash",
        type: {
          name: "String"
        }
      },
      blobUrl: {
        serializedName: "blob_url",
        type: {
          name: "String"
        }
      },
      diffPackageMap: {
        serializedName: "diff_package_map",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className:
                "Paths172Mtp9V01AppsOwnerNameAppNameDeploymentsPostResponses201ContentApplicationJsonSchemaPropertiesLatestReleaseAllof1PropertiesDiffPackageMapAdditionalproperties"
            }
          }
        }
      },
      originalDeployment: {
        serializedName: "original_deployment",
        type: {
          name: "String"
        }
      },
      originalLabel: {
        serializedName: "original_label",
        type: {
          name: "String"
        }
      },
      releasedBy: {
        serializedName: "released_by",
        type: {
          name: "String"
        }
      },
      releaseMethod: {
        serializedName: "release_method",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      uploadTime: {
        serializedName: "upload_time",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths172Mtp9V01AppsOwnerNameAppNameDeploymentsPostResponses201ContentApplicationJsonSchemaPropertiesLatestReleaseAllof1PropertiesDiffPackageMapAdditionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths172Mtp9V01AppsOwnerNameAppNameDeploymentsPostResponses201ContentApplicationJsonSchemaPropertiesLatestReleaseAllof1PropertiesDiffPackageMapAdditionalproperties",
    modelProperties: {
      size: {
        serializedName: "size",
        required: true,
        type: {
          name: "Number"
        }
      },
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsIui0NlV01AppsOwnerNameAppNameDeploymentsPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsIui0NlV01AppsOwnerNameAppNameDeploymentsPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Eig5LtV01AppsOwnerNameAppNameDataResourceProvisioningGetResponses404ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Eig5LtV01AppsOwnerNameAppNameDataResourceProvisioningGetResponses404ContentApplicationJsonSchema",
    modelProperties: {
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsWumnz0V01AppsOwnerNameAppNameDataResourceProvisioningGetResponses500ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsWumnz0V01AppsOwnerNameAppNameDataResourceProvisioningGetResponses500ContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1F64HaaV01AppsOwnerNameAppNameDataResourceProvisioningGetResponses500ContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1F64HaaV01AppsOwnerNameAppNameDataResourceProvisioningGetResponses500ContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1F64HaaV01AppsOwnerNameAppNameDataResourceProvisioningGetResponses500ContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsA5R1LbV01AppsOwnerNameAppNameDataResourceProvisioningPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsA5R1LbV01AppsOwnerNameAppNameDataResourceProvisioningPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      databaseConnectionString: {
        serializedName: "databaseConnectionString",
        type: {
          name: "String"
        }
      },
      resourceRegion: {
        serializedName: "resourceRegion",
        type: {
          name: "String"
        }
      },
      database: {
        serializedName: "database",
        type: {
          name: "String"
        }
      },
      collection: {
        serializedName: "collection",
        type: {
          name: "String"
        }
      },
      requestUnits: {
        constraints: {
          InclusiveMaximum: 2147483647,
          InclusiveMinimum: 400
        },
        serializedName: "requestUnits",
        type: {
          name: "Number"
        }
      },
      accountName: {
        serializedName: "accountName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsAv3L5YV01AppsOwnerNameAppNameDataResourceProvisioningPostResponses202ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsAv3L5YV01AppsOwnerNameAppNameDataResourceProvisioningPostResponses202ContentApplicationJsonSchema",
    modelProperties: {
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsHml8V01AppsOwnerNameAppNameDataResourceProvisioningPostResponses400ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsHml8V01AppsOwnerNameAppNameDataResourceProvisioningPostResponses400ContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsQ18UgnV01AppsOwnerNameAppNameDataResourceProvisioningPostResponses400ContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsQ18UgnV01AppsOwnerNameAppNameDataResourceProvisioningPostResponses400ContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsQ18UgnV01AppsOwnerNameAppNameDataResourceProvisioningPostResponses400ContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths2Bmy5KV01AppsOwnerNameAppNameDataResourceProvisioningPostResponses500ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths2Bmy5KV01AppsOwnerNameAppNameDataResourceProvisioningPostResponses500ContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsRdoofkV01AppsOwnerNameAppNameDataResourceProvisioningPostResponses500ContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsRdoofkV01AppsOwnerNameAppNameDataResourceProvisioningPostResponses500ContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsRdoofkV01AppsOwnerNameAppNameDataResourceProvisioningPostResponses500ContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths154Xl4EV01AppsOwnerNameAppNameDataOverviewGetResponses500ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths154Xl4EV01AppsOwnerNameAppNameDataOverviewGetResponses500ContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsJistswV01AppsOwnerNameAppNameDataOverviewGetResponses500ContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsJistswV01AppsOwnerNameAppNameDataOverviewGetResponses500ContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsJistswV01AppsOwnerNameAppNameDataOverviewGetResponses500ContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsA8ApyzV01AppsOwnerNameAppNameCrashesInfoGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsA8ApyzV01AppsOwnerNameAppNameCrashesInfoGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      hasCrashes: {
        serializedName: "has_crashes",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      features: {
        serializedName: "features",
        type: {
          name: "Composite",
          className:
            "PathsLalu30V01AppsOwnerNameAppNameCrashesInfoGetResponses200ContentApplicationJsonSchemaPropertiesFeatures"
        }
      }
    }
  }
};

export const PathsLalu30V01AppsOwnerNameAppNameCrashesInfoGetResponses200ContentApplicationJsonSchemaPropertiesFeatures: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsLalu30V01AppsOwnerNameAppNameCrashesInfoGetResponses200ContentApplicationJsonSchemaPropertiesFeatures",
    modelProperties: {
      crashgroupModifyStatus: {
        serializedName: "crashgroup_modify_status",
        type: {
          name: "Boolean"
        }
      },
      crashgroupModifyAnnotation: {
        serializedName: "crashgroup_modify_annotation",
        type: {
          name: "Boolean"
        }
      },
      search: {
        serializedName: "search",
        type: {
          name: "Boolean"
        }
      },
      crashgroupAnalyticsCrashfreeusers: {
        serializedName: "crashgroup_analytics_crashfreeusers",
        type: {
          name: "Boolean"
        }
      },
      crashgroupAnalyticsImpactedusers: {
        serializedName: "crashgroup_analytics_impactedusers",
        type: {
          name: "Boolean"
        }
      },
      crashDownloadRaw: {
        serializedName: "crash_download_raw",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PathsBhrh3SV01AppsOwnerNameAppNameCrashesInfoGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsBhrh3SV01AppsOwnerNameAppNameCrashesInfoGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Ut4QauV01AppsOwnerNameAppNameCrashesCrashIdSessionLogsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Ut4QauV01AppsOwnerNameAppNameCrashesCrashIdSessionLogsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      exceededMaxLimit: {
        serializedName: "exceeded_max_limit",
        type: {
          name: "Boolean"
        }
      },
      lastReceivedLogTimestamp: {
        serializedName: "last_received_log_timestamp",
        type: {
          name: "DateTime"
        }
      },
      logs: {
        serializedName: "logs",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths8Hju1CV01AppsOwnerNameAppNameCrashesCrashIdSessionLogsGetResponses200ContentApplicationJsonSchemaPropertiesLogsItems"
            }
          }
        }
      }
    }
  }
};

export const Paths8Hju1CV01AppsOwnerNameAppNameCrashesCrashIdSessionLogsGetResponses200ContentApplicationJsonSchemaPropertiesLogsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths8Hju1CV01AppsOwnerNameAppNameCrashesCrashIdSessionLogsGetResponses200ContentApplicationJsonSchemaPropertiesLogsItems",
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      sessionId: {
        serializedName: "session_id",
        type: {
          name: "Uuid"
        }
      },
      eventId: {
        serializedName: "event_id",
        type: {
          name: "String"
        }
      },
      eventName: {
        serializedName: "event_name",
        type: {
          name: "String"
        }
      },
      messageId: {
        serializedName: "message_id",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className:
            "PathsE5YdvpV01AppsOwnerNameAppNameCrashesCrashIdSessionLogsGetResponses200ContentApplicationJsonSchemaPropertiesLogsItemsPropertiesDevice"
        }
      },
      authProvider: {
        serializedName: "auth_provider",
        type: {
          name: "String"
        }
      },
      accountId: {
        serializedName: "account_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsE5YdvpV01AppsOwnerNameAppNameCrashesCrashIdSessionLogsGetResponses200ContentApplicationJsonSchemaPropertiesLogsItemsPropertiesDevice: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsE5YdvpV01AppsOwnerNameAppNameCrashesCrashIdSessionLogsGetResponses200ContentApplicationJsonSchemaPropertiesLogsItemsPropertiesDevice",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsRtgrgxV01AppsOwnerNameAppNameCrashesCrashIdSessionLogsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsRtgrgxV01AppsOwnerNameAppNameCrashesCrashIdSessionLogsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1OlcaagV01AppsOwnerNameAppNameCrashesCrashIdSessionLogsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1OlcaagV01AppsOwnerNameAppNameCrashesCrashIdSessionLogsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1OlcaagV01AppsOwnerNameAppNameCrashesCrashIdSessionLogsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths2Myey8V01AppsOwnerNameAppNameCrashesCrashIdAttachmentsAttachmentIdTextGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths2Myey8V01AppsOwnerNameAppNameCrashesCrashIdAttachmentsAttachmentIdTextGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1520RtwV01AppsOwnerNameAppNameCrashesCrashIdAttachmentsAttachmentIdLocationGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1520RtwV01AppsOwnerNameAppNameCrashesCrashIdAttachmentsAttachmentIdLocationGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      uri: {
        serializedName: "uri",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsM7AdswV01AppsOwnerNameAppNameCrashesCrashIdAttachmentsAttachmentIdLocationGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsM7AdswV01AppsOwnerNameAppNameCrashesCrashIdAttachmentsAttachmentIdLocationGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Yzy65LV01AppsOwnerNameAppNameCrashesCrashIdAttachmentsGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Yzy65LV01AppsOwnerNameAppNameCrashesCrashIdAttachmentsGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      appId: {
        serializedName: "app_id",
        required: true,
        type: {
          name: "String"
        }
      },
      attachmentId: {
        serializedName: "attachment_id",
        required: true,
        type: {
          name: "String"
        }
      },
      crashId: {
        serializedName: "crash_id",
        required: true,
        type: {
          name: "String"
        }
      },
      blobLocation: {
        serializedName: "blob_location",
        required: true,
        type: {
          name: "String"
        }
      },
      contentType: {
        serializedName: "content_type",
        required: true,
        type: {
          name: "String"
        }
      },
      fileName: {
        serializedName: "file_name",
        required: true,
        type: {
          name: "String"
        }
      },
      createdTime: {
        serializedName: "created_time",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      size: {
        serializedName: "size",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths1Kphy82V01AppsOwnerNameAppNameCrashesCrashIdAttachmentsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Kphy82V01AppsOwnerNameAppNameCrashesCrashIdAttachmentsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Stacktrace: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Stacktrace",
    modelProperties: {
      title: {
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      threads: {
        serializedName: "threads",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Thread"
            }
          }
        }
      },
      exception: {
        serializedName: "exception",
        type: {
          name: "Composite",
          className: "Exception"
        }
      }
    }
  }
};

export const Thread: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Thread",
    modelProperties: {
      title: {
        serializedName: "title",
        required: true,
        type: {
          name: "String"
        }
      },
      frames: {
        serializedName: "frames",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ThreadFramesItem"
            }
          }
        }
      },
      exception: {
        serializedName: "exception",
        type: {
          name: "Composite",
          className: "Exception"
        }
      },
      relevant: {
        serializedName: "relevant",
        type: {
          name: "Boolean"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      crashed: {
        serializedName: "crashed",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ThreadFramesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ThreadFramesItem",
    modelProperties: {
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      className: {
        serializedName: "class_name",
        type: {
          name: "String"
        }
      },
      method: {
        serializedName: "method",
        type: {
          name: "String"
        }
      },
      classMethod: {
        serializedName: "class_method",
        type: {
          name: "Boolean"
        }
      },
      file: {
        serializedName: "file",
        type: {
          name: "String"
        }
      },
      line: {
        serializedName: "line",
        type: {
          name: "Number"
        }
      },
      appCode: {
        serializedName: "app_code",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      frameworkName: {
        serializedName: "framework_name",
        type: {
          name: "String"
        }
      },
      codeRaw: {
        serializedName: "code_raw",
        required: true,
        type: {
          name: "String"
        }
      },
      codeFormatted: {
        serializedName: "code_formatted",
        required: true,
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      relevant: {
        serializedName: "relevant",
        type: {
          name: "Boolean"
        }
      },
      methodParams: {
        serializedName: "method_params",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Exception: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Exception",
    modelProperties: {
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      frames: {
        serializedName: "frames",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ExceptionFramesItem"
            }
          }
        }
      },
      relevant: {
        serializedName: "relevant",
        type: {
          name: "Boolean"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExceptionFramesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExceptionFramesItem",
    modelProperties: {
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      className: {
        serializedName: "class_name",
        type: {
          name: "String"
        }
      },
      method: {
        serializedName: "method",
        type: {
          name: "String"
        }
      },
      classMethod: {
        serializedName: "class_method",
        type: {
          name: "Boolean"
        }
      },
      file: {
        serializedName: "file",
        type: {
          name: "String"
        }
      },
      line: {
        serializedName: "line",
        type: {
          name: "Number"
        }
      },
      appCode: {
        serializedName: "app_code",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      frameworkName: {
        serializedName: "framework_name",
        type: {
          name: "String"
        }
      },
      codeRaw: {
        serializedName: "code_raw",
        required: true,
        type: {
          name: "String"
        }
      },
      codeFormatted: {
        serializedName: "code_formatted",
        required: true,
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      relevant: {
        serializedName: "relevant",
        type: {
          name: "Boolean"
        }
      },
      methodParams: {
        serializedName: "method_params",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths11Adk1LV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdStacktraceGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths11Adk1LV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdStacktraceGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Ow10Y0V01AppsOwnerNameAppNameCrashGroupsCrashGroupIdCrashesCrashIdStacktraceGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Ow10Y0V01AppsOwnerNameAppNameCrashGroupsCrashGroupIdCrashesCrashIdStacktraceGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths5WkrbzV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdCrashesCrashIdRawLocationGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths5WkrbzV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdCrashesCrashIdRawLocationGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      uri: {
        serializedName: "uri",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Ft0W9TV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdCrashesCrashIdRawLocationGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Ft0W9TV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdCrashesCrashIdRawLocationGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Oul3BhV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdCrashesCrashIdNativeDownloadGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Oul3BhV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdCrashesCrashIdNativeDownloadGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsFd64KmV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdCrashesCrashIdNativeGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsFd64KmV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdCrashesCrashIdNativeGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Crash: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Crash",
    modelProperties: {
      details: {
        serializedName: "details",
        type: {
          name: "Composite",
          className: "CrashDetails"
        }
      },
      newCrashGroupId: {
        serializedName: "new_crash_group_id",
        required: true,
        type: {
          name: "String"
        }
      },
      crashId: {
        serializedName: "crash_id",
        required: true,
        type: {
          name: "String"
        }
      },
      newCrashId: {
        serializedName: "new_crash_id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayId: {
        serializedName: "display_id",
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "String"
        }
      },
      build: {
        serializedName: "build",
        required: true,
        type: {
          name: "String"
        }
      },
      device: {
        serializedName: "device",
        required: true,
        type: {
          name: "String"
        }
      },
      deviceName: {
        serializedName: "device_name",
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osType: {
        serializedName: "os_type",
        type: {
          name: "String"
        }
      },
      stacktrace: {
        serializedName: "stacktrace",
        type: {
          name: "Composite",
          className: "Stacktrace"
        }
      },
      userName: {
        serializedName: "user_name",
        required: true,
        type: {
          name: "String"
        }
      },
      userEmail: {
        serializedName: "user_email",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CrashDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashDetails",
    modelProperties: {
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      rooted: {
        serializedName: "rooted",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        required: true,
        type: {
          name: "String"
        }
      },
      appStartTimestamp: {
        serializedName: "app_start_timestamp",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Paths13Dx2ZcV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdCrashesCrashIdGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths13Dx2ZcV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdCrashesCrashIdGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths10HkftV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdCrashesCrashIdDeleteResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths10HkftV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdCrashesCrashIdDeleteResponses200ContentApplicationJsonSchema",
    modelProperties: {
      appId: {
        serializedName: "app_id",
        type: {
          name: "String"
        }
      },
      crashGroupId: {
        serializedName: "crash_group_id",
        type: {
          name: "String"
        }
      },
      crashId: {
        serializedName: "crash_id",
        type: {
          name: "String"
        }
      },
      crashesDeleted: {
        serializedName: "crashes_deleted",
        type: {
          name: "Number"
        }
      },
      attachmentsDeleted: {
        serializedName: "attachments_deleted",
        type: {
          name: "Number"
        }
      },
      blobsSucceeded: {
        serializedName: "blobs_succeeded",
        type: {
          name: "Number"
        }
      },
      blobsFailed: {
        serializedName: "blobs_failed",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PathsL75Q9YV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdCrashesCrashIdDeleteResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsL75Q9YV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdCrashesCrashIdDeleteResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1U57JmnV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdCrashesGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1U57JmnV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdCrashesGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsHnvr1EV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsHnvr1EV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      crashGroupId: {
        serializedName: "crash_group_id",
        required: true,
        type: {
          name: "String"
        }
      },
      newCrashGroupId: {
        serializedName: "new_crash_group_id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayId: {
        serializedName: "display_id",
        required: true,
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      build: {
        serializedName: "build",
        required: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        required: true,
        type: {
          name: "Number"
        }
      },
      impactedUsers: {
        serializedName: "impacted_users",
        type: {
          name: "Number"
        }
      },
      firstOccurrence: {
        serializedName: "first_occurrence",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      lastOccurrence: {
        serializedName: "last_occurrence",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      exception: {
        serializedName: "exception",
        type: {
          name: "String"
        }
      },
      crashReason: {
        serializedName: "crash_reason",
        required: true,
        type: {
          name: "String"
        }
      },
      reasonFrame: {
        serializedName: "reason_frame",
        type: {
          name: "Composite",
          className:
            "PathsWe5X42V01AppsOwnerNameAppNameCrashGroupsCrashGroupIdGetResponses200ContentApplicationJsonSchemaPropertiesReasonFrame"
        }
      },
      fatal: {
        serializedName: "fatal",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      annotation: {
        serializedName: "annotation",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsWe5X42V01AppsOwnerNameAppNameCrashGroupsCrashGroupIdGetResponses200ContentApplicationJsonSchemaPropertiesReasonFrame: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsWe5X42V01AppsOwnerNameAppNameCrashGroupsCrashGroupIdGetResponses200ContentApplicationJsonSchemaPropertiesReasonFrame",
    modelProperties: {
      className: {
        serializedName: "class_name",
        type: {
          name: "String"
        }
      },
      method: {
        serializedName: "method",
        type: {
          name: "String"
        }
      },
      classMethod: {
        serializedName: "class_method",
        type: {
          name: "Boolean"
        }
      },
      file: {
        serializedName: "file",
        type: {
          name: "String"
        }
      },
      line: {
        serializedName: "line",
        type: {
          name: "Number"
        }
      },
      appCode: {
        serializedName: "app_code",
        type: {
          name: "Boolean"
        }
      },
      frameworkName: {
        serializedName: "framework_name",
        type: {
          name: "String"
        }
      },
      codeFormatted: {
        serializedName: "code_formatted",
        type: {
          name: "String"
        }
      },
      codeRaw: {
        serializedName: "code_raw",
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      methodParams: {
        serializedName: "method_params",
        type: {
          name: "String"
        }
      },
      exceptionType: {
        serializedName: "exception_type",
        type: {
          name: "String"
        }
      },
      osExceptionType: {
        serializedName: "os_exception_type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsNzisgxV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsNzisgxV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsT60UxpV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdPatchRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsT60UxpV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdPatchRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      annotation: {
        serializedName: "annotation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths6Qmpl3V01AppsOwnerNameAppNameCrashGroupsCrashGroupIdPatchResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths6Qmpl3V01AppsOwnerNameAppNameCrashGroupsCrashGroupIdPatchResponses200ContentApplicationJsonSchema",
    modelProperties: {
      crashGroupId: {
        serializedName: "crash_group_id",
        required: true,
        type: {
          name: "String"
        }
      },
      newCrashGroupId: {
        serializedName: "new_crash_group_id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayId: {
        serializedName: "display_id",
        required: true,
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      build: {
        serializedName: "build",
        required: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        required: true,
        type: {
          name: "Number"
        }
      },
      impactedUsers: {
        serializedName: "impacted_users",
        type: {
          name: "Number"
        }
      },
      firstOccurrence: {
        serializedName: "first_occurrence",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      lastOccurrence: {
        serializedName: "last_occurrence",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      exception: {
        serializedName: "exception",
        type: {
          name: "String"
        }
      },
      crashReason: {
        serializedName: "crash_reason",
        required: true,
        type: {
          name: "String"
        }
      },
      reasonFrame: {
        serializedName: "reason_frame",
        type: {
          name: "Composite",
          className:
            "Paths1BqpefcV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdPatchResponses200ContentApplicationJsonSchemaPropertiesReasonFrame"
        }
      },
      fatal: {
        serializedName: "fatal",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      annotation: {
        serializedName: "annotation",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1BqpefcV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdPatchResponses200ContentApplicationJsonSchemaPropertiesReasonFrame: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1BqpefcV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdPatchResponses200ContentApplicationJsonSchemaPropertiesReasonFrame",
    modelProperties: {
      className: {
        serializedName: "class_name",
        type: {
          name: "String"
        }
      },
      method: {
        serializedName: "method",
        type: {
          name: "String"
        }
      },
      classMethod: {
        serializedName: "class_method",
        type: {
          name: "Boolean"
        }
      },
      file: {
        serializedName: "file",
        type: {
          name: "String"
        }
      },
      line: {
        serializedName: "line",
        type: {
          name: "Number"
        }
      },
      appCode: {
        serializedName: "app_code",
        type: {
          name: "Boolean"
        }
      },
      frameworkName: {
        serializedName: "framework_name",
        type: {
          name: "String"
        }
      },
      codeFormatted: {
        serializedName: "code_formatted",
        type: {
          name: "String"
        }
      },
      codeRaw: {
        serializedName: "code_raw",
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      methodParams: {
        serializedName: "method_params",
        type: {
          name: "String"
        }
      },
      exceptionType: {
        serializedName: "exception_type",
        type: {
          name: "String"
        }
      },
      osExceptionType: {
        serializedName: "os_exception_type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1D54ZerV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdPatchResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1D54ZerV01AppsOwnerNameAppNameCrashGroupsCrashGroupIdPatchResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsScc799V01AppsOwnerNameAppNameCrashGroupsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsScc799V01AppsOwnerNameAppNameCrashGroupsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      limitedResultSet: {
        serializedName: "limited_result_set",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      continuationToken: {
        serializedName: "continuation_token",
        type: {
          name: "String"
        }
      },
      crashGroups: {
        serializedName: "crash_groups",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths15OwjybV01AppsOwnerNameAppNameCrashGroupsGetResponses200ContentApplicationJsonSchemaPropertiesCrashGroupsItems"
            }
          }
        }
      }
    }
  }
};

export const Paths15OwjybV01AppsOwnerNameAppNameCrashGroupsGetResponses200ContentApplicationJsonSchemaPropertiesCrashGroupsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths15OwjybV01AppsOwnerNameAppNameCrashGroupsGetResponses200ContentApplicationJsonSchemaPropertiesCrashGroupsItems",
    modelProperties: {
      crashGroupId: {
        serializedName: "crash_group_id",
        required: true,
        type: {
          name: "String"
        }
      },
      newCrashGroupId: {
        serializedName: "new_crash_group_id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayId: {
        serializedName: "display_id",
        required: true,
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      build: {
        serializedName: "build",
        required: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        required: true,
        type: {
          name: "Number"
        }
      },
      impactedUsers: {
        serializedName: "impacted_users",
        type: {
          name: "Number"
        }
      },
      firstOccurrence: {
        serializedName: "first_occurrence",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      lastOccurrence: {
        serializedName: "last_occurrence",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      exception: {
        serializedName: "exception",
        type: {
          name: "String"
        }
      },
      crashReason: {
        serializedName: "crash_reason",
        required: true,
        type: {
          name: "String"
        }
      },
      reasonFrame: {
        serializedName: "reason_frame",
        type: {
          name: "Composite",
          className:
            "GetResponses200ContentApplicationJsonSchemaCrashGroupsItemReasonFrame"
        }
      },
      fatal: {
        serializedName: "fatal",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      annotation: {
        serializedName: "annotation",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GetResponses200ContentApplicationJsonSchemaCrashGroupsItemReasonFrame: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "GetResponses200ContentApplicationJsonSchemaCrashGroupsItemReasonFrame",
    modelProperties: {
      className: {
        serializedName: "class_name",
        type: {
          name: "String"
        }
      },
      method: {
        serializedName: "method",
        type: {
          name: "String"
        }
      },
      classMethod: {
        serializedName: "class_method",
        type: {
          name: "Boolean"
        }
      },
      file: {
        serializedName: "file",
        type: {
          name: "String"
        }
      },
      line: {
        serializedName: "line",
        type: {
          name: "Number"
        }
      },
      appCode: {
        serializedName: "app_code",
        type: {
          name: "Boolean"
        }
      },
      frameworkName: {
        serializedName: "framework_name",
        type: {
          name: "String"
        }
      },
      codeFormatted: {
        serializedName: "code_formatted",
        type: {
          name: "String"
        }
      },
      codeRaw: {
        serializedName: "code_raw",
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      methodParams: {
        serializedName: "method_params",
        type: {
          name: "String"
        }
      },
      exceptionType: {
        serializedName: "exception_type",
        type: {
          name: "String"
        }
      },
      osExceptionType: {
        serializedName: "os_exception_type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsFkuj51V01AppsOwnerNameAppNameCrashGroupsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsFkuj51V01AppsOwnerNameAppNameCrashGroupsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsCg3UfaV01AppsOwnerNameAppNameCommitsBatchGetResponses200ContentApplicationJsonSchemaItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsCg3UfaV01AppsOwnerNameAppNameCommitsBatchGetResponses200ContentApplicationJsonSchemaItemsAllof0",
    modelProperties: {
      sha: {
        serializedName: "sha",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths9M4LhgV01AppsOwnerNameAppNameCommitsBatchGetResponses200ContentApplicationJsonSchemaItemsAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths9M4LhgV01AppsOwnerNameAppNameCommitsBatchGetResponses200ContentApplicationJsonSchemaItemsAllof1",
    modelProperties: {
      commit: {
        serializedName: "commit",
        type: {
          name: "Composite",
          className: "Get200ApplicationJsonItems1Commit"
        }
      }
    }
  }
};

export const Get200ApplicationJsonItems1Commit: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonItems1Commit",
    modelProperties: {
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      author: {
        serializedName: "author",
        type: {
          name: "Composite",
          className: "Get200ApplicationJsonItems1CommitAuthor"
        }
      }
    }
  }
};

export const Get200ApplicationJsonItems1CommitAuthor: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonItems1CommitAuthor",
    modelProperties: {
      date: {
        serializedName: "date",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1A4WxwuV01AppsOwnerNameAppNameBuildsBuildIdLogsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1A4WxwuV01AppsOwnerNameAppNameBuildsBuildIdLogsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PathsQ75XzuV01AppsOwnerNameAppNameBuildsBuildIdDownloadsDownloadTypeGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsQ75XzuV01AppsOwnerNameAppNameBuildsBuildIdDownloadsDownloadTypeGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      uri: {
        serializedName: "uri",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1P28L53V01AppsOwnerNameAppNameBuildsBuildIdDistributePostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1P28L53V01AppsOwnerNameAppNameBuildsBuildIdDistributePostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      destinations: {
        serializedName: "destinations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PostContentSchemaDestinationsItem"
            }
          }
        }
      },
      releaseNotes: {
        serializedName: "releaseNotes",
        type: {
          name: "String"
        }
      },
      mandatoryUpdate: {
        serializedName: "mandatoryUpdate",
        type: {
          name: "Boolean"
        }
      },
      notifyTesters: {
        defaultValue: true,
        serializedName: "notifyTesters",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PostContentSchemaDestinationsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PostContentSchemaDestinationsItem",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1D42Nj4V01AppsOwnerNameAppNameBuildsBuildIdDistributePostResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1D42Nj4V01AppsOwnerNameAppNameBuildsBuildIdDistributePostResponses200ContentApplicationJsonSchema",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      uploadId: {
        serializedName: "upload_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsN3VrpV01AppsOwnerNameAppNameBuildsBuildIdGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsN3VrpV01AppsOwnerNameAppNameBuildsBuildIdGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        constraints: {
          ExclusiveMinimum: 0
        },
        serializedName: "id",
        required: true,
        type: {
          name: "Number"
        }
      },
      buildNumber: {
        serializedName: "buildNumber",
        required: true,
        type: {
          name: "String"
        }
      },
      queueTime: {
        serializedName: "queueTime",
        required: true,
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      finishTime: {
        serializedName: "finishTime",
        type: {
          name: "String"
        }
      },
      lastChangedDate: {
        serializedName: "lastChangedDate",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      result: {
        serializedName: "result",
        required: true,
        type: {
          name: "String"
        }
      },
      sourceBranch: {
        serializedName: "sourceBranch",
        required: true,
        type: {
          name: "String"
        }
      },
      sourceVersion: {
        serializedName: "sourceVersion",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsFcn32WV01AppsOwnerNameAppNameBuildsBuildIdPatchRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsFcn32WV01AppsOwnerNameAppNameBuildsBuildIdPatchRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      status: {
        defaultValue: "cancelling",
        isConstant: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Kppxb1V01AppsOwnerNameAppNameBuildsBuildIdPatchResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Kppxb1V01AppsOwnerNameAppNameBuildsBuildIdPatchResponses200ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        constraints: {
          ExclusiveMinimum: 0
        },
        serializedName: "id",
        required: true,
        type: {
          name: "Number"
        }
      },
      buildNumber: {
        serializedName: "buildNumber",
        required: true,
        type: {
          name: "String"
        }
      },
      queueTime: {
        serializedName: "queueTime",
        required: true,
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      finishTime: {
        serializedName: "finishTime",
        type: {
          name: "String"
        }
      },
      lastChangedDate: {
        serializedName: "lastChangedDate",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      result: {
        serializedName: "result",
        required: true,
        type: {
          name: "String"
        }
      },
      sourceBranch: {
        serializedName: "sourceBranch",
        required: true,
        type: {
          name: "String"
        }
      },
      sourceVersion: {
        serializedName: "sourceVersion",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsPo7UnwV01AppsOwnerNameAppNameBuildServiceStatusGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsPo7UnwV01AppsOwnerNameAppNameBuildServiceStatusGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      service: {
        serializedName: "service",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      validUntil: {
        serializedName: "valid_until",
        type: {
          name: "Number"
        }
      },
      os: {
        serializedName: "os",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1G7Ul4DV01AppsOwnerNameAppNameBugtrackerCrashgroupCrashGroupIdGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1G7Ul4DV01AppsOwnerNameAppNameBugtrackerCrashgroupCrashGroupIdGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      title: {
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      bugTrackerType: {
        serializedName: "bug_tracker_type",
        type: {
          name: "String"
        }
      },
      repoName: {
        serializedName: "repo_name",
        type: {
          name: "String"
        }
      },
      mobileCenterId: {
        serializedName: "mobile_center_id",
        type: {
          name: "String"
        }
      },
      eventType: {
        serializedName: "event_type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Xg1Y27V01AppsOwnerNameAppNameBugtrackerCrashgroupCrashGroupIdGetResponsesDefaultContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Xg1Y27V01AppsOwnerNameAppNameBugtrackerCrashgroupCrashGroupIdGetResponsesDefaultContentApplicationJsonSchemaAllof0",
    modelProperties: {
      requestId: {
        serializedName: "request_id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsNmpisgV01AppsOwnerNameAppNameBugtrackerCrashgroupCrashGroupIdGetResponsesDefaultContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsNmpisgV01AppsOwnerNameAppNameBugtrackerCrashgroupCrashGroupIdGetResponsesDefaultContentApplicationJsonSchemaAllof1",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths7O6EcbV01AppsOwnerNameAppNameBugtrackerGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths7O6EcbV01AppsOwnerNameAppNameBugtrackerGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      tokenId: {
        serializedName: "token_id",
        type: {
          name: "String"
        }
      },
      eventTypes: {
        serializedName: "event_types",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      settings: {
        serializedName: "settings",
        type: {
          name: "Composite",
          className:
            "Paths11Cmak4V01AppsOwnerNameAppNameBugtrackerGetResponses200ContentApplicationJsonSchemaPropertiesSettings"
        }
      }
    }
  }
};

export const Paths11Cmak4V01AppsOwnerNameAppNameBugtrackerGetResponses200ContentApplicationJsonSchemaPropertiesSettings: coreClient.CompositeMapper = {
  serializedName:
    "Paths11Cmak4V01AppsOwnerNameAppNameBugtrackerGetResponses200ContentApplicationJsonSchemaPropertiesSettings",
  type: {
    name: "Composite",
    className:
      "Paths11Cmak4V01AppsOwnerNameAppNameBugtrackerGetResponses200ContentApplicationJsonSchemaPropertiesSettings",
    uberParent:
      "Paths11Cmak4V01AppsOwnerNameAppNameBugtrackerGetResponses200ContentApplicationJsonSchemaPropertiesSettings",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      callbackUrl: {
        serializedName: "callback_url",
        type: {
          name: "String"
        }
      },
      ownerName: {
        serializedName: "owner_name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Ar0SvjV01AppsOwnerNameAppNameBugtrackerGetResponsesDefaultContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Ar0SvjV01AppsOwnerNameAppNameBugtrackerGetResponsesDefaultContentApplicationJsonSchemaAllof0",
    modelProperties: {
      requestId: {
        serializedName: "request_id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1KnyufoV01AppsOwnerNameAppNameBugtrackerGetResponsesDefaultContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1KnyufoV01AppsOwnerNameAppNameBugtrackerGetResponsesDefaultContentApplicationJsonSchemaAllof1",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths17D5VcoV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths17D5VcoV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      commit: {
        serializedName: "commit",
        type: {
          name: "String"
        }
      },
      xcode: {
        serializedName: "xcode",
        type: {
          name: "Composite",
          className:
            "Paths119Wvx9V01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesXcode"
        }
      },
      javascript: {
        serializedName: "javascript",
        type: {
          name: "Composite",
          className:
            "Paths1X2Qhy4V01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesJavascript"
        }
      },
      xamarin: {
        serializedName: "xamarin",
        type: {
          name: "Composite",
          className:
            "PathsAvakg2V01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesXamarin"
        }
      },
      android: {
        serializedName: "android",
        type: {
          name: "Composite",
          className:
            "PathsVin8AnV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesAndroid"
        }
      },
      buildscripts: {
        serializedName: "buildscripts",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className:
                "Paths1Thhra4V01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesBuildscriptsAdditionalproperties"
            }
          }
        }
      },
      uwp: {
        serializedName: "uwp",
        type: {
          name: "Composite",
          className:
            "Paths188BnixV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesUwp"
        }
      },
      testcloud: {
        serializedName: "testcloud",
        type: {
          name: "Composite",
          className:
            "Paths19Aa0DdV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesTestcloud"
        }
      }
    }
  }
};

export const Paths119Wvx9V01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesXcode: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths119Wvx9V01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesXcode",
    modelProperties: {
      xcodeSchemeContainers: {
        serializedName: "xcodeSchemeContainers",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsYyvi3WV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesXcodePropertiesXcodeschemecontainersItems"
            }
          }
        }
      }
    }
  }
};

export const PathsYyvi3WV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesXcodePropertiesXcodeschemecontainersItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsYyvi3WV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesXcodePropertiesXcodeschemecontainersItems",
    modelProperties: {
      path: {
        serializedName: "path",
        required: true,
        type: {
          name: "String"
        }
      },
      sharedSchemes: {
        serializedName: "sharedSchemes",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Get200ApplicationJsonPropertiesItemsSharedSchemesItem"
            }
          }
        }
      },
      podfilePath: {
        serializedName: "podfilePath",
        type: {
          name: "String"
        }
      },
      cartfilePath: {
        serializedName: "cartfilePath",
        type: {
          name: "String"
        }
      },
      xcodeProjectSha: {
        serializedName: "xcodeProjectSha",
        type: {
          name: "String"
        }
      },
      workspaceProjectPaths: {
        serializedName: "workspaceProjectPaths",
        type: {
          name: "String"
        }
      },
      appExtensionTargets: {
        serializedName: "appExtensionTargets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Get200ApplicationJsonPropertiesItemsAppExtensionTargetsItem"
            }
          }
        }
      }
    }
  }
};

export const Get200ApplicationJsonPropertiesItemsSharedSchemesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonPropertiesItemsSharedSchemesItem",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      hasTestAction: {
        serializedName: "hasTestAction",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      archiveConfiguration: {
        serializedName: "archiveConfiguration",
        type: {
          name: "String"
        }
      },
      archiveProject: {
        serializedName: "archiveProject",
        type: {
          name: "Composite",
          className:
            "GetResponses200ContentApplicationJsonSchemaXcodeSchemeContainersItemSharedSchemesItemArchiveProject"
        }
      }
    }
  }
};

export const GetResponses200ContentApplicationJsonSchemaXcodeSchemeContainersItemSharedSchemesItemArchiveProject: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "GetResponses200ContentApplicationJsonSchemaXcodeSchemeContainersItemSharedSchemesItemArchiveProject",
    modelProperties: {
      archiveTargetId: {
        serializedName: "archiveTargetId",
        required: true,
        type: {
          name: "String"
        }
      },
      projectName: {
        serializedName: "projectName",
        required: true,
        type: {
          name: "String"
        }
      },
      projectPath: {
        serializedName: "projectPath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Get200ApplicationJsonPropertiesItemsAppExtensionTargetsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonPropertiesItemsAppExtensionTargetsItem",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      targetBundleIdentifier: {
        serializedName: "targetBundleIdentifier",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1X2Qhy4V01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesJavascript: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1X2Qhy4V01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesJavascript",
    modelProperties: {
      packageJsonPaths: {
        serializedName: "packageJsonPaths",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      javascriptSolutions: {
        serializedName: "javascriptSolutions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths423GnmV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesJavascriptPropertiesJavascriptsolutionsItems"
            }
          }
        }
      }
    }
  }
};

export const Paths423GnmV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesJavascriptPropertiesJavascriptsolutionsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths423GnmV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesJavascriptPropertiesJavascriptsolutionsItems",
    modelProperties: {
      packageJsonPath: {
        serializedName: "packageJsonPath",
        required: true,
        type: {
          name: "String"
        }
      },
      reactNativeVersion: {
        serializedName: "reactNativeVersion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsAvakg2V01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesXamarin: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsAvakg2V01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesXamarin",
    modelProperties: {
      xamarinSolutions: {
        serializedName: "xamarinSolutions",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths4AwywcV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesXamarinPropertiesXamarinsolutionsItems"
            }
          }
        }
      }
    }
  }
};

export const Paths4AwywcV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesXamarinPropertiesXamarinsolutionsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths4AwywcV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesXamarinPropertiesXamarinsolutionsItems",
    modelProperties: {
      path: {
        serializedName: "path",
        required: true,
        type: {
          name: "String"
        }
      },
      configurations: {
        serializedName: "configurations",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      defaultConfiguration: {
        serializedName: "defaultConfiguration",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsVin8AnV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesAndroid: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsVin8AnV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesAndroid",
    modelProperties: {
      androidModules: {
        serializedName: "androidModules",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths1Khgc94V01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesAndroidPropertiesAndroidmodulesItems"
            }
          }
        }
      },
      gradleWrapperPath: {
        serializedName: "gradleWrapperPath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Khgc94V01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesAndroidPropertiesAndroidmodulesItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Khgc94V01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesAndroidPropertiesAndroidmodulesItems",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      hasBundle: {
        serializedName: "hasBundle",
        type: {
          name: "Boolean"
        }
      },
      productFlavors: {
        serializedName: "productFlavors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      buildVariants: {
        serializedName: "buildVariants",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      buildTypes: {
        serializedName: "buildTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      buildConfigurations: {
        serializedName: "buildConfigurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Get200ApplicationJsonPropertiesItemsBuildConfigurationsItem"
            }
          }
        }
      },
      isRoot: {
        serializedName: "isRoot",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Get200ApplicationJsonPropertiesItemsBuildConfigurationsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonPropertiesItemsBuildConfigurationsItem",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      signingConfig: {
        serializedName: "signingConfig",
        type: {
          name: "Composite",
          className:
            "GetResponses200ContentApplicationJsonSchemaAndroidModulesItemBuildConfigurationsItemSigningConfig"
        }
      }
    }
  }
};

export const GetResponses200ContentApplicationJsonSchemaAndroidModulesItemBuildConfigurationsItemSigningConfig: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "GetResponses200ContentApplicationJsonSchemaAndroidModulesItemBuildConfigurationsItemSigningConfig",
    modelProperties: {
      hasStoreFile: {
        serializedName: "hasStoreFile",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths1Thhra4V01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesBuildscriptsAdditionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Thhra4V01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesBuildscriptsAdditionalproperties",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      path: {
        serializedName: "path",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths188BnixV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesUwp: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths188BnixV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesUwp",
    modelProperties: {
      uwpSolutions: {
        serializedName: "uwpSolutions",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsSe6X6AV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesUwpPropertiesUwpsolutionsItems"
            }
          }
        }
      }
    }
  }
};

export const PathsSe6X6AV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesUwpPropertiesUwpsolutionsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsSe6X6AV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesUwpPropertiesUwpsolutionsItems",
    modelProperties: {
      path: {
        serializedName: "path",
        required: true,
        type: {
          name: "String"
        }
      },
      configurations: {
        serializedName: "configurations",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Paths19Aa0DdV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesTestcloud: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths19Aa0DdV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesTestcloud",
    modelProperties: {
      projects: {
        serializedName: "projects",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths157OrpgV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesTestcloudPropertiesProjectsItems"
            }
          }
        }
      }
    }
  }
};

export const Paths157OrpgV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesTestcloudPropertiesProjectsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths157OrpgV01AppsOwnerNameAppNameBranchesBranchToolsetProjectsGetResponses200ContentApplicationJsonSchemaPropertiesTestcloudPropertiesProjectsItems",
    modelProperties: {
      path: {
        serializedName: "path",
        required: true,
        type: {
          name: "String"
        }
      },
      frameworkType: {
        serializedName: "frameworkType",
        required: true,
        type: {
          name: "String"
        }
      },
      frameworkProperties: {
        serializedName: "frameworkProperties",
        type: {
          name: "Composite",
          className:
            "GetResponses200ContentApplicationJsonSchemaTestcloudProjectsItemFrameworkProperties"
        }
      }
    }
  }
};

export const GetResponses200ContentApplicationJsonSchemaTestcloudProjectsItemFrameworkProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "GetResponses200ContentApplicationJsonSchemaTestcloudProjectsItemFrameworkProperties",
    modelProperties: {
      configurations: {
        serializedName: "configurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PathsVbr4Q2V01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0Additionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsVbr4Q2V01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0Additionalproperties",
    modelProperties: {
      branch: {
        serializedName: "branch",
        type: {
          name: "Composite",
          className: "Get200ApplicationJsonAllOfAdditionalPropertiesBranch"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Get200ApplicationJsonAllOfAdditionalPropertiesBranch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonAllOfAdditionalPropertiesBranch",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      commit: {
        serializedName: "commit",
        type: {
          name: "Composite",
          className:
            "Get200ApplicationJsonAllOfAdditionalPropertiesBranchCommit"
        }
      }
    }
  }
};

export const Get200ApplicationJsonAllOfAdditionalPropertiesBranchCommit: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonAllOfAdditionalPropertiesBranchCommit",
    modelProperties: {
      sha: {
        serializedName: "sha",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths13VettcV01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths13VettcV01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      trigger: {
        serializedName: "trigger",
        type: {
          name: "String"
        }
      },
      testsEnabled: {
        serializedName: "testsEnabled",
        type: {
          name: "Boolean"
        }
      },
      badgeIsEnabled: {
        serializedName: "badgeIsEnabled",
        type: {
          name: "Boolean"
        }
      },
      signed: {
        serializedName: "signed",
        type: {
          name: "Boolean"
        }
      },
      cloneFromBranch: {
        serializedName: "cloneFromBranch",
        type: {
          name: "String"
        }
      },
      toolsets: {
        serializedName: "toolsets",
        type: {
          name: "Composite",
          className:
            "Paths5Dl8MmV01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsets"
        }
      },
      artifactVersioning: {
        serializedName: "artifactVersioning",
        type: {
          name: "Composite",
          className:
            "Paths14Lbq1V01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0PropertiesArtifactversioning"
        }
      }
    }
  }
};

export const Paths5Dl8MmV01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsets: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths5Dl8MmV01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsets",
    modelProperties: {
      xcode: {
        serializedName: "xcode",
        type: {
          name: "Composite",
          className:
            "Paths5K2CezV01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesXcode"
        }
      },
      javascript: {
        serializedName: "javascript",
        type: {
          name: "Composite",
          className:
            "Paths5FsbooV01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesJavascript"
        }
      },
      xamarin: {
        serializedName: "xamarin",
        type: {
          name: "Composite",
          className:
            "Paths1Lf9SbhV01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesXamarin"
        }
      },
      android: {
        serializedName: "android",
        type: {
          name: "Composite",
          className:
            "Paths10Dr1V01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesAndroid"
        }
      }
    }
  }
};

export const Paths5K2CezV01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesXcode: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths5K2CezV01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesXcode",
    modelProperties: {
      projectOrWorkspacePath: {
        serializedName: "projectOrWorkspacePath",
        type: {
          name: "String"
        }
      },
      podfilePath: {
        serializedName: "podfilePath",
        type: {
          name: "String"
        }
      },
      cartfilePath: {
        serializedName: "cartfilePath",
        type: {
          name: "String"
        }
      },
      provisioningProfileEncoded: {
        serializedName: "provisioningProfileEncoded",
        type: {
          name: "String"
        }
      },
      certificateEncoded: {
        serializedName: "certificateEncoded",
        type: {
          name: "String"
        }
      },
      provisioningProfileFileId: {
        serializedName: "provisioningProfileFileId",
        type: {
          name: "String"
        }
      },
      certificateFileId: {
        serializedName: "certificateFileId",
        type: {
          name: "String"
        }
      },
      provisioningProfileUploadId: {
        serializedName: "provisioningProfileUploadId",
        type: {
          name: "String"
        }
      },
      appExtensionProvisioningProfileFiles: {
        serializedName: "appExtensionProvisioningProfileFiles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Get200ApplicationJsonAllOfPropertiesPropertiesPropertiesItemsItem"
            }
          }
        }
      },
      certificateUploadId: {
        serializedName: "certificateUploadId",
        type: {
          name: "String"
        }
      },
      certificatePassword: {
        serializedName: "certificatePassword",
        type: {
          name: "String"
        }
      },
      scheme: {
        serializedName: "scheme",
        type: {
          name: "String"
        }
      },
      xcodeVersion: {
        serializedName: "xcodeVersion",
        type: {
          name: "String"
        }
      },
      provisioningProfileFilename: {
        serializedName: "provisioningProfileFilename",
        type: {
          name: "String"
        }
      },
      certificateFilename: {
        serializedName: "certificateFilename",
        type: {
          name: "String"
        }
      },
      teamId: {
        serializedName: "teamId",
        type: {
          name: "String"
        }
      },
      automaticSigning: {
        serializedName: "automaticSigning",
        type: {
          name: "Boolean"
        }
      },
      xcodeProjectSha: {
        serializedName: "xcodeProjectSha",
        type: {
          name: "String"
        }
      },
      archiveConfiguration: {
        serializedName: "archiveConfiguration",
        type: {
          name: "String"
        }
      },
      targetToArchive: {
        serializedName: "targetToArchive",
        type: {
          name: "String"
        }
      },
      forceLegacyBuildSystem: {
        serializedName: "forceLegacyBuildSystem",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Get200ApplicationJsonAllOfPropertiesPropertiesPropertiesItemsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Get200ApplicationJsonAllOfPropertiesPropertiesPropertiesItemsItem",
    modelProperties: {
      fileName: {
        serializedName: "fileName",
        type: {
          name: "String"
        }
      },
      fileId: {
        serializedName: "fileId",
        type: {
          name: "String"
        }
      },
      uploadId: {
        serializedName: "uploadId",
        type: {
          name: "String"
        }
      },
      targetBundleIdentifier: {
        serializedName: "targetBundleIdentifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths5FsbooV01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesJavascript: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths5FsbooV01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesJavascript",
    modelProperties: {
      packageJsonPath: {
        serializedName: "packageJsonPath",
        type: {
          name: "String"
        }
      },
      runTests: {
        serializedName: "runTests",
        type: {
          name: "Boolean"
        }
      },
      reactNativeVersion: {
        serializedName: "reactNativeVersion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Lf9SbhV01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesXamarin: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Lf9SbhV01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesXamarin",
    modelProperties: {
      slnPath: {
        serializedName: "slnPath",
        type: {
          name: "String"
        }
      },
      isSimBuild: {
        serializedName: "isSimBuild",
        type: {
          name: "Boolean"
        }
      },
      args: {
        serializedName: "args",
        type: {
          name: "String"
        }
      },
      configuration: {
        serializedName: "configuration",
        type: {
          name: "String"
        }
      },
      p12File: {
        serializedName: "p12File",
        type: {
          name: "String"
        }
      },
      p12Pwd: {
        serializedName: "p12Pwd",
        type: {
          name: "String"
        }
      },
      provProfile: {
        serializedName: "provProfile",
        type: {
          name: "String"
        }
      },
      monoVersion: {
        serializedName: "monoVersion",
        type: {
          name: "String"
        }
      },
      sdkBundle: {
        serializedName: "sdkBundle",
        type: {
          name: "String"
        }
      },
      symlink: {
        serializedName: "symlink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths10Dr1V01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesAndroid: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths10Dr1V01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesAndroid",
    modelProperties: {
      gradleWrapperPath: {
        serializedName: "gradleWrapperPath",
        type: {
          name: "String"
        }
      },
      module: {
        serializedName: "module",
        type: {
          name: "String"
        }
      },
      buildVariant: {
        serializedName: "buildVariant",
        type: {
          name: "String"
        }
      },
      runTests: {
        defaultValue: true,
        serializedName: "runTests",
        type: {
          name: "Boolean"
        }
      },
      runLint: {
        serializedName: "runLint",
        type: {
          name: "Boolean"
        }
      },
      isRoot: {
        serializedName: "isRoot",
        type: {
          name: "Boolean"
        }
      },
      automaticSigning: {
        serializedName: "automaticSigning",
        type: {
          name: "Boolean"
        }
      },
      keystorePassword: {
        serializedName: "keystorePassword",
        type: {
          name: "String"
        }
      },
      keyAlias: {
        serializedName: "keyAlias",
        type: {
          name: "String"
        }
      },
      keyPassword: {
        serializedName: "keyPassword",
        type: {
          name: "String"
        }
      },
      keystoreFilename: {
        serializedName: "keystoreFilename",
        type: {
          name: "String"
        }
      },
      keystoreEncoded: {
        serializedName: "keystoreEncoded",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths14Lbq1V01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0PropertiesArtifactversioning: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths14Lbq1V01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0PropertiesArtifactversioning",
    modelProperties: {
      buildNumberFormat: {
        serializedName: "buildNumberFormat",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths4Y3LpwV01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths4Y3LpwV01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof1",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths1Pv0ByrV01AppsOwnerNameAppNameBranchesBranchConfigGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Pv0ByrV01AppsOwnerNameAppNameBranchesBranchConfigGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsRm1L2KV01AppsOwnerNameAppNameBranchesBranchConfigPostRequestbodyContentApplicationJsonSchemaAdditionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsRm1L2KV01AppsOwnerNameAppNameBranchesBranchConfigPostRequestbodyContentApplicationJsonSchemaAdditionalproperties",
    modelProperties: {
      branch: {
        serializedName: "branch",
        type: {
          name: "Composite",
          className: "PostContentSchemaProperties"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PostContentSchemaProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PostContentSchemaProperties",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      commit: {
        serializedName: "commit",
        type: {
          name: "Composite",
          className:
            "Paths1B8N66RV01AppsOwnerNameAppNameBranchesBranchConfigPostRequestbodyContentApplicationJsonSchemaAdditionalpropertiesPropertiesBranchPropertiesCommit"
        }
      }
    }
  }
};

export const Paths1B8N66RV01AppsOwnerNameAppNameBranchesBranchConfigPostRequestbodyContentApplicationJsonSchemaAdditionalpropertiesPropertiesBranchPropertiesCommit: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1B8N66RV01AppsOwnerNameAppNameBranchesBranchConfigPostRequestbodyContentApplicationJsonSchemaAdditionalpropertiesPropertiesBranchPropertiesCommit",
    modelProperties: {
      sha: {
        serializedName: "sha",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsXn26H7V01AppsOwnerNameAppNameBranchesBranchConfigPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsXn26H7V01AppsOwnerNameAppNameBranchesBranchConfigPostRequestbodyContentApplicationJsonSchema",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      trigger: {
        serializedName: "trigger",
        type: {
          name: "String"
        }
      },
      testsEnabled: {
        serializedName: "testsEnabled",
        type: {
          name: "Boolean"
        }
      },
      badgeIsEnabled: {
        serializedName: "badgeIsEnabled",
        type: {
          name: "Boolean"
        }
      },
      signed: {
        serializedName: "signed",
        type: {
          name: "Boolean"
        }
      },
      cloneFromBranch: {
        serializedName: "cloneFromBranch",
        type: {
          name: "String"
        }
      },
      toolsets: {
        serializedName: "toolsets",
        type: {
          name: "Composite",
          className: "PostContentSchemaToolsets"
        }
      },
      artifactVersioning: {
        serializedName: "artifactVersioning",
        type: {
          name: "Composite",
          className: "PostContentSchemaArtifactVersioning"
        }
      }
    }
  }
};

export const PostContentSchemaToolsets: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PostContentSchemaToolsets",
    modelProperties: {
      xcode: {
        serializedName: "xcode",
        type: {
          name: "Composite",
          className: "PostContentSchemaToolsetsXcode"
        }
      },
      javascript: {
        serializedName: "javascript",
        type: {
          name: "Composite",
          className: "PostContentSchemaToolsetsJavascript"
        }
      },
      xamarin: {
        serializedName: "xamarin",
        type: {
          name: "Composite",
          className: "PostContentSchemaToolsetsXamarin"
        }
      },
      android: {
        serializedName: "android",
        type: {
          name: "Composite",
          className: "PostContentSchemaToolsetsAndroid"
        }
      }
    }
  }
};

export const PostContentSchemaToolsetsXcode: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PostContentSchemaToolsetsXcode",
    modelProperties: {
      projectOrWorkspacePath: {
        serializedName: "projectOrWorkspacePath",
        type: {
          name: "String"
        }
      },
      podfilePath: {
        serializedName: "podfilePath",
        type: {
          name: "String"
        }
      },
      cartfilePath: {
        serializedName: "cartfilePath",
        type: {
          name: "String"
        }
      },
      provisioningProfileEncoded: {
        serializedName: "provisioningProfileEncoded",
        type: {
          name: "String"
        }
      },
      certificateEncoded: {
        serializedName: "certificateEncoded",
        type: {
          name: "String"
        }
      },
      provisioningProfileFileId: {
        serializedName: "provisioningProfileFileId",
        type: {
          name: "String"
        }
      },
      certificateFileId: {
        serializedName: "certificateFileId",
        type: {
          name: "String"
        }
      },
      provisioningProfileUploadId: {
        serializedName: "provisioningProfileUploadId",
        type: {
          name: "String"
        }
      },
      appExtensionProvisioningProfileFiles: {
        serializedName: "appExtensionProvisioningProfileFiles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PostContentSchemaToolsetsXcodeAppExtensionProvisioningProfileFilesItem"
            }
          }
        }
      },
      certificateUploadId: {
        serializedName: "certificateUploadId",
        type: {
          name: "String"
        }
      },
      certificatePassword: {
        serializedName: "certificatePassword",
        type: {
          name: "String"
        }
      },
      scheme: {
        serializedName: "scheme",
        type: {
          name: "String"
        }
      },
      xcodeVersion: {
        serializedName: "xcodeVersion",
        type: {
          name: "String"
        }
      },
      provisioningProfileFilename: {
        serializedName: "provisioningProfileFilename",
        type: {
          name: "String"
        }
      },
      certificateFilename: {
        serializedName: "certificateFilename",
        type: {
          name: "String"
        }
      },
      teamId: {
        serializedName: "teamId",
        type: {
          name: "String"
        }
      },
      automaticSigning: {
        serializedName: "automaticSigning",
        type: {
          name: "Boolean"
        }
      },
      xcodeProjectSha: {
        serializedName: "xcodeProjectSha",
        type: {
          name: "String"
        }
      },
      archiveConfiguration: {
        serializedName: "archiveConfiguration",
        type: {
          name: "String"
        }
      },
      targetToArchive: {
        serializedName: "targetToArchive",
        type: {
          name: "String"
        }
      },
      forceLegacyBuildSystem: {
        serializedName: "forceLegacyBuildSystem",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PostContentSchemaToolsetsXcodeAppExtensionProvisioningProfileFilesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PostContentSchemaToolsetsXcodeAppExtensionProvisioningProfileFilesItem",
    modelProperties: {
      fileName: {
        serializedName: "fileName",
        type: {
          name: "String"
        }
      },
      fileId: {
        serializedName: "fileId",
        type: {
          name: "String"
        }
      },
      uploadId: {
        serializedName: "uploadId",
        type: {
          name: "String"
        }
      },
      targetBundleIdentifier: {
        serializedName: "targetBundleIdentifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PostContentSchemaToolsetsJavascript: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PostContentSchemaToolsetsJavascript",
    modelProperties: {
      packageJsonPath: {
        serializedName: "packageJsonPath",
        type: {
          name: "String"
        }
      },
      runTests: {
        serializedName: "runTests",
        type: {
          name: "Boolean"
        }
      },
      reactNativeVersion: {
        serializedName: "reactNativeVersion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PostContentSchemaToolsetsXamarin: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PostContentSchemaToolsetsXamarin",
    modelProperties: {
      slnPath: {
        serializedName: "slnPath",
        type: {
          name: "String"
        }
      },
      isSimBuild: {
        serializedName: "isSimBuild",
        type: {
          name: "Boolean"
        }
      },
      args: {
        serializedName: "args",
        type: {
          name: "String"
        }
      },
      configuration: {
        serializedName: "configuration",
        type: {
          name: "String"
        }
      },
      p12File: {
        serializedName: "p12File",
        type: {
          name: "String"
        }
      },
      p12Pwd: {
        serializedName: "p12Pwd",
        type: {
          name: "String"
        }
      },
      provProfile: {
        serializedName: "provProfile",
        type: {
          name: "String"
        }
      },
      monoVersion: {
        serializedName: "monoVersion",
        type: {
          name: "String"
        }
      },
      sdkBundle: {
        serializedName: "sdkBundle",
        type: {
          name: "String"
        }
      },
      symlink: {
        serializedName: "symlink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PostContentSchemaToolsetsAndroid: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PostContentSchemaToolsetsAndroid",
    modelProperties: {
      gradleWrapperPath: {
        serializedName: "gradleWrapperPath",
        type: {
          name: "String"
        }
      },
      module: {
        serializedName: "module",
        type: {
          name: "String"
        }
      },
      buildVariant: {
        serializedName: "buildVariant",
        type: {
          name: "String"
        }
      },
      runTests: {
        defaultValue: true,
        serializedName: "runTests",
        type: {
          name: "Boolean"
        }
      },
      runLint: {
        serializedName: "runLint",
        type: {
          name: "Boolean"
        }
      },
      isRoot: {
        serializedName: "isRoot",
        type: {
          name: "Boolean"
        }
      },
      automaticSigning: {
        serializedName: "automaticSigning",
        type: {
          name: "Boolean"
        }
      },
      keystorePassword: {
        serializedName: "keystorePassword",
        type: {
          name: "String"
        }
      },
      keyAlias: {
        serializedName: "keyAlias",
        type: {
          name: "String"
        }
      },
      keyPassword: {
        serializedName: "keyPassword",
        type: {
          name: "String"
        }
      },
      keystoreFilename: {
        serializedName: "keystoreFilename",
        type: {
          name: "String"
        }
      },
      keystoreEncoded: {
        serializedName: "keystoreEncoded",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PostContentSchemaArtifactVersioning: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PostContentSchemaArtifactVersioning",
    modelProperties: {
      buildNumberFormat: {
        serializedName: "buildNumberFormat",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Ip4BvnV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0Additionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Ip4BvnV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0Additionalproperties",
    modelProperties: {
      branch: {
        serializedName: "branch",
        type: {
          name: "Composite",
          className: "Post200ApplicationJsonAllOfAdditionalPropertiesBranch"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Post200ApplicationJsonAllOfAdditionalPropertiesBranch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Post200ApplicationJsonAllOfAdditionalPropertiesBranch",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      commit: {
        serializedName: "commit",
        type: {
          name: "Composite",
          className:
            "Post200ApplicationJsonAllOfAdditionalPropertiesBranchCommit"
        }
      }
    }
  }
};

export const Post200ApplicationJsonAllOfAdditionalPropertiesBranchCommit: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Post200ApplicationJsonAllOfAdditionalPropertiesBranchCommit",
    modelProperties: {
      sha: {
        serializedName: "sha",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Kbv5LpV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Kbv5LpV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      trigger: {
        serializedName: "trigger",
        type: {
          name: "String"
        }
      },
      testsEnabled: {
        serializedName: "testsEnabled",
        type: {
          name: "Boolean"
        }
      },
      badgeIsEnabled: {
        serializedName: "badgeIsEnabled",
        type: {
          name: "Boolean"
        }
      },
      signed: {
        serializedName: "signed",
        type: {
          name: "Boolean"
        }
      },
      cloneFromBranch: {
        serializedName: "cloneFromBranch",
        type: {
          name: "String"
        }
      },
      toolsets: {
        serializedName: "toolsets",
        type: {
          name: "Composite",
          className:
            "PathsA1NnigV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsets"
        }
      },
      artifactVersioning: {
        serializedName: "artifactVersioning",
        type: {
          name: "Composite",
          className:
            "Paths1Hf5Vr2V01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0PropertiesArtifactversioning"
        }
      }
    }
  }
};

export const PathsA1NnigV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsets: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsA1NnigV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsets",
    modelProperties: {
      xcode: {
        serializedName: "xcode",
        type: {
          name: "Composite",
          className:
            "Paths3Ut9WuV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesXcode"
        }
      },
      javascript: {
        serializedName: "javascript",
        type: {
          name: "Composite",
          className:
            "Paths1Crx4ZrV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesJavascript"
        }
      },
      xamarin: {
        serializedName: "xamarin",
        type: {
          name: "Composite",
          className:
            "Paths1Gc1TdmV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesXamarin"
        }
      },
      android: {
        serializedName: "android",
        type: {
          name: "Composite",
          className:
            "Paths19UrzlpV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesAndroid"
        }
      }
    }
  }
};

export const Paths3Ut9WuV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesXcode: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths3Ut9WuV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesXcode",
    modelProperties: {
      projectOrWorkspacePath: {
        serializedName: "projectOrWorkspacePath",
        type: {
          name: "String"
        }
      },
      podfilePath: {
        serializedName: "podfilePath",
        type: {
          name: "String"
        }
      },
      cartfilePath: {
        serializedName: "cartfilePath",
        type: {
          name: "String"
        }
      },
      provisioningProfileEncoded: {
        serializedName: "provisioningProfileEncoded",
        type: {
          name: "String"
        }
      },
      certificateEncoded: {
        serializedName: "certificateEncoded",
        type: {
          name: "String"
        }
      },
      provisioningProfileFileId: {
        serializedName: "provisioningProfileFileId",
        type: {
          name: "String"
        }
      },
      certificateFileId: {
        serializedName: "certificateFileId",
        type: {
          name: "String"
        }
      },
      provisioningProfileUploadId: {
        serializedName: "provisioningProfileUploadId",
        type: {
          name: "String"
        }
      },
      appExtensionProvisioningProfileFiles: {
        serializedName: "appExtensionProvisioningProfileFiles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Post200ApplicationJsonAllOfPropertiesPropertiesPropertiesItemsItem"
            }
          }
        }
      },
      certificateUploadId: {
        serializedName: "certificateUploadId",
        type: {
          name: "String"
        }
      },
      certificatePassword: {
        serializedName: "certificatePassword",
        type: {
          name: "String"
        }
      },
      scheme: {
        serializedName: "scheme",
        type: {
          name: "String"
        }
      },
      xcodeVersion: {
        serializedName: "xcodeVersion",
        type: {
          name: "String"
        }
      },
      provisioningProfileFilename: {
        serializedName: "provisioningProfileFilename",
        type: {
          name: "String"
        }
      },
      certificateFilename: {
        serializedName: "certificateFilename",
        type: {
          name: "String"
        }
      },
      teamId: {
        serializedName: "teamId",
        type: {
          name: "String"
        }
      },
      automaticSigning: {
        serializedName: "automaticSigning",
        type: {
          name: "Boolean"
        }
      },
      xcodeProjectSha: {
        serializedName: "xcodeProjectSha",
        type: {
          name: "String"
        }
      },
      archiveConfiguration: {
        serializedName: "archiveConfiguration",
        type: {
          name: "String"
        }
      },
      targetToArchive: {
        serializedName: "targetToArchive",
        type: {
          name: "String"
        }
      },
      forceLegacyBuildSystem: {
        serializedName: "forceLegacyBuildSystem",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Post200ApplicationJsonAllOfPropertiesPropertiesPropertiesItemsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Post200ApplicationJsonAllOfPropertiesPropertiesPropertiesItemsItem",
    modelProperties: {
      fileName: {
        serializedName: "fileName",
        type: {
          name: "String"
        }
      },
      fileId: {
        serializedName: "fileId",
        type: {
          name: "String"
        }
      },
      uploadId: {
        serializedName: "uploadId",
        type: {
          name: "String"
        }
      },
      targetBundleIdentifier: {
        serializedName: "targetBundleIdentifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Crx4ZrV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesJavascript: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Crx4ZrV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesJavascript",
    modelProperties: {
      packageJsonPath: {
        serializedName: "packageJsonPath",
        type: {
          name: "String"
        }
      },
      runTests: {
        serializedName: "runTests",
        type: {
          name: "Boolean"
        }
      },
      reactNativeVersion: {
        serializedName: "reactNativeVersion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Gc1TdmV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesXamarin: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Gc1TdmV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesXamarin",
    modelProperties: {
      slnPath: {
        serializedName: "slnPath",
        type: {
          name: "String"
        }
      },
      isSimBuild: {
        serializedName: "isSimBuild",
        type: {
          name: "Boolean"
        }
      },
      args: {
        serializedName: "args",
        type: {
          name: "String"
        }
      },
      configuration: {
        serializedName: "configuration",
        type: {
          name: "String"
        }
      },
      p12File: {
        serializedName: "p12File",
        type: {
          name: "String"
        }
      },
      p12Pwd: {
        serializedName: "p12Pwd",
        type: {
          name: "String"
        }
      },
      provProfile: {
        serializedName: "provProfile",
        type: {
          name: "String"
        }
      },
      monoVersion: {
        serializedName: "monoVersion",
        type: {
          name: "String"
        }
      },
      sdkBundle: {
        serializedName: "sdkBundle",
        type: {
          name: "String"
        }
      },
      symlink: {
        serializedName: "symlink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths19UrzlpV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesAndroid: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths19UrzlpV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesAndroid",
    modelProperties: {
      gradleWrapperPath: {
        serializedName: "gradleWrapperPath",
        type: {
          name: "String"
        }
      },
      module: {
        serializedName: "module",
        type: {
          name: "String"
        }
      },
      buildVariant: {
        serializedName: "buildVariant",
        type: {
          name: "String"
        }
      },
      runTests: {
        defaultValue: true,
        serializedName: "runTests",
        type: {
          name: "Boolean"
        }
      },
      runLint: {
        serializedName: "runLint",
        type: {
          name: "Boolean"
        }
      },
      isRoot: {
        serializedName: "isRoot",
        type: {
          name: "Boolean"
        }
      },
      automaticSigning: {
        serializedName: "automaticSigning",
        type: {
          name: "Boolean"
        }
      },
      keystorePassword: {
        serializedName: "keystorePassword",
        type: {
          name: "String"
        }
      },
      keyAlias: {
        serializedName: "keyAlias",
        type: {
          name: "String"
        }
      },
      keyPassword: {
        serializedName: "keyPassword",
        type: {
          name: "String"
        }
      },
      keystoreFilename: {
        serializedName: "keystoreFilename",
        type: {
          name: "String"
        }
      },
      keystoreEncoded: {
        serializedName: "keystoreEncoded",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Hf5Vr2V01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0PropertiesArtifactversioning: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Hf5Vr2V01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0PropertiesArtifactversioning",
    modelProperties: {
      buildNumberFormat: {
        serializedName: "buildNumberFormat",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1PqezhuV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1PqezhuV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof1",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths2EseggV01AppsOwnerNameAppNameBranchesBranchConfigPutRequestbodyContentApplicationJsonSchemaAdditionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths2EseggV01AppsOwnerNameAppNameBranchesBranchConfigPutRequestbodyContentApplicationJsonSchemaAdditionalproperties",
    modelProperties: {
      branch: {
        serializedName: "branch",
        type: {
          name: "Composite",
          className: "PutContentSchemaProperties"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PutContentSchemaProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PutContentSchemaProperties",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      commit: {
        serializedName: "commit",
        type: {
          name: "Composite",
          className:
            "PathsVfv5IrV01AppsOwnerNameAppNameBranchesBranchConfigPutRequestbodyContentApplicationJsonSchemaAdditionalpropertiesPropertiesBranchPropertiesCommit"
        }
      }
    }
  }
};

export const PathsVfv5IrV01AppsOwnerNameAppNameBranchesBranchConfigPutRequestbodyContentApplicationJsonSchemaAdditionalpropertiesPropertiesBranchPropertiesCommit: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsVfv5IrV01AppsOwnerNameAppNameBranchesBranchConfigPutRequestbodyContentApplicationJsonSchemaAdditionalpropertiesPropertiesBranchPropertiesCommit",
    modelProperties: {
      sha: {
        serializedName: "sha",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1O0K3JpV01AppsOwnerNameAppNameBranchesBranchConfigPutRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1O0K3JpV01AppsOwnerNameAppNameBranchesBranchConfigPutRequestbodyContentApplicationJsonSchema",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      trigger: {
        serializedName: "trigger",
        type: {
          name: "String"
        }
      },
      testsEnabled: {
        serializedName: "testsEnabled",
        type: {
          name: "Boolean"
        }
      },
      badgeIsEnabled: {
        serializedName: "badgeIsEnabled",
        type: {
          name: "Boolean"
        }
      },
      signed: {
        serializedName: "signed",
        type: {
          name: "Boolean"
        }
      },
      cloneFromBranch: {
        serializedName: "cloneFromBranch",
        type: {
          name: "String"
        }
      },
      toolsets: {
        serializedName: "toolsets",
        type: {
          name: "Composite",
          className: "PutContentSchemaToolsets"
        }
      },
      artifactVersioning: {
        serializedName: "artifactVersioning",
        type: {
          name: "Composite",
          className: "PutContentSchemaArtifactVersioning"
        }
      }
    }
  }
};

export const PutContentSchemaToolsets: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PutContentSchemaToolsets",
    modelProperties: {
      xcode: {
        serializedName: "xcode",
        type: {
          name: "Composite",
          className: "PutContentSchemaToolsetsXcode"
        }
      },
      javascript: {
        serializedName: "javascript",
        type: {
          name: "Composite",
          className: "PutContentSchemaToolsetsJavascript"
        }
      },
      xamarin: {
        serializedName: "xamarin",
        type: {
          name: "Composite",
          className: "PutContentSchemaToolsetsXamarin"
        }
      },
      android: {
        serializedName: "android",
        type: {
          name: "Composite",
          className: "PutContentSchemaToolsetsAndroid"
        }
      }
    }
  }
};

export const PutContentSchemaToolsetsXcode: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PutContentSchemaToolsetsXcode",
    modelProperties: {
      projectOrWorkspacePath: {
        serializedName: "projectOrWorkspacePath",
        type: {
          name: "String"
        }
      },
      podfilePath: {
        serializedName: "podfilePath",
        type: {
          name: "String"
        }
      },
      cartfilePath: {
        serializedName: "cartfilePath",
        type: {
          name: "String"
        }
      },
      provisioningProfileEncoded: {
        serializedName: "provisioningProfileEncoded",
        type: {
          name: "String"
        }
      },
      certificateEncoded: {
        serializedName: "certificateEncoded",
        type: {
          name: "String"
        }
      },
      provisioningProfileFileId: {
        serializedName: "provisioningProfileFileId",
        type: {
          name: "String"
        }
      },
      certificateFileId: {
        serializedName: "certificateFileId",
        type: {
          name: "String"
        }
      },
      provisioningProfileUploadId: {
        serializedName: "provisioningProfileUploadId",
        type: {
          name: "String"
        }
      },
      appExtensionProvisioningProfileFiles: {
        serializedName: "appExtensionProvisioningProfileFiles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PutContentSchemaToolsetsXcodeAppExtensionProvisioningProfileFilesItem"
            }
          }
        }
      },
      certificateUploadId: {
        serializedName: "certificateUploadId",
        type: {
          name: "String"
        }
      },
      certificatePassword: {
        serializedName: "certificatePassword",
        type: {
          name: "String"
        }
      },
      scheme: {
        serializedName: "scheme",
        type: {
          name: "String"
        }
      },
      xcodeVersion: {
        serializedName: "xcodeVersion",
        type: {
          name: "String"
        }
      },
      provisioningProfileFilename: {
        serializedName: "provisioningProfileFilename",
        type: {
          name: "String"
        }
      },
      certificateFilename: {
        serializedName: "certificateFilename",
        type: {
          name: "String"
        }
      },
      teamId: {
        serializedName: "teamId",
        type: {
          name: "String"
        }
      },
      automaticSigning: {
        serializedName: "automaticSigning",
        type: {
          name: "Boolean"
        }
      },
      xcodeProjectSha: {
        serializedName: "xcodeProjectSha",
        type: {
          name: "String"
        }
      },
      archiveConfiguration: {
        serializedName: "archiveConfiguration",
        type: {
          name: "String"
        }
      },
      targetToArchive: {
        serializedName: "targetToArchive",
        type: {
          name: "String"
        }
      },
      forceLegacyBuildSystem: {
        serializedName: "forceLegacyBuildSystem",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PutContentSchemaToolsetsXcodeAppExtensionProvisioningProfileFilesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PutContentSchemaToolsetsXcodeAppExtensionProvisioningProfileFilesItem",
    modelProperties: {
      fileName: {
        serializedName: "fileName",
        type: {
          name: "String"
        }
      },
      fileId: {
        serializedName: "fileId",
        type: {
          name: "String"
        }
      },
      uploadId: {
        serializedName: "uploadId",
        type: {
          name: "String"
        }
      },
      targetBundleIdentifier: {
        serializedName: "targetBundleIdentifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PutContentSchemaToolsetsJavascript: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PutContentSchemaToolsetsJavascript",
    modelProperties: {
      packageJsonPath: {
        serializedName: "packageJsonPath",
        type: {
          name: "String"
        }
      },
      runTests: {
        serializedName: "runTests",
        type: {
          name: "Boolean"
        }
      },
      reactNativeVersion: {
        serializedName: "reactNativeVersion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PutContentSchemaToolsetsXamarin: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PutContentSchemaToolsetsXamarin",
    modelProperties: {
      slnPath: {
        serializedName: "slnPath",
        type: {
          name: "String"
        }
      },
      isSimBuild: {
        serializedName: "isSimBuild",
        type: {
          name: "Boolean"
        }
      },
      args: {
        serializedName: "args",
        type: {
          name: "String"
        }
      },
      configuration: {
        serializedName: "configuration",
        type: {
          name: "String"
        }
      },
      p12File: {
        serializedName: "p12File",
        type: {
          name: "String"
        }
      },
      p12Pwd: {
        serializedName: "p12Pwd",
        type: {
          name: "String"
        }
      },
      provProfile: {
        serializedName: "provProfile",
        type: {
          name: "String"
        }
      },
      monoVersion: {
        serializedName: "monoVersion",
        type: {
          name: "String"
        }
      },
      sdkBundle: {
        serializedName: "sdkBundle",
        type: {
          name: "String"
        }
      },
      symlink: {
        serializedName: "symlink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PutContentSchemaToolsetsAndroid: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PutContentSchemaToolsetsAndroid",
    modelProperties: {
      gradleWrapperPath: {
        serializedName: "gradleWrapperPath",
        type: {
          name: "String"
        }
      },
      module: {
        serializedName: "module",
        type: {
          name: "String"
        }
      },
      buildVariant: {
        serializedName: "buildVariant",
        type: {
          name: "String"
        }
      },
      runTests: {
        defaultValue: true,
        serializedName: "runTests",
        type: {
          name: "Boolean"
        }
      },
      runLint: {
        serializedName: "runLint",
        type: {
          name: "Boolean"
        }
      },
      isRoot: {
        serializedName: "isRoot",
        type: {
          name: "Boolean"
        }
      },
      automaticSigning: {
        serializedName: "automaticSigning",
        type: {
          name: "Boolean"
        }
      },
      keystorePassword: {
        serializedName: "keystorePassword",
        type: {
          name: "String"
        }
      },
      keyAlias: {
        serializedName: "keyAlias",
        type: {
          name: "String"
        }
      },
      keyPassword: {
        serializedName: "keyPassword",
        type: {
          name: "String"
        }
      },
      keystoreFilename: {
        serializedName: "keystoreFilename",
        type: {
          name: "String"
        }
      },
      keystoreEncoded: {
        serializedName: "keystoreEncoded",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PutContentSchemaArtifactVersioning: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PutContentSchemaArtifactVersioning",
    modelProperties: {
      buildNumberFormat: {
        serializedName: "buildNumberFormat",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1P4PqlhV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof0Additionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1P4PqlhV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof0Additionalproperties",
    modelProperties: {
      branch: {
        serializedName: "branch",
        type: {
          name: "Composite",
          className: "Put200ApplicationJsonAllOfAdditionalPropertiesBranch"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Put200ApplicationJsonAllOfAdditionalPropertiesBranch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Put200ApplicationJsonAllOfAdditionalPropertiesBranch",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      commit: {
        serializedName: "commit",
        type: {
          name: "Composite",
          className:
            "Put200ApplicationJsonAllOfAdditionalPropertiesBranchCommit"
        }
      }
    }
  }
};

export const Put200ApplicationJsonAllOfAdditionalPropertiesBranchCommit: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Put200ApplicationJsonAllOfAdditionalPropertiesBranchCommit",
    modelProperties: {
      sha: {
        serializedName: "sha",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsXp75IdV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsXp75IdV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof0",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      trigger: {
        serializedName: "trigger",
        type: {
          name: "String"
        }
      },
      testsEnabled: {
        serializedName: "testsEnabled",
        type: {
          name: "Boolean"
        }
      },
      badgeIsEnabled: {
        serializedName: "badgeIsEnabled",
        type: {
          name: "Boolean"
        }
      },
      signed: {
        serializedName: "signed",
        type: {
          name: "Boolean"
        }
      },
      cloneFromBranch: {
        serializedName: "cloneFromBranch",
        type: {
          name: "String"
        }
      },
      toolsets: {
        serializedName: "toolsets",
        type: {
          name: "Composite",
          className:
            "Paths17X9I1IV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsets"
        }
      },
      artifactVersioning: {
        serializedName: "artifactVersioning",
        type: {
          name: "Composite",
          className:
            "Paths1Usk3QhV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof0PropertiesArtifactversioning"
        }
      }
    }
  }
};

export const Paths17X9I1IV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsets: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths17X9I1IV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsets",
    modelProperties: {
      xcode: {
        serializedName: "xcode",
        type: {
          name: "Composite",
          className: "Put200ApplicationJsonAllOfPropertiesProperties"
        }
      },
      javascript: {
        serializedName: "javascript",
        type: {
          name: "Composite",
          className:
            "PathsR6UalpV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesJavascript"
        }
      },
      xamarin: {
        serializedName: "xamarin",
        type: {
          name: "Composite",
          className:
            "Paths1Mkeg5LV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesXamarin"
        }
      },
      android: {
        serializedName: "android",
        type: {
          name: "Composite",
          className:
            "Paths1Dtki2QV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesAndroid"
        }
      }
    }
  }
};

export const Put200ApplicationJsonAllOfPropertiesProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Put200ApplicationJsonAllOfPropertiesProperties",
    modelProperties: {
      projectOrWorkspacePath: {
        serializedName: "projectOrWorkspacePath",
        type: {
          name: "String"
        }
      },
      podfilePath: {
        serializedName: "podfilePath",
        type: {
          name: "String"
        }
      },
      cartfilePath: {
        serializedName: "cartfilePath",
        type: {
          name: "String"
        }
      },
      provisioningProfileEncoded: {
        serializedName: "provisioningProfileEncoded",
        type: {
          name: "String"
        }
      },
      certificateEncoded: {
        serializedName: "certificateEncoded",
        type: {
          name: "String"
        }
      },
      provisioningProfileFileId: {
        serializedName: "provisioningProfileFileId",
        type: {
          name: "String"
        }
      },
      certificateFileId: {
        serializedName: "certificateFileId",
        type: {
          name: "String"
        }
      },
      provisioningProfileUploadId: {
        serializedName: "provisioningProfileUploadId",
        type: {
          name: "String"
        }
      },
      appExtensionProvisioningProfileFiles: {
        serializedName: "appExtensionProvisioningProfileFiles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Put200ApplicationJsonAllOfPropertiesItemsItem"
            }
          }
        }
      },
      certificateUploadId: {
        serializedName: "certificateUploadId",
        type: {
          name: "String"
        }
      },
      certificatePassword: {
        serializedName: "certificatePassword",
        type: {
          name: "String"
        }
      },
      scheme: {
        serializedName: "scheme",
        type: {
          name: "String"
        }
      },
      xcodeVersion: {
        serializedName: "xcodeVersion",
        type: {
          name: "String"
        }
      },
      provisioningProfileFilename: {
        serializedName: "provisioningProfileFilename",
        type: {
          name: "String"
        }
      },
      certificateFilename: {
        serializedName: "certificateFilename",
        type: {
          name: "String"
        }
      },
      teamId: {
        serializedName: "teamId",
        type: {
          name: "String"
        }
      },
      automaticSigning: {
        serializedName: "automaticSigning",
        type: {
          name: "Boolean"
        }
      },
      xcodeProjectSha: {
        serializedName: "xcodeProjectSha",
        type: {
          name: "String"
        }
      },
      archiveConfiguration: {
        serializedName: "archiveConfiguration",
        type: {
          name: "String"
        }
      },
      targetToArchive: {
        serializedName: "targetToArchive",
        type: {
          name: "String"
        }
      },
      forceLegacyBuildSystem: {
        serializedName: "forceLegacyBuildSystem",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Put200ApplicationJsonAllOfPropertiesItemsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Put200ApplicationJsonAllOfPropertiesItemsItem",
    modelProperties: {
      fileName: {
        serializedName: "fileName",
        type: {
          name: "String"
        }
      },
      fileId: {
        serializedName: "fileId",
        type: {
          name: "String"
        }
      },
      uploadId: {
        serializedName: "uploadId",
        type: {
          name: "String"
        }
      },
      targetBundleIdentifier: {
        serializedName: "targetBundleIdentifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsR6UalpV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesJavascript: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsR6UalpV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesJavascript",
    modelProperties: {
      packageJsonPath: {
        serializedName: "packageJsonPath",
        type: {
          name: "String"
        }
      },
      runTests: {
        serializedName: "runTests",
        type: {
          name: "Boolean"
        }
      },
      reactNativeVersion: {
        serializedName: "reactNativeVersion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Mkeg5LV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesXamarin: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Mkeg5LV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesXamarin",
    modelProperties: {
      slnPath: {
        serializedName: "slnPath",
        type: {
          name: "String"
        }
      },
      isSimBuild: {
        serializedName: "isSimBuild",
        type: {
          name: "Boolean"
        }
      },
      args: {
        serializedName: "args",
        type: {
          name: "String"
        }
      },
      configuration: {
        serializedName: "configuration",
        type: {
          name: "String"
        }
      },
      p12File: {
        serializedName: "p12File",
        type: {
          name: "String"
        }
      },
      p12Pwd: {
        serializedName: "p12Pwd",
        type: {
          name: "String"
        }
      },
      provProfile: {
        serializedName: "provProfile",
        type: {
          name: "String"
        }
      },
      monoVersion: {
        serializedName: "monoVersion",
        type: {
          name: "String"
        }
      },
      sdkBundle: {
        serializedName: "sdkBundle",
        type: {
          name: "String"
        }
      },
      symlink: {
        serializedName: "symlink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Dtki2QV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesAndroid: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Dtki2QV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof0PropertiesToolsetsPropertiesAndroid",
    modelProperties: {
      gradleWrapperPath: {
        serializedName: "gradleWrapperPath",
        type: {
          name: "String"
        }
      },
      module: {
        serializedName: "module",
        type: {
          name: "String"
        }
      },
      buildVariant: {
        serializedName: "buildVariant",
        type: {
          name: "String"
        }
      },
      runTests: {
        defaultValue: true,
        serializedName: "runTests",
        type: {
          name: "Boolean"
        }
      },
      runLint: {
        serializedName: "runLint",
        type: {
          name: "Boolean"
        }
      },
      isRoot: {
        serializedName: "isRoot",
        type: {
          name: "Boolean"
        }
      },
      automaticSigning: {
        serializedName: "automaticSigning",
        type: {
          name: "Boolean"
        }
      },
      keystorePassword: {
        serializedName: "keystorePassword",
        type: {
          name: "String"
        }
      },
      keyAlias: {
        serializedName: "keyAlias",
        type: {
          name: "String"
        }
      },
      keyPassword: {
        serializedName: "keyPassword",
        type: {
          name: "String"
        }
      },
      keystoreFilename: {
        serializedName: "keystoreFilename",
        type: {
          name: "String"
        }
      },
      keystoreEncoded: {
        serializedName: "keystoreEncoded",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Usk3QhV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof0PropertiesArtifactversioning: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Usk3QhV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof0PropertiesArtifactversioning",
    modelProperties: {
      buildNumberFormat: {
        serializedName: "buildNumberFormat",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Mp73R1V01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Mp73R1V01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof1",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PathsQs07S5V01AppsOwnerNameAppNameBranchesBranchConfigDeleteResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsQs07S5V01AppsOwnerNameAppNameBranchesBranchConfigDeleteResponses200ContentApplicationJsonSchema",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsRyxelmV01AppsOwnerNameAppNameBranchesBranchBuildsGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsRyxelmV01AppsOwnerNameAppNameBranchesBranchBuildsGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      id: {
        constraints: {
          ExclusiveMinimum: 0
        },
        serializedName: "id",
        required: true,
        type: {
          name: "Number"
        }
      },
      buildNumber: {
        serializedName: "buildNumber",
        required: true,
        type: {
          name: "String"
        }
      },
      queueTime: {
        serializedName: "queueTime",
        required: true,
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      finishTime: {
        serializedName: "finishTime",
        type: {
          name: "String"
        }
      },
      lastChangedDate: {
        serializedName: "lastChangedDate",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      result: {
        serializedName: "result",
        required: true,
        type: {
          name: "String"
        }
      },
      sourceBranch: {
        serializedName: "sourceBranch",
        required: true,
        type: {
          name: "String"
        }
      },
      sourceVersion: {
        serializedName: "sourceVersion",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Jgsne9V01AppsOwnerNameAppNameBranchesBranchBuildsPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Jgsne9V01AppsOwnerNameAppNameBranchesBranchBuildsPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      sourceVersion: {
        serializedName: "sourceVersion",
        type: {
          name: "String"
        }
      },
      debug: {
        serializedName: "debug",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PathsIgnnsjV01AppsOwnerNameAppNameBranchesBranchBuildsPostResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsIgnnsjV01AppsOwnerNameAppNameBranchesBranchBuildsPostResponses200ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        constraints: {
          ExclusiveMinimum: 0
        },
        serializedName: "id",
        required: true,
        type: {
          name: "Number"
        }
      },
      buildNumber: {
        serializedName: "buildNumber",
        required: true,
        type: {
          name: "String"
        }
      },
      queueTime: {
        serializedName: "queueTime",
        required: true,
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      finishTime: {
        serializedName: "finishTime",
        type: {
          name: "String"
        }
      },
      lastChangedDate: {
        serializedName: "lastChangedDate",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      result: {
        serializedName: "result",
        required: true,
        type: {
          name: "String"
        }
      },
      sourceBranch: {
        serializedName: "sourceBranch",
        required: true,
        type: {
          name: "String"
        }
      },
      sourceVersion: {
        serializedName: "sourceVersion",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsHjd5D0V01AppsOwnerNameAppNameBranchesGetResponses200ContentApplicationJsonSchemaItemsAdditionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsHjd5D0V01AppsOwnerNameAppNameBranchesGetResponses200ContentApplicationJsonSchemaItemsAdditionalproperties",
    modelProperties: {
      branch: {
        serializedName: "branch",
        type: {
          name: "Composite",
          className: "Get200ApplicationJsonItemsProperties"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Get200ApplicationJsonItemsProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonItemsProperties",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      commit: {
        serializedName: "commit",
        type: {
          name: "Composite",
          className:
            "PathsVvtvpgV01AppsOwnerNameAppNameBranchesGetResponses200ContentApplicationJsonSchemaItemsAdditionalpropertiesPropertiesBranchPropertiesCommit"
        }
      }
    }
  }
};

export const PathsVvtvpgV01AppsOwnerNameAppNameBranchesGetResponses200ContentApplicationJsonSchemaItemsAdditionalpropertiesPropertiesBranchPropertiesCommit: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsVvtvpgV01AppsOwnerNameAppNameBranchesGetResponses200ContentApplicationJsonSchemaItemsAdditionalpropertiesPropertiesBranchPropertiesCommit",
    modelProperties: {
      sha: {
        serializedName: "sha",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths5Mg2CrV01AppsOwnerNameAppNameBranchesGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths5Mg2CrV01AppsOwnerNameAppNameBranchesGetResponses200ContentApplicationJsonSchemaItems",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      configured: {
        serializedName: "configured",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      lastBuild: {
        serializedName: "lastBuild",
        type: {
          name: "Composite",
          className: "GetResponses200ContentApplicationJsonSchemaItemLastBuild"
        }
      }
    }
  }
};

export const GetResponses200ContentApplicationJsonSchemaItemLastBuild: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetResponses200ContentApplicationJsonSchemaItemLastBuild",
    modelProperties: {
      id: {
        constraints: {
          ExclusiveMinimum: 0
        },
        serializedName: "id",
        required: true,
        type: {
          name: "Number"
        }
      },
      buildNumber: {
        serializedName: "buildNumber",
        required: true,
        type: {
          name: "String"
        }
      },
      queueTime: {
        serializedName: "queueTime",
        required: true,
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      finishTime: {
        serializedName: "finishTime",
        type: {
          name: "String"
        }
      },
      lastChangedDate: {
        serializedName: "lastChangedDate",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      result: {
        serializedName: "result",
        required: true,
        type: {
          name: "String"
        }
      },
      sourceBranch: {
        serializedName: "sourceBranch",
        required: true,
        type: {
          name: "String"
        }
      },
      sourceVersion: {
        serializedName: "sourceVersion",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1WpnegrV01AppsOwnerNameAppNameBranchesGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1WpnegrV01AppsOwnerNameAppNameBranchesGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths5MjbktV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths5MjbktV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      billingPlans: {
        serializedName: "billingPlans",
        type: {
          name: "Composite",
          className:
            "PathsPm671NV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplans"
        }
      },
      usage: {
        serializedName: "usage",
        type: {
          name: "Composite",
          className:
            "PathsFq58EoV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsage"
        }
      },
      azureSubscriptionId: {
        serializedName: "azureSubscriptionId",
        type: {
          name: "String"
        }
      },
      azureSubscriptionState: {
        serializedName: "azureSubscriptionState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsPm671NV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplans: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsPm671NV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplans",
    modelProperties: {
      buildService: {
        serializedName: "buildService",
        type: {
          name: "Composite",
          className:
            "PathsOppzg8V01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservice"
        }
      },
      testService: {
        serializedName: "testService",
        type: {
          name: "Composite",
          className:
            "Paths1Eo89OdV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservice"
        }
      }
    }
  }
};

export const PathsOppzg8V01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservice: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsOppzg8V01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservice",
    modelProperties: {
      canSelectTrialPlan: {
        serializedName: "canSelectTrialPlan",
        type: {
          name: "Boolean"
        }
      },
      lastTrialPlanExpirationTime: {
        serializedName: "lastTrialPlanExpirationTime",
        type: {
          name: "String"
        }
      },
      currentBillingPeriod: {
        serializedName: "currentBillingPeriod",
        type: {
          name: "Composite",
          className:
            "Paths6Ga1NlV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiod"
        }
      }
    }
  }
};

export const Paths6Ga1NlV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiod: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths6Ga1NlV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiod",
    modelProperties: {
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "String"
        }
      },
      byAccount: {
        serializedName: "byAccount",
        type: {
          name: "Composite",
          className:
            "Paths1W6Sn9XV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiodPropertiesByaccount"
        }
      }
    }
  }
};

export const Paths1W6Sn9XV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiodPropertiesByaccount: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1W6Sn9XV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiodPropertiesByaccount",
    modelProperties: {
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      plan: {
        serializedName: "plan",
        type: {
          name: "Composite",
          className:
            "PathsVcxu3V01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiodPropertiesByaccountPropertiesPlan"
        }
      }
    }
  }
};

export const PathsVcxu3V01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiodPropertiesByaccountPropertiesPlan: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsVcxu3V01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesBuildservicePropertiesCurrentbillingperiodPropertiesByaccountPropertiesPlan",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      price: {
        serializedName: "price",
        type: {
          name: "Number"
        }
      },
      paymentSource: {
        serializedName: "paymentSource",
        type: {
          name: "String"
        }
      },
      service: {
        serializedName: "service",
        type: {
          name: "String"
        }
      },
      limits: {
        serializedName: "limits",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } }
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } }
          }
        }
      },
      parentId: {
        serializedName: "parentId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Eo89OdV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservice: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Eo89OdV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservice",
    modelProperties: {
      canSelectTrialPlan: {
        serializedName: "canSelectTrialPlan",
        type: {
          name: "Boolean"
        }
      },
      lastTrialPlanExpirationTime: {
        serializedName: "lastTrialPlanExpirationTime",
        type: {
          name: "String"
        }
      },
      currentBillingPeriod: {
        serializedName: "currentBillingPeriod",
        type: {
          name: "Composite",
          className:
            "PathsA5554JV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiod"
        }
      }
    }
  }
};

export const PathsA5554JV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiod: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsA5554JV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiod",
    modelProperties: {
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "String"
        }
      },
      byAccount: {
        serializedName: "byAccount",
        type: {
          name: "Composite",
          className:
            "Paths1T0DpzdV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiodPropertiesByaccount"
        }
      }
    }
  }
};

export const Paths1T0DpzdV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiodPropertiesByaccount: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1T0DpzdV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiodPropertiesByaccount",
    modelProperties: {
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      plan: {
        serializedName: "plan",
        type: {
          name: "Composite",
          className:
            "Paths1KducdkV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiodPropertiesByaccountPropertiesPlan"
        }
      }
    }
  }
};

export const Paths1KducdkV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiodPropertiesByaccountPropertiesPlan: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1KducdkV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesBillingplansPropertiesTestservicePropertiesCurrentbillingperiodPropertiesByaccountPropertiesPlan",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      price: {
        serializedName: "price",
        type: {
          name: "Number"
        }
      },
      paymentSource: {
        serializedName: "paymentSource",
        type: {
          name: "String"
        }
      },
      service: {
        serializedName: "service",
        type: {
          name: "String"
        }
      },
      limits: {
        serializedName: "limits",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } }
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } }
          }
        }
      },
      parentId: {
        serializedName: "parentId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsFq58EoV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsFq58EoV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsage",
    modelProperties: {
      buildService: {
        serializedName: "buildService",
        type: {
          name: "Composite",
          className:
            "PathsWut5UaV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesBuildservice"
        }
      },
      testService: {
        serializedName: "testService",
        type: {
          name: "Composite",
          className:
            "Paths1Iyeh26V01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesTestservice"
        }
      }
    }
  }
};

export const PathsWut5UaV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesBuildservice: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsWut5UaV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesBuildservice",
    modelProperties: {
      currentUsagePeriod: {
        serializedName: "currentUsagePeriod",
        type: {
          name: "Composite",
          className:
            "Paths12YqdrpV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesBuildservicePropertiesCurrentusageperiod"
        }
      }
    }
  }
};

export const Paths12YqdrpV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesBuildservicePropertiesCurrentusageperiod: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths12YqdrpV01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesBuildservicePropertiesCurrentusageperiod",
    modelProperties: {
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "String"
        }
      },
      byAccount: {
        serializedName: "byAccount",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } }
        }
      },
      byApp: {
        serializedName: "byApp",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "Number" } } }
          }
        }
      }
    }
  }
};

export const Paths1Iyeh26V01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesTestservice: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Iyeh26V01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesTestservice",
    modelProperties: {
      currentUsagePeriod: {
        serializedName: "currentUsagePeriod",
        type: {
          name: "Composite",
          className:
            "Paths4Ze5T4V01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesTestservicePropertiesCurrentusageperiod"
        }
      }
    }
  }
};

export const Paths4Ze5T4V01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesTestservicePropertiesCurrentusageperiod: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths4Ze5T4V01AppsOwnerNameAppNameBillingAggregatedGetResponses200ContentApplicationJsonSchemaPropertiesUsagePropertiesTestservicePropertiesCurrentusageperiod",
    modelProperties: {
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "String"
        }
      },
      byAccount: {
        serializedName: "byAccount",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } }
        }
      },
      byApp: {
        serializedName: "byApp",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "Number" } } }
          }
        }
      }
    }
  }
};

export const PathsN4OwfxV01AppsOwnerNameAppNameBillingAggregatedGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsN4OwfxV01AppsOwnerNameAppNameBillingAggregatedGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsC87Bf3V01AppsOwnerNameAppNameBillingAggregatedGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsC87Bf3V01AppsOwnerNameAppNameBillingAggregatedGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsC87Bf3V01AppsOwnerNameAppNameBillingAggregatedGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsG46OulV01AppsOwnerNameAppNameAzureSubscriptionsAzureSubscriptionIdDeleteResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsG46OulV01AppsOwnerNameAppNameAzureSubscriptionsAzureSubscriptionIdDeleteResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsJiwhtgV01AppsOwnerNameAppNameAzureSubscriptionsAzureSubscriptionIdDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsJiwhtgV01AppsOwnerNameAppNameAzureSubscriptionsAzureSubscriptionIdDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsJiwhtgV01AppsOwnerNameAppNameAzureSubscriptionsAzureSubscriptionIdDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsZl5LyeV01AppsOwnerNameAppNameAzureSubscriptionsGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsZl5LyeV01AppsOwnerNameAppNameAzureSubscriptionsGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscription_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      subscriptionName: {
        serializedName: "subscription_name",
        required: true,
        type: {
          name: "String"
        }
      },
      isBilling: {
        serializedName: "is_billing",
        type: {
          name: "Boolean"
        }
      },
      isBillable: {
        serializedName: "is_billable",
        type: {
          name: "Boolean"
        }
      },
      isMicrosoftInternal: {
        serializedName: "is_microsoft_internal",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PathsYyfq7IV01AppsOwnerNameAppNameAzureSubscriptionsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsYyfq7IV01AppsOwnerNameAppNameAzureSubscriptionsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsIhmu71V01AppsOwnerNameAppNameAzureSubscriptionsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsIhmu71V01AppsOwnerNameAppNameAzureSubscriptionsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsIhmu71V01AppsOwnerNameAppNameAzureSubscriptionsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths11GzlnuV01AppsOwnerNameAppNameAzureSubscriptionsPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths11GzlnuV01AppsOwnerNameAppNameAzureSubscriptionsPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscription_id",
        required: true,
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const PathsIlp5CpV01AppsOwnerNameAppNameAzureSubscriptionsPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsIlp5CpV01AppsOwnerNameAppNameAzureSubscriptionsPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsO22Rx6V01AppsOwnerNameAppNameAzureSubscriptionsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsO22Rx6V01AppsOwnerNameAppNameAzureSubscriptionsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsO22Rx6V01AppsOwnerNameAppNameAzureSubscriptionsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1R8EjleV01AppsOwnerNameAppNameAvatarPostResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1R8EjleV01AppsOwnerNameAppNameAvatarPostResponses200ContentApplicationJsonSchemaAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      releaseType: {
        serializedName: "release_type",
        type: {
          name: "String"
        }
      },
      iconUrl: {
        serializedName: "icon_url",
        type: {
          name: "String"
        }
      },
      iconSource: {
        serializedName: "icon_source",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      os: {
        serializedName: "os",
        required: true,
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className:
            "Paths6Eac0FV01AppsOwnerNameAppNameAvatarPostResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner"
        }
      }
    }
  }
};

export const Paths6Eac0FV01AppsOwnerNameAppNameAvatarPostResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths6Eac0FV01AppsOwnerNameAppNameAvatarPostResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsTl8K7SV01AppsOwnerNameAppNameAvatarPostResponses200ContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsTl8K7SV01AppsOwnerNameAppNameAvatarPostResponses200ContentApplicationJsonSchemaAllof1",
    modelProperties: {
      appSecret: {
        serializedName: "app_secret",
        type: {
          name: "String"
        }
      },
      azureSubscription: {
        serializedName: "azure_subscription",
        type: {
          name: "Composite",
          className:
            "Paths730U6UV01AppsOwnerNameAppNameAvatarPostResponses200ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        type: {
          name: "String"
        }
      },
      memberPermissions: {
        serializedName: "member_permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Paths730U6UV01AppsOwnerNameAppNameAvatarPostResponses200ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths730U6UV01AppsOwnerNameAppNameAvatarPostResponses200ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscription_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      subscriptionName: {
        serializedName: "subscription_name",
        required: true,
        type: {
          name: "String"
        }
      },
      isBilling: {
        serializedName: "is_billing",
        type: {
          name: "Boolean"
        }
      },
      isBillable: {
        serializedName: "is_billable",
        type: {
          name: "Boolean"
        }
      },
      isMicrosoftInternal: {
        serializedName: "is_microsoft_internal",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths17Ufom9V01AppsOwnerNameAppNameAvatarPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths17Ufom9V01AppsOwnerNameAppNameAvatarPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsVa0B8OV01AppsOwnerNameAppNameAvatarPostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsVa0B8OV01AppsOwnerNameAppNameAvatarPostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsVa0B8OV01AppsOwnerNameAppNameAvatarPostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1D6EjcuV01AppsOwnerNameAppNameAvatarDeleteResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1D6EjcuV01AppsOwnerNameAppNameAvatarDeleteResponses200ContentApplicationJsonSchemaAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      releaseType: {
        serializedName: "release_type",
        type: {
          name: "String"
        }
      },
      iconUrl: {
        serializedName: "icon_url",
        type: {
          name: "String"
        }
      },
      iconSource: {
        serializedName: "icon_source",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      os: {
        serializedName: "os",
        required: true,
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className:
            "PathsUoduhjV01AppsOwnerNameAppNameAvatarDeleteResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner"
        }
      }
    }
  }
};

export const PathsUoduhjV01AppsOwnerNameAppNameAvatarDeleteResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsUoduhjV01AppsOwnerNameAppNameAvatarDeleteResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsJ1Qwc6V01AppsOwnerNameAppNameAvatarDeleteResponses200ContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsJ1Qwc6V01AppsOwnerNameAppNameAvatarDeleteResponses200ContentApplicationJsonSchemaAllof1",
    modelProperties: {
      appSecret: {
        serializedName: "app_secret",
        type: {
          name: "String"
        }
      },
      azureSubscription: {
        serializedName: "azure_subscription",
        type: {
          name: "Composite",
          className:
            "PathsSt41VbV01AppsOwnerNameAppNameAvatarDeleteResponses200ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        type: {
          name: "String"
        }
      },
      memberPermissions: {
        serializedName: "member_permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PathsSt41VbV01AppsOwnerNameAppNameAvatarDeleteResponses200ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsSt41VbV01AppsOwnerNameAppNameAvatarDeleteResponses200ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscription_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      subscriptionName: {
        serializedName: "subscription_name",
        required: true,
        type: {
          name: "String"
        }
      },
      isBilling: {
        serializedName: "is_billing",
        type: {
          name: "Boolean"
        }
      },
      isBillable: {
        serializedName: "is_billable",
        type: {
          name: "Boolean"
        }
      },
      isMicrosoftInternal: {
        serializedName: "is_microsoft_internal",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PathsB7Jif8V01AppsOwnerNameAppNameAvatarDeleteResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsB7Jif8V01AppsOwnerNameAppNameAvatarDeleteResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Jiykd7V01AppsOwnerNameAppNameAvatarDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Jiykd7V01AppsOwnerNameAppNameAvatarDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Jiykd7V01AppsOwnerNameAppNameAvatarDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1458PiV01AppsOwnerNameAppNameAuthUsersGetResponses401ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1458PiV01AppsOwnerNameAppNameAuthUsersGetResponses401ContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "Get401ApplicationJsonProperties"
        }
      }
    }
  }
};

export const Get401ApplicationJsonProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get401ApplicationJsonProperties",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Bjskc1V01AppsOwnerNameAppNameAuthUsersGetResponses500ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Bjskc1V01AppsOwnerNameAppNameAuthUsersGetResponses500ContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsO1Jj13V01AppsOwnerNameAppNameAuthUsersGetResponses500ContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsO1Jj13V01AppsOwnerNameAppNameAuthUsersGetResponses500ContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsO1Jj13V01AppsOwnerNameAppNameAuthUsersGetResponses500ContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsZew5JgV01AppsOwnerNameAppNameAppleTestFlightGroupsGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsZew5JgV01AppsOwnerNameAppNameAppleTestFlightGroupsGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      providerId: {
        serializedName: "providerId",
        type: {
          name: "Number"
        }
      },
      appleId: {
        serializedName: "appleId",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths11QoktgV01AppsOwnerNameAppNameAppleTestFlightGroupsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths11QoktgV01AppsOwnerNameAppNameAppleTestFlightGroupsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsH96V4UV01AppsOwnerNameAppNameAppleMappingGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsH96V4UV01AppsOwnerNameAppNameAppleMappingGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      appId: {
        serializedName: "app_id",
        type: {
          name: "String"
        }
      },
      serviceConnectionId: {
        serializedName: "service_connection_id",
        type: {
          name: "String"
        }
      },
      appleId: {
        serializedName: "apple_id",
        type: {
          name: "String"
        }
      },
      teamIdentifier: {
        serializedName: "team_identifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsU1IachV01AppsOwnerNameAppNameAppleMappingGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsU1IachV01AppsOwnerNameAppNameAppleMappingGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1F11J7YV01AppsOwnerNameAppNameAppleMappingDeleteResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1F11J7YV01AppsOwnerNameAppNameAppleMappingDeleteResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1B7RevxV01AppsOwnerNameAppNameAppleMappingPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1B7RevxV01AppsOwnerNameAppNameAppleMappingPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      serviceConnectionId: {
        serializedName: "service_connection_id",
        required: true,
        type: {
          name: "String"
        }
      },
      appleId: {
        serializedName: "apple_id",
        type: {
          name: "String"
        }
      },
      bundleIdentifier: {
        serializedName: "bundle_identifier",
        type: {
          name: "String"
        }
      },
      teamIdentifier: {
        serializedName: "team_identifier",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1J6Tdl2V01AppsOwnerNameAppNameAppleMappingPostResponses201ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1J6Tdl2V01AppsOwnerNameAppNameAppleMappingPostResponses201ContentApplicationJsonSchema",
    modelProperties: {
      appId: {
        serializedName: "app_id",
        type: {
          name: "String"
        }
      },
      serviceConnectionId: {
        serializedName: "service_connection_id",
        type: {
          name: "String"
        }
      },
      appleId: {
        serializedName: "apple_id",
        type: {
          name: "String"
        }
      },
      teamIdentifier: {
        serializedName: "team_identifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsRxnoxxV01AppsOwnerNameAppNameAppleMappingPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsRxnoxxV01AppsOwnerNameAppNameAppleMappingPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1NebezpV01AppsOwnerNameAppNameApiTokensApiTokenIdDeleteResponses400ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1NebezpV01AppsOwnerNameAppNameApiTokensApiTokenIdDeleteResponses400ContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "Delete400ApplicationJsonProperties"
        }
      }
    }
  }
};

export const Delete400ApplicationJsonProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Delete400ApplicationJsonProperties",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1X34P14V01AppsOwnerNameAppNameApiTokensApiTokenIdDeleteResponses401ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1X34P14V01AppsOwnerNameAppNameApiTokensApiTokenIdDeleteResponses401ContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "Delete401ApplicationJsonProperties"
        }
      }
    }
  }
};

export const Delete401ApplicationJsonProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Delete401ApplicationJsonProperties",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsA1Vv93V01AppsOwnerNameAppNameApiTokensApiTokenIdDeleteResponses404ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsA1Vv93V01AppsOwnerNameAppNameApiTokensApiTokenIdDeleteResponses404ContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsJzlh3AV01AppsOwnerNameAppNameApiTokensApiTokenIdDeleteResponses404ContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsJzlh3AV01AppsOwnerNameAppNameApiTokensApiTokenIdDeleteResponses404ContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsJzlh3AV01AppsOwnerNameAppNameApiTokensApiTokenIdDeleteResponses404ContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsVpkwjrV01AppsOwnerNameAppNameApiTokensGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsVpkwjrV01AppsOwnerNameAppNameApiTokensGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      createdAt: {
        serializedName: "created_at",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1P1Ao38V01AppsOwnerNameAppNameApiTokensGetResponses400ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1P1Ao38V01AppsOwnerNameAppNameApiTokensGetResponses400ContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsOkyae4V01AppsOwnerNameAppNameApiTokensGetResponses400ContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsOkyae4V01AppsOwnerNameAppNameApiTokensGetResponses400ContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsOkyae4V01AppsOwnerNameAppNameApiTokensGetResponses400ContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsJ0An0FV01AppsOwnerNameAppNameApiTokensGetResponses401ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsJ0An0FV01AppsOwnerNameAppNameApiTokensGetResponses401ContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsB6Lrm7V01AppsOwnerNameAppNameApiTokensGetResponses401ContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsB6Lrm7V01AppsOwnerNameAppNameApiTokensGetResponses401ContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsB6Lrm7V01AppsOwnerNameAppNameApiTokensGetResponses401ContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsUuian4V01AppsOwnerNameAppNameApiTokensPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsUuian4V01AppsOwnerNameAppNameApiTokensPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Paths1FrjyzkV01AppsOwnerNameAppNameApiTokensPostResponses201ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1FrjyzkV01AppsOwnerNameAppNameApiTokensPostResponses201ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      apiToken: {
        serializedName: "api_token",
        required: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      createdAt: {
        serializedName: "created_at",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths8Qg468V01AppsOwnerNameAppNameApiTokensPostResponses400ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths8Qg468V01AppsOwnerNameAppNameApiTokensPostResponses400ContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Es2B28V01AppsOwnerNameAppNameApiTokensPostResponses400ContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Es2B28V01AppsOwnerNameAppNameApiTokensPostResponses400ContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Es2B28V01AppsOwnerNameAppNameApiTokensPostResponses400ContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1ElzjgvV01AppsOwnerNameAppNameApiTokensPostResponses401ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1ElzjgvV01AppsOwnerNameAppNameApiTokensPostResponses401ContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "Post401ApplicationJsonProperties"
        }
      }
    }
  }
};

export const Post401ApplicationJsonProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Post401ApplicationJsonProperties",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Lu7Qn2V01AppsOwnerNameAppNameAnalyticsVersionsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Lu7Qn2V01AppsOwnerNameAppNameAnalyticsVersionsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      versions: {
        serializedName: "versions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths1W577QdV01AppsOwnerNameAppNameAnalyticsVersionsGetResponses200ContentApplicationJsonSchemaPropertiesVersionsItems"
            }
          }
        }
      },
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths1W577QdV01AppsOwnerNameAppNameAnalyticsVersionsGetResponses200ContentApplicationJsonSchemaPropertiesVersionsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1W577QdV01AppsOwnerNameAppNameAnalyticsVersionsGetResponses200ContentApplicationJsonSchemaPropertiesVersionsItems",
    modelProperties: {
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      previousCount: {
        serializedName: "previous_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths1M0Rs3DV01AppsOwnerNameAppNameAnalyticsVersionsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1M0Rs3DV01AppsOwnerNameAppNameAnalyticsVersionsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsV9MsjbV01AppsOwnerNameAppNameAnalyticsVersionsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsV9MsjbV01AppsOwnerNameAppNameAnalyticsVersionsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsV9MsjbV01AppsOwnerNameAppNameAnalyticsVersionsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsG2CzwV01AppsOwnerNameAppNameAnalyticsSessionsPerDeviceGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsG2CzwV01AppsOwnerNameAppNameAnalyticsSessionsPerDeviceGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      averageSessionsPerUser: {
        serializedName: "average_sessions_per_user",
        type: {
          name: "Number"
        }
      },
      previousAverageSessionsPerUser: {
        serializedName: "previous_average_sessions_per_user",
        type: {
          name: "Number"
        }
      },
      totalCount: {
        serializedName: "total_count",
        type: {
          name: "Number"
        }
      },
      previousTotalCount: {
        serializedName: "previous_total_count",
        type: {
          name: "Number"
        }
      },
      sessionsPerUser: {
        serializedName: "sessions_per_user",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths1S8KsifV01AppsOwnerNameAppNameAnalyticsSessionsPerDeviceGetResponses200ContentApplicationJsonSchemaPropertiesSessionsPerUserItems"
            }
          }
        }
      }
    }
  }
};

export const Paths1S8KsifV01AppsOwnerNameAppNameAnalyticsSessionsPerDeviceGetResponses200ContentApplicationJsonSchemaPropertiesSessionsPerUserItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1S8KsifV01AppsOwnerNameAppNameAnalyticsSessionsPerDeviceGetResponses200ContentApplicationJsonSchemaPropertiesSessionsPerUserItems",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PathsXdv8KgV01AppsOwnerNameAppNameAnalyticsSessionsPerDeviceGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsXdv8KgV01AppsOwnerNameAppNameAnalyticsSessionsPerDeviceGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsSp9O4RV01AppsOwnerNameAppNameAnalyticsSessionsPerDeviceGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsSp9O4RV01AppsOwnerNameAppNameAnalyticsSessionsPerDeviceGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsSp9O4RV01AppsOwnerNameAppNameAnalyticsSessionsPerDeviceGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsLck9IlV01AppsOwnerNameAppNameAnalyticsSessionDurationsDistributionGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsLck9IlV01AppsOwnerNameAppNameAnalyticsSessionDurationsDistributionGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      distribution: {
        serializedName: "distribution",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths10FblyaV01AppsOwnerNameAppNameAnalyticsSessionDurationsDistributionGetResponses200ContentApplicationJsonSchemaPropertiesDistributionItems"
            }
          }
        }
      },
      previousAverageDuration: {
        serializedName: "previous_average_duration",
        type: {
          name: "String"
        }
      },
      averageDuration: {
        serializedName: "average_duration",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths10FblyaV01AppsOwnerNameAppNameAnalyticsSessionDurationsDistributionGetResponses200ContentApplicationJsonSchemaPropertiesDistributionItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths10FblyaV01AppsOwnerNameAppNameAnalyticsSessionDurationsDistributionGetResponses200ContentApplicationJsonSchemaPropertiesDistributionItems",
    modelProperties: {
      bucket: {
        serializedName: "bucket",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PathsE9HufsV01AppsOwnerNameAppNameAnalyticsSessionDurationsDistributionGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsE9HufsV01AppsOwnerNameAppNameAnalyticsSessionDurationsDistributionGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Sic7B6V01AppsOwnerNameAppNameAnalyticsSessionDurationsDistributionGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Sic7B6V01AppsOwnerNameAppNameAnalyticsSessionDurationsDistributionGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Sic7B6V01AppsOwnerNameAppNameAnalyticsSessionDurationsDistributionGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Exxd1EV01AppsOwnerNameAppNameAnalyticsSessionCountsGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Exxd1EV01AppsOwnerNameAppNameAnalyticsSessionCountsGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PathsOfz5BuV01AppsOwnerNameAppNameAnalyticsSessionCountsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsOfz5BuV01AppsOwnerNameAppNameAnalyticsSessionCountsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsEzijgzV01AppsOwnerNameAppNameAnalyticsSessionCountsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsEzijgzV01AppsOwnerNameAppNameAnalyticsSessionCountsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsEzijgzV01AppsOwnerNameAppNameAnalyticsSessionCountsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsRxbv8DV01AppsOwnerNameAppNameAnalyticsPlacesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsRxbv8DV01AppsOwnerNameAppNameAnalyticsPlacesGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      },
      places: {
        serializedName: "places",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsBh4LpxV01AppsOwnerNameAppNameAnalyticsPlacesGetResponses200ContentApplicationJsonSchemaPropertiesPlacesItems"
            }
          }
        }
      }
    }
  }
};

export const PathsBh4LpxV01AppsOwnerNameAppNameAnalyticsPlacesGetResponses200ContentApplicationJsonSchemaPropertiesPlacesItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsBh4LpxV01AppsOwnerNameAppNameAnalyticsPlacesGetResponses200ContentApplicationJsonSchemaPropertiesPlacesItems",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      previousCount: {
        serializedName: "previous_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths1B7RutuV01AppsOwnerNameAppNameAnalyticsPlacesGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1B7RutuV01AppsOwnerNameAppNameAnalyticsPlacesGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsJvtbqiV01AppsOwnerNameAppNameAnalyticsPlacesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsJvtbqiV01AppsOwnerNameAppNameAnalyticsPlacesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsJvtbqiV01AppsOwnerNameAppNameAnalyticsPlacesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths19DmkkdV01AppsOwnerNameAppNameAnalyticsOsesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths19DmkkdV01AppsOwnerNameAppNameAnalyticsOsesGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      },
      oses: {
        serializedName: "oses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths1Fot2SyV01AppsOwnerNameAppNameAnalyticsOsesGetResponses200ContentApplicationJsonSchemaPropertiesOsesItems"
            }
          }
        }
      }
    }
  }
};

export const Paths1Fot2SyV01AppsOwnerNameAppNameAnalyticsOsesGetResponses200ContentApplicationJsonSchemaPropertiesOsesItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Fot2SyV01AppsOwnerNameAppNameAnalyticsOsesGetResponses200ContentApplicationJsonSchemaPropertiesOsesItems",
    modelProperties: {
      osName: {
        serializedName: "os_name",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      previousCount: {
        serializedName: "previous_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths1G1UvgvV01AppsOwnerNameAppNameAnalyticsOsesGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1G1UvgvV01AppsOwnerNameAppNameAnalyticsOsesGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Vfw1VhV01AppsOwnerNameAppNameAnalyticsOsesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Vfw1VhV01AppsOwnerNameAppNameAnalyticsOsesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Vfw1VhV01AppsOwnerNameAppNameAnalyticsOsesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths814LkhV01AppsOwnerNameAppNameAnalyticsModelsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths814LkhV01AppsOwnerNameAppNameAnalyticsModelsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      },
      models: {
        serializedName: "models",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths1VtqjxlV01AppsOwnerNameAppNameAnalyticsModelsGetResponses200ContentApplicationJsonSchemaPropertiesModelsItems"
            }
          }
        }
      }
    }
  }
};

export const Paths1VtqjxlV01AppsOwnerNameAppNameAnalyticsModelsGetResponses200ContentApplicationJsonSchemaPropertiesModelsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1VtqjxlV01AppsOwnerNameAppNameAnalyticsModelsGetResponses200ContentApplicationJsonSchemaPropertiesModelsItems",
    modelProperties: {
      modelName: {
        serializedName: "model_name",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      previousCount: {
        serializedName: "previous_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PathsGaffajV01AppsOwnerNameAppNameAnalyticsModelsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsGaffajV01AppsOwnerNameAppNameAnalyticsModelsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1H2Ze8FV01AppsOwnerNameAppNameAnalyticsModelsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1H2Ze8FV01AppsOwnerNameAppNameAnalyticsModelsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1H2Ze8FV01AppsOwnerNameAppNameAnalyticsModelsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsW9Dr0CV01AppsOwnerNameAppNameAnalyticsLogFlowGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsW9Dr0CV01AppsOwnerNameAppNameAnalyticsLogFlowGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      exceededMaxLimit: {
        serializedName: "exceeded_max_limit",
        type: {
          name: "Boolean"
        }
      },
      lastReceivedLogTimestamp: {
        serializedName: "last_received_log_timestamp",
        type: {
          name: "DateTime"
        }
      },
      logs: {
        serializedName: "logs",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths16LtczwV01AppsOwnerNameAppNameAnalyticsLogFlowGetResponses200ContentApplicationJsonSchemaPropertiesLogsItems"
            }
          }
        }
      }
    }
  }
};

export const Paths16LtczwV01AppsOwnerNameAppNameAnalyticsLogFlowGetResponses200ContentApplicationJsonSchemaPropertiesLogsItems: coreClient.CompositeMapper = {
  serializedName:
    "Paths16LtczwV01AppsOwnerNameAppNameAnalyticsLogFlowGetResponses200ContentApplicationJsonSchemaPropertiesLogsItems",
  type: {
    name: "Composite",
    className:
      "Paths16LtczwV01AppsOwnerNameAppNameAnalyticsLogFlowGetResponses200ContentApplicationJsonSchemaPropertiesLogsItems",
    uberParent:
      "Paths16LtczwV01AppsOwnerNameAppNameAnalyticsLogFlowGetResponses200ContentApplicationJsonSchemaPropertiesLogsItems",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className:
            "PathsAsxc3TV01AppsOwnerNameAppNameAnalyticsLogFlowGetResponses200ContentApplicationJsonSchemaPropertiesLogsItemsPropertiesDevice"
        }
      }
    }
  }
};

export const PathsAsxc3TV01AppsOwnerNameAppNameAnalyticsLogFlowGetResponses200ContentApplicationJsonSchemaPropertiesLogsItemsPropertiesDevice: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsAsxc3TV01AppsOwnerNameAppNameAnalyticsLogFlowGetResponses200ContentApplicationJsonSchemaPropertiesLogsItemsPropertiesDevice",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsYucxmuV01AppsOwnerNameAppNameAnalyticsLogFlowGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsYucxmuV01AppsOwnerNameAppNameAnalyticsLogFlowGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsAlnd2FV01AppsOwnerNameAppNameAnalyticsLogFlowGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsAlnd2FV01AppsOwnerNameAppNameAnalyticsLogFlowGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsAlnd2FV01AppsOwnerNameAppNameAnalyticsLogFlowGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsD2NxbnV01AppsOwnerNameAppNameAnalyticsLanguagesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsD2NxbnV01AppsOwnerNameAppNameAnalyticsLanguagesGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      },
      languages: {
        serializedName: "languages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsM074LcV01AppsOwnerNameAppNameAnalyticsLanguagesGetResponses200ContentApplicationJsonSchemaPropertiesLanguagesItems"
            }
          }
        }
      }
    }
  }
};

export const PathsM074LcV01AppsOwnerNameAppNameAnalyticsLanguagesGetResponses200ContentApplicationJsonSchemaPropertiesLanguagesItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsM074LcV01AppsOwnerNameAppNameAnalyticsLanguagesGetResponses200ContentApplicationJsonSchemaPropertiesLanguagesItems",
    modelProperties: {
      languageName: {
        serializedName: "language_name",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      previousCount: {
        serializedName: "previous_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths1MghrhbV01AppsOwnerNameAppNameAnalyticsLanguagesGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1MghrhbV01AppsOwnerNameAppNameAnalyticsLanguagesGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths197Pz78V01AppsOwnerNameAppNameAnalyticsLanguagesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths197Pz78V01AppsOwnerNameAppNameAnalyticsLanguagesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths197Pz78V01AppsOwnerNameAppNameAnalyticsLanguagesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths14I7I2XV01AppsOwnerNameAppNameAnalyticsGenericLogFlowGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths14I7I2XV01AppsOwnerNameAppNameAnalyticsGenericLogFlowGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      exceededMaxLimit: {
        serializedName: "exceeded_max_limit",
        type: {
          name: "Boolean"
        }
      },
      lastReceivedLogTimestamp: {
        serializedName: "last_received_log_timestamp",
        type: {
          name: "DateTime"
        }
      },
      logs: {
        serializedName: "logs",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths16H6A62V01AppsOwnerNameAppNameAnalyticsGenericLogFlowGetResponses200ContentApplicationJsonSchemaPropertiesLogsItems"
            }
          }
        }
      }
    }
  }
};

export const Paths16H6A62V01AppsOwnerNameAppNameAnalyticsGenericLogFlowGetResponses200ContentApplicationJsonSchemaPropertiesLogsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths16H6A62V01AppsOwnerNameAppNameAnalyticsGenericLogFlowGetResponses200ContentApplicationJsonSchemaPropertiesLogsItems",
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      sessionId: {
        serializedName: "session_id",
        type: {
          name: "Uuid"
        }
      },
      eventId: {
        serializedName: "event_id",
        type: {
          name: "String"
        }
      },
      eventName: {
        serializedName: "event_name",
        type: {
          name: "String"
        }
      },
      messageId: {
        serializedName: "message_id",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className:
            "PathsP8AffzV01AppsOwnerNameAppNameAnalyticsGenericLogFlowGetResponses200ContentApplicationJsonSchemaPropertiesLogsItemsPropertiesDevice"
        }
      },
      authProvider: {
        serializedName: "auth_provider",
        type: {
          name: "String"
        }
      },
      accountId: {
        serializedName: "account_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsP8AffzV01AppsOwnerNameAppNameAnalyticsGenericLogFlowGetResponses200ContentApplicationJsonSchemaPropertiesLogsItemsPropertiesDevice: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsP8AffzV01AppsOwnerNameAppNameAnalyticsGenericLogFlowGetResponses200ContentApplicationJsonSchemaPropertiesLogsItemsPropertiesDevice",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1McyotlV01AppsOwnerNameAppNameAnalyticsGenericLogFlowGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1McyotlV01AppsOwnerNameAppNameAnalyticsGenericLogFlowGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1LsxazwV01AppsOwnerNameAppNameAnalyticsGenericLogFlowGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1LsxazwV01AppsOwnerNameAppNameAnalyticsGenericLogFlowGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1LsxazwV01AppsOwnerNameAppNameAnalyticsGenericLogFlowGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsC87RxV01AppsOwnerNameAppNameAnalyticsEventsEventNamePropertiesEventPropertyNameCountsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsC87RxV01AppsOwnerNameAppNameAnalyticsEventsEventNamePropertiesEventPropertyNameCountsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      },
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsLsfzhjV01AppsOwnerNameAppNameAnalyticsEventsEventNamePropertiesEventPropertyNameCountsGetResponses200ContentApplicationJsonSchemaPropertiesValuesItems"
            }
          }
        }
      }
    }
  }
};

export const PathsLsfzhjV01AppsOwnerNameAppNameAnalyticsEventsEventNamePropertiesEventPropertyNameCountsGetResponses200ContentApplicationJsonSchemaPropertiesValuesItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsLsfzhjV01AppsOwnerNameAppNameAnalyticsEventsEventNamePropertiesEventPropertyNameCountsGetResponses200ContentApplicationJsonSchemaPropertiesValuesItems",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      previousCount: {
        serializedName: "previous_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths10Zy7X0V01AppsOwnerNameAppNameAnalyticsEventsEventNamePropertiesEventPropertyNameCountsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths10Zy7X0V01AppsOwnerNameAppNameAnalyticsEventsEventNamePropertiesEventPropertyNameCountsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1WmvqqqV01AppsOwnerNameAppNameAnalyticsEventsEventNamePropertiesEventPropertyNameCountsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1WmvqqqV01AppsOwnerNameAppNameAnalyticsEventsEventNamePropertiesEventPropertyNameCountsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1WmvqqqV01AppsOwnerNameAppNameAnalyticsEventsEventNamePropertiesEventPropertyNameCountsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsU48L8WV01AppsOwnerNameAppNameAnalyticsEventsEventNamePropertiesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsU48L8WV01AppsOwnerNameAppNameAnalyticsEventsEventNamePropertiesGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      eventProperties: {
        serializedName: "event_properties",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PathsAk50KdV01AppsOwnerNameAppNameAnalyticsEventsEventNamePropertiesGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsAk50KdV01AppsOwnerNameAppNameAnalyticsEventsEventNamePropertiesGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsE27Sx5V01AppsOwnerNameAppNameAnalyticsEventsEventNamePropertiesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsE27Sx5V01AppsOwnerNameAppNameAnalyticsEventsEventNamePropertiesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsE27Sx5V01AppsOwnerNameAppNameAnalyticsEventsEventNamePropertiesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsTigd7TV01AppsOwnerNameAppNameAnalyticsEventsEventNameEventCountGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsTigd7TV01AppsOwnerNameAppNameAnalyticsEventsEventNameEventCountGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      totalCount: {
        serializedName: "total_count",
        type: {
          name: "Number"
        }
      },
      previousTotalCount: {
        serializedName: "previous_total_count",
        type: {
          name: "Number"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths2Ok3SyV01AppsOwnerNameAppNameAnalyticsEventsEventNameEventCountGetResponses200ContentApplicationJsonSchemaPropertiesCountItems"
            }
          }
        }
      }
    }
  }
};

export const Paths2Ok3SyV01AppsOwnerNameAppNameAnalyticsEventsEventNameEventCountGetResponses200ContentApplicationJsonSchemaPropertiesCountItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths2Ok3SyV01AppsOwnerNameAppNameAnalyticsEventsEventNameEventCountGetResponses200ContentApplicationJsonSchemaPropertiesCountItems",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PathsJjlrfvV01AppsOwnerNameAppNameAnalyticsEventsEventNameEventCountGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsJjlrfvV01AppsOwnerNameAppNameAnalyticsEventsEventNameEventCountGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths675VrtV01AppsOwnerNameAppNameAnalyticsEventsEventNameEventCountGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths675VrtV01AppsOwnerNameAppNameAnalyticsEventsEventNameEventCountGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths675VrtV01AppsOwnerNameAppNameAnalyticsEventsEventNameEventCountGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsZz2O50V01AppsOwnerNameAppNameAnalyticsEventsEventNameDeviceCountGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsZz2O50V01AppsOwnerNameAppNameAnalyticsEventsEventNameDeviceCountGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      totalDevices: {
        serializedName: "total_devices",
        type: {
          name: "Number"
        }
      },
      totalDevicesWithEvent: {
        serializedName: "total_devices_with_event",
        type: {
          name: "Number"
        }
      },
      previousTotalDevicesWithEvent: {
        serializedName: "previous_total_devices_with_event",
        type: {
          name: "Number"
        }
      },
      devicesCount: {
        serializedName: "devices_count",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsQf9VuhV01AppsOwnerNameAppNameAnalyticsEventsEventNameDeviceCountGetResponses200ContentApplicationJsonSchemaPropertiesDevicesCountItems"
            }
          }
        }
      }
    }
  }
};

export const PathsQf9VuhV01AppsOwnerNameAppNameAnalyticsEventsEventNameDeviceCountGetResponses200ContentApplicationJsonSchemaPropertiesDevicesCountItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsQf9VuhV01AppsOwnerNameAppNameAnalyticsEventsEventNameDeviceCountGetResponses200ContentApplicationJsonSchemaPropertiesDevicesCountItems",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PathsBei5L3V01AppsOwnerNameAppNameAnalyticsEventsEventNameDeviceCountGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsBei5L3V01AppsOwnerNameAppNameAnalyticsEventsEventNameDeviceCountGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Q53VhsV01AppsOwnerNameAppNameAnalyticsEventsEventNameDeviceCountGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Q53VhsV01AppsOwnerNameAppNameAnalyticsEventsEventNameDeviceCountGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Q53VhsV01AppsOwnerNameAppNameAnalyticsEventsEventNameDeviceCountGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Ggxk2EV01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerSessionGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Ggxk2EV01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerSessionGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      avgCountPerSession: {
        serializedName: "avg_count_per_session",
        type: {
          name: "Number"
        }
      },
      previousAvgCountPerSession: {
        serializedName: "previous_avg_count_per_session",
        type: {
          name: "Number"
        }
      },
      countPerSession: {
        serializedName: "count_per_session",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths33Ckd3V01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerSessionGetResponses200ContentApplicationJsonSchemaPropertiesCountPerSessionItems"
            }
          }
        }
      }
    }
  }
};

export const Paths33Ckd3V01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerSessionGetResponses200ContentApplicationJsonSchemaPropertiesCountPerSessionItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths33Ckd3V01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerSessionGetResponses200ContentApplicationJsonSchemaPropertiesCountPerSessionItems",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PathsE2Fo6FV01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerSessionGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsE2Fo6FV01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerSessionGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsM2Qve7V01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerSessionGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsM2Qve7V01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerSessionGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsM2Qve7V01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerSessionGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Eiee2V01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerDeviceGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Eiee2V01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerDeviceGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      avgCountPerDevice: {
        serializedName: "avg_count_per_device",
        type: {
          name: "Number"
        }
      },
      previousAvgCountPerDevice: {
        serializedName: "previous_avg_count_per_device",
        type: {
          name: "Number"
        }
      },
      countPerDevice: {
        serializedName: "count_per_device",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths1Xb3I0PV01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerDeviceGetResponses200ContentApplicationJsonSchemaPropertiesCountPerDeviceItems"
            }
          }
        }
      }
    }
  }
};

export const Paths1Xb3I0PV01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerDeviceGetResponses200ContentApplicationJsonSchemaPropertiesCountPerDeviceItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Xb3I0PV01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerDeviceGetResponses200ContentApplicationJsonSchemaPropertiesCountPerDeviceItems",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths1Z0SaeV01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerDeviceGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Z0SaeV01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerDeviceGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsDzmih4V01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerDeviceGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsDzmih4V01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerDeviceGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsDzmih4V01AppsOwnerNameAppNameAnalyticsEventsEventNameCountPerDeviceGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Al4Sp3V01AppsOwnerNameAppNameAnalyticsEventsEventNameDeleteResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Al4Sp3V01AppsOwnerNameAppNameAnalyticsEventsEventNameDeleteResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsX5R6DfV01AppsOwnerNameAppNameAnalyticsEventsEventNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsX5R6DfV01AppsOwnerNameAppNameAnalyticsEventsEventNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsX5R6DfV01AppsOwnerNameAppNameAnalyticsEventsEventNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsDtblk4V01AppsOwnerNameAppNameAnalyticsEventsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsDtblk4V01AppsOwnerNameAppNameAnalyticsEventsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      events: {
        serializedName: "events",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsM70QdxV01AppsOwnerNameAppNameAnalyticsEventsGetResponses200ContentApplicationJsonSchemaPropertiesEventsItems"
            }
          }
        }
      },
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      },
      totalDevices: {
        serializedName: "total_devices",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PathsM70QdxV01AppsOwnerNameAppNameAnalyticsEventsGetResponses200ContentApplicationJsonSchemaPropertiesEventsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsM70QdxV01AppsOwnerNameAppNameAnalyticsEventsGetResponses200ContentApplicationJsonSchemaPropertiesEventsItems",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      deviceCount: {
        serializedName: "device_count",
        type: {
          name: "Number"
        }
      },
      previousDeviceCount: {
        serializedName: "previous_device_count",
        type: {
          name: "Number"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      previousCount: {
        serializedName: "previous_count",
        type: {
          name: "Number"
        }
      },
      countPerDevice: {
        serializedName: "count_per_device",
        type: {
          name: "Number"
        }
      },
      countPerSession: {
        serializedName: "count_per_session",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths1L7Des7V01AppsOwnerNameAppNameAnalyticsEventsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1L7Des7V01AppsOwnerNameAppNameAnalyticsEventsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Jpj1WtV01AppsOwnerNameAppNameAnalyticsEventsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Jpj1WtV01AppsOwnerNameAppNameAnalyticsEventsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Jpj1WtV01AppsOwnerNameAppNameAnalyticsEventsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsH4Oq3ZV01AppsOwnerNameAppNameAnalyticsEventLogsEventNameDeleteResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsH4Oq3ZV01AppsOwnerNameAppNameAnalyticsEventLogsEventNameDeleteResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1UwhkciV01AppsOwnerNameAppNameAnalyticsEventLogsEventNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1UwhkciV01AppsOwnerNameAppNameAnalyticsEventLogsEventNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1UwhkciV01AppsOwnerNameAppNameAnalyticsEventLogsEventNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Pzxl78V01AppsOwnerNameAppNameAnalyticsDistributionReleaseCountsPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Pzxl78V01AppsOwnerNameAppNameAnalyticsDistributionReleaseCountsPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      releases: {
        constraints: {
          MinItems: 1
        },
        serializedName: "releases",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PostContentSchemaReleasesItem"
            }
          }
        }
      }
    }
  }
};

export const Paths1D756ChV01AppsOwnerNameAppNameAnalyticsDistributionReleaseCountsPostRequestbodyContentApplicationJsonSchemaPropertiesReleasesItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1D756ChV01AppsOwnerNameAppNameAnalyticsDistributionReleaseCountsPostRequestbodyContentApplicationJsonSchemaPropertiesReleasesItemsAllof0",
    modelProperties: {
      release: {
        serializedName: "release",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Vmnk7OV01AppsOwnerNameAppNameAnalyticsDistributionReleaseCountsPostResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Vmnk7OV01AppsOwnerNameAppNameAnalyticsDistributionReleaseCountsPostResponses200ContentApplicationJsonSchema",
    modelProperties: {
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      },
      counts: {
        serializedName: "counts",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths7Pd7IeV01AppsOwnerNameAppNameAnalyticsDistributionReleaseCountsPostResponses200ContentApplicationJsonSchemaPropertiesCountsItems"
            }
          }
        }
      }
    }
  }
};

export const Paths7Pd7IeV01AppsOwnerNameAppNameAnalyticsDistributionReleaseCountsPostResponses200ContentApplicationJsonSchemaPropertiesCountsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths7Pd7IeV01AppsOwnerNameAppNameAnalyticsDistributionReleaseCountsPostResponses200ContentApplicationJsonSchemaPropertiesCountsItems",
    modelProperties: {
      releaseId: {
        serializedName: "release_id",
        required: true,
        type: {
          name: "String"
        }
      },
      distributionGroup: {
        serializedName: "distribution_group",
        type: {
          name: "String"
        }
      },
      uniqueCount: {
        serializedName: "unique_count",
        required: true,
        type: {
          name: "Number"
        }
      },
      totalCount: {
        serializedName: "total_count",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths12681XzV01AppsOwnerNameAppNameAnalyticsDistributionReleaseCountsPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths12681XzV01AppsOwnerNameAppNameAnalyticsDistributionReleaseCountsPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths4Bfa3V01AppsOwnerNameAppNameAnalyticsDistributionReleaseCountsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths4Bfa3V01AppsOwnerNameAppNameAnalyticsDistributionReleaseCountsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths4Bfa3V01AppsOwnerNameAppNameAnalyticsDistributionReleaseCountsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Evy1PhV01AppsOwnerNameAppNameAnalyticsCrashfreeDevicePercentagesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Evy1PhV01AppsOwnerNameAppNameAnalyticsCrashfreeDevicePercentagesGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      averagePercentage: {
        serializedName: "average_percentage",
        type: {
          name: "Number"
        }
      },
      dailyPercentages: {
        serializedName: "daily_percentages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths1Oj1AudV01AppsOwnerNameAppNameAnalyticsCrashfreeDevicePercentagesGetResponses200ContentApplicationJsonSchemaPropertiesDailyPercentagesItems"
            }
          }
        }
      }
    }
  }
};

export const Paths1Oj1AudV01AppsOwnerNameAppNameAnalyticsCrashfreeDevicePercentagesGetResponses200ContentApplicationJsonSchemaPropertiesDailyPercentagesItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Oj1AudV01AppsOwnerNameAppNameAnalyticsCrashfreeDevicePercentagesGetResponses200ContentApplicationJsonSchemaPropertiesDailyPercentagesItems",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      percentage: {
        serializedName: "percentage",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths10VcmexV01AppsOwnerNameAppNameAnalyticsCrashfreeDevicePercentagesGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths10VcmexV01AppsOwnerNameAppNameAnalyticsCrashfreeDevicePercentagesGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsFu92X5V01AppsOwnerNameAppNameAnalyticsCrashfreeDevicePercentagesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsFu92X5V01AppsOwnerNameAppNameAnalyticsCrashfreeDevicePercentagesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsFu92X5V01AppsOwnerNameAppNameAnalyticsCrashfreeDevicePercentagesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsBb6J7UV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdOverallGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsBb6J7UV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdOverallGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      crashCount: {
        serializedName: "crash_count",
        type: {
          name: "Number"
        }
      },
      deviceCount: {
        serializedName: "device_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths167FplzV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdOverallGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths167FplzV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdOverallGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Oprgo9V01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdOverallGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Oprgo9V01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdOverallGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Oprgo9V01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdOverallGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1U5H2EiV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdOperatingSystemsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1U5H2EiV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdOperatingSystemsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      crashCount: {
        serializedName: "crash_count",
        type: {
          name: "Number"
        }
      },
      operatingSystems: {
        serializedName: "operating_systems",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths1257UwhV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdOperatingSystemsGetResponses200ContentApplicationJsonSchemaPropertiesOperatingSystemsItems"
            }
          }
        }
      }
    }
  }
};

export const Paths1257UwhV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdOperatingSystemsGetResponses200ContentApplicationJsonSchemaPropertiesOperatingSystemsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1257UwhV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdOperatingSystemsGetResponses200ContentApplicationJsonSchemaPropertiesOperatingSystemsItems",
    modelProperties: {
      operatingSystemName: {
        serializedName: "operating_system_name",
        type: {
          name: "String"
        }
      },
      crashCount: {
        serializedName: "crash_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths19Xl0HvV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdOperatingSystemsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths19Xl0HvV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdOperatingSystemsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsI8LdwjV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdOperatingSystemsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsI8LdwjV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdOperatingSystemsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsI8LdwjV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdOperatingSystemsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths130SxupV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdModelsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths130SxupV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdModelsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      crashCount: {
        serializedName: "crash_count",
        type: {
          name: "Number"
        }
      },
      models: {
        serializedName: "models",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths1Y9X8C3V01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdModelsGetResponses200ContentApplicationJsonSchemaPropertiesModelsItems"
            }
          }
        }
      }
    }
  }
};

export const Paths1Y9X8C3V01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdModelsGetResponses200ContentApplicationJsonSchemaPropertiesModelsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Y9X8C3V01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdModelsGetResponses200ContentApplicationJsonSchemaPropertiesModelsItems",
    modelProperties: {
      modelName: {
        serializedName: "model_name",
        type: {
          name: "String"
        }
      },
      crashCount: {
        serializedName: "crash_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths1Tx0U3UV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdModelsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Tx0U3UV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdModelsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths15VazsxV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdModelsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths15VazsxV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdModelsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths15VazsxV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdModelsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1NileprV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdCrashCountsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1NileprV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdCrashCountsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      crashes: {
        serializedName: "crashes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsBnfog8V01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdCrashCountsGetResponses200ContentApplicationJsonSchemaPropertiesCrashesItems"
            }
          }
        }
      }
    }
  }
};

export const PathsBnfog8V01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdCrashCountsGetResponses200ContentApplicationJsonSchemaPropertiesCrashesItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsBnfog8V01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdCrashCountsGetResponses200ContentApplicationJsonSchemaPropertiesCrashesItems",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PathsYwx8WzV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdCrashCountsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsYwx8WzV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdCrashCountsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1H67M6CV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdCrashCountsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1H67M6CV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdCrashCountsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1H67M6CV01AppsOwnerNameAppNameAnalyticsCrashGroupsCrashGroupIdCrashCountsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsDc3Tj4V01AppsOwnerNameAppNameAnalyticsCrashGroupsPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsDc3Tj4V01AppsOwnerNameAppNameAnalyticsCrashGroupsPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      crashGroups: {
        constraints: {
          MinItems: 1
        },
        serializedName: "crash_groups",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PostContentSchemaCrashGroupsItem"
            }
          }
        }
      }
    }
  }
};

export const PostContentSchemaCrashGroupsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PostContentSchemaCrashGroupsItem",
    modelProperties: {
      crashGroupId: {
        serializedName: "crash_group_id",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsP18M6YV01AppsOwnerNameAppNameAnalyticsCrashGroupsPostResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsP18M6YV01AppsOwnerNameAppNameAnalyticsCrashGroupsPostResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      crashGroupId: {
        serializedName: "crash_group_id",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        type: {
          name: "String"
        }
      },
      overall: {
        serializedName: "overall",
        type: {
          name: "Composite",
          className: "PostResponses200ContentApplicationJsonSchemaItemOverall"
        }
      }
    }
  }
};

export const PostResponses200ContentApplicationJsonSchemaItemOverall: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PostResponses200ContentApplicationJsonSchemaItemOverall",
    modelProperties: {
      crashCount: {
        serializedName: "crash_count",
        type: {
          name: "Number"
        }
      },
      deviceCount: {
        serializedName: "device_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PathsCy68FjV01AppsOwnerNameAppNameAnalyticsCrashGroupsPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsCy68FjV01AppsOwnerNameAppNameAnalyticsCrashGroupsPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsNivm6BV01AppsOwnerNameAppNameAnalyticsCrashGroupsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsNivm6BV01AppsOwnerNameAppNameAnalyticsCrashGroupsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsNivm6BV01AppsOwnerNameAppNameAnalyticsCrashGroupsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths5Ga8JpV01AppsOwnerNameAppNameAnalyticsCrashCountsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths5Ga8JpV01AppsOwnerNameAppNameAnalyticsCrashCountsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      crashes: {
        serializedName: "crashes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsHnsiz1V01AppsOwnerNameAppNameAnalyticsCrashCountsGetResponses200ContentApplicationJsonSchemaPropertiesCrashesItems"
            }
          }
        }
      }
    }
  }
};

export const PathsHnsiz1V01AppsOwnerNameAppNameAnalyticsCrashCountsGetResponses200ContentApplicationJsonSchemaPropertiesCrashesItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsHnsiz1V01AppsOwnerNameAppNameAnalyticsCrashCountsGetResponses200ContentApplicationJsonSchemaPropertiesCrashesItems",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PathsY5XlfzV01AppsOwnerNameAppNameAnalyticsCrashCountsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsY5XlfzV01AppsOwnerNameAppNameAnalyticsCrashCountsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsQ0KipyV01AppsOwnerNameAppNameAnalyticsCrashCountsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsQ0KipyV01AppsOwnerNameAppNameAnalyticsCrashCountsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsQ0KipyV01AppsOwnerNameAppNameAnalyticsCrashCountsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths14Gegw4V01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNameHeadResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths14Gegw4V01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNameHeadResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths16T55ByV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNameHeadResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths16T55ByV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNameHeadResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths16T55ByV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNameHeadResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Bu61Q9V01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNameDeleteResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Bu61Q9V01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNameDeleteResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsMqqctfV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsMqqctfV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsMqqctfV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths4Tfj7FV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNameGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths4Tfj7FV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNameGetResponses200ContentApplicationJsonSchemaAllof0",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      estimatedCount: {
        serializedName: "estimated_count",
        type: {
          name: "Number"
        }
      },
      definition: {
        serializedName: "definition",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "Enum",
          allowedValues: ["Calculating", "Ready", "Disabled"]
        }
      }
    }
  }
};

export const PathsIepcj0V01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNameGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsIepcj0V01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNameGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Jlf8StV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Jlf8StV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Jlf8StV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths2Mes8QV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNamePutRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths2Mes8QV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNamePutRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      description: {
        constraints: {
          MaxLength: 128
        },
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      definition: {
        constraints: {
          MaxLength: 2000
        },
        serializedName: "definition",
        required: true,
        type: {
          name: "String"
        }
      },
      enabled: {
        defaultValue: true,
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      customProperties: {
        serializedName: "custom_properties",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Enum",
              allowedValues: ["string", "number", "boolean", "date_time"]
            }
          }
        }
      }
    }
  }
};

export const PathsIokya3V01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNamePutResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsIokya3V01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNamePutResponses200ContentApplicationJsonSchemaAllof0",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      estimatedCount: {
        serializedName: "estimated_count",
        type: {
          name: "Number"
        }
      },
      definition: {
        serializedName: "definition",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "Enum",
          allowedValues: ["Calculating", "Ready", "Disabled"]
        }
      }
    }
  }
};

export const Paths1Tedeb8V01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNamePutResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Tedeb8V01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNamePutResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Mwy65FV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNamePutResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Mwy65FV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNamePutResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Mwy65FV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNamePutResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsOw62VsV01AppsOwnerNameAppNameAnalyticsAudiencesMetadataDevicePropertiesPropertyNameValuesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsOw62VsV01AppsOwnerNameAppNameAnalyticsAudiencesMetadataDevicePropertiesPropertyNameValuesGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      values: {
        serializedName: "values",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Paths1IjxfyzV01AppsOwnerNameAppNameAnalyticsAudiencesMetadataDevicePropertiesPropertyNameValuesGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1IjxfyzV01AppsOwnerNameAppNameAnalyticsAudiencesMetadataDevicePropertiesPropertyNameValuesGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1A9Yq9SV01AppsOwnerNameAppNameAnalyticsAudiencesMetadataDevicePropertiesPropertyNameValuesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1A9Yq9SV01AppsOwnerNameAppNameAnalyticsAudiencesMetadataDevicePropertiesPropertyNameValuesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1A9Yq9SV01AppsOwnerNameAppNameAnalyticsAudiencesMetadataDevicePropertiesPropertyNameValuesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths3Bwm02V01AppsOwnerNameAppNameAnalyticsAudiencesMetadataDevicePropertiesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths3Bwm02V01AppsOwnerNameAppNameAnalyticsAudiencesMetadataDevicePropertiesGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      values: {
        serializedName: "values",
        required: true,
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Enum",
              allowedValues: ["string", "number", "boolean", "date_time"]
            }
          }
        }
      }
    }
  }
};

export const PathsW9NyjxV01AppsOwnerNameAppNameAnalyticsAudiencesMetadataDevicePropertiesGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsW9NyjxV01AppsOwnerNameAppNameAnalyticsAudiencesMetadataDevicePropertiesGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths5Q1T5JV01AppsOwnerNameAppNameAnalyticsAudiencesMetadataDevicePropertiesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths5Q1T5JV01AppsOwnerNameAppNameAnalyticsAudiencesMetadataDevicePropertiesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths5Q1T5JV01AppsOwnerNameAppNameAnalyticsAudiencesMetadataDevicePropertiesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths6Mckw0V01AppsOwnerNameAppNameAnalyticsAudiencesMetadataCustomPropertiesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths6Mckw0V01AppsOwnerNameAppNameAnalyticsAudiencesMetadataCustomPropertiesGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      values: {
        serializedName: "values",
        required: true,
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Enum",
              allowedValues: ["string", "number", "boolean", "date_time"]
            }
          }
        }
      }
    }
  }
};

export const Paths1X2Ro5DV01AppsOwnerNameAppNameAnalyticsAudiencesMetadataCustomPropertiesGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1X2Ro5DV01AppsOwnerNameAppNameAnalyticsAudiencesMetadataCustomPropertiesGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsO0MxzeV01AppsOwnerNameAppNameAnalyticsAudiencesMetadataCustomPropertiesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsO0MxzeV01AppsOwnerNameAppNameAnalyticsAudiencesMetadataCustomPropertiesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsO0MxzeV01AppsOwnerNameAppNameAnalyticsAudiencesMetadataCustomPropertiesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths16F7ScgV01AppsOwnerNameAppNameAnalyticsAudiencesDefinitionTestPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths16F7ScgV01AppsOwnerNameAppNameAnalyticsAudiencesDefinitionTestPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      description: {
        constraints: {
          MaxLength: 128
        },
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      definition: {
        constraints: {
          MaxLength: 2000
        },
        serializedName: "definition",
        required: true,
        type: {
          name: "String"
        }
      },
      enabled: {
        defaultValue: true,
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      customProperties: {
        serializedName: "custom_properties",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Enum",
              allowedValues: ["string", "number", "boolean", "date_time"]
            }
          }
        }
      }
    }
  }
};

export const Paths3SvqoyV01AppsOwnerNameAppNameAnalyticsAudiencesDefinitionTestPostResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths3SvqoyV01AppsOwnerNameAppNameAnalyticsAudiencesDefinitionTestPostResponses200ContentApplicationJsonSchema",
    modelProperties: {
      definition: {
        serializedName: "definition",
        type: {
          name: "String"
        }
      },
      customProperties: {
        serializedName: "custom_properties",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Enum",
              allowedValues: ["string", "number", "boolean", "date_time"]
            }
          }
        }
      },
      estimatedCount: {
        serializedName: "estimated_count",
        type: {
          name: "Number"
        }
      },
      estimatedTotalCount: {
        serializedName: "estimated_total_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths1Wwaiu3V01AppsOwnerNameAppNameAnalyticsAudiencesDefinitionTestPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Wwaiu3V01AppsOwnerNameAppNameAnalyticsAudiencesDefinitionTestPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsN5QazwV01AppsOwnerNameAppNameAnalyticsAudiencesDefinitionTestPostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsN5QazwV01AppsOwnerNameAppNameAnalyticsAudiencesDefinitionTestPostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsN5QazwV01AppsOwnerNameAppNameAnalyticsAudiencesDefinitionTestPostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsTx3PmsV01AppsOwnerNameAppNameAnalyticsAudiencesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsTx3PmsV01AppsOwnerNameAppNameAnalyticsAudiencesGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      values: {
        serializedName: "values",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths13226TpV01AppsOwnerNameAppNameAnalyticsAudiencesGetResponses200ContentApplicationJsonSchemaPropertiesValuesItems"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths13226TpV01AppsOwnerNameAppNameAnalyticsAudiencesGetResponses200ContentApplicationJsonSchemaPropertiesValuesItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths13226TpV01AppsOwnerNameAppNameAnalyticsAudiencesGetResponses200ContentApplicationJsonSchemaPropertiesValuesItems",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      estimatedCount: {
        serializedName: "estimated_count",
        type: {
          name: "Number"
        }
      },
      definition: {
        serializedName: "definition",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "Enum",
          allowedValues: ["Calculating", "Ready", "Disabled"]
        }
      }
    }
  }
};

export const PathsEq5Uq6V01AppsOwnerNameAppNameAnalyticsAudiencesGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsEq5Uq6V01AppsOwnerNameAppNameAnalyticsAudiencesGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Lfvhb8V01AppsOwnerNameAppNameAnalyticsAudiencesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Lfvhb8V01AppsOwnerNameAppNameAnalyticsAudiencesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Lfvhb8V01AppsOwnerNameAppNameAnalyticsAudiencesGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsKudmomV01AppsOwnerNameAppNameAnalyticsActiveDeviceCountsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsKudmomV01AppsOwnerNameAppNameAnalyticsActiveDeviceCountsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      daily: {
        serializedName: "daily",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths1I70DibV01AppsOwnerNameAppNameAnalyticsActiveDeviceCountsGetResponses200ContentApplicationJsonSchemaPropertiesDailyItems"
            }
          }
        }
      },
      weekly: {
        serializedName: "weekly",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsNewl0V01AppsOwnerNameAppNameAnalyticsActiveDeviceCountsGetResponses200ContentApplicationJsonSchemaPropertiesWeeklyItems"
            }
          }
        }
      },
      monthly: {
        serializedName: "monthly",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsZhttoqV01AppsOwnerNameAppNameAnalyticsActiveDeviceCountsGetResponses200ContentApplicationJsonSchemaPropertiesMonthlyItems"
            }
          }
        }
      }
    }
  }
};

export const Paths1I70DibV01AppsOwnerNameAppNameAnalyticsActiveDeviceCountsGetResponses200ContentApplicationJsonSchemaPropertiesDailyItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1I70DibV01AppsOwnerNameAppNameAnalyticsActiveDeviceCountsGetResponses200ContentApplicationJsonSchemaPropertiesDailyItems",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PathsNewl0V01AppsOwnerNameAppNameAnalyticsActiveDeviceCountsGetResponses200ContentApplicationJsonSchemaPropertiesWeeklyItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsNewl0V01AppsOwnerNameAppNameAnalyticsActiveDeviceCountsGetResponses200ContentApplicationJsonSchemaPropertiesWeeklyItems",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PathsZhttoqV01AppsOwnerNameAppNameAnalyticsActiveDeviceCountsGetResponses200ContentApplicationJsonSchemaPropertiesMonthlyItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsZhttoqV01AppsOwnerNameAppNameAnalyticsActiveDeviceCountsGetResponses200ContentApplicationJsonSchemaPropertiesMonthlyItems",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Paths1Lned21V01AppsOwnerNameAppNameAnalyticsActiveDeviceCountsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Lned21V01AppsOwnerNameAppNameAnalyticsActiveDeviceCountsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths11YswcdV01AppsOwnerNameAppNameAnalyticsActiveDeviceCountsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths11YswcdV01AppsOwnerNameAppNameAnalyticsActiveDeviceCountsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths11YswcdV01AppsOwnerNameAppNameAnalyticsActiveDeviceCountsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsGwup8BV01AppsOwnerNameAppNameGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsGwup8BV01AppsOwnerNameAppNameGetResponses200ContentApplicationJsonSchemaAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      releaseType: {
        serializedName: "release_type",
        type: {
          name: "String"
        }
      },
      iconUrl: {
        serializedName: "icon_url",
        type: {
          name: "String"
        }
      },
      iconSource: {
        serializedName: "icon_source",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      os: {
        serializedName: "os",
        required: true,
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className:
            "PathsU9JfiiV01AppsOwnerNameAppNameGetResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner"
        }
      }
    }
  }
};

export const PathsU9JfiiV01AppsOwnerNameAppNameGetResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsU9JfiiV01AppsOwnerNameAppNameGetResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsYhp60MV01AppsOwnerNameAppNameGetResponses200ContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsYhp60MV01AppsOwnerNameAppNameGetResponses200ContentApplicationJsonSchemaAllof1",
    modelProperties: {
      appSecret: {
        serializedName: "app_secret",
        type: {
          name: "String"
        }
      },
      azureSubscription: {
        serializedName: "azure_subscription",
        type: {
          name: "Composite",
          className:
            "Paths2UobgbV01AppsOwnerNameAppNameGetResponses200ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        type: {
          name: "String"
        }
      },
      memberPermissions: {
        serializedName: "member_permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Paths2UobgbV01AppsOwnerNameAppNameGetResponses200ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths2UobgbV01AppsOwnerNameAppNameGetResponses200ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscription_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      subscriptionName: {
        serializedName: "subscription_name",
        required: true,
        type: {
          name: "String"
        }
      },
      isBilling: {
        serializedName: "is_billing",
        type: {
          name: "Boolean"
        }
      },
      isBillable: {
        serializedName: "is_billable",
        type: {
          name: "Boolean"
        }
      },
      isMicrosoftInternal: {
        serializedName: "is_microsoft_internal",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PathsZhn7DqV01AppsOwnerNameAppNameGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsZhn7DqV01AppsOwnerNameAppNameGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths2IxwfzV01AppsOwnerNameAppNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths2IxwfzV01AppsOwnerNameAppNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths2IxwfzV01AppsOwnerNameAppNameGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsMhqbvhV01AppsOwnerNameAppNamePatchRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsMhqbvhV01AppsOwnerNameAppNamePatchRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      releaseType: {
        serializedName: "release_type",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      iconUrl: {
        serializedName: "icon_url",
        type: {
          name: "String"
        }
      },
      iconAssetId: {
        serializedName: "icon_asset_id",
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const Paths1UogsreV01AppsOwnerNameAppNamePatchResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1UogsreV01AppsOwnerNameAppNamePatchResponses200ContentApplicationJsonSchemaAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      releaseType: {
        serializedName: "release_type",
        type: {
          name: "String"
        }
      },
      iconUrl: {
        serializedName: "icon_url",
        type: {
          name: "String"
        }
      },
      iconSource: {
        serializedName: "icon_source",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      os: {
        serializedName: "os",
        required: true,
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className:
            "PathsOuh9BhV01AppsOwnerNameAppNamePatchResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner"
        }
      }
    }
  }
};

export const PathsOuh9BhV01AppsOwnerNameAppNamePatchResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsOuh9BhV01AppsOwnerNameAppNamePatchResponses200ContentApplicationJsonSchemaAllof0PropertiesOwner",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths176RmcwV01AppsOwnerNameAppNamePatchResponses200ContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths176RmcwV01AppsOwnerNameAppNamePatchResponses200ContentApplicationJsonSchemaAllof1",
    modelProperties: {
      appSecret: {
        serializedName: "app_secret",
        type: {
          name: "String"
        }
      },
      azureSubscription: {
        serializedName: "azure_subscription",
        type: {
          name: "Composite",
          className:
            "PathsNoytcoV01AppsOwnerNameAppNamePatchResponses200ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        type: {
          name: "String"
        }
      },
      memberPermissions: {
        serializedName: "member_permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PathsNoytcoV01AppsOwnerNameAppNamePatchResponses200ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsNoytcoV01AppsOwnerNameAppNamePatchResponses200ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscription_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      subscriptionName: {
        serializedName: "subscription_name",
        required: true,
        type: {
          name: "String"
        }
      },
      isBilling: {
        serializedName: "is_billing",
        type: {
          name: "Boolean"
        }
      },
      isBillable: {
        serializedName: "is_billable",
        type: {
          name: "Boolean"
        }
      },
      isMicrosoftInternal: {
        serializedName: "is_microsoft_internal",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PathsJbts1XV01AppsOwnerNameAppNamePatchResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsJbts1XV01AppsOwnerNameAppNamePatchResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsIjyk6PV01AppsOwnerNameAppNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsIjyk6PV01AppsOwnerNameAppNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsIjyk6PV01AppsOwnerNameAppNamePatchResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1BdpjjmV01AppsOwnerNameAppNameDeleteResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1BdpjjmV01AppsOwnerNameAppNameDeleteResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Md60RbV01AppsOwnerNameAppNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Md60RbV01AppsOwnerNameAppNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Md60RbV01AppsOwnerNameAppNameDeleteResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1XqwatgV01AppsPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Paths1XqwatgV01AppsPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      releaseType: {
        serializedName: "release_type",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      os: {
        serializedName: "os",
        required: true,
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Mhfa1V01AppsPostResponses201ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Mhfa1V01AppsPostResponses201ContentApplicationJsonSchemaAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      releaseType: {
        serializedName: "release_type",
        type: {
          name: "String"
        }
      },
      iconUrl: {
        serializedName: "icon_url",
        type: {
          name: "String"
        }
      },
      iconSource: {
        serializedName: "icon_source",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      os: {
        serializedName: "os",
        required: true,
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className:
            "Paths1Rslxh6V01AppsPostResponses201ContentApplicationJsonSchemaAllof0PropertiesOwner"
        }
      }
    }
  }
};

export const Paths1Rslxh6V01AppsPostResponses201ContentApplicationJsonSchemaAllof0PropertiesOwner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Rslxh6V01AppsPostResponses201ContentApplicationJsonSchemaAllof0PropertiesOwner",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1KwnvogV01AppsPostResponses201ContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1KwnvogV01AppsPostResponses201ContentApplicationJsonSchemaAllof1",
    modelProperties: {
      appSecret: {
        serializedName: "app_secret",
        type: {
          name: "String"
        }
      },
      azureSubscription: {
        serializedName: "azure_subscription",
        type: {
          name: "Composite",
          className:
            "Paths1Ccd1NdV01AppsPostResponses201ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        type: {
          name: "String"
        }
      },
      memberPermissions: {
        serializedName: "member_permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Paths1Ccd1NdV01AppsPostResponses201ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Ccd1NdV01AppsPostResponses201ContentApplicationJsonSchemaAllof1PropertiesAzureSubscription",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscription_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      subscriptionName: {
        serializedName: "subscription_name",
        required: true,
        type: {
          name: "String"
        }
      },
      isBilling: {
        serializedName: "is_billing",
        type: {
          name: "Boolean"
        }
      },
      isBillable: {
        serializedName: "is_billable",
        type: {
          name: "Boolean"
        }
      },
      isMicrosoftInternal: {
        serializedName: "is_microsoft_internal",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PathsV9XtwoV01AppsPostResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsV9XtwoV01AppsPostResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsW9Lsw5V01AppsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsW9Lsw5V01AppsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsW9Lsw5V01AppsPostResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths2I85NV01AppsGetResponses200ContentApplicationJsonSchemaItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths2I85NV01AppsGetResponses200ContentApplicationJsonSchemaItemsAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      releaseType: {
        serializedName: "release_type",
        type: {
          name: "String"
        }
      },
      iconUrl: {
        serializedName: "icon_url",
        type: {
          name: "String"
        }
      },
      iconSource: {
        serializedName: "icon_source",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      os: {
        serializedName: "os",
        required: true,
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className:
            "Paths3TvudzV01AppsGetResponses200ContentApplicationJsonSchemaItemsAllof0PropertiesOwner"
        }
      }
    }
  }
};

export const Paths3TvudzV01AppsGetResponses200ContentApplicationJsonSchemaItemsAllof0PropertiesOwner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths3TvudzV01AppsGetResponses200ContentApplicationJsonSchemaItemsAllof0PropertiesOwner",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Rjy06FV01AppsGetResponses200ContentApplicationJsonSchemaItemsAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Rjy06FV01AppsGetResponses200ContentApplicationJsonSchemaItemsAllof1",
    modelProperties: {
      appSecret: {
        serializedName: "app_secret",
        type: {
          name: "String"
        }
      },
      azureSubscription: {
        serializedName: "azure_subscription",
        type: {
          name: "Composite",
          className:
            "Paths13LwziiV01AppsGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesAzureSubscription"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        type: {
          name: "String"
        }
      },
      memberPermissions: {
        serializedName: "member_permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Paths13LwziiV01AppsGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesAzureSubscription: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths13LwziiV01AppsGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesAzureSubscription",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscription_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      subscriptionName: {
        serializedName: "subscription_name",
        required: true,
        type: {
          name: "String"
        }
      },
      isBilling: {
        serializedName: "is_billing",
        type: {
          name: "Boolean"
        }
      },
      isBillable: {
        serializedName: "is_billable",
        type: {
          name: "Boolean"
        }
      },
      isMicrosoftInternal: {
        serializedName: "is_microsoft_internal",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths127V8Y9V01AppsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths127V8Y9V01AppsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsW2OmslV01AppsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsW2OmslV01AppsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsW2OmslV01AppsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1X61Db6V01ApiTokensApiTokenIdDeleteResponses400ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1X61Db6V01ApiTokensApiTokenIdDeleteResponses400ContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Ufqn0BV01ApiTokensApiTokenIdDeleteResponses400ContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Ufqn0BV01ApiTokensApiTokenIdDeleteResponses400ContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Ufqn0BV01ApiTokensApiTokenIdDeleteResponses400ContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1140VhkV01ApiTokensApiTokenIdDeleteResponses401ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1140VhkV01ApiTokensApiTokenIdDeleteResponses401ContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths16Jve8JV01ApiTokensApiTokenIdDeleteResponses401ContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths16Jve8JV01ApiTokensApiTokenIdDeleteResponses401ContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths16Jve8JV01ApiTokensApiTokenIdDeleteResponses401ContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsD8RxloV01ApiTokensApiTokenIdDeleteResponses404ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsD8RxloV01ApiTokensApiTokenIdDeleteResponses404ContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths1Drc2FxV01ApiTokensApiTokenIdDeleteResponses404ContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths1Drc2FxV01ApiTokensApiTokenIdDeleteResponses404ContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Drc2FxV01ApiTokensApiTokenIdDeleteResponses404ContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths18ZssypV01ApiTokensGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths18ZssypV01ApiTokensGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      createdAt: {
        serializedName: "created_at",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Eu1Qp7V01ApiTokensGetResponses400ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Eu1Qp7V01ApiTokensGetResponses400ContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths103GacfV01ApiTokensGetResponses400ContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths103GacfV01ApiTokensGetResponses400ContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths103GacfV01ApiTokensGetResponses400ContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Jnqp8FV01ApiTokensGetResponses401ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Jnqp8FV01ApiTokensGetResponses401ContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsYkw9ZjV01ApiTokensGetResponses401ContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsYkw9ZjV01ApiTokensGetResponses401ContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsYkw9ZjV01ApiTokensGetResponses401ContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths163K2XcV01ApiTokensPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths163K2XcV01ApiTokensPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PathsC2U0SxV01ApiTokensPostResponses201ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsC2U0SxV01ApiTokensPostResponses201ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      apiToken: {
        serializedName: "api_token",
        required: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      createdAt: {
        serializedName: "created_at",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1VzgmvnV01ApiTokensPostResponses400ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1VzgmvnV01ApiTokensPostResponses400ContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths62XlojV01ApiTokensPostResponses400ContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths62XlojV01ApiTokensPostResponses400ContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths62XlojV01ApiTokensPostResponses400ContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Uv4MczV01ApiTokensPostResponses401ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Uv4MczV01ApiTokensPostResponses401ContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "PathsXj76AoV01ApiTokensPostResponses401ContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const PathsXj76AoV01ApiTokensPostResponses401ContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsXj76AoV01ApiTokensPostResponses401ContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsSnamasV01AdministeredorgsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsSnamasV01AdministeredorgsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      organizations: {
        serializedName: "organizations",
        type: {
          name: "Composite",
          className:
            "Paths1L985GzV01AdministeredorgsGetResponses200ContentApplicationJsonSchemaPropertiesOrganizations"
        }
      }
    }
  }
};

export const Paths1L985GzV01AdministeredorgsGetResponses200ContentApplicationJsonSchemaPropertiesOrganizations: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1L985GzV01AdministeredorgsGetResponses200ContentApplicationJsonSchemaPropertiesOrganizations",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        required: true,
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsHjvrvyV01AdministeredorgsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsHjvrvyV01AdministeredorgsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className:
            "Paths8AdyjjV01AdministeredorgsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError"
        }
      }
    }
  }
};

export const Paths8AdyjjV01AdministeredorgsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths8AdyjjV01AdministeredorgsGetResponsesDefaultContentApplicationJsonSchemaPropertiesError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths120IxifV01AccountTestExportFeatureflagsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths120IxifV01AccountTestExportFeatureflagsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      targetId: {
        serializedName: "target_id",
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const PathsK7Amr2V01AccountTestExportAccountsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsK7Amr2V01AccountTestExportAccountsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const PathsIp035RV01AccountTestExportGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsIp035RV01AccountTestExportGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      resources: {
        serializedName: "resources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsQfwcmvV01AccountTestExportGetResponses200ContentApplicationJsonSchemaPropertiesResourcesItems"
            }
          }
        }
      }
    }
  }
};

export const PathsQfwcmvV01AccountTestExportGetResponses200ContentApplicationJsonSchemaPropertiesResourcesItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsQfwcmvV01AccountTestExportGetResponses200ContentApplicationJsonSchemaPropertiesResourcesItems",
    modelProperties: {
      rel: {
        serializedName: "rel",
        type: {
          name: "String"
        }
      },
      path: {
        serializedName: "path",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GetInAppUpdateTokenResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetInAppUpdateTokenResponse",
    modelProperties: {
      token: {
        serializedName: "token",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiTokensCreateResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiTokensCreateResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      apiToken: {
        serializedName: "api_token",
        required: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      createdAt: {
        serializedName: "created_at",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiTokensCreateRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiTokensCreateRequest",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ApiTokensGetResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiTokensGetResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      createdAt: {
        serializedName: "created_at",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Status: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Status",
    modelProperties: {
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Failure: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Failure",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorResponseError"
        }
      }
    }
  }
};

export const ErrorResponseError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponseError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetails",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SuccessResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SuccessResponse",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AADTenantAddRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AADTenantAddRequest",
    modelProperties: {
      userId: {
        serializedName: "user_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      aadTenantId: {
        serializedName: "aad_tenant_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AADTenantResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AADTenantResponse",
    modelProperties: {
      aadTenantId: {
        serializedName: "aad_tenant_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AddAppTesterRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AddAppTesterRequest",
    modelProperties: {
      userId: {
        serializedName: "user_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      releaseId: {
        serializedName: "release_id",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AddAppTesterResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AddAppTesterResponse",
    modelProperties: {
      userId: {
        serializedName: "user_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      releaseId: {
        serializedName: "release_id",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ApiTokensPostRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiTokensPostRequest",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      encryptedToken: {
        serializedName: "encrypted_token",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      tokenHash: {
        serializedName: "token_hash",
        type: {
          name: "String"
        }
      },
      tokenType: {
        serializedName: "token_type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppPatchRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppPatchRequest",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      releaseType: {
        serializedName: "release_type",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      iconUrl: {
        serializedName: "icon_url",
        type: {
          name: "String"
        }
      },
      iconAssetId: {
        serializedName: "icon_asset_id",
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const AppRepoPatchRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppRepoPatchRequest",
    modelProperties: {
      repoUrl: {
        serializedName: "repo_url",
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "user_id",
        type: {
          name: "Uuid"
        }
      },
      externalUserId: {
        serializedName: "external_user_id",
        type: {
          name: "String"
        }
      },
      serviceConnectionId: {
        serializedName: "service_connection_id",
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const AppRepoPostRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppRepoPostRequest",
    modelProperties: {
      repoUrl: {
        serializedName: "repo_url",
        required: true,
        type: {
          name: "String"
        }
      },
      repoProvider: {
        serializedName: "repo_provider",
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "user_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      installationId: {
        serializedName: "installation_id",
        type: {
          name: "String"
        }
      },
      repoId: {
        serializedName: "repo_id",
        type: {
          name: "String"
        }
      },
      externalUserId: {
        serializedName: "external_user_id",
        type: {
          name: "String"
        }
      },
      serviceConnectionId: {
        serializedName: "service_connection_id",
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const AppRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppRequest",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      releaseType: {
        serializedName: "release_type",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      os: {
        serializedName: "os",
        required: true,
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppAddRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppAddRequest",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppDeleteRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppDeleteRequest",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureSubscriptionAddRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureSubscriptionAddRequest",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscription_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      subscriptionName: {
        serializedName: "subscription_name",
        required: true,
        type: {
          name: "String"
        }
      },
      isBilling: {
        serializedName: "is_billing",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AzureSubscriptionUpdateBillableRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureSubscriptionUpdateBillableRequest",
    modelProperties: {
      isBillable: {
        serializedName: "is_billable",
        required: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AzureSubscriptionPatchRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureSubscriptionPatchRequest",
    modelProperties: {
      isBilling: {
        serializedName: "is_billing",
        required: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AzureSubscriptionAddToAppRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureSubscriptionAddToAppRequest",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscription_id",
        required: true,
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const DistributionGroupPatchRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionGroupPatchRequest",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      isPublic: {
        serializedName: "is_public",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const DistributionGroupRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionGroupRequest",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppDistributionGroupUsersRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppDistributionGroupUsersRequest",
    modelProperties: {
      memberIds: {
        serializedName: "member_ids",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Uuid"
            }
          }
        }
      }
    }
  }
};

export const DistributionGroupUserRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionGroupUserRequest",
    modelProperties: {
      userEmails: {
        constraints: {
          MinItems: 1
        },
        serializedName: "user_emails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const DistributionGroupAppAddRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionGroupAppAddRequest",
    modelProperties: {
      apps: {
        serializedName: "apps",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DistributionGroupAppAddRequestAppsItem"
            }
          }
        }
      }
    }
  }
};

export const DistributionGroupAppAddRequestAppsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionGroupAppAddRequestAppsItem",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DistributionGroupAppsDeleteRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionGroupAppsDeleteRequest",
    modelProperties: {
      apps: {
        constraints: {
          MinItems: 1
        },
        serializedName: "apps",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DistributionGroupAppsDeleteRequestAppsItem"
            }
          }
        }
      }
    }
  }
};

export const DistributionGroupAppsDeleteRequestAppsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionGroupAppsDeleteRequestAppsItem",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DistributionGroupAADGroupsDeleteRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionGroupAADGroupsDeleteRequest",
    modelProperties: {
      aadGroupIds: {
        serializedName: "aad_group_ids",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const DataDeletionRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DataDeletionRequest",
    modelProperties: {
      dataDeletionType: {
        serializedName: "data_deletion_type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DistributionGroupAADGroupRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionGroupAADGroupRequest",
    modelProperties: {
      aadGroups: {
        serializedName: "aad_groups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DistributionGroupAADGroupRequestAadGroupsItem"
            }
          }
        }
      }
    }
  }
};

export const DistributionGroupAADGroupRequestAadGroupsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionGroupAADGroupRequestAadGroupsItem",
    modelProperties: {
      aadGroupId: {
        serializedName: "aad_group_id",
        type: {
          name: "Uuid"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DistributionGroupAADGroupBase: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionGroupAADGroupBase",
    modelProperties: {
      aadGroupId: {
        serializedName: "aad_group_id",
        type: {
          name: "Uuid"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DistributionGroupsUserVerifyRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionGroupsUserVerifyRequest",
    modelProperties: {
      distributionGroupIds: {
        serializedName: "distribution_group_ids",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "DistributionGroupsUserVerifyRequestDistributionGroupIdsItem"
            }
          }
        }
      }
    }
  }
};

export const DistributionGroupsUserVerifyRequestDistributionGroupIdsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionGroupsUserVerifyRequestDistributionGroupIdsItem",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const DistributionGroupIdRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionGroupIdRequest",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const EmailVerificationRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EmailVerificationRequest",
    modelProperties: {
      token: {
        serializedName: "token",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExternalUserRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExternalUserRequest",
    modelProperties: {
      appInvitation: {
        serializedName: "app_invitation",
        type: {
          name: "String"
        }
      },
      testerInvitation: {
        serializedName: "tester_invitation",
        type: {
          name: "String"
        }
      },
      organizationInvitation: {
        serializedName: "organization_invitation",
        type: {
          name: "String"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExternalAppId: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExternalAppId",
    modelProperties: {
      externalId: {
        serializedName: "external_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FeaturePatchRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FeaturePatchRequest",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const FeatureCreateRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FeatureCreateRequest",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "Number"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GrantAdminRoleRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GrantAdminRoleRequest",
    modelProperties: {
      adminRole: {
        serializedName: "admin_role",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InternalBulkAppResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InternalBulkAppResponse",
    modelProperties: {
      appName: {
        serializedName: "app_name",
        type: {
          name: "String"
        }
      },
      ownerDisplayName: {
        serializedName: "owner_display_name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InternalUserRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InternalUserRequest",
    modelProperties: {
      appInvitation: {
        serializedName: "app_invitation",
        type: {
          name: "String"
        }
      },
      testerInvitation: {
        serializedName: "tester_invitation",
        type: {
          name: "String"
        }
      },
      organizationInvitation: {
        serializedName: "organization_invitation",
        type: {
          name: "String"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        required: true,
        type: {
          name: "String"
        }
      },
      portalSubdomain: {
        defaultValue: "install.",
        isConstant: true,
        serializedName: "portal_subdomain",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OrganizationPatchRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OrganizationPatchRequest",
    modelProperties: {
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OrganizationRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OrganizationRequest",
    modelProperties: {
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OrganizationUserPatchRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OrganizationUserPatchRequest",
    modelProperties: {
      role: {
        serializedName: "role",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AddOrganizationAdminRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AddOrganizationAdminRequest",
    modelProperties: {
      userId: {
        serializedName: "user_id",
        required: true,
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const TransferAppAdminRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TransferAppAdminRequest",
    modelProperties: {
      newOwnerId: {
        serializedName: "new_owner_id",
        required: true,
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const PasswordUpdateRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PasswordUpdateRequest",
    modelProperties: {
      newPassword: {
        serializedName: "new_password",
        required: true,
        type: {
          name: "String"
        }
      },
      oldPassword: {
        serializedName: "old_password",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PostRepositoryProviderMappingRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PostRepositoryProviderMappingRequest",
    modelProperties: {
      externalAccountId: {
        serializedName: "external_account_id",
        required: true,
        type: {
          name: "String"
        }
      },
      provider: {
        defaultValue: "github",
        isConstant: true,
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      accountId: {
        serializedName: "account_id",
        required: true,
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const GetOrCreateRepositoryProviderMappingRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetOrCreateRepositoryProviderMappingRequest",
    modelProperties: {
      externalAccountName: {
        serializedName: "external_account_name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResendVerificationRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResendVerificationRequest",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResetPasswordUsingTokenRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResetPasswordUsingTokenRequest",
    modelProperties: {
      newPassword: {
        serializedName: "new_password",
        required: true,
        type: {
          name: "String"
        }
      },
      token: {
        serializedName: "token",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserAppPermissionsUpdateRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserAppPermissionsUpdateRequest",
    modelProperties: {
      permissions: {
        serializedName: "permissions",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const UserInvitationPermissionsUpdateRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserInvitationPermissionsUpdateRequest",
    modelProperties: {
      permissions: {
        serializedName: "permissions",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const UserEmailOrgRoleRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserEmailOrgRoleRequest",
    modelProperties: {
      userEmail: {
        serializedName: "user_email",
        required: true,
        type: {
          name: "String"
        }
      },
      role: {
        serializedName: "role",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserEmailRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserEmailRequest",
    modelProperties: {
      userEmail: {
        serializedName: "user_email",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserNameUpdateRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserNameUpdateRequest",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserUpdateRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserUpdateRequest",
    modelProperties: {
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserUpdateRequestInternal: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserUpdateRequestInternal",
    modelProperties: {
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      nextNpsSurveyDate: {
        serializedName: "next_nps_survey_date",
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserSettingRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserSettingRequest",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccountResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccountResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiTokenDeleteResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiTokenDeleteResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tokenHash: {
        serializedName: "token_hash",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiTokenGetUserResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiTokenGetUserResponse",
    modelProperties: {
      tokenId: {
        serializedName: "token_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tokenScope: {
        serializedName: "token_scope",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      userEmail: {
        serializedName: "user_email",
        required: true,
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "user_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      userOrigin: {
        serializedName: "user_origin",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ValidatedApiTokenResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ValidatedApiTokenResponse",
    modelProperties: {
      tokenId: {
        serializedName: "token_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tokenScope: {
        serializedName: "token_scope",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      principalId: {
        serializedName: "principal_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      principalType: {
        serializedName: "principal_type",
        required: true,
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ValidatedApiTokenResponseClaimsItem"
            }
          }
        }
      }
    }
  }
};

export const ValidatedApiTokenResponseClaimsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ValidatedApiTokenResponseClaimsItem",
    modelProperties: {
      claimType: {
        serializedName: "claim_type",
        type: {
          name: "String"
        }
      },
      claimValue: {
        serializedName: "claim_value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiTokenClaim: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiTokenClaim",
    modelProperties: {
      claimType: {
        serializedName: "claim_type",
        type: {
          name: "String"
        }
      },
      claimValue: {
        serializedName: "claim_value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiTokenResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiTokenResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      createdAt: {
        serializedName: "created_at",
        required: true,
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      encryptedToken: {
        serializedName: "encrypted_token",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppGroupResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppGroupResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      groupId: {
        serializedName: "group_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      releaseType: {
        serializedName: "release_type",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      os: {
        serializedName: "os",
        required: true,
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppInvitationDetailResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppInvitationDetailResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      app: {
        serializedName: "app",
        type: {
          name: "Composite",
          className: "AppInvitationDetailResponseApp"
        }
      },
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      inviteType: {
        serializedName: "invite_type",
        required: true,
        type: {
          name: "String"
        }
      },
      invitedBy: {
        serializedName: "invited_by",
        type: {
          name: "Composite",
          className: "AppInvitationDetailResponseInvitedBy"
        }
      },
      isExistingUser: {
        serializedName: "is_existing_user",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      permissions: {
        serializedName: "permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      appCount: {
        serializedName: "app_count",
        type: {
          name: "Number"
        }
      },
      distributionGroup: {
        serializedName: "distribution_group",
        type: {
          name: "Composite",
          className: "AppInvitationDetailResponseDistributionGroup"
        }
      }
    }
  }
};

export const ComponentsI5EjcmSchemasAppinvitationdetailresponsePropertiesAppAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsI5EjcmSchemasAppinvitationdetailresponsePropertiesAppAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      releaseType: {
        serializedName: "release_type",
        type: {
          name: "String"
        }
      },
      iconUrl: {
        serializedName: "icon_url",
        type: {
          name: "String"
        }
      },
      iconSource: {
        serializedName: "icon_source",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      os: {
        serializedName: "os",
        required: true,
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className: "AppInvitationDetailResponseApp0Owner"
        }
      }
    }
  }
};

export const AppInvitationDetailResponseApp0Owner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppInvitationDetailResponseApp0Owner",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1Fe01MdSchemasAppinvitationdetailresponsePropertiesAppAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components1Fe01MdSchemasAppinvitationdetailresponsePropertiesAppAllof1",
    modelProperties: {
      appSecret: {
        serializedName: "app_secret",
        type: {
          name: "String"
        }
      },
      azureSubscription: {
        serializedName: "azure_subscription",
        type: {
          name: "Composite",
          className: "AppInvitationDetailResponseApp1AzureSubscription"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        type: {
          name: "String"
        }
      },
      memberPermissions: {
        serializedName: "member_permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AppInvitationDetailResponseApp1AzureSubscription: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppInvitationDetailResponseApp1AzureSubscription",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscription_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      subscriptionName: {
        serializedName: "subscription_name",
        required: true,
        type: {
          name: "String"
        }
      },
      isBilling: {
        serializedName: "is_billing",
        type: {
          name: "Boolean"
        }
      },
      isBillable: {
        serializedName: "is_billable",
        type: {
          name: "Boolean"
        }
      },
      isMicrosoftInternal: {
        serializedName: "is_microsoft_internal",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AppInvitationDetailResponseInvitedBy: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppInvitationDetailResponseInvitedBy",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      canChangePassword: {
        serializedName: "can_change_password",
        type: {
          name: "Boolean"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      permissions: {
        serializedName: "permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppInvitationDetailResponseDistributionGroup: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppInvitationDetailResponseDistributionGroup",
    modelProperties: {
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className: "AppInvitationDetailResponseDistributionGroupOwner"
        }
      }
    }
  }
};

export const AppInvitationDetailResponseDistributionGroupOwner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppInvitationDetailResponseDistributionGroupOwner",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppRepoResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppRepoResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      appId: {
        serializedName: "app_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      repoUrl: {
        serializedName: "repo_url",
        required: true,
        type: {
          name: "String"
        }
      },
      repoProvider: {
        serializedName: "repo_provider",
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "user_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      installationId: {
        serializedName: "installation_id",
        type: {
          name: "String"
        }
      },
      repoId: {
        serializedName: "repo_id",
        type: {
          name: "String"
        }
      },
      externalUserId: {
        serializedName: "external_user_id",
        type: {
          name: "String"
        }
      },
      serviceConnectionId: {
        serializedName: "service_connection_id",
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const BasicAppResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BasicAppResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      releaseType: {
        serializedName: "release_type",
        type: {
          name: "String"
        }
      },
      iconUrl: {
        serializedName: "icon_url",
        type: {
          name: "String"
        }
      },
      iconSource: {
        serializedName: "icon_source",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      os: {
        serializedName: "os",
        required: true,
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className: "BasicAppResponseOwner"
        }
      }
    }
  }
};

export const BasicAppResponseOwner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BasicAppResponseOwner",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppResponse",
    modelProperties: {
      appSecret: {
        serializedName: "app_secret",
        type: {
          name: "String"
        }
      },
      azureSubscription: {
        serializedName: "azure_subscription",
        type: {
          name: "Composite",
          className: "AppResponseAzureSubscription"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        type: {
          name: "String"
        }
      },
      memberPermissions: {
        serializedName: "member_permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AppResponseAzureSubscription: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppResponseAzureSubscription",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscription_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      subscriptionName: {
        serializedName: "subscription_name",
        required: true,
        type: {
          name: "String"
        }
      },
      isBilling: {
        serializedName: "is_billing",
        type: {
          name: "Boolean"
        }
      },
      isBillable: {
        serializedName: "is_billable",
        type: {
          name: "Boolean"
        }
      },
      isMicrosoftInternal: {
        serializedName: "is_microsoft_internal",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const TesterAppResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TesterAppResponse",
    modelProperties: {
      microsoftInternal: {
        serializedName: "microsoft_internal",
        type: {
          name: "Boolean"
        }
      },
      permissions: {
        serializedName: "permissions",
        type: {
          name: "Sequence",
          element: {
            defaultValue: "can_remove_from_app",
            isConstant: true,
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const OrgDistributionGroupAppResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OrgDistributionGroupAppResponse",
    modelProperties: {
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppResponseInternalRepositoriesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppResponseInternalRepositoriesItem",
    modelProperties: {
      repoProvider: {
        serializedName: "repo_provider",
        type: {
          name: "String"
        }
      },
      repoUrl: {
        serializedName: "repo_url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppResponseInternalUserPermissions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppResponseInternalUserPermissions",
    modelProperties: {
      permissions: {
        serializedName: "permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      userId: {
        serializedName: "user_id",
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const ComponentsXf12WkSchemasAppresponseinternalAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsXf12WkSchemasAppresponseinternalAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      releaseType: {
        serializedName: "release_type",
        type: {
          name: "String"
        }
      },
      iconUrl: {
        serializedName: "icon_url",
        type: {
          name: "String"
        }
      },
      iconSource: {
        serializedName: "icon_source",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      os: {
        serializedName: "os",
        required: true,
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className: "AppResponseInternal0Owner"
        }
      }
    }
  }
};

export const AppResponseInternal0Owner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppResponseInternal0Owner",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1V5My88SchemasAppresponseinternalAllof0Allof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1V5My88SchemasAppresponseinternalAllof0Allof1",
    modelProperties: {
      appSecret: {
        serializedName: "app_secret",
        type: {
          name: "String"
        }
      },
      azureSubscription: {
        serializedName: "azure_subscription",
        type: {
          name: "Composite",
          className: "AppResponseInternal01AzureSubscription"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        type: {
          name: "String"
        }
      },
      memberPermissions: {
        serializedName: "member_permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AppResponseInternal01AzureSubscription: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppResponseInternal01AzureSubscription",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscription_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      subscriptionName: {
        serializedName: "subscription_name",
        required: true,
        type: {
          name: "String"
        }
      },
      isBilling: {
        serializedName: "is_billing",
        type: {
          name: "Boolean"
        }
      },
      isBillable: {
        serializedName: "is_billable",
        type: {
          name: "Boolean"
        }
      },
      isMicrosoftInternal: {
        serializedName: "is_microsoft_internal",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AppUserPermissionResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppUserPermissionResponse",
    modelProperties: {
      appId: {
        serializedName: "app_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      permissions: {
        serializedName: "permissions",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      userEmail: {
        serializedName: "user_email",
        required: true,
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "user_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      appOrigin: {
        serializedName: "app_origin",
        required: true,
        type: {
          name: "String"
        }
      },
      appSecret: {
        serializedName: "app_secret",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1QyxhbgSchemasAppwithteampermissionsresponseAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1QyxhbgSchemasAppwithteampermissionsresponseAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      releaseType: {
        serializedName: "release_type",
        type: {
          name: "String"
        }
      },
      iconUrl: {
        serializedName: "icon_url",
        type: {
          name: "String"
        }
      },
      iconSource: {
        serializedName: "icon_source",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      os: {
        serializedName: "os",
        required: true,
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className: "AppWithTeamPermissionsResponse0Owner"
        }
      }
    }
  }
};

export const AppWithTeamPermissionsResponse0Owner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppWithTeamPermissionsResponse0Owner",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1Lu2Z3SchemasAppwithteampermissionsresponseAllof0Allof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components1Lu2Z3SchemasAppwithteampermissionsresponseAllof0Allof1",
    modelProperties: {
      appSecret: {
        serializedName: "app_secret",
        type: {
          name: "String"
        }
      },
      azureSubscription: {
        serializedName: "azure_subscription",
        type: {
          name: "Composite",
          className: "AppWithTeamPermissionsResponse01AzureSubscription"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        type: {
          name: "String"
        }
      },
      memberPermissions: {
        serializedName: "member_permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AppWithTeamPermissionsResponse01AzureSubscription: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppWithTeamPermissionsResponse01AzureSubscription",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscription_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      subscriptionName: {
        serializedName: "subscription_name",
        required: true,
        type: {
          name: "String"
        }
      },
      isBilling: {
        serializedName: "is_billing",
        type: {
          name: "Boolean"
        }
      },
      isBillable: {
        serializedName: "is_billable",
        type: {
          name: "Boolean"
        }
      },
      isMicrosoftInternal: {
        serializedName: "is_microsoft_internal",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const OrgUserPermissionResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OrgUserPermissionResponse",
    modelProperties: {
      orgId: {
        serializedName: "orgId",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      userRole: {
        serializedName: "userRole",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureSubscriptionResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureSubscriptionResponse",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscription_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      subscriptionName: {
        serializedName: "subscription_name",
        required: true,
        type: {
          name: "String"
        }
      },
      isBilling: {
        serializedName: "is_billing",
        type: {
          name: "Boolean"
        }
      },
      isBillable: {
        serializedName: "is_billable",
        type: {
          name: "Boolean"
        }
      },
      isMicrosoftInternal: {
        serializedName: "is_microsoft_internal",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const DistributionGroupResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionGroupResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      },
      isPublic: {
        serializedName: "is_public",
        required: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const DistributionGroupPrivateResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionGroupPrivateResponse",
    modelProperties: {
      groupType: {
        serializedName: "group_type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DistributionGroupDetailsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionGroupDetailsResponse",
    modelProperties: {
      isShared: {
        serializedName: "is_shared",
        type: {
          name: "Boolean"
        }
      },
      totalAppsCount: {
        serializedName: "total_apps_count",
        type: {
          name: "Number"
        }
      },
      totalUserCount: {
        serializedName: "total_user_count",
        type: {
          name: "Number"
        }
      },
      notifiedUserCount: {
        serializedName: "notified_user_count",
        type: {
          name: "Number"
        }
      },
      groupType: {
        serializedName: "group_type",
        type: {
          name: "String"
        }
      },
      users: {
        serializedName: "users",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DistributionGroupDetailsResponseUsersItem"
            }
          }
        }
      }
    }
  }
};

export const DistributionGroupDetailsResponseUsersItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionGroupDetailsResponseUsersItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      canChangePassword: {
        serializedName: "can_change_password",
        type: {
          name: "Boolean"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      invitePending: {
        serializedName: "invite_pending",
        type: {
          name: "Boolean"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OrgDistributionGroupDetailsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OrgDistributionGroupDetailsResponse",
    modelProperties: {
      totalAppsCount: {
        serializedName: "total_apps_count",
        type: {
          name: "Number"
        }
      },
      totalUsersCount: {
        serializedName: "total_users_count",
        type: {
          name: "Number"
        }
      },
      apps: {
        serializedName: "apps",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OrgDistributionGroupDetailsResponseAppsItem"
            }
          }
        }
      }
    }
  }
};

export const Components81FkqhSchemasOrgdistributiongroupdetailsresponsePropertiesAppsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components81FkqhSchemasOrgdistributiongroupdetailsresponsePropertiesAppsItemsAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      releaseType: {
        serializedName: "release_type",
        type: {
          name: "String"
        }
      },
      iconUrl: {
        serializedName: "icon_url",
        type: {
          name: "String"
        }
      },
      iconSource: {
        serializedName: "icon_source",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      os: {
        serializedName: "os",
        required: true,
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className:
            "Components17Nuvn1SchemasOrgdistributiongroupdetailsresponsePropertiesAppsItemsAllof0PropertiesOwner"
        }
      }
    }
  }
};

export const Components17Nuvn1SchemasOrgdistributiongroupdetailsresponsePropertiesAppsItemsAllof0PropertiesOwner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components17Nuvn1SchemasOrgdistributiongroupdetailsresponsePropertiesAppsItemsAllof0PropertiesOwner",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsL6FpkwSchemasOrgdistributiongroupdetailsresponsePropertiesAppsItemsAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsL6FpkwSchemasOrgdistributiongroupdetailsresponsePropertiesAppsItemsAllof1",
    modelProperties: {
      appSecret: {
        serializedName: "app_secret",
        type: {
          name: "String"
        }
      },
      azureSubscription: {
        serializedName: "azure_subscription",
        type: {
          name: "Composite",
          className:
            "Components1Vx7L44SchemasOrgdistributiongroupdetailsresponsePropertiesAppsItemsAllof1PropertiesAzureSubscription"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        type: {
          name: "String"
        }
      },
      memberPermissions: {
        serializedName: "member_permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Components1Vx7L44SchemasOrgdistributiongroupdetailsresponsePropertiesAppsItemsAllof1PropertiesAzureSubscription: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components1Vx7L44SchemasOrgdistributiongroupdetailsresponsePropertiesAppsItemsAllof1PropertiesAzureSubscription",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscription_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      subscriptionName: {
        serializedName: "subscription_name",
        required: true,
        type: {
          name: "String"
        }
      },
      isBilling: {
        serializedName: "is_billing",
        type: {
          name: "Boolean"
        }
      },
      isBillable: {
        serializedName: "is_billable",
        type: {
          name: "Boolean"
        }
      },
      isMicrosoftInternal: {
        serializedName: "is_microsoft_internal",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const GeneralDistributionGroupDetailsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GeneralDistributionGroupDetailsResponse",
    modelProperties: {
      isShared: {
        serializedName: "is_shared",
        type: {
          name: "Boolean"
        }
      },
      ownerAppId: {
        serializedName: "owner_app_id",
        type: {
          name: "Uuid"
        }
      },
      ownerOrgId: {
        serializedName: "owner_org_id",
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const DistributionGroupUserDeleteResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionGroupUserDeleteResponse",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "Number"
        }
      },
      userEmail: {
        serializedName: "user_email",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CloseAccountOrganizationResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloseAccountOrganizationResponse",
    modelProperties: {
      collaboratorsCount: {
        serializedName: "collaborators_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DistributionGroupUserGetResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionGroupUserGetResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      canChangePassword: {
        serializedName: "can_change_password",
        type: {
          name: "Boolean"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      invitePending: {
        serializedName: "invite_pending",
        type: {
          name: "Boolean"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DistributionGroupUserPostResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionGroupUserPostResponse",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      invitePending: {
        serializedName: "invite_pending",
        type: {
          name: "Boolean"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "Number"
        }
      },
      userEmail: {
        serializedName: "user_email",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DistributionGroupTesterGetResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionGroupTesterGetResponse",
    modelProperties: {
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DistributionGroupAADGroupPostResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionGroupAADGroupPostResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      aadGroupId: {
        serializedName: "aad_group_id",
        type: {
          name: "Uuid"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DistributionGroupAADGroupResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionGroupAADGroupResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      aadGroupId: {
        serializedName: "aad_group_id",
        type: {
          name: "Uuid"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      isAadGroup: {
        serializedName: "is_aad_group",
        type: {
          name: "Boolean"
        }
      },
      distributionGroupName: {
        serializedName: "distribution_group_name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DistributionGroupAadGroupsDeleteResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionGroupAadGroupsDeleteResponse",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "Number"
        }
      },
      aadGroupId: {
        serializedName: "aad_group_id",
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const DistributionGroupWithUsersResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionGroupWithUsersResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      totalUserCount: {
        serializedName: "total_user_count",
        required: true,
        type: {
          name: "Number"
        }
      },
      totalGroupsCount: {
        serializedName: "total_groups_count",
        type: {
          name: "Number"
        }
      },
      notifiedUserCount: {
        serializedName: "notified_user_count",
        required: true,
        type: {
          name: "Number"
        }
      },
      isPublic: {
        serializedName: "is_public",
        type: {
          name: "Boolean"
        }
      },
      users: {
        serializedName: "users",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DistributionGroupWithUsersResponseUsersItem"
            }
          }
        }
      },
      aadGroups: {
        serializedName: "aad_groups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DistributionGroupWithUsersResponseAadGroupsItem"
            }
          }
        }
      }
    }
  }
};

export const DistributionGroupWithUsersResponseUsersItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionGroupWithUsersResponseUsersItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      canChangePassword: {
        serializedName: "can_change_password",
        type: {
          name: "Boolean"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      invitePending: {
        serializedName: "invite_pending",
        type: {
          name: "Boolean"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DistributionGroupWithUsersResponseAadGroupsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionGroupWithUsersResponseAadGroupsItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      aadGroupId: {
        serializedName: "aad_group_id",
        type: {
          name: "Uuid"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FeatureFlagsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FeatureFlagsResponse",
    modelProperties: {
      featureFlags: {
        serializedName: "feature_flags",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const FeatureResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FeatureResponse",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        required: true,
        type: {
          name: "Number"
        }
      },
      createdAt: {
        serializedName: "created_at",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GlobalFeatureFlagsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GlobalFeatureFlagsResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const InternalUserSignupResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InternalUserSignupResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      externalProvider: {
        serializedName: "external_provider",
        type: {
          name: "String"
        }
      },
      externalUserId: {
        serializedName: "external_user_id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InvitationDetailResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InvitationDetailResponse",
    modelProperties: {
      invitationId: {
        serializedName: "invitation_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      invitedBy: {
        serializedName: "invited_by",
        type: {
          name: "Composite",
          className: "InvitationDetailResponseInvitedBy"
        }
      },
      organization: {
        serializedName: "organization",
        type: {
          name: "Composite",
          className: "InvitationDetailResponseOrganization"
        }
      },
      app: {
        serializedName: "app",
        type: {
          name: "Composite",
          className: "InvitationDetailResponseApp"
        }
      }
    }
  }
};

export const InvitationDetailResponseInvitedBy: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InvitationDetailResponseInvitedBy",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      canChangePassword: {
        serializedName: "can_change_password",
        type: {
          name: "Boolean"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      permissions: {
        serializedName: "permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InvitationDetailResponseOrganization: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InvitationDetailResponseOrganization",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        required: true,
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1Jkno23SchemasInvitationdetailresponsePropertiesAppAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components1Jkno23SchemasInvitationdetailresponsePropertiesAppAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      releaseType: {
        serializedName: "release_type",
        type: {
          name: "String"
        }
      },
      iconUrl: {
        serializedName: "icon_url",
        type: {
          name: "String"
        }
      },
      iconSource: {
        serializedName: "icon_source",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      os: {
        serializedName: "os",
        required: true,
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className: "InvitationDetailResponseApp0Owner"
        }
      }
    }
  }
};

export const InvitationDetailResponseApp0Owner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InvitationDetailResponseApp0Owner",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1SdfznqSchemasInvitationdetailresponsePropertiesAppAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components1SdfznqSchemasInvitationdetailresponsePropertiesAppAllof1",
    modelProperties: {
      appSecret: {
        serializedName: "app_secret",
        type: {
          name: "String"
        }
      },
      azureSubscription: {
        serializedName: "azure_subscription",
        type: {
          name: "Composite",
          className: "InvitationDetailResponseApp1AzureSubscription"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        type: {
          name: "String"
        }
      },
      memberPermissions: {
        serializedName: "member_permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const InvitationDetailResponseApp1AzureSubscription: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InvitationDetailResponseApp1AzureSubscription",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscription_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      subscriptionName: {
        serializedName: "subscription_name",
        required: true,
        type: {
          name: "String"
        }
      },
      isBilling: {
        serializedName: "is_billing",
        type: {
          name: "Boolean"
        }
      },
      isBillable: {
        serializedName: "is_billable",
        type: {
          name: "Boolean"
        }
      },
      isMicrosoftInternal: {
        serializedName: "is_microsoft_internal",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const GdprInvitationDetailResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GdprInvitationDetailResponse",
    modelProperties: {
      invitationId: {
        serializedName: "invitation_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      organization: {
        serializedName: "organization",
        type: {
          name: "Composite",
          className: "GdprInvitationDetailResponseOrganization"
        }
      },
      app: {
        serializedName: "app",
        type: {
          name: "Composite",
          className: "GdprInvitationDetailResponseApp"
        }
      }
    }
  }
};

export const GdprInvitationDetailResponseOrganization: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GdprInvitationDetailResponseOrganization",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        required: true,
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsJ73B5WSchemasGdprinvitationdetailresponsePropertiesAppAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsJ73B5WSchemasGdprinvitationdetailresponsePropertiesAppAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      releaseType: {
        serializedName: "release_type",
        type: {
          name: "String"
        }
      },
      iconUrl: {
        serializedName: "icon_url",
        type: {
          name: "String"
        }
      },
      iconSource: {
        serializedName: "icon_source",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      os: {
        serializedName: "os",
        required: true,
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className: "GdprInvitationDetailResponseApp0Owner"
        }
      }
    }
  }
};

export const GdprInvitationDetailResponseApp0Owner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GdprInvitationDetailResponseApp0Owner",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components116Ns0HSchemasGdprinvitationdetailresponsePropertiesAppAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components116Ns0HSchemasGdprinvitationdetailresponsePropertiesAppAllof1",
    modelProperties: {
      appSecret: {
        serializedName: "app_secret",
        type: {
          name: "String"
        }
      },
      azureSubscription: {
        serializedName: "azure_subscription",
        type: {
          name: "Composite",
          className: "GdprInvitationDetailResponseApp1AzureSubscription"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        type: {
          name: "String"
        }
      },
      memberPermissions: {
        serializedName: "member_permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const GdprInvitationDetailResponseApp1AzureSubscription: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GdprInvitationDetailResponseApp1AzureSubscription",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscription_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      subscriptionName: {
        serializedName: "subscription_name",
        required: true,
        type: {
          name: "String"
        }
      },
      isBilling: {
        serializedName: "is_billing",
        type: {
          name: "Boolean"
        }
      },
      isBillable: {
        serializedName: "is_billable",
        type: {
          name: "Boolean"
        }
      },
      isMicrosoftInternal: {
        serializedName: "is_microsoft_internal",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const OrgNameAvailabilityResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OrgNameAvailabilityResponse",
    modelProperties: {
      available: {
        serializedName: "available",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OrganizationInvitationDetailResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OrganizationInvitationDetailResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      organization: {
        serializedName: "organization",
        type: {
          name: "Composite",
          className: "OrganizationInvitationDetailResponseOrganization"
        }
      },
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      invitedBy: {
        serializedName: "invited_by",
        type: {
          name: "Composite",
          className: "OrganizationInvitationDetailResponseInvitedBy"
        }
      },
      isExistingUser: {
        serializedName: "is_existing_user",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      role: {
        serializedName: "role",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OrganizationInvitationDetailResponseOrganization: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OrganizationInvitationDetailResponseOrganization",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        required: true,
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OrganizationInvitationDetailResponseInvitedBy: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OrganizationInvitationDetailResponseInvitedBy",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      canChangePassword: {
        serializedName: "can_change_password",
        type: {
          name: "Boolean"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      permissions: {
        serializedName: "permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OrganizationInvitationSimpleDetailResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OrganizationInvitationSimpleDetailResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      role: {
        serializedName: "role",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AdministeredOrgsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AdministeredOrgsResponse",
    modelProperties: {
      organizations: {
        serializedName: "organizations",
        type: {
          name: "Composite",
          className: "AdministeredOrgsResponseOrganizations"
        }
      }
    }
  }
};

export const AdministeredOrgsResponseOrganizations: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AdministeredOrgsResponseOrganizations",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        required: true,
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OrganizationResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OrganizationResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        required: true,
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OrganizationResponseInternal: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OrganizationResponseInternal",
    modelProperties: {
      featureFlags: {
        serializedName: "feature_flags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ComponentsG3G8Y3SchemasOrganizationresponsemanagementAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsG3G8Y3SchemasOrganizationresponsemanagementAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1Rgq5DkSchemasOrganizationresponsemanagementAllof0Allof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components1Rgq5DkSchemasOrganizationresponsemanagementAllof0Allof1",
    modelProperties: {
      featureFlags: {
        serializedName: "feature_flags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const OrganizationUserResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OrganizationUserResponse",
    modelProperties: {
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      joinedAt: {
        serializedName: "joined_at",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      role: {
        serializedName: "role",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TeamAppUpdateRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TeamAppUpdateRequest",
    modelProperties: {
      permissions: {
        serializedName: "permissions",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const TeamRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TeamRequest",
    modelProperties: {
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TeamUpdateRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TeamUpdateRequest",
    modelProperties: {
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TeamResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TeamResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TeamAppResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TeamAppResponse",
    modelProperties: {
      permissions: {
        serializedName: "permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const StatusResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StatusResponse",
    modelProperties: {
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PurgeResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PurgeResponse",
    modelProperties: {
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceBusStatusResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceBusStatusResponse",
    modelProperties: {
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      subscriptions: {
        serializedName: "subscriptions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServiceBusStatusResponseSubscriptionsItem"
            }
          }
        }
      }
    }
  }
};

export const ServiceBusStatusResponseSubscriptionsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceBusStatusResponseSubscriptionsItem",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      messageCount: {
        serializedName: "message_count",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const SubscriptionMetrics: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SubscriptionMetrics",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      messageCount: {
        serializedName: "message_count",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const TeamUserResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TeamUserResponse",
    modelProperties: {
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      role: {
        serializedName: "role",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserAuthResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserAuthResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      externalProvider: {
        serializedName: "external_provider",
        type: {
          name: "String"
        }
      },
      externalUserId: {
        serializedName: "external_user_id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserLiteProfileResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserLiteProfileResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserNameAvailabilityResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserNameAvailabilityResponse",
    modelProperties: {
      available: {
        serializedName: "available",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppIntegration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppIntegration",
    modelProperties: {
      appId: {
        serializedName: "app_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      state: {
        serializedName: "state",
        required: true,
        type: {
          name: "String"
        }
      },
      provider: {
        serializedName: "provider",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppIntegrationResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppIntegrationResponse",
    modelProperties: {
      appId: {
        serializedName: "app_id",
        required: true,
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const AppMembershipsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppMembershipsResponse",
    modelProperties: {
      appOrigin: {
        serializedName: "app_origin",
        type: {
          name: "String"
        }
      },
      memberships: {
        serializedName: "memberships",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AppMembershipsResponseMembershipsItem"
            }
          }
        }
      }
    }
  }
};

export const AppMembershipsResponseMembershipsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppMembershipsResponseMembershipsItem",
    modelProperties: {
      appId: {
        serializedName: "app_id",
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "user_id",
        type: {
          name: "String"
        }
      },
      permissions: {
        serializedName: "permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      sourceType: {
        serializedName: "source_type",
        type: {
          name: "String"
        }
      },
      sourceId: {
        serializedName: "source_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppMembership: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppMembership",
    modelProperties: {
      appId: {
        serializedName: "app_id",
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "user_id",
        type: {
          name: "String"
        }
      },
      permissions: {
        serializedName: "permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      sourceType: {
        serializedName: "source_type",
        type: {
          name: "String"
        }
      },
      sourceId: {
        serializedName: "source_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppMembershipsValidationResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppMembershipsValidationResponse",
    modelProperties: {
      excessAppMemberships: {
        serializedName: "excess_app_memberships",
        type: {
          name: "Composite",
          className: "AppMembershipsValidationResponseExcessAppMemberships"
        }
      },
      appUsersWithMissingMemberships: {
        serializedName: "app_users_with_missing_memberships",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "AppMembershipsValidationResponseAppUsersWithMissingMembershipsItem"
            }
          }
        }
      },
      distributionGroupUsersWithMissingMemberships: {
        serializedName: "distribution_group_users_with_missing_memberships",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "AppMembershipsValidationResponseDistributionGroupUsersWithMissingMembershipsItem"
            }
          }
        }
      },
      organizationAdminsWithMissingMemberships: {
        serializedName: "organization_admins_with_missing_memberships",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "AppMembershipsValidationResponseOrganizationAdminsWithMissingMembershipsItem"
            }
          }
        }
      }
    }
  }
};

export const AppMembershipsValidationResponseExcessAppMemberships: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppMembershipsValidationResponseExcessAppMemberships",
    modelProperties: {
      appUsersMemberships: {
        serializedName: "app_users_memberships",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "AppMembershipsValidationResponseExcessAppMembershipsAppUsersMembershipsItem"
            }
          }
        }
      },
      distributionGroupMemberships: {
        serializedName: "distribution_group_memberships",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "AppMembershipsValidationResponseExcessAppMembershipsDistributionGroupMembershipsItem"
            }
          }
        }
      },
      organizationAdminMemberships: {
        serializedName: "organization_admin_memberships",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "AppMembershipsValidationResponseExcessAppMembershipsOrganizationAdminMembershipsItem"
            }
          }
        }
      }
    }
  }
};

export const AppMembershipsValidationResponseExcessAppMembershipsAppUsersMembershipsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "AppMembershipsValidationResponseExcessAppMembershipsAppUsersMembershipsItem",
    modelProperties: {
      appId: {
        serializedName: "app_id",
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "user_id",
        type: {
          name: "String"
        }
      },
      permissions: {
        serializedName: "permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      sourceType: {
        serializedName: "source_type",
        type: {
          name: "String"
        }
      },
      sourceId: {
        serializedName: "source_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppMembershipsValidationResponseExcessAppMembershipsDistributionGroupMembershipsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "AppMembershipsValidationResponseExcessAppMembershipsDistributionGroupMembershipsItem",
    modelProperties: {
      appId: {
        serializedName: "app_id",
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "user_id",
        type: {
          name: "String"
        }
      },
      permissions: {
        serializedName: "permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      sourceType: {
        serializedName: "source_type",
        type: {
          name: "String"
        }
      },
      sourceId: {
        serializedName: "source_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppMembershipsValidationResponseExcessAppMembershipsOrganizationAdminMembershipsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "AppMembershipsValidationResponseExcessAppMembershipsOrganizationAdminMembershipsItem",
    modelProperties: {
      appId: {
        serializedName: "app_id",
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "user_id",
        type: {
          name: "String"
        }
      },
      permissions: {
        serializedName: "permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      sourceType: {
        serializedName: "source_type",
        type: {
          name: "String"
        }
      },
      sourceId: {
        serializedName: "source_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppMembershipsValidationResponseAppUsersWithMissingMembershipsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "AppMembershipsValidationResponseAppUsersWithMissingMembershipsItem",
    modelProperties: {
      appId: {
        serializedName: "app_id",
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "user_id",
        type: {
          name: "String"
        }
      },
      permissions: {
        serializedName: "permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppMembershipsValidationResponseDistributionGroupUsersWithMissingMembershipsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "AppMembershipsValidationResponseDistributionGroupUsersWithMissingMembershipsItem",
    modelProperties: {
      distributionGroupId: {
        serializedName: "distribution_group_id",
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "user_id",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppMembershipsValidationResponseOrganizationAdminsWithMissingMembershipsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "AppMembershipsValidationResponseOrganizationAdminsWithMissingMembershipsItem",
    modelProperties: {
      organizationId: {
        serializedName: "organization_id",
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "user_id",
        type: {
          name: "String"
        }
      },
      role: {
        serializedName: "role",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserProfileResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserProfileResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      canChangePassword: {
        serializedName: "can_change_password",
        type: {
          name: "Boolean"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      permissions: {
        serializedName: "permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserProfileAdminResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserProfileAdminResponse",
    modelProperties: {
      role: {
        serializedName: "role",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserProfileResponseInternal: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserProfileResponseInternal",
    modelProperties: {
      featureFlags: {
        serializedName: "feature_flags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      adminRole: {
        serializedName: "admin_role",
        type: {
          name: "String"
        }
      },
      settings: {
        serializedName: "settings",
        type: {
          name: "Composite",
          className: "UserProfileResponseInternalSettings"
        }
      }
    }
  }
};

export const UserProfileResponseInternalSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserProfileResponseInternalSettings",
    modelProperties: {
      marketingOptIn: {
        serializedName: "marketing_opt_in",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserProfileResponseManagementIdentityProvidersItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserProfileResponseManagementIdentityProvidersItem",
    modelProperties: {
      providerName: {
        serializedName: "provider_name",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1AlcexuSchemasUserprofileresponsemanagementAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1AlcexuSchemasUserprofileresponsemanagementAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      canChangePassword: {
        serializedName: "can_change_password",
        type: {
          name: "Boolean"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      permissions: {
        serializedName: "permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components42S30FSchemasUserprofileresponsemanagementAllof0Allof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components42S30FSchemasUserprofileresponsemanagementAllof0Allof1",
    modelProperties: {
      featureFlags: {
        serializedName: "feature_flags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      adminRole: {
        serializedName: "admin_role",
        type: {
          name: "String"
        }
      },
      settings: {
        serializedName: "settings",
        type: {
          name: "Composite",
          className: "UserProfileResponseManagement01Settings"
        }
      }
    }
  }
};

export const UserProfileResponseManagement01Settings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserProfileResponseManagement01Settings",
    modelProperties: {
      marketingOptIn: {
        serializedName: "marketing_opt_in",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserSettingResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserSettingResponse",
    modelProperties: {
      marketingOptIn: {
        serializedName: "marketing_opt_in",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Owner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Owner",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AADGroup: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AADGroup",
    modelProperties: {
      aadGroupId: {
        serializedName: "aad_group_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AADUser: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AADUser",
    modelProperties: {
      objectId: {
        serializedName: "object_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        required: true,
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const MSAUser: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MSAUser",
    modelProperties: {
      hexcid: {
        serializedName: "hexcid",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LinkAADtoUserRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LinkAADtoUserRequest",
    modelProperties: {
      aadTenantIds: {
        serializedName: "aad_tenant_ids",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Uuid"
            }
          }
        }
      },
      role: {
        serializedName: "role",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AddUserAsRoleRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AddUserAsRoleRequest",
    modelProperties: {
      role: {
        serializedName: "role",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OrganizationAadGroupPatchRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OrganizationAadGroupPatchRequest",
    modelProperties: {
      role: {
        serializedName: "role",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AddAADGroupResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AddAADGroupResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const SharedConnectionPatchRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SharedConnectionPatchRequest",
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        required: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const SharedConnectionRequest: coreClient.CompositeMapper = {
  serializedName: "SharedConnectionRequest",
  type: {
    name: "Composite",
    className: "SharedConnectionRequest",
    uberParent: "SharedConnectionRequest",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      serviceType: {
        serializedName: "serviceType",
        required: true,
        type: {
          name: "String"
        }
      },
      credentialType: {
        defaultValue: "credentials",
        serializedName: "credentialType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SharedConnectionResponse: coreClient.CompositeMapper = {
  serializedName: "SharedConnectionResponse",
  type: {
    name: "Composite",
    className: "SharedConnectionResponse",
    uberParent: "SharedConnectionResponse",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      serviceType: {
        serializedName: "serviceType",
        required: true,
        type: {
          name: "String"
        }
      },
      credentialType: {
        serializedName: "credentialType",
        required: true,
        type: {
          name: "String"
        }
      },
      isValid: {
        serializedName: "isValid",
        type: {
          name: "Boolean"
        }
      },
      is2FA: {
        serializedName: "is2FA",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PrivateSharedConnectionResponse: coreClient.CompositeMapper = {
  serializedName: "PrivateSharedConnectionResponse",
  type: {
    name: "Composite",
    className: "PrivateSharedConnectionResponse",
    uberParent: "PrivateSharedConnectionResponse",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      serviceType: {
        serializedName: "serviceType",
        required: true,
        type: {
          name: "String"
        }
      },
      isValid: {
        serializedName: "isValid",
        type: {
          name: "Boolean"
        }
      },
      is2FA: {
        serializedName: "is2FA",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AppleConnectionSecretRequest: coreClient.CompositeMapper = {
  serializedName: "apple",
  type: {
    name: "Composite",
    className: "AppleConnectionSecretRequest",
    uberParent: "AppleConnectionSecretRequest",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      serviceType: {
        serializedName: "serviceType",
        required: true,
        type: {
          name: "String"
        }
      },
      credentialType: {
        defaultValue: "credentials",
        serializedName: "credentialType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppleCredentialsMultifactorSecretRequestData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppleCredentialsMultifactorSecretRequestData",
    modelProperties: {
      username: {
        serializedName: "username",
        required: true,
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        required: true,
        type: {
          name: "String"
        }
      },
      authCode: {
        serializedName: "authCode",
        required: true,
        type: {
          name: "String"
        }
      },
      appSpecificPassword: {
        serializedName: "appSpecificPassword",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components8Iu7RuSchemasApplecredentialsmultifactorsecretrequestAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components8Iu7RuSchemasApplecredentialsmultifactorsecretrequestAllof0",
    uberParent:
      "Components8Iu7RuSchemasApplecredentialsmultifactorsecretrequestAllof0",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      serviceType: {
        serializedName: "serviceType",
        required: true,
        type: {
          name: "String"
        }
      },
      credentialType: {
        defaultValue: "credentials",
        serializedName: "credentialType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppleCredentialsSecretRequestData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppleCredentialsSecretRequestData",
    modelProperties: {
      username: {
        serializedName: "username",
        type: {
          name: "String"
        }
      },
      authCode: {
        constraints: {
          MaxLength: 6,
          MinLength: 6
        },
        serializedName: "authCode",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components5A5L2ESchemasApplecredentialssecretrequestAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components5A5L2ESchemasApplecredentialssecretrequestAllof0",
    uberParent: "Components5A5L2ESchemasApplecredentialssecretrequestAllof0",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      serviceType: {
        serializedName: "serviceType",
        required: true,
        type: {
          name: "String"
        }
      },
      credentialType: {
        defaultValue: "credentials",
        serializedName: "credentialType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppleCertificateSecretRequestData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppleCertificateSecretRequestData",
    modelProperties: {
      base64Certificate: {
        serializedName: "base64Certificate",
        required: true,
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components13S9A4RSchemasApplecertificatesecretrequestAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components13S9A4RSchemasApplecertificatesecretrequestAllof0",
    uberParent: "Components13S9A4RSchemasApplecertificatesecretrequestAllof0",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      serviceType: {
        serializedName: "serviceType",
        required: true,
        type: {
          name: "String"
        }
      },
      credentialType: {
        defaultValue: "credentials",
        serializedName: "credentialType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateAppleSecretResponse: coreClient.CompositeMapper = {
  serializedName: "apple",
  type: {
    name: "Composite",
    className: "PrivateAppleSecretResponse",
    uberParent: "PrivateAppleSecretResponse",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      serviceType: {
        serializedName: "serviceType",
        required: true,
        type: {
          name: "String"
        }
      },
      isValid: {
        serializedName: "isValid",
        type: {
          name: "Boolean"
        }
      },
      is2FA: {
        serializedName: "is2FA",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PrivateAppleCredentialsSecretResponseData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateAppleCredentialsSecretResponseData",
    modelProperties: {
      username: {
        serializedName: "username",
        type: {
          name: "String"
        }
      },
      authCode: {
        constraints: {
          MaxLength: 6,
          MinLength: 6
        },
        serializedName: "authCode",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsS0Rbt7SchemasPrivateapplecredentialssecretresponseAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsS0Rbt7SchemasPrivateapplecredentialssecretresponseAllof0",
    uberParent:
      "ComponentsS0Rbt7SchemasPrivateapplecredentialssecretresponseAllof0",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      serviceType: {
        serializedName: "serviceType",
        required: true,
        type: {
          name: "String"
        }
      },
      isValid: {
        serializedName: "isValid",
        type: {
          name: "Boolean"
        }
      },
      is2FA: {
        serializedName: "is2FA",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PrivateAppleCertificateSecretResponseData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateAppleCertificateSecretResponseData",
    modelProperties: {
      base64Certificate: {
        serializedName: "base64Certificate",
        required: true,
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        required: true,
        type: {
          name: "String"
        }
      },
      certificateValidityStartDate: {
        serializedName: "certificateValidityStartDate",
        required: true,
        type: {
          name: "String"
        }
      },
      certificateValidityEndDate: {
        serializedName: "certificateValidityEndDate",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsHw7AncSchemasPrivateapplecertificatesecretresponseAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsHw7AncSchemasPrivateapplecertificatesecretresponseAllof0",
    uberParent:
      "ComponentsHw7AncSchemasPrivateapplecertificatesecretresponseAllof0",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      serviceType: {
        serializedName: "serviceType",
        required: true,
        type: {
          name: "String"
        }
      },
      isValid: {
        serializedName: "isValid",
        type: {
          name: "Boolean"
        }
      },
      is2FA: {
        serializedName: "is2FA",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AppleSecretDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppleSecretDetails",
    modelProperties: {
      username: {
        serializedName: "username",
        type: {
          name: "String"
        }
      },
      authCode: {
        constraints: {
          MaxLength: 6,
          MinLength: 6
        },
        serializedName: "authCode",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppleMultifactorSecretDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppleMultifactorSecretDetails",
    modelProperties: {
      username: {
        serializedName: "username",
        required: true,
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        required: true,
        type: {
          name: "String"
        }
      },
      authCode: {
        serializedName: "authCode",
        required: true,
        type: {
          name: "String"
        }
      },
      appSpecificPassword: {
        serializedName: "appSpecificPassword",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppleSecretDetailsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppleSecretDetailsResponse",
    modelProperties: {
      username: {
        serializedName: "username",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppleConnectionSecretResponseData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppleConnectionSecretResponseData",
    modelProperties: {
      username: {
        serializedName: "username",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1Yflo3CSchemasAppleconnectionsecretresponseAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1Yflo3CSchemasAppleconnectionsecretresponseAllof0",
    uberParent: "Components1Yflo3CSchemasAppleconnectionsecretresponseAllof0",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      serviceType: {
        serializedName: "serviceType",
        required: true,
        type: {
          name: "String"
        }
      },
      credentialType: {
        serializedName: "credentialType",
        required: true,
        type: {
          name: "String"
        }
      },
      isValid: {
        serializedName: "isValid",
        type: {
          name: "Boolean"
        }
      },
      is2FA: {
        serializedName: "is2FA",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AppleConnectionNonSecretResponse: coreClient.CompositeMapper = {
  serializedName: "apple",
  type: {
    name: "Composite",
    className: "AppleConnectionNonSecretResponse",
    uberParent: "AppleConnectionNonSecretResponse",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      serviceType: {
        serializedName: "serviceType",
        required: true,
        type: {
          name: "String"
        }
      },
      credentialType: {
        serializedName: "credentialType",
        required: true,
        type: {
          name: "String"
        }
      },
      isValid: {
        serializedName: "isValid",
        type: {
          name: "Boolean"
        }
      },
      is2FA: {
        serializedName: "is2FA",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AppleCredentialNonSecretDetailsResponseData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppleCredentialNonSecretDetailsResponseData",
    modelProperties: {
      username: {
        serializedName: "username",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components8D2JkjSchemasApplecredentialnonsecretdetailsresponseAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components8D2JkjSchemasApplecredentialnonsecretdetailsresponseAllof0",
    uberParent:
      "Components8D2JkjSchemasApplecredentialnonsecretdetailsresponseAllof0",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      serviceType: {
        serializedName: "serviceType",
        required: true,
        type: {
          name: "String"
        }
      },
      credentialType: {
        serializedName: "credentialType",
        required: true,
        type: {
          name: "String"
        }
      },
      isValid: {
        serializedName: "isValid",
        type: {
          name: "Boolean"
        }
      },
      is2FA: {
        serializedName: "is2FA",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AppleCertificateNonSecretDetailsResponseData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppleCertificateNonSecretDetailsResponseData",
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        required: true,
        type: {
          name: "String"
        }
      },
      certificateValidityStartDate: {
        serializedName: "certificateValidityStartDate",
        required: true,
        type: {
          name: "String"
        }
      },
      certificateValidityEndDate: {
        serializedName: "certificateValidityEndDate",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsUk3N19SchemasApplecertificatenonsecretdetailsresponseAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsUk3N19SchemasApplecertificatenonsecretdetailsresponseAllof0",
    uberParent:
      "ComponentsUk3N19SchemasApplecertificatenonsecretdetailsresponseAllof0",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      serviceType: {
        serializedName: "serviceType",
        required: true,
        type: {
          name: "String"
        }
      },
      credentialType: {
        serializedName: "credentialType",
        required: true,
        type: {
          name: "String"
        }
      },
      isValid: {
        serializedName: "isValid",
        type: {
          name: "Boolean"
        }
      },
      is2FA: {
        serializedName: "is2FA",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AppleCertificateSecretDetailsResponseData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppleCertificateSecretDetailsResponseData",
    modelProperties: {
      base64Certificate: {
        serializedName: "base64Certificate",
        required: true,
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        required: true,
        type: {
          name: "String"
        }
      },
      certificateValidityStartDate: {
        serializedName: "certificateValidityStartDate",
        required: true,
        type: {
          name: "String"
        }
      },
      certificateValidityEndDate: {
        serializedName: "certificateValidityEndDate",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1Hfba82SchemasApplecertificatesecretdetailsresponseAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components1Hfba82SchemasApplecertificatesecretdetailsresponseAllof0",
    uberParent:
      "Components1Hfba82SchemasApplecertificatesecretdetailsresponseAllof0",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      serviceType: {
        serializedName: "serviceType",
        required: true,
        type: {
          name: "String"
        }
      },
      credentialType: {
        serializedName: "credentialType",
        required: true,
        type: {
          name: "String"
        }
      },
      isValid: {
        serializedName: "isValid",
        type: {
          name: "Boolean"
        }
      },
      is2FA: {
        serializedName: "is2FA",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AppleCertificateSecretDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppleCertificateSecretDetails",
    modelProperties: {
      base64Certificate: {
        serializedName: "base64Certificate",
        required: true,
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        required: true,
        type: {
          name: "String"
        }
      },
      certificateValidityStartDate: {
        serializedName: "certificateValidityStartDate",
        required: true,
        type: {
          name: "String"
        }
      },
      certificateValidityEndDate: {
        serializedName: "certificateValidityEndDate",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppleCertificateDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppleCertificateDetails",
    modelProperties: {
      base64Certificate: {
        serializedName: "base64Certificate",
        required: true,
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppleCertificateNonSecretDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppleCertificateNonSecretDetails",
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        required: true,
        type: {
          name: "String"
        }
      },
      certificateValidityStartDate: {
        serializedName: "certificateValidityStartDate",
        required: true,
        type: {
          name: "String"
        }
      },
      certificateValidityEndDate: {
        serializedName: "certificateValidityEndDate",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JiraConnectionSecretRequestData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "JiraConnectionSecretRequestData",
    modelProperties: {
      baseUrl: {
        serializedName: "baseUrl",
        required: true,
        type: {
          name: "String"
        }
      },
      username: {
        serializedName: "username",
        required: true,
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1VirfwpSchemasJiraconnectionsecretrequestAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1VirfwpSchemasJiraconnectionsecretrequestAllof0",
    uberParent: "Components1VirfwpSchemasJiraconnectionsecretrequestAllof0",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      serviceType: {
        serializedName: "serviceType",
        required: true,
        type: {
          name: "String"
        }
      },
      credentialType: {
        defaultValue: "credentials",
        serializedName: "credentialType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JiraConnectionSecretResponseData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "JiraConnectionSecretResponseData",
    modelProperties: {
      baseUrl: {
        serializedName: "baseUrl",
        required: true,
        type: {
          name: "String"
        }
      },
      username: {
        serializedName: "username",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1TsjhacSchemasJiraconnectionsecretresponseAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1TsjhacSchemasJiraconnectionsecretresponseAllof0",
    uberParent: "Components1TsjhacSchemasJiraconnectionsecretresponseAllof0",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      serviceType: {
        serializedName: "serviceType",
        required: true,
        type: {
          name: "String"
        }
      },
      credentialType: {
        serializedName: "credentialType",
        required: true,
        type: {
          name: "String"
        }
      },
      isValid: {
        serializedName: "isValid",
        type: {
          name: "Boolean"
        }
      },
      is2FA: {
        serializedName: "is2FA",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PrivateJiraConnectionSecretResponseData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateJiraConnectionSecretResponseData",
    modelProperties: {
      baseUrl: {
        serializedName: "baseUrl",
        required: true,
        type: {
          name: "String"
        }
      },
      username: {
        serializedName: "username",
        required: true,
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1Rn2982SchemasPrivatejiraconnectionsecretresponseAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components1Rn2982SchemasPrivatejiraconnectionsecretresponseAllof0",
    uberParent:
      "Components1Rn2982SchemasPrivatejiraconnectionsecretresponseAllof0",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      serviceType: {
        serializedName: "serviceType",
        required: true,
        type: {
          name: "String"
        }
      },
      isValid: {
        serializedName: "isValid",
        type: {
          name: "Boolean"
        }
      },
      is2FA: {
        serializedName: "is2FA",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const JiraSecretDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "JiraSecretDetails",
    modelProperties: {
      baseUrl: {
        serializedName: "baseUrl",
        required: true,
        type: {
          name: "String"
        }
      },
      username: {
        serializedName: "username",
        required: true,
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JiraSecretDetailsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "JiraSecretDetailsResponse",
    modelProperties: {
      baseUrl: {
        serializedName: "baseUrl",
        required: true,
        type: {
          name: "String"
        }
      },
      username: {
        serializedName: "username",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsDtnm3YSchemasGoogleplayconnectionsecretrequestAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsDtnm3YSchemasGoogleplayconnectionsecretrequestAllof0",
    uberParent:
      "ComponentsDtnm3YSchemasGoogleplayconnectionsecretrequestAllof0",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      serviceType: {
        serializedName: "serviceType",
        required: true,
        type: {
          name: "String"
        }
      },
      credentialType: {
        defaultValue: "credentials",
        serializedName: "credentialType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1T4OuyrSchemasGoogleplayconnectionsecretresponseAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components1T4OuyrSchemasGoogleplayconnectionsecretresponseAllof0",
    uberParent:
      "Components1T4OuyrSchemasGoogleplayconnectionsecretresponseAllof0",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      serviceType: {
        serializedName: "serviceType",
        required: true,
        type: {
          name: "String"
        }
      },
      credentialType: {
        serializedName: "credentialType",
        required: true,
        type: {
          name: "String"
        }
      },
      isValid: {
        serializedName: "isValid",
        type: {
          name: "Boolean"
        }
      },
      is2FA: {
        serializedName: "is2FA",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Components8R88R5SchemasPrivategoogleplayconnectionsecretresponseAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components8R88R5SchemasPrivategoogleplayconnectionsecretresponseAllof0",
    uberParent:
      "Components8R88R5SchemasPrivategoogleplayconnectionsecretresponseAllof0",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      serviceType: {
        serializedName: "serviceType",
        required: true,
        type: {
          name: "String"
        }
      },
      isValid: {
        serializedName: "isValid",
        type: {
          name: "Boolean"
        }
      },
      is2FA: {
        serializedName: "is2FA",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const GooglePlayConnectionNonSecretResponse: coreClient.CompositeMapper = {
  serializedName: "googleplay",
  type: {
    name: "Composite",
    className: "GooglePlayConnectionNonSecretResponse",
    uberParent: "GooglePlayConnectionNonSecretResponse",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      serviceType: {
        serializedName: "serviceType",
        required: true,
        type: {
          name: "String"
        }
      },
      credentialType: {
        serializedName: "credentialType",
        required: true,
        type: {
          name: "String"
        }
      },
      isValid: {
        serializedName: "isValid",
        type: {
          name: "Boolean"
        }
      },
      is2FA: {
        serializedName: "is2FA",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ComponentsH0D4WySchemasGoogleplaycredentialnonsecretdetailsresponseAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsH0D4WySchemasGoogleplaycredentialnonsecretdetailsresponseAllof0",
    uberParent:
      "ComponentsH0D4WySchemasGoogleplaycredentialnonsecretdetailsresponseAllof0",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      serviceType: {
        serializedName: "serviceType",
        required: true,
        type: {
          name: "String"
        }
      },
      credentialType: {
        serializedName: "credentialType",
        required: true,
        type: {
          name: "String"
        }
      },
      isValid: {
        serializedName: "isValid",
        type: {
          name: "Boolean"
        }
      },
      is2FA: {
        serializedName: "is2FA",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const JiraConnectionNonSecretResponse: coreClient.CompositeMapper = {
  serializedName: "jira",
  type: {
    name: "Composite",
    className: "JiraConnectionNonSecretResponse",
    uberParent: "JiraConnectionNonSecretResponse",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      serviceType: {
        serializedName: "serviceType",
        required: true,
        type: {
          name: "String"
        }
      },
      credentialType: {
        serializedName: "credentialType",
        required: true,
        type: {
          name: "String"
        }
      },
      isValid: {
        serializedName: "isValid",
        type: {
          name: "Boolean"
        }
      },
      is2FA: {
        serializedName: "is2FA",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const JiraCredentialNonSecretDetailsResponseData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "JiraCredentialNonSecretDetailsResponseData",
    modelProperties: {
      baseUrl: {
        serializedName: "baseUrl",
        required: true,
        type: {
          name: "String"
        }
      },
      username: {
        serializedName: "username",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsOj73MvSchemasJiracredentialnonsecretdetailsresponseAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsOj73MvSchemasJiracredentialnonsecretdetailsresponseAllof0",
    uberParent:
      "ComponentsOj73MvSchemasJiracredentialnonsecretdetailsresponseAllof0",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      serviceType: {
        serializedName: "serviceType",
        required: true,
        type: {
          name: "String"
        }
      },
      credentialType: {
        serializedName: "credentialType",
        required: true,
        type: {
          name: "String"
        }
      },
      isValid: {
        serializedName: "isValid",
        type: {
          name: "Boolean"
        }
      },
      is2FA: {
        serializedName: "is2FA",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ApiTokenResponsev2: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiTokenResponsev2",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      createdAt: {
        serializedName: "created_at",
        required: true,
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      encryptedToken: {
        serializedName: "encrypted_token",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserDataResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserDataResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserProfileResponsev2: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserProfileResponsev2",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      canChangePassword: {
        serializedName: "can_change_password",
        type: {
          name: "Boolean"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        type: {
          name: "String"
        }
      },
      nextNpsSurveyDate: {
        serializedName: "next_nps_survey_date",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      },
      featureFlags: {
        serializedName: "feature_flags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      adminRole: {
        serializedName: "admin_role",
        type: {
          name: "String"
        }
      },
      settings: {
        serializedName: "settings",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      sessionHash: {
        serializedName: "session_hash",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MbaasSurveyDataResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MbaasSurveyDataResponse",
    modelProperties: {
      nextSurveyDate: {
        serializedName: "nextSurveyDate",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorDetailsv2: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetailsv2",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorResponsev2: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponsev2",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorResponsev2Error"
        }
      }
    }
  }
};

export const ErrorResponsev2Error: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponsev2Error",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OptimizelyUserMetaDataResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OptimizelyUserMetaDataResponse",
    modelProperties: {
      userId: {
        serializedName: "userId",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const OptimizelyUserMetaDataRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OptimizelyUserMetaDataRequest",
    modelProperties: {
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const FileAsset: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FileAsset",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      token: {
        serializedName: "token",
        type: {
          name: "String"
        }
      },
      uploadDomain: {
        serializedName: "uploadDomain",
        type: {
          name: "String"
        }
      },
      uploadWindowLocation: {
        serializedName: "uploadWindowLocation",
        type: {
          name: "String"
        }
      },
      urlEncodedToken: {
        serializedName: "urlEncodedToken",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SourceRepository: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SourceRepository",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      cloneUrl: {
        serializedName: "clone_url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SourceRepositoriesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SourceRepositoriesItem",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      cloneUrl: {
        serializedName: "clone_url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GitHubInstallationLite: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitHubInstallationLite",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      account: {
        serializedName: "account",
        type: {
          name: "Composite",
          className: "GitHubInstallationLiteAccount"
        }
      },
      appId: {
        serializedName: "app_id",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const GitHubInstallationLiteAccount: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitHubInstallationLiteAccount",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      login: {
        serializedName: "login",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GitHubAccountLite: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitHubAccountLite",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      login: {
        serializedName: "login",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GitHubInstallationRepository: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitHubInstallationRepository",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      cloneUrl: {
        serializedName: "clone_url",
        type: {
          name: "String"
        }
      },
      defaultBranch: {
        serializedName: "default_branch",
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        type: {
          name: "String"
        }
      },
      fork: {
        serializedName: "fork",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const GitHubInstallationRepositoriesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitHubInstallationRepositoriesItem",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      cloneUrl: {
        serializedName: "clone_url",
        type: {
          name: "String"
        }
      },
      defaultBranch: {
        serializedName: "default_branch",
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updated_at",
        type: {
          name: "String"
        }
      },
      fork: {
        serializedName: "fork",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const GitHubBillingAccount: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitHubBillingAccount",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GitHubPullRequestLite: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitHubPullRequestLite",
    modelProperties: {
      head: {
        serializedName: "head",
        type: {
          name: "Composite",
          className: "GitHubPullRequestLiteHead"
        }
      },
      base: {
        serializedName: "base",
        type: {
          name: "Composite",
          className: "GitHubPullRequestLiteBase"
        }
      }
    }
  }
};

export const GitHubPullRequestLiteHead: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitHubPullRequestLiteHead",
    modelProperties: {
      ref: {
        serializedName: "ref",
        type: {
          name: "String"
        }
      },
      sha: {
        serializedName: "sha",
        type: {
          name: "String"
        }
      },
      repo: {
        serializedName: "repo",
        type: {
          name: "Composite",
          className: "GitHubPullRequestLiteHeadRepo"
        }
      }
    }
  }
};

export const GitHubPullRequestLiteHeadRepo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitHubPullRequestLiteHeadRepo",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const GitHubPullRequestLiteBase: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitHubPullRequestLiteBase",
    modelProperties: {
      ref: {
        serializedName: "ref",
        type: {
          name: "String"
        }
      },
      sha: {
        serializedName: "sha",
        type: {
          name: "String"
        }
      },
      repo: {
        serializedName: "repo",
        type: {
          name: "Composite",
          className: "GitHubPullRequestLiteBaseRepo"
        }
      }
    }
  }
};

export const GitHubPullRequestLiteBaseRepo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitHubPullRequestLiteBaseRepo",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const GitHubBranchLite: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitHubBranchLite",
    modelProperties: {
      ref: {
        serializedName: "ref",
        type: {
          name: "String"
        }
      },
      sha: {
        serializedName: "sha",
        type: {
          name: "String"
        }
      },
      repo: {
        serializedName: "repo",
        type: {
          name: "Composite",
          className: "GitHubBranchLiteRepo"
        }
      }
    }
  }
};

export const GitHubBranchLiteRepo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitHubBranchLiteRepo",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const GitHubRepositoryLite: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitHubRepositoryLite",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const IosAppExtensionInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IosAppExtensionInfo",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      targetBundleIdentifier: {
        serializedName: "targetBundleIdentifier",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProvisioningProfileFile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProvisioningProfileFile",
    modelProperties: {
      fileName: {
        serializedName: "fileName",
        type: {
          name: "String"
        }
      },
      fileId: {
        serializedName: "fileId",
        type: {
          name: "String"
        }
      },
      uploadId: {
        serializedName: "uploadId",
        type: {
          name: "String"
        }
      },
      targetBundleIdentifier: {
        serializedName: "targetBundleIdentifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VstsProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VstsProfile",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      publicAlias: {
        serializedName: "publicAlias",
        type: {
          name: "String"
        }
      },
      emailAddress: {
        serializedName: "emailAddress",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VstsProject: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VstsProject",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      visibility: {
        serializedName: "visibility",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VstsAccount: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VstsAccount",
    modelProperties: {
      accountId: {
        serializedName: "accountId",
        type: {
          name: "String"
        }
      },
      accountUri: {
        serializedName: "accountUri",
        type: {
          name: "String"
        }
      },
      accountName: {
        serializedName: "accountName",
        type: {
          name: "String"
        }
      },
      accountType: {
        serializedName: "accountType",
        type: {
          name: "String"
        }
      },
      accountStatus: {
        serializedName: "accountStatus",
        type: {
          name: "String"
        }
      },
      user: {
        serializedName: "user",
        type: {
          name: "Composite",
          className: "VstsAccountUser"
        }
      },
      projects: {
        serializedName: "projects",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VstsAccountProjectsItem"
            }
          }
        }
      }
    }
  }
};

export const VstsAccountUser: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VstsAccountUser",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      publicAlias: {
        serializedName: "publicAlias",
        type: {
          name: "String"
        }
      },
      emailAddress: {
        serializedName: "emailAddress",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VstsAccountProjectsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VstsAccountProjectsItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      visibility: {
        serializedName: "visibility",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VstsAccountsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VstsAccountsItem",
    modelProperties: {
      accountId: {
        serializedName: "accountId",
        type: {
          name: "String"
        }
      },
      accountUri: {
        serializedName: "accountUri",
        type: {
          name: "String"
        }
      },
      accountName: {
        serializedName: "accountName",
        type: {
          name: "String"
        }
      },
      accountType: {
        serializedName: "accountType",
        type: {
          name: "String"
        }
      },
      accountStatus: {
        serializedName: "accountStatus",
        type: {
          name: "String"
        }
      },
      user: {
        serializedName: "user",
        type: {
          name: "Composite",
          className: "VstsAccountsItemUser"
        }
      },
      projects: {
        serializedName: "projects",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VstsAccountsPropertiesItemsItem"
            }
          }
        }
      }
    }
  }
};

export const VstsAccountsItemUser: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VstsAccountsItemUser",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      publicAlias: {
        serializedName: "publicAlias",
        type: {
          name: "String"
        }
      },
      emailAddress: {
        serializedName: "emailAddress",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VstsAccountsPropertiesItemsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VstsAccountsPropertiesItemsItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      visibility: {
        serializedName: "visibility",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DownloadContainer: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DownloadContainer",
    modelProperties: {
      uri: {
        serializedName: "uri",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebSocketContainer: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebSocketContainer",
    modelProperties: {
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const XcodeArchiveProject: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "XcodeArchiveProject",
    modelProperties: {
      archiveTargetId: {
        serializedName: "archiveTargetId",
        required: true,
        type: {
          name: "String"
        }
      },
      projectName: {
        serializedName: "projectName",
        required: true,
        type: {
          name: "String"
        }
      },
      projectPath: {
        serializedName: "projectPath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const XcodeScheme: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "XcodeScheme",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      hasTestAction: {
        serializedName: "hasTestAction",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      archiveConfiguration: {
        serializedName: "archiveConfiguration",
        type: {
          name: "String"
        }
      },
      archiveProject: {
        serializedName: "archiveProject",
        type: {
          name: "Composite",
          className: "XcodeSchemeArchiveProject"
        }
      }
    }
  }
};

export const XcodeSchemeArchiveProject: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "XcodeSchemeArchiveProject",
    modelProperties: {
      archiveTargetId: {
        serializedName: "archiveTargetId",
        required: true,
        type: {
          name: "String"
        }
      },
      projectName: {
        serializedName: "projectName",
        required: true,
        type: {
          name: "String"
        }
      },
      projectPath: {
        serializedName: "projectPath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const XcodeToolset: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "XcodeToolset",
    modelProperties: {
      xcodeSchemeContainers: {
        serializedName: "xcodeSchemeContainers",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "XcodeToolsetXcodeSchemeContainersItem"
            }
          }
        }
      }
    }
  }
};

export const XcodeToolsetXcodeSchemeContainersItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "XcodeToolsetXcodeSchemeContainersItem",
    modelProperties: {
      path: {
        serializedName: "path",
        required: true,
        type: {
          name: "String"
        }
      },
      sharedSchemes: {
        serializedName: "sharedSchemes",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "XcodeToolsetXcodeSchemeContainersPropertiesItemsItem"
            }
          }
        }
      },
      podfilePath: {
        serializedName: "podfilePath",
        type: {
          name: "String"
        }
      },
      cartfilePath: {
        serializedName: "cartfilePath",
        type: {
          name: "String"
        }
      },
      xcodeProjectSha: {
        serializedName: "xcodeProjectSha",
        type: {
          name: "String"
        }
      },
      workspaceProjectPaths: {
        serializedName: "workspaceProjectPaths",
        type: {
          name: "String"
        }
      },
      appExtensionTargets: {
        serializedName: "appExtensionTargets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Components1SlyjcwSchemasXcodetoolsetPropertiesXcodeschemecontainersItemsPropertiesAppextensiontargetsItems"
            }
          }
        }
      }
    }
  }
};

export const XcodeToolsetXcodeSchemeContainersPropertiesItemsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "XcodeToolsetXcodeSchemeContainersPropertiesItemsItem",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      hasTestAction: {
        serializedName: "hasTestAction",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      archiveConfiguration: {
        serializedName: "archiveConfiguration",
        type: {
          name: "String"
        }
      },
      archiveProject: {
        serializedName: "archiveProject",
        type: {
          name: "Composite",
          className:
            "XcodeToolsetXcodeSchemeContainersItemSharedSchemesItemArchiveProject"
        }
      }
    }
  }
};

export const XcodeToolsetXcodeSchemeContainersItemSharedSchemesItemArchiveProject: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "XcodeToolsetXcodeSchemeContainersItemSharedSchemesItemArchiveProject",
    modelProperties: {
      archiveTargetId: {
        serializedName: "archiveTargetId",
        required: true,
        type: {
          name: "String"
        }
      },
      projectName: {
        serializedName: "projectName",
        required: true,
        type: {
          name: "String"
        }
      },
      projectPath: {
        serializedName: "projectPath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1SlyjcwSchemasXcodetoolsetPropertiesXcodeschemecontainersItemsPropertiesAppextensiontargetsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components1SlyjcwSchemasXcodetoolsetPropertiesXcodeschemecontainersItemsPropertiesAppextensiontargetsItems",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      targetBundleIdentifier: {
        serializedName: "targetBundleIdentifier",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const XcodeSchemeContainer: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "XcodeSchemeContainer",
    modelProperties: {
      path: {
        serializedName: "path",
        required: true,
        type: {
          name: "String"
        }
      },
      sharedSchemes: {
        serializedName: "sharedSchemes",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "XcodeSchemeContainerSharedSchemesItem"
            }
          }
        }
      },
      podfilePath: {
        serializedName: "podfilePath",
        type: {
          name: "String"
        }
      },
      cartfilePath: {
        serializedName: "cartfilePath",
        type: {
          name: "String"
        }
      },
      xcodeProjectSha: {
        serializedName: "xcodeProjectSha",
        type: {
          name: "String"
        }
      },
      workspaceProjectPaths: {
        serializedName: "workspaceProjectPaths",
        type: {
          name: "String"
        }
      },
      appExtensionTargets: {
        serializedName: "appExtensionTargets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "XcodeSchemeContainerAppExtensionTargetsItem"
            }
          }
        }
      }
    }
  }
};

export const XcodeSchemeContainerSharedSchemesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "XcodeSchemeContainerSharedSchemesItem",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      hasTestAction: {
        serializedName: "hasTestAction",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      archiveConfiguration: {
        serializedName: "archiveConfiguration",
        type: {
          name: "String"
        }
      },
      archiveProject: {
        serializedName: "archiveProject",
        type: {
          name: "Composite",
          className: "XcodeSchemeContainerSharedSchemesItemArchiveProject"
        }
      }
    }
  }
};

export const XcodeSchemeContainerSharedSchemesItemArchiveProject: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "XcodeSchemeContainerSharedSchemesItemArchiveProject",
    modelProperties: {
      archiveTargetId: {
        serializedName: "archiveTargetId",
        required: true,
        type: {
          name: "String"
        }
      },
      projectName: {
        serializedName: "projectName",
        required: true,
        type: {
          name: "String"
        }
      },
      projectPath: {
        serializedName: "projectPath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const XcodeSchemeContainerAppExtensionTargetsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "XcodeSchemeContainerAppExtensionTargetsItem",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      targetBundleIdentifier: {
        serializedName: "targetBundleIdentifier",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const XamarinToolset: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "XamarinToolset",
    modelProperties: {
      xamarinSolutions: {
        serializedName: "xamarinSolutions",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "XamarinToolsetXamarinSolutionsItem"
            }
          }
        }
      }
    }
  }
};

export const XamarinToolsetXamarinSolutionsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "XamarinToolsetXamarinSolutionsItem",
    modelProperties: {
      path: {
        serializedName: "path",
        required: true,
        type: {
          name: "String"
        }
      },
      configurations: {
        serializedName: "configurations",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      defaultConfiguration: {
        serializedName: "defaultConfiguration",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const XamarinSolution: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "XamarinSolution",
    modelProperties: {
      path: {
        serializedName: "path",
        required: true,
        type: {
          name: "String"
        }
      },
      configurations: {
        serializedName: "configurations",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      defaultConfiguration: {
        serializedName: "defaultConfiguration",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AndroidProject: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AndroidProject",
    modelProperties: {
      androidModules: {
        serializedName: "androidModules",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AndroidProjectAndroidModulesItem"
            }
          }
        }
      },
      gradleWrapperPath: {
        serializedName: "gradleWrapperPath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AndroidProjectAndroidModulesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AndroidProjectAndroidModulesItem",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      hasBundle: {
        serializedName: "hasBundle",
        type: {
          name: "Boolean"
        }
      },
      productFlavors: {
        serializedName: "productFlavors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      buildVariants: {
        serializedName: "buildVariants",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      buildTypes: {
        serializedName: "buildTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      buildConfigurations: {
        serializedName: "buildConfigurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "ComponentsFbgdjrSchemasAndroidprojectPropertiesAndroidmodulesItemsPropertiesBuildconfigurationsItems"
            }
          }
        }
      },
      isRoot: {
        serializedName: "isRoot",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ComponentsFbgdjrSchemasAndroidprojectPropertiesAndroidmodulesItemsPropertiesBuildconfigurationsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsFbgdjrSchemasAndroidprojectPropertiesAndroidmodulesItemsPropertiesBuildconfigurationsItems",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      signingConfig: {
        serializedName: "signingConfig",
        type: {
          name: "Composite",
          className:
            "AndroidProjectAndroidModulesItemBuildConfigurationsItemSigningConfig"
        }
      }
    }
  }
};

export const AndroidProjectAndroidModulesItemBuildConfigurationsItemSigningConfig: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "AndroidProjectAndroidModulesItemBuildConfigurationsItemSigningConfig",
    modelProperties: {
      hasStoreFile: {
        serializedName: "hasStoreFile",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AndroidModule: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AndroidModule",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      hasBundle: {
        serializedName: "hasBundle",
        type: {
          name: "Boolean"
        }
      },
      productFlavors: {
        serializedName: "productFlavors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      buildVariants: {
        serializedName: "buildVariants",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      buildTypes: {
        serializedName: "buildTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      buildConfigurations: {
        serializedName: "buildConfigurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AndroidModuleBuildConfigurationsItem"
            }
          }
        }
      },
      isRoot: {
        serializedName: "isRoot",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AndroidModuleBuildConfigurationsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AndroidModuleBuildConfigurationsItem",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      signingConfig: {
        serializedName: "signingConfig",
        type: {
          name: "Composite",
          className: "AndroidModuleBuildConfigurationsItemSigningConfig"
        }
      }
    }
  }
};

export const AndroidModuleBuildConfigurationsItemSigningConfig: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AndroidModuleBuildConfigurationsItemSigningConfig",
    modelProperties: {
      hasStoreFile: {
        serializedName: "hasStoreFile",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const BuildConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildConfiguration",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      signingConfig: {
        serializedName: "signingConfig",
        type: {
          name: "Composite",
          className: "BuildConfigurationSigningConfig"
        }
      }
    }
  }
};

export const BuildConfigurationSigningConfig: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildConfigurationSigningConfig",
    modelProperties: {
      hasStoreFile: {
        serializedName: "hasStoreFile",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const SigningConfig: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SigningConfig",
    modelProperties: {
      hasStoreFile: {
        serializedName: "hasStoreFile",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const JavaScriptToolset: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "JavaScriptToolset",
    modelProperties: {
      packageJsonPaths: {
        serializedName: "packageJsonPaths",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      javascriptSolutions: {
        serializedName: "javascriptSolutions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "JavaScriptToolsetJavascriptSolutionsItem"
            }
          }
        }
      }
    }
  }
};

export const JavaScriptToolsetJavascriptSolutionsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "JavaScriptToolsetJavascriptSolutionsItem",
    modelProperties: {
      packageJsonPath: {
        serializedName: "packageJsonPath",
        required: true,
        type: {
          name: "String"
        }
      },
      reactNativeVersion: {
        serializedName: "reactNativeVersion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JavaScriptSolution: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "JavaScriptSolution",
    modelProperties: {
      packageJsonPath: {
        serializedName: "packageJsonPath",
        required: true,
        type: {
          name: "String"
        }
      },
      reactNativeVersion: {
        serializedName: "reactNativeVersion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UWPToolset: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UWPToolset",
    modelProperties: {
      uwpSolutions: {
        serializedName: "uwpSolutions",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UWPToolsetUwpSolutionsItem"
            }
          }
        }
      }
    }
  }
};

export const UWPToolsetUwpSolutionsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UWPToolsetUwpSolutionsItem",
    modelProperties: {
      path: {
        serializedName: "path",
        required: true,
        type: {
          name: "String"
        }
      },
      configurations: {
        serializedName: "configurations",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const UWPSolution: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UWPSolution",
    modelProperties: {
      path: {
        serializedName: "path",
        required: true,
        type: {
          name: "String"
        }
      },
      configurations: {
        serializedName: "configurations",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const TestCloudToolset: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestCloudToolset",
    modelProperties: {
      projects: {
        serializedName: "projects",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TestCloudToolsetProjectsItem"
            }
          }
        }
      }
    }
  }
};

export const TestCloudToolsetProjectsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestCloudToolsetProjectsItem",
    modelProperties: {
      path: {
        serializedName: "path",
        required: true,
        type: {
          name: "String"
        }
      },
      frameworkType: {
        serializedName: "frameworkType",
        required: true,
        type: {
          name: "String"
        }
      },
      frameworkProperties: {
        serializedName: "frameworkProperties",
        type: {
          name: "Composite",
          className: "TestCloudToolsetProjectsItemFrameworkProperties"
        }
      }
    }
  }
};

export const TestCloudToolsetProjectsItemFrameworkProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestCloudToolsetProjectsItemFrameworkProperties",
    modelProperties: {
      configurations: {
        serializedName: "configurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const TestCloudProject: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestCloudProject",
    modelProperties: {
      path: {
        serializedName: "path",
        required: true,
        type: {
          name: "String"
        }
      },
      frameworkType: {
        serializedName: "frameworkType",
        required: true,
        type: {
          name: "String"
        }
      },
      frameworkProperties: {
        serializedName: "frameworkProperties",
        type: {
          name: "Composite",
          className: "TestCloudProjectFrameworkProperties"
        }
      }
    }
  }
};

export const TestCloudProjectFrameworkProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestCloudProjectFrameworkProperties",
    modelProperties: {
      configurations: {
        serializedName: "configurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ToolsetProjects: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ToolsetProjects",
    modelProperties: {
      commit: {
        serializedName: "commit",
        type: {
          name: "String"
        }
      },
      xcode: {
        serializedName: "xcode",
        type: {
          name: "Composite",
          className: "ToolsetProjectsXcode"
        }
      },
      javascript: {
        serializedName: "javascript",
        type: {
          name: "Composite",
          className: "ToolsetProjectsJavascript"
        }
      },
      xamarin: {
        serializedName: "xamarin",
        type: {
          name: "Composite",
          className: "ToolsetProjectsXamarin"
        }
      },
      android: {
        serializedName: "android",
        type: {
          name: "Composite",
          className: "ToolsetProjectsAndroid"
        }
      },
      buildscripts: {
        serializedName: "buildscripts",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className:
                "ComponentsCwfjmtSchemasToolsetprojectsPropertiesBuildscriptsAdditionalproperties"
            }
          }
        }
      },
      uwp: {
        serializedName: "uwp",
        type: {
          name: "Composite",
          className: "ToolsetProjectsUwp"
        }
      },
      testcloud: {
        serializedName: "testcloud",
        type: {
          name: "Composite",
          className: "ToolsetProjectsTestcloud"
        }
      }
    }
  }
};

export const ToolsetProjectsXcode: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ToolsetProjectsXcode",
    modelProperties: {
      xcodeSchemeContainers: {
        serializedName: "xcodeSchemeContainers",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ToolsetProjectsXcodeSchemeContainersItem"
            }
          }
        }
      }
    }
  }
};

export const ToolsetProjectsXcodeSchemeContainersItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ToolsetProjectsXcodeSchemeContainersItem",
    modelProperties: {
      path: {
        serializedName: "path",
        required: true,
        type: {
          name: "String"
        }
      },
      sharedSchemes: {
        serializedName: "sharedSchemes",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "ToolsetProjectsXcodeSchemeContainersPropertiesItemsItem"
            }
          }
        }
      },
      podfilePath: {
        serializedName: "podfilePath",
        type: {
          name: "String"
        }
      },
      cartfilePath: {
        serializedName: "cartfilePath",
        type: {
          name: "String"
        }
      },
      xcodeProjectSha: {
        serializedName: "xcodeProjectSha",
        type: {
          name: "String"
        }
      },
      workspaceProjectPaths: {
        serializedName: "workspaceProjectPaths",
        type: {
          name: "String"
        }
      },
      appExtensionTargets: {
        serializedName: "appExtensionTargets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "ComponentsU3Jyw6SchemasToolsetprojectsPropertiesXcodePropertiesXcodeschemecontainersItemsPropertiesAppextensiontargetsItems"
            }
          }
        }
      }
    }
  }
};

export const ToolsetProjectsXcodeSchemeContainersPropertiesItemsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ToolsetProjectsXcodeSchemeContainersPropertiesItemsItem",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      hasTestAction: {
        serializedName: "hasTestAction",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      archiveConfiguration: {
        serializedName: "archiveConfiguration",
        type: {
          name: "String"
        }
      },
      archiveProject: {
        serializedName: "archiveProject",
        type: {
          name: "Composite",
          className:
            "ToolsetProjectsXcodeSchemeContainersItemSharedSchemesItemArchiveProject"
        }
      }
    }
  }
};

export const ToolsetProjectsXcodeSchemeContainersItemSharedSchemesItemArchiveProject: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ToolsetProjectsXcodeSchemeContainersItemSharedSchemesItemArchiveProject",
    modelProperties: {
      archiveTargetId: {
        serializedName: "archiveTargetId",
        required: true,
        type: {
          name: "String"
        }
      },
      projectName: {
        serializedName: "projectName",
        required: true,
        type: {
          name: "String"
        }
      },
      projectPath: {
        serializedName: "projectPath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsU3Jyw6SchemasToolsetprojectsPropertiesXcodePropertiesXcodeschemecontainersItemsPropertiesAppextensiontargetsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsU3Jyw6SchemasToolsetprojectsPropertiesXcodePropertiesXcodeschemecontainersItemsPropertiesAppextensiontargetsItems",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      targetBundleIdentifier: {
        serializedName: "targetBundleIdentifier",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ToolsetProjectsJavascript: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ToolsetProjectsJavascript",
    modelProperties: {
      packageJsonPaths: {
        serializedName: "packageJsonPaths",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      javascriptSolutions: {
        serializedName: "javascriptSolutions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ToolsetProjectsJavascriptSolutionsItem"
            }
          }
        }
      }
    }
  }
};

export const ToolsetProjectsJavascriptSolutionsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ToolsetProjectsJavascriptSolutionsItem",
    modelProperties: {
      packageJsonPath: {
        serializedName: "packageJsonPath",
        required: true,
        type: {
          name: "String"
        }
      },
      reactNativeVersion: {
        serializedName: "reactNativeVersion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ToolsetProjectsXamarin: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ToolsetProjectsXamarin",
    modelProperties: {
      xamarinSolutions: {
        serializedName: "xamarinSolutions",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ToolsetProjectsXamarinSolutionsItem"
            }
          }
        }
      }
    }
  }
};

export const ToolsetProjectsXamarinSolutionsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ToolsetProjectsXamarinSolutionsItem",
    modelProperties: {
      path: {
        serializedName: "path",
        required: true,
        type: {
          name: "String"
        }
      },
      configurations: {
        serializedName: "configurations",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      defaultConfiguration: {
        serializedName: "defaultConfiguration",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ToolsetProjectsAndroid: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ToolsetProjectsAndroid",
    modelProperties: {
      androidModules: {
        serializedName: "androidModules",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ToolsetProjectsAndroidModulesItem"
            }
          }
        }
      },
      gradleWrapperPath: {
        serializedName: "gradleWrapperPath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ToolsetProjectsAndroidModulesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ToolsetProjectsAndroidModulesItem",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      hasBundle: {
        serializedName: "hasBundle",
        type: {
          name: "Boolean"
        }
      },
      productFlavors: {
        serializedName: "productFlavors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      buildVariants: {
        serializedName: "buildVariants",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      buildTypes: {
        serializedName: "buildTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      buildConfigurations: {
        serializedName: "buildConfigurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "ComponentsG6DsdaSchemasToolsetprojectsPropertiesAndroidPropertiesAndroidmodulesItemsPropertiesBuildconfigurationsItems"
            }
          }
        }
      },
      isRoot: {
        serializedName: "isRoot",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ComponentsG6DsdaSchemasToolsetprojectsPropertiesAndroidPropertiesAndroidmodulesItemsPropertiesBuildconfigurationsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsG6DsdaSchemasToolsetprojectsPropertiesAndroidPropertiesAndroidmodulesItemsPropertiesBuildconfigurationsItems",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      signingConfig: {
        serializedName: "signingConfig",
        type: {
          name: "Composite",
          className:
            "ToolsetProjectsAndroidModulesItemBuildConfigurationsItemSigningConfig"
        }
      }
    }
  }
};

export const ToolsetProjectsAndroidModulesItemBuildConfigurationsItemSigningConfig: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ToolsetProjectsAndroidModulesItemBuildConfigurationsItemSigningConfig",
    modelProperties: {
      hasStoreFile: {
        serializedName: "hasStoreFile",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ComponentsCwfjmtSchemasToolsetprojectsPropertiesBuildscriptsAdditionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsCwfjmtSchemasToolsetprojectsPropertiesBuildscriptsAdditionalproperties",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      path: {
        serializedName: "path",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ToolsetProjectsUwp: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ToolsetProjectsUwp",
    modelProperties: {
      uwpSolutions: {
        serializedName: "uwpSolutions",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ToolsetProjectsUwpSolutionsItem"
            }
          }
        }
      }
    }
  }
};

export const ToolsetProjectsUwpSolutionsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ToolsetProjectsUwpSolutionsItem",
    modelProperties: {
      path: {
        serializedName: "path",
        required: true,
        type: {
          name: "String"
        }
      },
      configurations: {
        serializedName: "configurations",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ToolsetProjectsTestcloud: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ToolsetProjectsTestcloud",
    modelProperties: {
      projects: {
        serializedName: "projects",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ToolsetProjectsTestcloudProjectsItem"
            }
          }
        }
      }
    }
  }
};

export const ToolsetProjectsTestcloudProjectsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ToolsetProjectsTestcloudProjectsItem",
    modelProperties: {
      path: {
        serializedName: "path",
        required: true,
        type: {
          name: "String"
        }
      },
      frameworkType: {
        serializedName: "frameworkType",
        required: true,
        type: {
          name: "String"
        }
      },
      frameworkProperties: {
        serializedName: "frameworkProperties",
        type: {
          name: "Composite",
          className: "ToolsetProjectsTestcloudProjectsItemFrameworkProperties"
        }
      }
    }
  }
};

export const ToolsetProjectsTestcloudProjectsItemFrameworkProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ToolsetProjectsTestcloudProjectsItemFrameworkProperties",
    modelProperties: {
      configurations: {
        serializedName: "configurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Components3K91NpSchemasBuildscriptsAdditionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components3K91NpSchemasBuildscriptsAdditionalproperties",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      path: {
        serializedName: "path",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ToolsetProject: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ToolsetProject",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      path: {
        serializedName: "path",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsV0Ku4ESchemasBranchstatuscollectionItemsAdditionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsV0Ku4ESchemasBranchstatuscollectionItemsAdditionalproperties",
    modelProperties: {
      branch: {
        serializedName: "branch",
        type: {
          name: "Composite",
          className: "BranchStatusCollectionAdditionalPropertiesBranch"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const BranchStatusCollectionAdditionalPropertiesBranch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BranchStatusCollectionAdditionalPropertiesBranch",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      commit: {
        serializedName: "commit",
        type: {
          name: "Composite",
          className: "BranchStatusCollectionAdditionalPropertiesBranchCommit"
        }
      }
    }
  }
};

export const BranchStatusCollectionAdditionalPropertiesBranchCommit: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BranchStatusCollectionAdditionalPropertiesBranchCommit",
    modelProperties: {
      sha: {
        serializedName: "sha",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BranchStatusCollectionItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BranchStatusCollectionItem",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      configured: {
        serializedName: "configured",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      lastBuild: {
        serializedName: "lastBuild",
        type: {
          name: "Composite",
          className: "BranchStatusCollectionItemLastBuild"
        }
      }
    }
  }
};

export const BranchStatusCollectionItemLastBuild: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BranchStatusCollectionItemLastBuild",
    modelProperties: {
      id: {
        constraints: {
          ExclusiveMinimum: 0
        },
        serializedName: "id",
        required: true,
        type: {
          name: "Number"
        }
      },
      buildNumber: {
        serializedName: "buildNumber",
        required: true,
        type: {
          name: "String"
        }
      },
      queueTime: {
        serializedName: "queueTime",
        required: true,
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      finishTime: {
        serializedName: "finishTime",
        type: {
          name: "String"
        }
      },
      lastChangedDate: {
        serializedName: "lastChangedDate",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      result: {
        serializedName: "result",
        required: true,
        type: {
          name: "String"
        }
      },
      sourceBranch: {
        serializedName: "sourceBranch",
        required: true,
        type: {
          name: "String"
        }
      },
      sourceVersion: {
        serializedName: "sourceVersion",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1UuhtzdSchemasBranchstatusAdditionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1UuhtzdSchemasBranchstatusAdditionalproperties",
    modelProperties: {
      branch: {
        serializedName: "branch",
        type: {
          name: "Composite",
          className: "BranchStatusProperties"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const BranchStatusProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BranchStatusProperties",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      commit: {
        serializedName: "commit",
        type: {
          name: "Composite",
          className:
            "ComponentsRwugn8SchemasBranchstatusAdditionalpropertiesPropertiesBranchPropertiesCommit"
        }
      }
    }
  }
};

export const ComponentsRwugn8SchemasBranchstatusAdditionalpropertiesPropertiesBranchPropertiesCommit: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsRwugn8SchemasBranchstatusAdditionalpropertiesPropertiesBranchPropertiesCommit",
    modelProperties: {
      sha: {
        serializedName: "sha",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BranchStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BranchStatus",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      configured: {
        serializedName: "configured",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      lastBuild: {
        serializedName: "lastBuild",
        type: {
          name: "Composite",
          className: "BranchStatusLastBuild"
        }
      }
    }
  }
};

export const BranchStatusLastBuild: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BranchStatusLastBuild",
    modelProperties: {
      id: {
        constraints: {
          ExclusiveMinimum: 0
        },
        serializedName: "id",
        required: true,
        type: {
          name: "Number"
        }
      },
      buildNumber: {
        serializedName: "buildNumber",
        required: true,
        type: {
          name: "String"
        }
      },
      queueTime: {
        serializedName: "queueTime",
        required: true,
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      finishTime: {
        serializedName: "finishTime",
        type: {
          name: "String"
        }
      },
      lastChangedDate: {
        serializedName: "lastChangedDate",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      result: {
        serializedName: "result",
        required: true,
        type: {
          name: "String"
        }
      },
      sourceBranch: {
        serializedName: "sourceBranch",
        required: true,
        type: {
          name: "String"
        }
      },
      sourceVersion: {
        serializedName: "sourceVersion",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BranchProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BranchProperties",
    modelProperties: {
      branch: {
        serializedName: "branch",
        type: {
          name: "Composite",
          className: "BranchPropertiesBranch"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const BranchPropertiesBranch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BranchPropertiesBranch",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      commit: {
        serializedName: "commit",
        type: {
          name: "Composite",
          className: "BranchPropertiesBranchCommit"
        }
      }
    }
  }
};

export const BranchPropertiesBranchCommit: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BranchPropertiesBranchCommit",
    modelProperties: {
      sha: {
        serializedName: "sha",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components103Kx4VSchemasBranchconfigurationAdditionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components103Kx4VSchemasBranchconfigurationAdditionalproperties",
    modelProperties: {
      branch: {
        serializedName: "branch",
        type: {
          name: "Composite",
          className: "BranchConfigurationProperties"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const BranchConfigurationProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BranchConfigurationProperties",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      commit: {
        serializedName: "commit",
        type: {
          name: "Composite",
          className:
            "ComponentsKnnno4SchemasBranchconfigurationAdditionalpropertiesPropertiesBranchPropertiesCommit"
        }
      }
    }
  }
};

export const ComponentsKnnno4SchemasBranchconfigurationAdditionalpropertiesPropertiesBranchPropertiesCommit: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsKnnno4SchemasBranchconfigurationAdditionalpropertiesPropertiesBranchPropertiesCommit",
    modelProperties: {
      sha: {
        serializedName: "sha",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BranchConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BranchConfiguration",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      trigger: {
        serializedName: "trigger",
        type: {
          name: "String"
        }
      },
      testsEnabled: {
        serializedName: "testsEnabled",
        type: {
          name: "Boolean"
        }
      },
      badgeIsEnabled: {
        serializedName: "badgeIsEnabled",
        type: {
          name: "Boolean"
        }
      },
      signed: {
        serializedName: "signed",
        type: {
          name: "Boolean"
        }
      },
      cloneFromBranch: {
        serializedName: "cloneFromBranch",
        type: {
          name: "String"
        }
      },
      toolsets: {
        serializedName: "toolsets",
        type: {
          name: "Composite",
          className: "BranchConfigurationToolsets"
        }
      },
      artifactVersioning: {
        serializedName: "artifactVersioning",
        type: {
          name: "Composite",
          className: "BranchConfigurationArtifactVersioning"
        }
      }
    }
  }
};

export const BranchConfigurationToolsets: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BranchConfigurationToolsets",
    modelProperties: {
      xcode: {
        serializedName: "xcode",
        type: {
          name: "Composite",
          className: "BranchConfigurationToolsetsXcode"
        }
      },
      javascript: {
        serializedName: "javascript",
        type: {
          name: "Composite",
          className: "BranchConfigurationToolsetsJavascript"
        }
      },
      xamarin: {
        serializedName: "xamarin",
        type: {
          name: "Composite",
          className: "BranchConfigurationToolsetsXamarin"
        }
      },
      android: {
        serializedName: "android",
        type: {
          name: "Composite",
          className: "BranchConfigurationToolsetsAndroid"
        }
      }
    }
  }
};

export const BranchConfigurationToolsetsXcode: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BranchConfigurationToolsetsXcode",
    modelProperties: {
      projectOrWorkspacePath: {
        serializedName: "projectOrWorkspacePath",
        type: {
          name: "String"
        }
      },
      podfilePath: {
        serializedName: "podfilePath",
        type: {
          name: "String"
        }
      },
      cartfilePath: {
        serializedName: "cartfilePath",
        type: {
          name: "String"
        }
      },
      provisioningProfileEncoded: {
        serializedName: "provisioningProfileEncoded",
        type: {
          name: "String"
        }
      },
      certificateEncoded: {
        serializedName: "certificateEncoded",
        type: {
          name: "String"
        }
      },
      provisioningProfileFileId: {
        serializedName: "provisioningProfileFileId",
        type: {
          name: "String"
        }
      },
      certificateFileId: {
        serializedName: "certificateFileId",
        type: {
          name: "String"
        }
      },
      provisioningProfileUploadId: {
        serializedName: "provisioningProfileUploadId",
        type: {
          name: "String"
        }
      },
      appExtensionProvisioningProfileFiles: {
        serializedName: "appExtensionProvisioningProfileFiles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "BranchConfigurationToolsetsXcodeAppExtensionProvisioningProfileFilesItem"
            }
          }
        }
      },
      certificateUploadId: {
        serializedName: "certificateUploadId",
        type: {
          name: "String"
        }
      },
      certificatePassword: {
        serializedName: "certificatePassword",
        type: {
          name: "String"
        }
      },
      scheme: {
        serializedName: "scheme",
        type: {
          name: "String"
        }
      },
      xcodeVersion: {
        serializedName: "xcodeVersion",
        type: {
          name: "String"
        }
      },
      provisioningProfileFilename: {
        serializedName: "provisioningProfileFilename",
        type: {
          name: "String"
        }
      },
      certificateFilename: {
        serializedName: "certificateFilename",
        type: {
          name: "String"
        }
      },
      teamId: {
        serializedName: "teamId",
        type: {
          name: "String"
        }
      },
      automaticSigning: {
        serializedName: "automaticSigning",
        type: {
          name: "Boolean"
        }
      },
      xcodeProjectSha: {
        serializedName: "xcodeProjectSha",
        type: {
          name: "String"
        }
      },
      archiveConfiguration: {
        serializedName: "archiveConfiguration",
        type: {
          name: "String"
        }
      },
      targetToArchive: {
        serializedName: "targetToArchive",
        type: {
          name: "String"
        }
      },
      forceLegacyBuildSystem: {
        serializedName: "forceLegacyBuildSystem",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const BranchConfigurationToolsetsXcodeAppExtensionProvisioningProfileFilesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "BranchConfigurationToolsetsXcodeAppExtensionProvisioningProfileFilesItem",
    modelProperties: {
      fileName: {
        serializedName: "fileName",
        type: {
          name: "String"
        }
      },
      fileId: {
        serializedName: "fileId",
        type: {
          name: "String"
        }
      },
      uploadId: {
        serializedName: "uploadId",
        type: {
          name: "String"
        }
      },
      targetBundleIdentifier: {
        serializedName: "targetBundleIdentifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BranchConfigurationToolsetsJavascript: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BranchConfigurationToolsetsJavascript",
    modelProperties: {
      packageJsonPath: {
        serializedName: "packageJsonPath",
        type: {
          name: "String"
        }
      },
      runTests: {
        serializedName: "runTests",
        type: {
          name: "Boolean"
        }
      },
      reactNativeVersion: {
        serializedName: "reactNativeVersion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BranchConfigurationToolsetsXamarin: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BranchConfigurationToolsetsXamarin",
    modelProperties: {
      slnPath: {
        serializedName: "slnPath",
        type: {
          name: "String"
        }
      },
      isSimBuild: {
        serializedName: "isSimBuild",
        type: {
          name: "Boolean"
        }
      },
      args: {
        serializedName: "args",
        type: {
          name: "String"
        }
      },
      configuration: {
        serializedName: "configuration",
        type: {
          name: "String"
        }
      },
      p12File: {
        serializedName: "p12File",
        type: {
          name: "String"
        }
      },
      p12Pwd: {
        serializedName: "p12Pwd",
        type: {
          name: "String"
        }
      },
      provProfile: {
        serializedName: "provProfile",
        type: {
          name: "String"
        }
      },
      monoVersion: {
        serializedName: "monoVersion",
        type: {
          name: "String"
        }
      },
      sdkBundle: {
        serializedName: "sdkBundle",
        type: {
          name: "String"
        }
      },
      symlink: {
        serializedName: "symlink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BranchConfigurationToolsetsAndroid: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BranchConfigurationToolsetsAndroid",
    modelProperties: {
      gradleWrapperPath: {
        serializedName: "gradleWrapperPath",
        type: {
          name: "String"
        }
      },
      module: {
        serializedName: "module",
        type: {
          name: "String"
        }
      },
      buildVariant: {
        serializedName: "buildVariant",
        type: {
          name: "String"
        }
      },
      runTests: {
        defaultValue: true,
        serializedName: "runTests",
        type: {
          name: "Boolean"
        }
      },
      runLint: {
        serializedName: "runLint",
        type: {
          name: "Boolean"
        }
      },
      isRoot: {
        serializedName: "isRoot",
        type: {
          name: "Boolean"
        }
      },
      automaticSigning: {
        serializedName: "automaticSigning",
        type: {
          name: "Boolean"
        }
      },
      keystorePassword: {
        serializedName: "keystorePassword",
        type: {
          name: "String"
        }
      },
      keyAlias: {
        serializedName: "keyAlias",
        type: {
          name: "String"
        }
      },
      keyPassword: {
        serializedName: "keyPassword",
        type: {
          name: "String"
        }
      },
      keystoreFilename: {
        serializedName: "keystoreFilename",
        type: {
          name: "String"
        }
      },
      keystoreEncoded: {
        serializedName: "keystoreEncoded",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BranchConfigurationArtifactVersioning: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BranchConfigurationArtifactVersioning",
    modelProperties: {
      buildNumberFormat: {
        serializedName: "buildNumberFormat",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BranchConfigurationRevisionsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BranchConfigurationRevisionsItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      revision: {
        serializedName: "revision",
        type: {
          name: "Number"
        }
      },
      changedDate: {
        serializedName: "changedDate",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      changeType: {
        serializedName: "changeType",
        type: {
          name: "String"
        }
      },
      definitionUrl: {
        serializedName: "definitionUrl",
        type: {
          name: "String"
        }
      },
      changedBy: {
        serializedName: "changedBy",
        type: {
          name: "Composite",
          className: "BranchConfigurationRevisionsItemChangedBy"
        }
      }
    }
  }
};

export const BranchConfigurationRevisionsItemChangedBy: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BranchConfigurationRevisionsItemChangedBy",
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BranchConfigurationRevision: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BranchConfigurationRevision",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      revision: {
        serializedName: "revision",
        type: {
          name: "Number"
        }
      },
      changedDate: {
        serializedName: "changedDate",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      changeType: {
        serializedName: "changeType",
        type: {
          name: "String"
        }
      },
      definitionUrl: {
        serializedName: "definitionUrl",
        type: {
          name: "String"
        }
      },
      changedBy: {
        serializedName: "changedBy",
        type: {
          name: "Composite",
          className: "BranchConfigurationRevisionChangedBy"
        }
      }
    }
  }
};

export const BranchConfigurationRevisionChangedBy: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BranchConfigurationRevisionChangedBy",
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BranchConfigurationRevisionAuthor: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BranchConfigurationRevisionAuthor",
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components10Y43Q0SchemasBranchconfigurationwithidAdditionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components10Y43Q0SchemasBranchconfigurationwithidAdditionalproperties",
    modelProperties: {
      branch: {
        serializedName: "branch",
        type: {
          name: "Composite",
          className: "BranchConfigurationWithIdProperties"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const BranchConfigurationWithIdProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BranchConfigurationWithIdProperties",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      commit: {
        serializedName: "commit",
        type: {
          name: "Composite",
          className:
            "Components108Rz3YSchemasBranchconfigurationwithidAdditionalpropertiesPropertiesBranchPropertiesCommit"
        }
      }
    }
  }
};

export const Components108Rz3YSchemasBranchconfigurationwithidAdditionalpropertiesPropertiesBranchPropertiesCommit: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components108Rz3YSchemasBranchconfigurationwithidAdditionalpropertiesPropertiesBranchPropertiesCommit",
    modelProperties: {
      sha: {
        serializedName: "sha",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BranchConfigurationWithId: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BranchConfigurationWithId",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const XcodeBranchConfigurationProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "XcodeBranchConfigurationProperties",
    modelProperties: {
      projectOrWorkspacePath: {
        serializedName: "projectOrWorkspacePath",
        type: {
          name: "String"
        }
      },
      podfilePath: {
        serializedName: "podfilePath",
        type: {
          name: "String"
        }
      },
      cartfilePath: {
        serializedName: "cartfilePath",
        type: {
          name: "String"
        }
      },
      provisioningProfileEncoded: {
        serializedName: "provisioningProfileEncoded",
        type: {
          name: "String"
        }
      },
      certificateEncoded: {
        serializedName: "certificateEncoded",
        type: {
          name: "String"
        }
      },
      provisioningProfileFileId: {
        serializedName: "provisioningProfileFileId",
        type: {
          name: "String"
        }
      },
      certificateFileId: {
        serializedName: "certificateFileId",
        type: {
          name: "String"
        }
      },
      provisioningProfileUploadId: {
        serializedName: "provisioningProfileUploadId",
        type: {
          name: "String"
        }
      },
      appExtensionProvisioningProfileFiles: {
        serializedName: "appExtensionProvisioningProfileFiles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "XcodeBranchConfigurationPropertiesAppExtensionProvisioningProfileFilesItem"
            }
          }
        }
      },
      certificateUploadId: {
        serializedName: "certificateUploadId",
        type: {
          name: "String"
        }
      },
      certificatePassword: {
        serializedName: "certificatePassword",
        type: {
          name: "String"
        }
      },
      scheme: {
        serializedName: "scheme",
        type: {
          name: "String"
        }
      },
      xcodeVersion: {
        serializedName: "xcodeVersion",
        type: {
          name: "String"
        }
      },
      provisioningProfileFilename: {
        serializedName: "provisioningProfileFilename",
        type: {
          name: "String"
        }
      },
      certificateFilename: {
        serializedName: "certificateFilename",
        type: {
          name: "String"
        }
      },
      teamId: {
        serializedName: "teamId",
        type: {
          name: "String"
        }
      },
      automaticSigning: {
        serializedName: "automaticSigning",
        type: {
          name: "Boolean"
        }
      },
      xcodeProjectSha: {
        serializedName: "xcodeProjectSha",
        type: {
          name: "String"
        }
      },
      archiveConfiguration: {
        serializedName: "archiveConfiguration",
        type: {
          name: "String"
        }
      },
      targetToArchive: {
        serializedName: "targetToArchive",
        type: {
          name: "String"
        }
      },
      forceLegacyBuildSystem: {
        serializedName: "forceLegacyBuildSystem",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const XcodeBranchConfigurationPropertiesAppExtensionProvisioningProfileFilesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "XcodeBranchConfigurationPropertiesAppExtensionProvisioningProfileFilesItem",
    modelProperties: {
      fileName: {
        serializedName: "fileName",
        type: {
          name: "String"
        }
      },
      fileId: {
        serializedName: "fileId",
        type: {
          name: "String"
        }
      },
      uploadId: {
        serializedName: "uploadId",
        type: {
          name: "String"
        }
      },
      targetBundleIdentifier: {
        serializedName: "targetBundleIdentifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AndroidBranchConfigurationProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AndroidBranchConfigurationProperties",
    modelProperties: {
      gradleWrapperPath: {
        serializedName: "gradleWrapperPath",
        type: {
          name: "String"
        }
      },
      module: {
        serializedName: "module",
        type: {
          name: "String"
        }
      },
      buildVariant: {
        serializedName: "buildVariant",
        type: {
          name: "String"
        }
      },
      runTests: {
        defaultValue: true,
        serializedName: "runTests",
        type: {
          name: "Boolean"
        }
      },
      runLint: {
        serializedName: "runLint",
        type: {
          name: "Boolean"
        }
      },
      isRoot: {
        serializedName: "isRoot",
        type: {
          name: "Boolean"
        }
      },
      automaticSigning: {
        serializedName: "automaticSigning",
        type: {
          name: "Boolean"
        }
      },
      keystorePassword: {
        serializedName: "keystorePassword",
        type: {
          name: "String"
        }
      },
      keyAlias: {
        serializedName: "keyAlias",
        type: {
          name: "String"
        }
      },
      keyPassword: {
        serializedName: "keyPassword",
        type: {
          name: "String"
        }
      },
      keystoreFilename: {
        serializedName: "keystoreFilename",
        type: {
          name: "String"
        }
      },
      keystoreEncoded: {
        serializedName: "keystoreEncoded",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JavaScriptBranchConfigurationProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "JavaScriptBranchConfigurationProperties",
    modelProperties: {
      packageJsonPath: {
        serializedName: "packageJsonPath",
        type: {
          name: "String"
        }
      },
      runTests: {
        serializedName: "runTests",
        type: {
          name: "Boolean"
        }
      },
      reactNativeVersion: {
        serializedName: "reactNativeVersion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const XamarinBranchConfigurationProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "XamarinBranchConfigurationProperties",
    modelProperties: {
      slnPath: {
        serializedName: "slnPath",
        type: {
          name: "String"
        }
      },
      isSimBuild: {
        serializedName: "isSimBuild",
        type: {
          name: "Boolean"
        }
      },
      args: {
        serializedName: "args",
        type: {
          name: "String"
        }
      },
      configuration: {
        serializedName: "configuration",
        type: {
          name: "String"
        }
      },
      p12File: {
        serializedName: "p12File",
        type: {
          name: "String"
        }
      },
      p12Pwd: {
        serializedName: "p12Pwd",
        type: {
          name: "String"
        }
      },
      provProfile: {
        serializedName: "provProfile",
        type: {
          name: "String"
        }
      },
      monoVersion: {
        serializedName: "monoVersion",
        type: {
          name: "String"
        }
      },
      sdkBundle: {
        serializedName: "sdkBundle",
        type: {
          name: "String"
        }
      },
      symlink: {
        serializedName: "symlink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Branch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Branch",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      commit: {
        serializedName: "commit",
        type: {
          name: "Composite",
          className: "BranchCommit"
        }
      }
    }
  }
};

export const BranchCommit: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BranchCommit",
    modelProperties: {
      sha: {
        serializedName: "sha",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Commit: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Commit",
    modelProperties: {
      sha: {
        serializedName: "sha",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CommitDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommitDetails",
    modelProperties: {
      commit: {
        serializedName: "commit",
        type: {
          name: "Composite",
          className: "CommitDetailsCommit"
        }
      }
    }
  }
};

export const CommitDetailsCommit: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommitDetailsCommit",
    modelProperties: {
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      author: {
        serializedName: "author",
        type: {
          name: "Composite",
          className: "CommitDetailsCommitAuthor"
        }
      }
    }
  }
};

export const CommitDetailsCommitAuthor: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommitDetailsCommitAuthor",
    modelProperties: {
      date: {
        serializedName: "date",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsAs4RyuSchemasCommitdetailslistItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsAs4RyuSchemasCommitdetailslistItemsAllof0",
    modelProperties: {
      sha: {
        serializedName: "sha",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1Ivp89ASchemasCommitdetailslistItemsAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1Ivp89ASchemasCommitdetailslistItemsAllof1",
    modelProperties: {
      commit: {
        serializedName: "commit",
        type: {
          name: "Composite",
          className:
            "ComponentsE7Urq7SchemasCommitdetailslistItemsAllof1PropertiesCommit"
        }
      }
    }
  }
};

export const ComponentsE7Urq7SchemasCommitdetailslistItemsAllof1PropertiesCommit: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsE7Urq7SchemasCommitdetailslistItemsAllof1PropertiesCommit",
    modelProperties: {
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      author: {
        serializedName: "author",
        type: {
          name: "Composite",
          className:
            "ComponentsB4Hn9JSchemasCommitdetailslistItemsAllof1PropertiesCommitPropertiesAuthor"
        }
      }
    }
  }
};

export const ComponentsB4Hn9JSchemasCommitdetailslistItemsAllof1PropertiesCommitPropertiesAuthor: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsB4Hn9JSchemasCommitdetailslistItemsAllof1PropertiesCommitPropertiesAuthor",
    modelProperties: {
      date: {
        serializedName: "date",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsTfhuzwSchemasRepoconfigAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsTfhuzwSchemasRepoconfigAllof0",
    modelProperties: {
      repoUrl: {
        serializedName: "repo_url",
        type: {
          name: "String"
        }
      },
      repoId: {
        serializedName: "repo_id",
        type: {
          name: "String"
        }
      },
      externalUserId: {
        serializedName: "external_user_id",
        type: {
          name: "String"
        }
      },
      serviceConnectionId: {
        serializedName: "service_connection_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1Lrnp2USchemasRepoconfigpostrequestAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1Lrnp2USchemasRepoconfigpostrequestAllof0",
    modelProperties: {
      repoUrl: {
        serializedName: "repo_url",
        type: {
          name: "String"
        }
      },
      repoId: {
        serializedName: "repo_id",
        type: {
          name: "String"
        }
      },
      externalUserId: {
        serializedName: "external_user_id",
        type: {
          name: "String"
        }
      },
      serviceConnectionId: {
        serializedName: "service_connection_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RepoConfigCommon: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RepoConfigCommon",
    modelProperties: {
      repoUrl: {
        serializedName: "repo_url",
        type: {
          name: "String"
        }
      },
      repoId: {
        serializedName: "repo_id",
        type: {
          name: "String"
        }
      },
      externalUserId: {
        serializedName: "external_user_id",
        type: {
          name: "String"
        }
      },
      serviceConnectionId: {
        serializedName: "service_connection_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsTqa8P8SchemasRepoconfigsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsTqa8P8SchemasRepoconfigsItemsAllof0",
    modelProperties: {
      repoUrl: {
        serializedName: "repo_url",
        type: {
          name: "String"
        }
      },
      repoId: {
        serializedName: "repo_id",
        type: {
          name: "String"
        }
      },
      externalUserId: {
        serializedName: "external_user_id",
        type: {
          name: "String"
        }
      },
      serviceConnectionId: {
        serializedName: "service_connection_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RepoInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RepoInfo",
    modelProperties: {
      repoUrl: {
        serializedName: "repo_url",
        required: true,
        type: {
          name: "String"
        }
      },
      externalUserId: {
        serializedName: "external_user_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PatchRepoInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PatchRepoInfo",
    modelProperties: {
      externalUserId: {
        serializedName: "external_user_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Toolsets: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Toolsets",
    modelProperties: {
      xamarin: {
        serializedName: "xamarin",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ToolsetsXamarinItem"
            }
          }
        }
      },
      xcode: {
        serializedName: "xcode",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ToolsetsXcodeItem"
            }
          }
        }
      },
      node: {
        serializedName: "node",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ToolsetsNodeItem"
            }
          }
        }
      }
    }
  }
};

export const ToolsetsXamarinItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ToolsetsXamarinItem",
    modelProperties: {
      monoVersion: {
        serializedName: "monoVersion",
        type: {
          name: "String"
        }
      },
      sdkBundle: {
        serializedName: "sdkBundle",
        type: {
          name: "String"
        }
      },
      current: {
        serializedName: "current",
        type: {
          name: "Boolean"
        }
      },
      stable: {
        serializedName: "stable",
        type: {
          name: "Boolean"
        }
      },
      xcodeVersions: {
        serializedName: "xcodeVersions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ToolsetsXcodeItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ToolsetsXcodeItem",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      current: {
        serializedName: "current",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ToolsetsNodeItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ToolsetsNodeItem",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      current: {
        serializedName: "current",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const XcodeVersionsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "XcodeVersionsItem",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      current: {
        serializedName: "current",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const XcodeVersion: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "XcodeVersion",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      current: {
        serializedName: "current",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const XamarinSDKBundlesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "XamarinSDKBundlesItem",
    modelProperties: {
      monoVersion: {
        serializedName: "monoVersion",
        type: {
          name: "String"
        }
      },
      sdkBundle: {
        serializedName: "sdkBundle",
        type: {
          name: "String"
        }
      },
      current: {
        serializedName: "current",
        type: {
          name: "Boolean"
        }
      },
      stable: {
        serializedName: "stable",
        type: {
          name: "Boolean"
        }
      },
      xcodeVersions: {
        serializedName: "xcodeVersions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const XamarinSDKBundle: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "XamarinSDKBundle",
    modelProperties: {
      monoVersion: {
        serializedName: "monoVersion",
        type: {
          name: "String"
        }
      },
      sdkBundle: {
        serializedName: "sdkBundle",
        type: {
          name: "String"
        }
      },
      current: {
        serializedName: "current",
        type: {
          name: "Boolean"
        }
      },
      stable: {
        serializedName: "stable",
        type: {
          name: "Boolean"
        }
      },
      xcodeVersions: {
        serializedName: "xcodeVersions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const NodeVersionsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NodeVersionsItem",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      current: {
        serializedName: "current",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const NodeVersion: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NodeVersion",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      current: {
        serializedName: "current",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const BuildsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildsItem",
    modelProperties: {
      id: {
        constraints: {
          ExclusiveMinimum: 0
        },
        serializedName: "id",
        required: true,
        type: {
          name: "Number"
        }
      },
      buildNumber: {
        serializedName: "buildNumber",
        required: true,
        type: {
          name: "String"
        }
      },
      queueTime: {
        serializedName: "queueTime",
        required: true,
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      finishTime: {
        serializedName: "finishTime",
        type: {
          name: "String"
        }
      },
      lastChangedDate: {
        serializedName: "lastChangedDate",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      result: {
        serializedName: "result",
        required: true,
        type: {
          name: "String"
        }
      },
      sourceBranch: {
        serializedName: "sourceBranch",
        required: true,
        type: {
          name: "String"
        }
      },
      sourceVersion: {
        serializedName: "sourceVersion",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BuildParams: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildParams",
    modelProperties: {
      sourceVersion: {
        serializedName: "sourceVersion",
        type: {
          name: "String"
        }
      },
      debug: {
        serializedName: "debug",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Build: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Build",
    modelProperties: {
      id: {
        constraints: {
          ExclusiveMinimum: 0
        },
        serializedName: "id",
        required: true,
        type: {
          name: "Number"
        }
      },
      buildNumber: {
        serializedName: "buildNumber",
        required: true,
        type: {
          name: "String"
        }
      },
      queueTime: {
        serializedName: "queueTime",
        required: true,
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      finishTime: {
        serializedName: "finishTime",
        type: {
          name: "String"
        }
      },
      lastChangedDate: {
        serializedName: "lastChangedDate",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      result: {
        serializedName: "result",
        required: true,
        type: {
          name: "String"
        }
      },
      sourceBranch: {
        serializedName: "sourceBranch",
        required: true,
        type: {
          name: "String"
        }
      },
      sourceVersion: {
        serializedName: "sourceVersion",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BuildPatch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildPatch",
    modelProperties: {
      status: {
        defaultValue: "cancelling",
        isConstant: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BuildLog: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildLog",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const BuildTimeline: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildTimeline",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      records: {
        serializedName: "records",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BuildTimelineRecordsItem"
            }
          }
        }
      }
    }
  }
};

export const BuildTimelineRecordsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildTimelineRecordsItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      order: {
        serializedName: "order",
        type: {
          name: "Number"
        }
      },
      percentComplete: {
        serializedName: "percentComplete",
        type: {
          name: "Number"
        }
      },
      currentOperation: {
        serializedName: "currentOperation",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      result: {
        serializedName: "result",
        type: {
          name: "String"
        }
      },
      errorCount: {
        serializedName: "errorCount",
        type: {
          name: "Number"
        }
      },
      warningCount: {
        serializedName: "warningCount",
        type: {
          name: "Number"
        }
      },
      issues: {
        serializedName: "issues",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BuildTimelineRecordsPropertiesItemsItem"
            }
          }
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      finishTime: {
        serializedName: "finishTime",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BuildTimelineRecordsPropertiesItemsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildTimelineRecordsPropertiesItemsItem",
    modelProperties: {
      category: {
        serializedName: "category",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BuildTimelineRecord: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildTimelineRecord",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      order: {
        serializedName: "order",
        type: {
          name: "Number"
        }
      },
      percentComplete: {
        serializedName: "percentComplete",
        type: {
          name: "Number"
        }
      },
      currentOperation: {
        serializedName: "currentOperation",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      result: {
        serializedName: "result",
        type: {
          name: "String"
        }
      },
      errorCount: {
        serializedName: "errorCount",
        type: {
          name: "Number"
        }
      },
      warningCount: {
        serializedName: "warningCount",
        type: {
          name: "Number"
        }
      },
      issues: {
        serializedName: "issues",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BuildTimelineRecordIssuesItem"
            }
          }
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      finishTime: {
        serializedName: "finishTime",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BuildTimelineRecordIssuesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildTimelineRecordIssuesItem",
    modelProperties: {
      category: {
        serializedName: "category",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BuildIssue: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildIssue",
    modelProperties: {
      category: {
        serializedName: "category",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DistributionRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionRequest",
    modelProperties: {
      destinations: {
        serializedName: "destinations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DistributionRequestDestinationsItem"
            }
          }
        }
      },
      releaseNotes: {
        serializedName: "releaseNotes",
        type: {
          name: "String"
        }
      },
      mandatoryUpdate: {
        serializedName: "mandatoryUpdate",
        type: {
          name: "Boolean"
        }
      },
      notifyTesters: {
        defaultValue: true,
        serializedName: "notifyTesters",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const DistributionRequestDestinationsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionRequestDestinationsItem",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DistributionResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionResponse",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      uploadId: {
        serializedName: "upload_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BuildServiceStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildServiceStatus",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      service: {
        serializedName: "service",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      validUntil: {
        serializedName: "valid_until",
        type: {
          name: "Number"
        }
      },
      os: {
        serializedName: "os",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BuildAgentQueue: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildAgentQueue",
    modelProperties: {
      queue: {
        serializedName: "queue",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ValidationErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ValidationErrorResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BuildAgentQueuesResponseItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildAgentQueuesResponseItem",
    modelProperties: {
      buildDefinition: {
        serializedName: "buildDefinition",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BuildAgentQueueResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildAgentQueueResponse",
    modelProperties: {
      buildDefinition: {
        serializedName: "buildDefinition",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AgentQueuesResponseItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AgentQueuesResponseItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AgentQueueResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AgentQueueResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppBuildFeaturesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppBuildFeaturesItem",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AppBuildFeature: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppBuildFeature",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const DestinationDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DestinationDetails",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FileValidationDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FileValidationDetails",
    modelProperties: {
      p12Password: {
        serializedName: "p12password",
        required: true,
        type: {
          name: "String"
        }
      },
      certificateUploadId: {
        serializedName: "certificateUploadId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BuildConcurrencyResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildConcurrencyResponse",
    modelProperties: {
      quantity: {
        serializedName: "quantity",
        type: {
          name: "Number"
        }
      },
      committedQuantity: {
        serializedName: "committed_quantity",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CreateReleaseUploadResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CreateReleaseUploadResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      uploadDomain: {
        serializedName: "upload_domain",
        required: true,
        type: {
          name: "String"
        }
      },
      token: {
        serializedName: "token",
        required: true,
        type: {
          name: "String"
        }
      },
      urlEncodedToken: {
        serializedName: "url_encoded_token",
        required: true,
        type: {
          name: "String"
        }
      },
      packageAssetId: {
        serializedName: "package_asset_id",
        required: true,
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const GetReleaseStatusResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetReleaseStatusResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      uploadStatus: {
        serializedName: "upload_status",
        required: true,
        type: {
          name: "String"
        }
      },
      errorDetails: {
        serializedName: "error_details",
        type: {
          name: "String"
        }
      },
      releaseDistinctId: {
        serializedName: "release_distinct_id",
        type: {
          name: "Number"
        }
      },
      releaseUrl: {
        serializedName: "release_url",
        type: {
          name: "any"
        }
      }
    }
  }
};

export const PatchReleaseUploadStatusRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PatchReleaseUploadStatusRequest",
    modelProperties: {
      uploadStatus: {
        serializedName: "upload_status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PostCreateReleaseUploadRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PostCreateReleaseUploadRequest",
    modelProperties: {
      buildVersion: {
        serializedName: "build_version",
        type: {
          name: "String"
        }
      },
      buildNumber: {
        serializedName: "build_number",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PatchReleaseUploadStatusResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PatchReleaseUploadStatusResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      uploadStatus: {
        serializedName: "upload_status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TesterAppWithReleaseResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TesterAppWithReleaseResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      release: {
        serializedName: "release",
        type: {
          name: "Composite",
          className: "TesterAppWithReleaseResponseRelease"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      iconUrl: {
        serializedName: "icon_url",
        type: {
          name: "String"
        }
      },
      os: {
        serializedName: "os",
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className: "TesterAppWithReleaseResponseOwner"
        }
      }
    }
  }
};

export const Components14MqnwvSchemasTesterappwithreleaseresponsePropertiesReleaseAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components14MqnwvSchemasTesterappwithreleaseresponsePropertiesReleaseAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Number"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      shortVersion: {
        serializedName: "short_version",
        required: true,
        type: {
          name: "String"
        }
      },
      mandatoryUpdate: {
        serializedName: "mandatory_update",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      uploadedAt: {
        serializedName: "uploaded_at",
        required: true,
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "enabled",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      isExternalBuild: {
        serializedName: "is_external_build",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ComponentsIemtnqSchemasTesterappwithreleaseresponsePropertiesReleaseAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsIemtnqSchemasTesterappwithreleaseresponsePropertiesReleaseAllof1",
    modelProperties: {
      size: {
        serializedName: "size",
        required: true,
        type: {
          name: "Number"
        }
      },
      installUrl: {
        serializedName: "install_url",
        type: {
          name: "String"
        }
      },
      releaseNotes: {
        serializedName: "release_notes",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TesterAppWithReleaseResponseOwner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TesterAppWithReleaseResponseOwner",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TesterAppRelease: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TesterAppRelease",
    modelProperties: {
      size: {
        serializedName: "size",
        required: true,
        type: {
          name: "Number"
        }
      },
      installUrl: {
        serializedName: "install_url",
        type: {
          name: "String"
        }
      },
      releaseNotes: {
        serializedName: "release_notes",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SendNotificationRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SendNotificationRequest",
    modelProperties: {
      userIds: {
        serializedName: "userIds",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const UserInteractionMetricsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserInteractionMetricsResponse",
    modelProperties: {
      lessThan100Apps: {
        serializedName: "less_than_100_apps",
        type: {
          name: "Boolean"
        }
      },
      hasMoreThan1Release: {
        serializedName: "has_more_than_1_release",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ReleaseUpdateResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseUpdateResponse",
    modelProperties: {
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      mandatoryUpdate: {
        serializedName: "mandatory_update",
        type: {
          name: "Boolean"
        }
      },
      releaseNotes: {
        serializedName: "release_notes",
        type: {
          name: "String"
        }
      },
      provisioningStatusUrl: {
        serializedName: "provisioning_status_url",
        type: {
          name: "String"
        }
      },
      destinations: {
        serializedName: "destinations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReleaseUpdateResponseDestinationsItem"
            }
          }
        }
      }
    }
  }
};

export const ReleaseUpdateResponseDestinationsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseUpdateResponseDestinationsItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReleaseDetailsUpdateResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseDetailsUpdateResponse",
    modelProperties: {
      releaseNotes: {
        serializedName: "release_notes",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReleaseExternalUrlUpdateResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseExternalUrlUpdateResponse",
    modelProperties: {
      externalDownloadUrl: {
        serializedName: "external_download_url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReleaseProvisionResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseProvisionResponse",
    modelProperties: {
      statusUrl: {
        serializedName: "status_url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateReleaseDetailsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateReleaseDetailsResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      appName: {
        serializedName: "app_name",
        type: {
          name: "String"
        }
      },
      appDisplayName: {
        serializedName: "app_display_name",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      shortVersion: {
        serializedName: "short_version",
        type: {
          name: "String"
        }
      },
      releaseNotes: {
        serializedName: "release_notes",
        type: {
          name: "String"
        }
      },
      provisioningProfileName: {
        serializedName: "provisioning_profile_name",
        type: {
          name: "String"
        }
      },
      provisioningProfileType: {
        serializedName: "provisioning_profile_type",
        type: {
          name: "String"
        }
      },
      isProvisioningProfileSyncing: {
        serializedName: "is_provisioning_profile_syncing",
        type: {
          name: "Boolean"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      minOs: {
        serializedName: "min_os",
        type: {
          name: "String"
        }
      },
      deviceFamily: {
        serializedName: "device_family",
        type: {
          name: "String"
        }
      },
      androidMinApiLevel: {
        serializedName: "android_min_api_level",
        type: {
          name: "String"
        }
      },
      bundleIdentifier: {
        serializedName: "bundle_identifier",
        type: {
          name: "String"
        }
      },
      fingerprint: {
        serializedName: "fingerprint",
        type: {
          name: "String"
        }
      },
      uploadedAt: {
        serializedName: "uploaded_at",
        type: {
          name: "String"
        }
      },
      downloadUrl: {
        serializedName: "download_url",
        type: {
          name: "String"
        }
      },
      appIconUrl: {
        serializedName: "app_icon_url",
        type: {
          name: "String"
        }
      },
      installUrl: {
        serializedName: "install_url",
        type: {
          name: "String"
        }
      },
      distributionGroupId: {
        serializedName: "distribution_group_id",
        type: {
          name: "String"
        }
      },
      publishingStatus: {
        serializedName: "publishing_status",
        type: {
          name: "String"
        }
      },
      destinationType: {
        serializedName: "destination_type",
        type: {
          name: "String"
        }
      },
      isExternalBuild: {
        serializedName: "is_external_build",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PrivateBasicReleaseDetailsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateBasicReleaseDetailsResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      shortVersion: {
        serializedName: "short_version",
        type: {
          name: "String"
        }
      },
      uploadedAt: {
        serializedName: "uploaded_at",
        type: {
          name: "String"
        }
      },
      distributionGroupId: {
        serializedName: "distribution_group_id",
        type: {
          name: "String"
        }
      },
      destinationType: {
        serializedName: "destination_type",
        type: {
          name: "String"
        }
      },
      isLatest: {
        serializedName: "is_latest",
        type: {
          name: "Boolean"
        }
      },
      mandatoryUpdate: {
        serializedName: "mandatory_update",
        type: {
          name: "Boolean"
        }
      },
      publishingStatus: {
        serializedName: "publishing_status",
        type: {
          name: "String"
        }
      },
      isExternalBuild: {
        serializedName: "is_external_build",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const DistributionGroupReleasesResponseItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionGroupReleasesResponseItem",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Number"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      shortVersion: {
        serializedName: "short_version",
        required: true,
        type: {
          name: "String"
        }
      },
      mandatoryUpdate: {
        serializedName: "mandatory_update",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      uploadedAt: {
        serializedName: "uploaded_at",
        required: true,
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "enabled",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      isExternalBuild: {
        serializedName: "is_external_build",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const DistributionGroupRelease: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionGroupRelease",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Number"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      shortVersion: {
        serializedName: "short_version",
        required: true,
        type: {
          name: "String"
        }
      },
      mandatoryUpdate: {
        serializedName: "mandatory_update",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      uploadedAt: {
        serializedName: "uploaded_at",
        required: true,
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "enabled",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      isExternalBuild: {
        serializedName: "is_external_build",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const BasicReleaseDetailsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BasicReleaseDetailsResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Number"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      shortVersion: {
        serializedName: "short_version",
        required: true,
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "enabled",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      uploadedAt: {
        serializedName: "uploaded_at",
        required: true,
        type: {
          name: "String"
        }
      },
      destinationType: {
        serializedName: "destination_type",
        type: {
          name: "String"
        }
      },
      distributionGroups: {
        serializedName: "distribution_groups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BasicReleaseDetailsResponseDistributionGroupsItem"
            }
          }
        }
      },
      distributionStores: {
        serializedName: "distribution_stores",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BasicReleaseDetailsResponseDistributionStoresItem"
            }
          }
        }
      },
      destinations: {
        serializedName: "destinations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BasicReleaseDetailsResponseDestinationsItem"
            }
          }
        }
      },
      build: {
        serializedName: "build",
        type: {
          name: "Composite",
          className: "BasicReleaseDetailsResponseBuild"
        }
      },
      isExternalBuild: {
        serializedName: "is_external_build",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Components13SebpjSchemasBasicreleasedetailsresponsePropertiesDistributionGroupsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components13SebpjSchemasBasicreleasedetailsresponsePropertiesDistributionGroupsItemsAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components7B8Q6ZSchemasBasicreleasedetailsresponsePropertiesDistributionGroupsItemsAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components7B8Q6ZSchemasBasicreleasedetailsresponsePropertiesDistributionGroupsItemsAllof1",
    modelProperties: {
      isLatest: {
        serializedName: "is_latest",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ComponentsYvfuboSchemasBasicreleasedetailsresponsePropertiesDistributionStoresItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsYvfuboSchemasBasicreleasedetailsresponsePropertiesDistributionStoresItemsAllof0",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      publishingStatus: {
        serializedName: "publishing_status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1B3DilbSchemasBasicreleasedetailsresponsePropertiesDistributionStoresItemsAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components1B3DilbSchemasBasicreleasedetailsresponsePropertiesDistributionStoresItemsAllof1",
    modelProperties: {
      isLatest: {
        serializedName: "is_latest",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Components1Leu8U7SchemasBasicreleasedetailsresponsePropertiesDestinationsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components1Leu8U7SchemasBasicreleasedetailsresponsePropertiesDestinationsItemsAllof0",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      publishingStatus: {
        serializedName: "publishing_status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsV2IcyqSchemasBasicreleasedetailsresponsePropertiesDestinationsItemsAllof0Allof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsV2IcyqSchemasBasicreleasedetailsresponsePropertiesDestinationsItemsAllof0Allof1",
    modelProperties: {
      isLatest: {
        serializedName: "is_latest",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ComponentsNe0Qx0SchemasBasicreleasedetailsresponsePropertiesDestinationsItemsAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsNe0Qx0SchemasBasicreleasedetailsresponsePropertiesDestinationsItemsAllof1",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsM4TepnSchemasBasicreleasedetailsresponsePropertiesDestinationsItemsAllof2: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsM4TepnSchemasBasicreleasedetailsresponsePropertiesDestinationsItemsAllof2",
    modelProperties: {
      destinationType: {
        serializedName: "destination_type",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BasicReleaseDetailsResponseBuild: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BasicReleaseDetailsResponseBuild",
    modelProperties: {
      branchName: {
        serializedName: "branch_name",
        type: {
          name: "String"
        }
      },
      commitHash: {
        serializedName: "commit_hash",
        type: {
          name: "String"
        }
      },
      commitMessage: {
        serializedName: "commit_message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReleaseDetailsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseDetailsResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Number"
        }
      },
      appName: {
        serializedName: "app_name",
        required: true,
        type: {
          name: "String"
        }
      },
      appDisplayName: {
        serializedName: "app_display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      appOs: {
        serializedName: "app_os",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      shortVersion: {
        serializedName: "short_version",
        required: true,
        type: {
          name: "String"
        }
      },
      releaseNotes: {
        serializedName: "release_notes",
        type: {
          name: "String"
        }
      },
      provisioningProfileName: {
        serializedName: "provisioning_profile_name",
        type: {
          name: "String"
        }
      },
      provisioningProfileType: {
        serializedName: "provisioning_profile_type",
        type: {
          name: "String"
        }
      },
      provisioningProfileExpiryDate: {
        serializedName: "provisioning_profile_expiry_date",
        type: {
          name: "String"
        }
      },
      isProvisioningProfileSyncing: {
        serializedName: "is_provisioning_profile_syncing",
        type: {
          name: "Boolean"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      minOs: {
        serializedName: "min_os",
        type: {
          name: "String"
        }
      },
      deviceFamily: {
        serializedName: "device_family",
        type: {
          name: "String"
        }
      },
      androidMinApiLevel: {
        serializedName: "android_min_api_level",
        type: {
          name: "String"
        }
      },
      bundleIdentifier: {
        serializedName: "bundle_identifier",
        type: {
          name: "String"
        }
      },
      packageHashes: {
        serializedName: "package_hashes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      fingerprint: {
        serializedName: "fingerprint",
        type: {
          name: "String"
        }
      },
      uploadedAt: {
        serializedName: "uploaded_at",
        required: true,
        type: {
          name: "String"
        }
      },
      downloadUrl: {
        serializedName: "download_url",
        type: {
          name: "String"
        }
      },
      appIconUrl: {
        serializedName: "app_icon_url",
        required: true,
        type: {
          name: "String"
        }
      },
      installUrl: {
        serializedName: "install_url",
        type: {
          name: "String"
        }
      },
      destinationType: {
        serializedName: "destination_type",
        type: {
          name: "String"
        }
      },
      distributionGroups: {
        serializedName: "distribution_groups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReleaseDetailsResponseDistributionGroupsItem"
            }
          }
        }
      },
      distributionStores: {
        serializedName: "distribution_stores",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReleaseDetailsResponseDistributionStoresItem"
            }
          }
        }
      },
      destinations: {
        serializedName: "destinations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReleaseDetailsResponseDestinationsItem"
            }
          }
        }
      },
      isUdidProvisioned: {
        serializedName: "is_udid_provisioned",
        type: {
          name: "Boolean"
        }
      },
      canResign: {
        serializedName: "can_resign",
        type: {
          name: "Boolean"
        }
      },
      build: {
        serializedName: "build",
        type: {
          name: "Composite",
          className: "ReleaseDetailsResponseBuild"
        }
      },
      enabled: {
        serializedName: "enabled",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      isExternalBuild: {
        serializedName: "is_external_build",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ReleaseDetailsResponseDistributionGroupsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseDetailsResponseDistributionGroupsItem",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReleaseDetailsResponseDistributionStoresItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseDetailsResponseDistributionStoresItem",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      publishingStatus: {
        serializedName: "publishing_status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1Gq9Sx7SchemasReleasedetailsresponsePropertiesDestinationsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components1Gq9Sx7SchemasReleasedetailsresponsePropertiesDestinationsItemsAllof0",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      publishingStatus: {
        serializedName: "publishing_status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsQgfcfcSchemasReleasedetailsresponsePropertiesDestinationsItemsAllof0Allof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsQgfcfcSchemasReleasedetailsresponsePropertiesDestinationsItemsAllof0Allof1",
    modelProperties: {
      isLatest: {
        serializedName: "is_latest",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Components8Xk84RSchemasReleasedetailsresponsePropertiesDestinationsItemsAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components8Xk84RSchemasReleasedetailsresponsePropertiesDestinationsItemsAllof1",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsNj5C4HSchemasReleasedetailsresponsePropertiesDestinationsItemsAllof2: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsNj5C4HSchemasReleasedetailsresponsePropertiesDestinationsItemsAllof2",
    modelProperties: {
      destinationType: {
        serializedName: "destination_type",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReleaseDetailsResponseBuild: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseDetailsResponseBuild",
    modelProperties: {
      branchName: {
        serializedName: "branch_name",
        type: {
          name: "String"
        }
      },
      commitHash: {
        serializedName: "commit_hash",
        type: {
          name: "String"
        }
      },
      commitMessage: {
        serializedName: "commit_message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagementReleaseDetailsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagementReleaseDetailsResponse",
    modelProperties: {
      distinctId: {
        serializedName: "distinctId",
        type: {
          name: "Number"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      buildVersion: {
        serializedName: "buildVersion",
        type: {
          name: "String"
        }
      },
      sortVersion: {
        serializedName: "sortVersion",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      deletedAt: {
        serializedName: "deletedAt",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReleaseUploadBeginResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseUploadBeginResponse",
    modelProperties: {
      uploadId: {
        serializedName: "upload_id",
        required: true,
        type: {
          name: "String"
        }
      },
      uploadUrl: {
        serializedName: "upload_url",
        required: true,
        type: {
          name: "String"
        }
      },
      assetId: {
        serializedName: "asset_id",
        type: {
          name: "String"
        }
      },
      assetDomain: {
        serializedName: "asset_domain",
        type: {
          name: "String"
        }
      },
      assetToken: {
        serializedName: "asset_token",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GdprValidationRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GdprValidationRequest",
    modelProperties: {
      releaseIds: {
        serializedName: "release_ids",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      },
      hockeyappReleaseIds: {
        serializedName: "hockeyapp_release_ids",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      },
      releaseUploadIds: {
        serializedName: "release_upload_ids",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ReleaseUploadBeginRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseUploadBeginRequest",
    modelProperties: {
      releaseId: {
        serializedName: "release_id",
        type: {
          name: "Number"
        }
      },
      buildVersion: {
        serializedName: "build_version",
        type: {
          name: "String"
        }
      },
      buildNumber: {
        serializedName: "build_number",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReleaseUploadEndRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseUploadEndRequest",
    modelProperties: {
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReleaseUploadEndResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseUploadEndResponse",
    modelProperties: {
      releaseId: {
        serializedName: "release_id",
        type: {
          name: "Number"
        }
      },
      releaseUrl: {
        serializedName: "release_url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReleaseCreateRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseCreateRequest",
    modelProperties: {
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      buildVersion: {
        serializedName: "build_version",
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "unique_identifier",
        type: {
          name: "String"
        }
      },
      minimumOsVersion: {
        serializedName: "minimum_os_version",
        type: {
          name: "String"
        }
      },
      deviceFamily: {
        serializedName: "device_family",
        type: {
          name: "String"
        }
      },
      languages: {
        serializedName: "languages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      fingerprint: {
        serializedName: "fingerprint",
        required: true,
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        required: true,
        type: {
          name: "Number"
        }
      },
      packageUrl: {
        serializedName: "package_url",
        type: {
          name: "String"
        }
      },
      fileExtension: {
        serializedName: "file_extension",
        type: {
          name: "String"
        }
      },
      uploadId: {
        serializedName: "upload_id",
        required: true,
        type: {
          name: "String"
        }
      },
      iconAssetId: {
        serializedName: "icon_asset_id",
        type: {
          name: "String"
        }
      },
      ipaUuids: {
        serializedName: "ipa_uuids",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReleaseCreateRequestIpaUuidsItem"
            }
          }
        }
      },
      provision: {
        serializedName: "provision",
        type: {
          name: "Composite",
          className: "ReleaseCreateRequestProvision"
        }
      },
      appexProvisioningProfiles: {
        serializedName: "appex_provisioning_profiles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReleaseCreateRequestAppexProvisioningProfilesItem"
            }
          }
        }
      },
      proxyFlow: {
        serializedName: "proxy_flow",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ReleaseCreateRequestIpaUuidsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseCreateRequestIpaUuidsItem",
    modelProperties: {
      architecture: {
        serializedName: "architecture",
        required: true,
        type: {
          name: "String"
        }
      },
      uuid: {
        serializedName: "uuid",
        required: true,
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const ReleaseCreateRequestProvision: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseCreateRequestProvision",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      applicationIdentifier: {
        serializedName: "application_identifier",
        required: true,
        type: {
          name: "String"
        }
      },
      teamIdentifier: {
        serializedName: "team_identifier",
        required: true,
        type: {
          name: "String"
        }
      },
      profileType: {
        serializedName: "profile_type",
        required: true,
        type: {
          name: "String"
        }
      },
      expiredAt: {
        serializedName: "expired_at",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      udids: {
        serializedName: "udids",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ReleaseCreateRequestAppexProvisioningProfilesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseCreateRequestAppexProvisioningProfilesItem",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      applicationIdentifier: {
        serializedName: "application_identifier",
        required: true,
        type: {
          name: "String"
        }
      },
      teamIdentifier: {
        serializedName: "team_identifier",
        required: true,
        type: {
          name: "String"
        }
      },
      profileType: {
        serializedName: "profile_type",
        required: true,
        type: {
          name: "String"
        }
      },
      expiredAt: {
        serializedName: "expired_at",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      udids: {
        serializedName: "udids",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ExternallyHostedReleaseCreateRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExternallyHostedReleaseCreateRequest",
    modelProperties: {
      buildVersion: {
        serializedName: "build_version",
        required: true,
        type: {
          name: "String"
        }
      },
      buildNumber: {
        serializedName: "build_number",
        type: {
          name: "String"
        }
      },
      externalDownloadUrl: {
        serializedName: "external_download_url",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UpdateExternalUrlRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UpdateExternalUrlRequest",
    modelProperties: {
      externalDownloadUrl: {
        serializedName: "external_download_url",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReleaseUpdateRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseUpdateRequest",
    modelProperties: {
      distributionGroupName: {
        serializedName: "distribution_group_name",
        type: {
          name: "String"
        }
      },
      distributionGroupId: {
        serializedName: "distribution_group_id",
        type: {
          name: "String"
        }
      },
      destinationName: {
        serializedName: "destination_name",
        type: {
          name: "String"
        }
      },
      destinationId: {
        serializedName: "destination_id",
        type: {
          name: "String"
        }
      },
      destinationType: {
        serializedName: "destination_type",
        type: {
          name: "String"
        }
      },
      releaseNotes: {
        serializedName: "release_notes",
        type: {
          name: "String"
        }
      },
      mandatoryUpdate: {
        serializedName: "mandatory_update",
        type: {
          name: "Boolean"
        }
      },
      destinations: {
        serializedName: "destinations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReleaseUpdateRequestDestinationsItem"
            }
          }
        }
      },
      build: {
        serializedName: "build",
        type: {
          name: "Composite",
          className: "ReleaseUpdateRequestBuild"
        }
      },
      notifyTesters: {
        defaultValue: true,
        serializedName: "notify_testers",
        type: {
          name: "Boolean"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "ReleaseUpdateRequestMetadata"
        }
      }
    }
  }
};

export const ReleaseUpdateRequestDestinationsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseUpdateRequestDestinationsItem",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReleaseUpdateRequestBuild: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseUpdateRequestBuild",
    modelProperties: {
      branchName: {
        serializedName: "branch_name",
        type: {
          name: "String"
        }
      },
      commitHash: {
        serializedName: "commit_hash",
        type: {
          name: "String"
        }
      },
      commitMessage: {
        serializedName: "commit_message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReleaseUpdateRequestMetadata: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseUpdateRequestMetadata",
    modelProperties: {
      dsaSignature: {
        serializedName: "dsa_signature",
        type: {
          name: "String"
        }
      },
      edSignature: {
        serializedName: "ed_signature",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReleaseDetailsUpdateRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseDetailsUpdateRequest",
    modelProperties: {
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      releaseNotes: {
        serializedName: "release_notes",
        type: {
          name: "String"
        }
      },
      build: {
        serializedName: "build",
        type: {
          name: "Composite",
          className: "ReleaseDetailsUpdateRequestBuild"
        }
      }
    }
  }
};

export const ReleaseDetailsUpdateRequestBuild: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseDetailsUpdateRequestBuild",
    modelProperties: {
      branchName: {
        serializedName: "branch_name",
        type: {
          name: "String"
        }
      },
      commitHash: {
        serializedName: "commit_hash",
        type: {
          name: "String"
        }
      },
      commitMessage: {
        serializedName: "commit_message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BuildInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildInfo",
    modelProperties: {
      branchName: {
        serializedName: "branch_name",
        type: {
          name: "String"
        }
      },
      commitHash: {
        serializedName: "commit_hash",
        type: {
          name: "String"
        }
      },
      commitMessage: {
        serializedName: "commit_message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReleaseMetadata: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseMetadata",
    modelProperties: {
      dsaSignature: {
        serializedName: "dsa_signature",
        type: {
          name: "String"
        }
      },
      edSignature: {
        serializedName: "ed_signature",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DestinationId: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DestinationId",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReleaseDestinationRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseDestinationRequest",
    modelProperties: {
      mandatoryUpdate: {
        serializedName: "mandatory_update",
        type: {
          name: "Boolean"
        }
      },
      notifyTesters: {
        defaultValue: true,
        serializedName: "notify_testers",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ReleaseStoreDestinationRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseStoreDestinationRequest",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const ReleaseTesterDestinationRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseTesterDestinationRequest",
    modelProperties: {
      mandatoryUpdate: {
        serializedName: "mandatory_update",
        type: {
          name: "Boolean"
        }
      },
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      notifyTesters: {
        defaultValue: true,
        serializedName: "notify_testers",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ReleaseDestinationResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseDestinationResponse",
    modelProperties: {
      mandatoryUpdate: {
        serializedName: "mandatory_update",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      provisioningStatusUrl: {
        serializedName: "provisioning_status_url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReleaseStoreDestinationResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseStoreDestinationResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components5Id7CnSchemasDestinationAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components5Id7CnSchemasDestinationAllof0",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      publishingStatus: {
        serializedName: "publishing_status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsE0Rs9SSchemasDestinationAllof0Allof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsE0Rs9SSchemasDestinationAllof0Allof1",
    modelProperties: {
      isLatest: {
        serializedName: "is_latest",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PrivateReleaseUpdateRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateReleaseUpdateRequest",
    modelProperties: {
      publishingStatus: {
        serializedName: "publishing_status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DistributionGroup: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionGroup",
    modelProperties: {
      isLatest: {
        serializedName: "is_latest",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const DistributionGroupWithoutIsLatest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionGroupWithoutIsLatest",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DistributionStore: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionStore",
    modelProperties: {
      isLatest: {
        serializedName: "is_latest",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const DistributionStoreWithoutIsLatest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionStoreWithoutIsLatest",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      publishingStatus: {
        serializedName: "publishing_status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ArchIdentifier: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ArchIdentifier",
    modelProperties: {
      architecture: {
        serializedName: "architecture",
        required: true,
        type: {
          name: "String"
        }
      },
      uuid: {
        serializedName: "uuid",
        required: true,
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const ProvisioningProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProvisioningProfile",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      applicationIdentifier: {
        serializedName: "application_identifier",
        required: true,
        type: {
          name: "String"
        }
      },
      teamIdentifier: {
        serializedName: "team_identifier",
        required: true,
        type: {
          name: "String"
        }
      },
      profileType: {
        serializedName: "profile_type",
        required: true,
        type: {
          name: "String"
        }
      },
      expiredAt: {
        serializedName: "expired_at",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      udids: {
        serializedName: "udids",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ReleaseUpdateError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseUpdateError",
    modelProperties: {
      releaseNotes: {
        serializedName: "release_notes",
        type: {
          name: "String"
        }
      },
      mandatoryUpdate: {
        serializedName: "mandatory_update",
        type: {
          name: "Boolean"
        }
      },
      destinations: {
        serializedName: "destinations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReleaseUpdateErrorDestinationsItem"
            }
          }
        }
      }
    }
  }
};

export const ReleaseUpdateErrorDestinationsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseUpdateErrorDestinationsItem",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DestinationError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DestinationError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AutoProvisioningConfigRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AutoProvisioningConfigRequest",
    modelProperties: {
      appleDeveloperAccountKey: {
        serializedName: "apple_developer_account_key",
        type: {
          name: "String"
        }
      },
      appleDistributionCertificateKey: {
        serializedName: "apple_distribution_certificate_key",
        type: {
          name: "String"
        }
      },
      allowAutoProvisioning: {
        serializedName: "allow_auto_provisioning",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AutoProvisioningConfigResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AutoProvisioningConfigResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      appId: {
        serializedName: "app_id",
        type: {
          name: "String"
        }
      },
      destinationId: {
        serializedName: "destination_id",
        type: {
          name: "String"
        }
      },
      appleDeveloperAccountKey: {
        serializedName: "apple_developer_account_key",
        type: {
          name: "String"
        }
      },
      appleDistributionCertificateKey: {
        serializedName: "apple_distribution_certificate_key",
        type: {
          name: "String"
        }
      },
      allowAutoProvisioning: {
        serializedName: "allow_auto_provisioning",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AnalyticsReleasesResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AnalyticsReleasesResponse",
    modelProperties: {
      releases: {
        serializedName: "releases",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AnalyticsReleasesResponseReleasesItem"
            }
          }
        }
      }
    }
  }
};

export const AnalyticsReleasesResponseReleasesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AnalyticsReleasesResponseReleasesItem",
    modelProperties: {
      releaseId: {
        serializedName: "release_id",
        required: true,
        type: {
          name: "Number"
        }
      },
      distributionGroupId: {
        serializedName: "distribution_group_id",
        required: true,
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "user_id",
        required: true,
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const AnalyticsReleasesParameter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AnalyticsReleasesParameter",
    modelProperties: {
      releaseId: {
        serializedName: "release_id",
        required: true,
        type: {
          name: "Number"
        }
      },
      distributionGroupId: {
        serializedName: "distribution_group_id",
        required: true,
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "user_id",
        required: true,
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const HockeyAppCompatibilityReleaseResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HockeyAppCompatibilityReleaseResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      shortversion: {
        serializedName: "shortversion",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      uploadedAt: {
        serializedName: "uploaded_at",
        type: {
          name: "DateTime"
        }
      },
      appsize: {
        serializedName: "appsize",
        type: {
          name: "Number"
        }
      },
      notes: {
        serializedName: "notes",
        type: {
          name: "String"
        }
      },
      mandatory: {
        serializedName: "mandatory",
        type: {
          name: "Boolean"
        }
      },
      external: {
        serializedName: "external",
        type: {
          name: "Boolean"
        }
      },
      deviceFamily: {
        serializedName: "device_family",
        type: {
          name: "String"
        }
      },
      minimumOsVersion: {
        serializedName: "minimum_os_version",
        type: {
          name: "String"
        }
      },
      installUrl: {
        serializedName: "install_url",
        type: {
          name: "String"
        }
      },
      bundleIdentifier: {
        serializedName: "bundle_identifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProvisioningProfileMigration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProvisioningProfileMigration",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      bundleId: {
        serializedName: "bundle_id",
        required: true,
        type: {
          name: "String"
        }
      },
      teamIdentifier: {
        serializedName: "team_identifier",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "Number"
        }
      },
      isAppex: {
        serializedName: "is_appex",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      expiredAt: {
        serializedName: "expired_at",
        type: {
          name: "DateTime"
        }
      },
      udids: {
        serializedName: "udids",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateUpdateUploadDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateUpdateUploadDetails",
    modelProperties: {
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      errorMessage: {
        serializedName: "error_message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PostExternalDownloadUrl: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PostExternalDownloadUrl",
    modelProperties: {
      downloadUrl: {
        serializedName: "download_url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PatchReleaseAssetIdRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PatchReleaseAssetIdRequest",
    modelProperties: {
      packageAssetId: {
        serializedName: "package_asset_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      uploadId: {
        serializedName: "upload_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      ipaUuids: {
        serializedName: "ipa_uuids",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MalwareScanResultPayload: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MalwareScanResultPayload",
    modelProperties: {
      requestId: {
        serializedName: "requestId",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      result: {
        serializedName: "result",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DistributionSettingsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionSettingsResponse",
    modelProperties: {
      defaultPublic: {
        serializedName: "default_public",
        required: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PublicDistributionGroupsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PublicDistributionGroupsResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const DeviceConfigurationResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceConfigurationResponse",
    modelProperties: {
      dataUrl: {
        serializedName: "data_url",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceInfoRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceInfoRequest",
    modelProperties: {
      udid: {
        serializedName: "udid",
        required: true,
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        type: {
          name: "String"
        }
      },
      serial: {
        serializedName: "serial",
        type: {
          name: "String"
        }
      },
      imei: {
        serializedName: "imei",
        type: {
          name: "String"
        }
      },
      ownerId: {
        serializedName: "owner_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceInfoResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceInfoResponse",
    modelProperties: {
      udid: {
        serializedName: "udid",
        required: true,
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        required: true,
        type: {
          name: "String"
        }
      },
      deviceName: {
        serializedName: "device_name",
        required: true,
        type: {
          name: "String"
        }
      },
      fullDeviceName: {
        serializedName: "full_device_name",
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      serial: {
        serializedName: "serial",
        type: {
          name: "String"
        }
      },
      imei: {
        serializedName: "imei",
        type: {
          name: "String"
        }
      },
      ownerId: {
        serializedName: "owner_id",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      registeredAt: {
        serializedName: "registered_at",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResignStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResignStatus",
    modelProperties: {
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      errorCode: {
        serializedName: "error_code",
        type: {
          name: "String"
        }
      },
      errorMessage: {
        serializedName: "error_message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResignInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResignInfo",
    modelProperties: {
      groupName: {
        serializedName: "group_name",
        type: {
          name: "String"
        }
      },
      profileName: {
        serializedName: "profile_name",
        type: {
          name: "String"
        }
      },
      profileType: {
        serializedName: "profile_type",
        type: {
          name: "String"
        }
      },
      certificateName: {
        serializedName: "certificate_name",
        type: {
          name: "String"
        }
      },
      certificateExpiration: {
        serializedName: "certificate_expiration",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MemberDevicesInfoResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MemberDevicesInfoResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      avatarUrl: {
        serializedName: "avatar_url",
        type: {
          name: "String"
        }
      },
      canChangePassword: {
        serializedName: "can_change_password",
        type: {
          name: "Boolean"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      invitePending: {
        serializedName: "invite_pending",
        type: {
          name: "Boolean"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      udid: {
        serializedName: "udid",
        required: true,
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        required: true,
        type: {
          name: "String"
        }
      },
      deviceName: {
        serializedName: "device_name",
        required: true,
        type: {
          name: "String"
        }
      },
      fullDeviceName: {
        serializedName: "full_device_name",
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      serial: {
        serializedName: "serial",
        type: {
          name: "String"
        }
      },
      imei: {
        serializedName: "imei",
        type: {
          name: "String"
        }
      },
      ownerId: {
        serializedName: "owner_id",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      registeredAt: {
        serializedName: "registered_at",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PublishDevicesRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PublishDevicesRequest",
    modelProperties: {
      username: {
        serializedName: "username",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        type: {
          name: "String"
        }
      },
      accountServiceConnectionId: {
        serializedName: "account_service_connection_id",
        type: {
          name: "String"
        }
      },
      publishAllDevices: {
        serializedName: "publish_all_devices",
        type: {
          name: "Boolean"
        }
      },
      devices: {
        serializedName: "devices",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PublishDevicesResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PublishDevicesResponse",
    modelProperties: {
      profileFileName: {
        serializedName: "profile_file_name",
        type: {
          name: "String"
        }
      },
      profilesZipBase64: {
        serializedName: "profiles_zip_base64",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppleLoginRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppleLoginRequest",
    modelProperties: {
      username: {
        serializedName: "username",
        required: true,
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        required: true,
        type: {
          name: "String"
        }
      },
      teamIdentifier: {
        serializedName: "team_identifier",
        type: {
          name: "String"
        }
      },
      cookie: {
        serializedName: "cookie",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppleLoginResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppleLoginResponse",
    modelProperties: {
      successful: {
        serializedName: "successful",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AppleMutifactorLoginRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppleMutifactorLoginRequest",
    modelProperties: {
      username: {
        serializedName: "username",
        required: true,
        type: {
          name: "String"
        }
      },
      authcode: {
        serializedName: "authcode",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppleMultifactorLoginResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppleMultifactorLoginResponse",
    modelProperties: {
      username: {
        serializedName: "username",
        type: {
          name: "String"
        }
      },
      cookie: {
        serializedName: "cookie",
        type: {
          name: "String"
        }
      },
      expires: {
        serializedName: "expires",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationStatusRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationStatusRequest",
    modelProperties: {
      username: {
        serializedName: "username",
        required: true,
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        required: true,
        type: {
          name: "String"
        }
      },
      bundleIdentifier: {
        serializedName: "bundle_identifier",
        required: true,
        type: {
          name: "String"
        }
      },
      trackIdentifier: {
        serializedName: "track_identifier",
        required: true,
        type: {
          name: "String"
        }
      },
      buildVersion: {
        serializedName: "build_version",
        type: {
          name: "String"
        }
      },
      teamIdentifier: {
        serializedName: "team_identifier",
        type: {
          name: "String"
        }
      },
      trainVersion: {
        serializedName: "train_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationStatusResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationStatusResponse",
    modelProperties: {
      versionType: {
        serializedName: "version_type",
        required: true,
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ItunesAppsRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ItunesAppsRequest",
    modelProperties: {
      username: {
        serializedName: "username",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        type: {
          name: "String"
        }
      },
      serviceConnectionId: {
        serializedName: "service_connection_id",
        type: {
          name: "String"
        }
      },
      teamIdentifier: {
        serializedName: "team_identifier",
        type: {
          name: "String"
        }
      },
      cookie: {
        serializedName: "cookie",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ItunesTeamsRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ItunesTeamsRequest",
    modelProperties: {
      username: {
        serializedName: "username",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        type: {
          name: "String"
        }
      },
      serviceConnectionId: {
        serializedName: "service_connection_id",
        type: {
          name: "String"
        }
      },
      cookie: {
        serializedName: "cookie",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ItunesTeamsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ItunesTeamsResponse",
    modelProperties: {
      teamId: {
        serializedName: "teamId",
        type: {
          name: "String"
        }
      },
      teamName: {
        serializedName: "teamName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AllItunesAppsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AllItunesAppsResponse",
    modelProperties: {
      appleId: {
        serializedName: "apple_id",
        type: {
          name: "String"
        }
      },
      bundleId: {
        serializedName: "bundle_id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      iconUrl: {
        serializedName: "iconUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppleTestFlightGroupRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppleTestFlightGroupRequest",
    modelProperties: {
      username: {
        serializedName: "username",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        type: {
          name: "String"
        }
      },
      appleId: {
        serializedName: "apple_id",
        type: {
          name: "String"
        }
      },
      bundleIdentifier: {
        serializedName: "bundle_identifier",
        type: {
          name: "String"
        }
      },
      teamIdentifier: {
        serializedName: "team_identifier",
        type: {
          name: "String"
        }
      },
      cookie: {
        serializedName: "cookie",
        type: {
          name: "String"
        }
      },
      serviceConnectionId: {
        serializedName: "service_connection_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppleTestFlightGroupResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppleTestFlightGroupResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      providerId: {
        serializedName: "providerId",
        type: {
          name: "Number"
        }
      },
      appAdamId: {
        serializedName: "appAdamId",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      active: {
        serializedName: "active",
        type: {
          name: "Boolean"
        }
      },
      isInternalGroup: {
        serializedName: "isInternalGroup",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AvailabilityOfDevicesRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvailabilityOfDevicesRequest",
    modelProperties: {
      username: {
        serializedName: "username",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        type: {
          name: "String"
        }
      },
      serviceConnectionId: {
        serializedName: "service_connection_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceAvailability: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceAvailability",
    modelProperties: {
      registered: {
        serializedName: "registered",
        required: true,
        type: {
          name: "Number"
        }
      },
      available: {
        serializedName: "available",
        required: true,
        type: {
          name: "Number"
        }
      },
      maximum: {
        serializedName: "maximum",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AvailabilityOfDevicesResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvailabilityOfDevicesResponse",
    modelProperties: {
      iphones: {
        serializedName: "iphones",
        type: {
          name: "Composite",
          className: "AvailabilityOfDevicesResponseIphones"
        }
      },
      ipads: {
        serializedName: "ipads",
        type: {
          name: "Composite",
          className: "AvailabilityOfDevicesResponseIpads"
        }
      },
      ipods: {
        serializedName: "ipods",
        type: {
          name: "Composite",
          className: "AvailabilityOfDevicesResponseIpods"
        }
      },
      watches: {
        serializedName: "watches",
        type: {
          name: "Composite",
          className: "AvailabilityOfDevicesResponseWatches"
        }
      }
    }
  }
};

export const AvailabilityOfDevicesResponseIphones: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvailabilityOfDevicesResponseIphones",
    modelProperties: {
      registered: {
        serializedName: "registered",
        required: true,
        type: {
          name: "Number"
        }
      },
      available: {
        serializedName: "available",
        required: true,
        type: {
          name: "Number"
        }
      },
      maximum: {
        serializedName: "maximum",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AvailabilityOfDevicesResponseIpads: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvailabilityOfDevicesResponseIpads",
    modelProperties: {
      registered: {
        serializedName: "registered",
        required: true,
        type: {
          name: "Number"
        }
      },
      available: {
        serializedName: "available",
        required: true,
        type: {
          name: "Number"
        }
      },
      maximum: {
        serializedName: "maximum",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AvailabilityOfDevicesResponseIpods: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvailabilityOfDevicesResponseIpods",
    modelProperties: {
      registered: {
        serializedName: "registered",
        required: true,
        type: {
          name: "Number"
        }
      },
      available: {
        serializedName: "available",
        required: true,
        type: {
          name: "Number"
        }
      },
      maximum: {
        serializedName: "maximum",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AvailabilityOfDevicesResponseWatches: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvailabilityOfDevicesResponseWatches",
    modelProperties: {
      registered: {
        serializedName: "registered",
        required: true,
        type: {
          name: "Number"
        }
      },
      available: {
        serializedName: "available",
        required: true,
        type: {
          name: "Number"
        }
      },
      maximum: {
        serializedName: "maximum",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const UpdateDevicesRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UpdateDevicesRequest",
    modelProperties: {
      releaseId: {
        serializedName: "release_id",
        type: {
          name: "Number"
        }
      },
      username: {
        serializedName: "username",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        type: {
          name: "String"
        }
      },
      accountServiceConnectionId: {
        serializedName: "account_service_connection_id",
        type: {
          name: "String"
        }
      },
      p12Base64: {
        serializedName: "p12_base64",
        type: {
          name: "String"
        }
      },
      p12ServiceConnectionId: {
        serializedName: "p12_service_connection_id",
        type: {
          name: "String"
        }
      },
      p12Password: {
        serializedName: "p12_password",
        type: {
          name: "String"
        }
      },
      publishAllDevices: {
        serializedName: "publish_all_devices",
        type: {
          name: "Boolean"
        }
      },
      devices: {
        serializedName: "devices",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      destinations: {
        serializedName: "destinations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UpdateDevicesRequestDestinationsItem"
            }
          }
        }
      }
    }
  }
};

export const UpdateDevicesRequestDestinationsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UpdateDevicesRequestDestinationsItem",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UpdateDevicesResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UpdateDevicesResponse",
    modelProperties: {
      statusUrl: {
        serializedName: "status_url",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UpdateResignStatusRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UpdateResignStatusRequest",
    modelProperties: {
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      errorCode: {
        serializedName: "error_code",
        type: {
          name: "String"
        }
      },
      errorMessage: {
        serializedName: "error_message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UpdateResignStatusResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UpdateResignStatusResponse",
    modelProperties: {
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      profilesZipBase64: {
        serializedName: "profiles_zip_base64",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceRegistrationUrl: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceRegistrationUrl",
    modelProperties: {
      registrationUrl: {
        serializedName: "registration_url",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResignAttemptResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResignAttemptResponse",
    modelProperties: {
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "userId",
        required: true,
        type: {
          name: "String"
        }
      },
      appId: {
        serializedName: "appId",
        required: true,
        type: {
          name: "String"
        }
      },
      originalReleaseId: {
        serializedName: "originalReleaseId",
        required: true,
        type: {
          name: "Number"
        }
      },
      resignId: {
        serializedName: "resignId",
        required: true,
        type: {
          name: "String"
        }
      },
      contextId: {
        serializedName: "contextId",
        required: true,
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        required: true,
        type: {
          name: "Number"
        }
      },
      destinations: {
        serializedName: "destinations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Dictionary",
              value: { type: { name: "any" } }
            }
          }
        }
      },
      errorCode: {
        serializedName: "errorCode",
        type: {
          name: "String"
        }
      },
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StoresReleaseDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StoresReleaseDetails",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      appName: {
        serializedName: "app_name",
        type: {
          name: "String"
        }
      },
      appDisplayName: {
        serializedName: "app_display_name",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      shortVersion: {
        serializedName: "short_version",
        type: {
          name: "String"
        }
      },
      releaseNotes: {
        serializedName: "release_notes",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      minOs: {
        serializedName: "min_os",
        type: {
          name: "String"
        }
      },
      androidMinApiLevel: {
        serializedName: "android_min_api_level",
        type: {
          name: "String"
        }
      },
      bundleIdentifier: {
        serializedName: "bundle_identifier",
        type: {
          name: "String"
        }
      },
      fingerprint: {
        serializedName: "fingerprint",
        type: {
          name: "String"
        }
      },
      uploadedAt: {
        serializedName: "uploaded_at",
        type: {
          name: "String"
        }
      },
      downloadUrl: {
        serializedName: "download_url",
        type: {
          name: "String"
        }
      },
      installUrl: {
        serializedName: "install_url",
        type: {
          name: "String"
        }
      },
      distributionStores: {
        serializedName: "distribution_stores",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StoresReleaseDetailsDistributionStoresItem"
            }
          }
        }
      }
    }
  }
};

export const StoresReleaseDetailsDistributionStoresItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StoresReleaseDetailsDistributionStoresItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      publishingStatus: {
        serializedName: "publishing_status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorePatchRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorePatchRequest",
    modelProperties: {
      serviceConnectionId: {
        serializedName: "service_connection_id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExternalStoreRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExternalStoreRequest",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      track: {
        serializedName: "track",
        type: {
          name: "String"
        }
      },
      intuneDetails: {
        serializedName: "intune_details",
        type: {
          name: "Composite",
          className: "ExternalStoreRequestIntuneDetails"
        }
      },
      serviceConnectionId: {
        serializedName: "service_connection_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExternalStoreRequestIntuneDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExternalStoreRequestIntuneDetails",
    modelProperties: {
      secretJson: {
        serializedName: "secret_json",
        type: {
          name: "Composite",
          className: "ExternalStoreRequestIntuneDetailsSecretJson"
        }
      },
      targetAudience: {
        serializedName: "target_audience",
        type: {
          name: "Composite",
          className: "ExternalStoreRequestIntuneDetailsTargetAudience"
        }
      },
      appCategory: {
        serializedName: "app_category",
        type: {
          name: "Composite",
          className: "ExternalStoreRequestIntuneDetailsAppCategory"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExternalStoreRequestIntuneDetailsSecretJson: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExternalStoreRequestIntuneDetailsSecretJson",
    modelProperties: {
      idToken: {
        serializedName: "id_token",
        type: {
          name: "String"
        }
      },
      refreshToken: {
        serializedName: "refresh_token",
        type: {
          name: "String"
        }
      },
      refreshTokenExpiry: {
        serializedName: "refresh_token_expiry",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExternalStoreRequestIntuneDetailsTargetAudience: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExternalStoreRequestIntuneDetailsTargetAudience",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExternalStoreRequestIntuneDetailsAppCategory: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExternalStoreRequestIntuneDetailsAppCategory",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppleMappingRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppleMappingRequest",
    modelProperties: {
      serviceConnectionId: {
        serializedName: "service_connection_id",
        required: true,
        type: {
          name: "String"
        }
      },
      appleId: {
        serializedName: "apple_id",
        type: {
          name: "String"
        }
      },
      bundleIdentifier: {
        serializedName: "bundle_identifier",
        type: {
          name: "String"
        }
      },
      teamIdentifier: {
        serializedName: "team_identifier",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppleMappingResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppleMappingResponse",
    modelProperties: {
      appId: {
        serializedName: "app_id",
        type: {
          name: "String"
        }
      },
      serviceConnectionId: {
        serializedName: "service_connection_id",
        type: {
          name: "String"
        }
      },
      appleId: {
        serializedName: "apple_id",
        type: {
          name: "String"
        }
      },
      teamIdentifier: {
        serializedName: "team_identifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppleTestFlightGroupsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppleTestFlightGroupsResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      providerId: {
        serializedName: "providerId",
        type: {
          name: "Number"
        }
      },
      appleId: {
        serializedName: "appleId",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateCreateStoreRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateCreateStoreRequest",
    modelProperties: {
      type: {
        defaultValue: "intune",
        isConstant: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      intuneDetails: {
        serializedName: "intune_details",
        type: {
          name: "Composite",
          className: "PrivateCreateStoreRequestIntuneDetails"
        }
      }
    }
  }
};

export const PrivateCreateStoreRequestIntuneDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateCreateStoreRequestIntuneDetails",
    modelProperties: {
      targetAudience: {
        serializedName: "target_audience",
        type: {
          name: "Composite",
          className: "PrivateCreateStoreRequestIntuneDetailsTargetAudience"
        }
      },
      appCategory: {
        serializedName: "app_category",
        type: {
          name: "Composite",
          className: "PrivateCreateStoreRequestIntuneDetailsAppCategory"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateCreateStoreRequestIntuneDetailsTargetAudience: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateCreateStoreRequestIntuneDetailsTargetAudience",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateCreateStoreRequestIntuneDetailsAppCategory: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateCreateStoreRequestIntuneDetailsAppCategory",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IntuneSecretDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IntuneSecretDetails",
    modelProperties: {
      idToken: {
        serializedName: "id_token",
        type: {
          name: "String"
        }
      },
      refreshToken: {
        serializedName: "refresh_token",
        type: {
          name: "String"
        }
      },
      refreshTokenExpiry: {
        serializedName: "refresh_token_expiry",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IntuneCategories: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IntuneCategories",
    modelProperties: {
      odataContext: {
        serializedName: "odata\\.context",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IntuneCategoriesValueItem"
            }
          }
        }
      }
    }
  }
};

export const IntuneCategoriesValueItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IntuneCategoriesValueItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      lastModifiedDateTime: {
        serializedName: "lastModifiedDateTime",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IntuneCategoryValue: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IntuneCategoryValue",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      lastModifiedDateTime: {
        serializedName: "lastModifiedDateTime",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IntuneGroups: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IntuneGroups",
    modelProperties: {
      odataContext: {
        serializedName: "odata\\.context",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IntuneGroupsValueItem"
            }
          }
        }
      }
    }
  }
};

export const IntuneGroupsValueItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IntuneGroupsValueItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IntuneGroupValue: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IntuneGroupValue",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IntuneGroup: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IntuneGroup",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      securityEnabled: {
        serializedName: "securityEnabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const CreateStoreSecretRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CreateStoreSecretRequest",
    modelProperties: {
      secretJson: {
        serializedName: "secret_json",
        type: {
          name: "Composite",
          className: "CreateStoreSecretRequestSecretJson"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CreateStoreSecretRequestSecretJson: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CreateStoreSecretRequestSecretJson",
    modelProperties: {
      idToken: {
        serializedName: "id_token",
        type: {
          name: "String"
        }
      },
      refreshToken: {
        serializedName: "refresh_token",
        type: {
          name: "String"
        }
      },
      refreshTokenExpiry: {
        serializedName: "refresh_token_expiry",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CreateStoreSecretResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CreateStoreSecretResponse",
    modelProperties: {
      secretId: {
        serializedName: "secret_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecretDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SecretDetails",
    modelProperties: {
      idToken: {
        serializedName: "id_token",
        type: {
          name: "String"
        }
      },
      refreshToken: {
        serializedName: "refresh_token",
        type: {
          name: "String"
        }
      },
      refreshTokenExpiry: {
        serializedName: "refresh_token_expiry",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReleasePublishErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleasePublishErrorResponse",
    modelProperties: {
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      isLogAvailable: {
        serializedName: "is_log_available",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ReleaseRealTimeStatusResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseRealTimeStatusResponse",
    modelProperties: {
      releaseId: {
        serializedName: "release_id",
        type: {
          name: "String"
        }
      },
      appId: {
        serializedName: "app_id",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "ReleaseRealTimeStatusResponseStatus"
        }
      }
    }
  }
};

export const ReleaseRealTimeStatusResponseStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseRealTimeStatusResponseStatus",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      storetype: {
        serializedName: "storetype",
        type: {
          name: "String"
        }
      },
      track: {
        serializedName: "track",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ValidationResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ValidationResponse",
    modelProperties: {
      appId: {
        serializedName: "app_id",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "ValidationResponseStatus"
        }
      }
    }
  }
};

export const ValidationResponseStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ValidationResponseStatus",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      storetype: {
        serializedName: "storetype",
        type: {
          name: "String"
        }
      },
      track: {
        serializedName: "track",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HasBuildUploadedResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HasBuildUploadedResponse",
    modelProperties: {
      hasBuildUploaded: {
        serializedName: "has_build_uploaded",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const HasTestflightMetadataResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HasTestflightMetadataResponse",
    modelProperties: {
      hasTestflightMetadata: {
        serializedName: "has_testflight_metadata",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const SkipValidationRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SkipValidationRequest",
    modelProperties: {
      skipValidation: {
        serializedName: "skip_validation",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const StatusData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StatusData",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      storetype: {
        serializedName: "storetype",
        type: {
          name: "String"
        }
      },
      track: {
        serializedName: "track",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExternalStoreResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExternalStoreResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      track: {
        serializedName: "track",
        type: {
          name: "String"
        }
      },
      intuneDetails: {
        serializedName: "intune_details",
        type: {
          name: "Composite",
          className: "ExternalStoreResponseIntuneDetails"
        }
      },
      serviceConnectionId: {
        serializedName: "service_connection_id",
        type: {
          name: "String"
        }
      },
      createdBy: {
        serializedName: "created_by",
        type: {
          name: "String"
        }
      },
      createdByPrincipalType: {
        serializedName: "created_by_principal_type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExternalStoreResponseIntuneDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExternalStoreResponseIntuneDetails",
    modelProperties: {
      targetAudience: {
        serializedName: "target_audience",
        type: {
          name: "Composite",
          className: "ExternalStoreResponseIntuneDetailsTargetAudience"
        }
      },
      appCategory: {
        serializedName: "app_category",
        type: {
          name: "Composite",
          className: "ExternalStoreResponseIntuneDetailsAppCategory"
        }
      }
    }
  }
};

export const ExternalStoreResponseIntuneDetailsTargetAudience: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExternalStoreResponseIntuneDetailsTargetAudience",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExternalStoreResponseIntuneDetailsAppCategory: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExternalStoreResponseIntuneDetailsAppCategory",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StoreSecretResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StoreSecretResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      secret: {
        serializedName: "secret",
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IntuneStoreResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IntuneStoreResponse",
    modelProperties: {
      targetAudience: {
        serializedName: "target_audience",
        type: {
          name: "Composite",
          className: "IntuneStoreResponseTargetAudience"
        }
      },
      appCategory: {
        serializedName: "app_category",
        type: {
          name: "Composite",
          className: "IntuneStoreResponseAppCategory"
        }
      }
    }
  }
};

export const IntuneStoreResponseTargetAudience: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IntuneStoreResponseTargetAudience",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IntuneStoreResponseAppCategory: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IntuneStoreResponseAppCategory",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IntuneStoreRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IntuneStoreRequest",
    modelProperties: {
      secretJson: {
        serializedName: "secret_json",
        type: {
          name: "Composite",
          className: "IntuneStoreRequestSecretJson"
        }
      },
      targetAudience: {
        serializedName: "target_audience",
        type: {
          name: "Composite",
          className: "IntuneStoreRequestTargetAudience"
        }
      },
      appCategory: {
        serializedName: "app_category",
        type: {
          name: "Composite",
          className: "IntuneStoreRequestAppCategory"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IntuneStoreRequestSecretJson: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IntuneStoreRequestSecretJson",
    modelProperties: {
      idToken: {
        serializedName: "id_token",
        type: {
          name: "String"
        }
      },
      refreshToken: {
        serializedName: "refresh_token",
        type: {
          name: "String"
        }
      },
      refreshTokenExpiry: {
        serializedName: "refresh_token_expiry",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IntuneStoreRequestTargetAudience: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IntuneStoreRequestTargetAudience",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IntuneStoreRequestAppCategory: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IntuneStoreRequestAppCategory",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateIntuneStoreRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateIntuneStoreRequest",
    modelProperties: {
      targetAudience: {
        serializedName: "target_audience",
        type: {
          name: "Composite",
          className: "PrivateIntuneStoreRequestTargetAudience"
        }
      },
      appCategory: {
        serializedName: "app_category",
        type: {
          name: "Composite",
          className: "PrivateIntuneStoreRequestAppCategory"
        }
      },
      tenantId: {
        serializedName: "tenant_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateIntuneStoreRequestTargetAudience: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateIntuneStoreRequestTargetAudience",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateIntuneStoreRequestAppCategory: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateIntuneStoreRequestAppCategory",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IntuneTargetAudience: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IntuneTargetAudience",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IntuneAppCategory: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IntuneAppCategory",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IntuneTargetAudienceResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IntuneTargetAudienceResponse",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IntuneAppCategoryResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IntuneAppCategoryResponse",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PatchReleaseRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PatchReleaseRequest",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      destPublishId: {
        serializedName: "dest_publish_id",
        type: {
          name: "String"
        }
      },
      errorDetails: {
        serializedName: "error_details",
        type: {
          name: "String"
        }
      },
      errorContextId: {
        serializedName: "error_contextId",
        type: {
          name: "String"
        }
      },
      wrapPackageUrl: {
        serializedName: "wrap_package_url",
        type: {
          name: "String"
        }
      },
      isWrapperRequest: {
        serializedName: "is_wrapper_request",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const StoresBasicReleaseDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StoresBasicReleaseDetails",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      shortVersion: {
        serializedName: "short_version",
        type: {
          name: "String"
        }
      },
      uploadedAt: {
        serializedName: "uploaded_at",
        type: {
          name: "String"
        }
      },
      destinationType: {
        serializedName: "destination_type",
        type: {
          name: "String"
        }
      },
      distributionStores: {
        serializedName: "distribution_stores",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StoresBasicReleaseDetailsDistributionStoresItem"
            }
          }
        }
      }
    }
  }
};

export const StoresBasicReleaseDetailsDistributionStoresItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StoresBasicReleaseDetailsDistributionStoresItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      publishingStatus: {
        serializedName: "publishing_status",
        type: {
          name: "String"
        }
      },
      isLatest: {
        serializedName: "is_latest",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const StoresDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StoresDetails",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      publishingStatus: {
        serializedName: "publishing_status",
        type: {
          name: "String"
        }
      },
      isLatest: {
        serializedName: "is_latest",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const StoreDestinationDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StoreDestinationDetails",
    modelProperties: {
      destPublishId: {
        serializedName: "dest_publish_id",
        type: {
          name: "String"
        }
      },
      storeType: {
        defaultValue: "intune",
        isConstant: true,
        serializedName: "store_type",
        type: {
          name: "String"
        }
      },
      appId: {
        serializedName: "appId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StoresBasicDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StoresBasicDetails",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      publishingStatus: {
        serializedName: "publishing_status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IntuneAppsRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IntuneAppsRequest",
    modelProperties: {
      createdMonth: {
        serializedName: "created_month",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IntuneAppsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IntuneAppsResponse",
    modelProperties: {
      createdMonth: {
        serializedName: "created_month",
        type: {
          name: "String"
        }
      },
      appId: {
        serializedName: "app_id",
        type: {
          name: "String"
        }
      },
      refreshStatus: {
        serializedName: "refreshStatus",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OrgComplianceSettingsRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OrgComplianceSettingsRequest",
    modelProperties: {
      certificateConnectionId: {
        serializedName: "certificate_connection_id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OrgComplianceSettingsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OrgComplianceSettingsResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      orgId: {
        serializedName: "org_id",
        required: true,
        type: {
          name: "String"
        }
      },
      certificateConnectionId: {
        serializedName: "certificate_connection_id",
        required: true,
        type: {
          name: "String"
        }
      },
      isMamEnabled: {
        serializedName: "is_mam_enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const StoreNotification: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StoreNotification",
    modelProperties: {
      service: {
        serializedName: "service",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      validUntil: {
        serializedName: "valid_until",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DiagnosticIdResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DiagnosticIdResponse",
    modelProperties: {
      diagnosticId: {
        serializedName: "diagnostic_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SymbolModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SymbolModel",
    modelProperties: {
      symbolId: {
        serializedName: "symbol_id",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      appId: {
        serializedName: "app_id",
        required: true,
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        required: true,
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      },
      alternateSymbolIds: {
        serializedName: "alternate_symbol_ids",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      build: {
        serializedName: "build",
        type: {
          name: "String"
        }
      },
      symbolUploadId: {
        serializedName: "symbol_upload_id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SymbolsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SymbolsItem",
    modelProperties: {
      symbolId: {
        serializedName: "symbol_id",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      appId: {
        serializedName: "app_id",
        required: true,
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        required: true,
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        required: true,
        type: {
          name: "String"
        }
      },
      alternateSymbolIds: {
        serializedName: "alternate_symbol_ids",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      build: {
        serializedName: "build",
        type: {
          name: "String"
        }
      },
      symbolUploadId: {
        serializedName: "symbol_upload_id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SymbolStatusResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SymbolStatusResponse",
    modelProperties: {
      symbolId: {
        serializedName: "symbol_id",
        required: true,
        type: {
          name: "String"
        }
      },
      appId: {
        serializedName: "app_id",
        required: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SymbolUpload: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SymbolUpload",
    modelProperties: {
      symbolUploadId: {
        serializedName: "symbol_upload_id",
        required: true,
        type: {
          name: "String"
        }
      },
      appId: {
        serializedName: "app_id",
        required: true,
        type: {
          name: "String"
        }
      },
      user: {
        serializedName: "user",
        type: {
          name: "Composite",
          className: "SymbolUploadUser"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      symbolType: {
        serializedName: "symbol_type",
        required: true,
        type: {
          name: "String"
        }
      },
      symbolsUploaded: {
        serializedName: "symbols_uploaded",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SymbolUploadSymbolsUploadedItem"
            }
          }
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      fileName: {
        serializedName: "file_name",
        type: {
          name: "String"
        }
      },
      fileSize: {
        serializedName: "file_size",
        type: {
          name: "Number"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const SymbolUploadUser: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SymbolUploadUser",
    modelProperties: {
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SymbolUploadSymbolsUploadedItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SymbolUploadSymbolsUploadedItem",
    modelProperties: {
      symbolId: {
        serializedName: "symbol_id",
        required: true,
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SymbolUploadsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SymbolUploadsItem",
    modelProperties: {
      symbolUploadId: {
        serializedName: "symbol_upload_id",
        required: true,
        type: {
          name: "String"
        }
      },
      appId: {
        serializedName: "app_id",
        required: true,
        type: {
          name: "String"
        }
      },
      user: {
        serializedName: "user",
        type: {
          name: "Composite",
          className: "SymbolUploadsItemUser"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      symbolType: {
        serializedName: "symbol_type",
        required: true,
        type: {
          name: "String"
        }
      },
      symbolsUploaded: {
        serializedName: "symbols_uploaded",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SymbolUploadsPropertiesItemsItem"
            }
          }
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      fileName: {
        serializedName: "file_name",
        type: {
          name: "String"
        }
      },
      fileSize: {
        serializedName: "file_size",
        type: {
          name: "Number"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const SymbolUploadsItemUser: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SymbolUploadsItemUser",
    modelProperties: {
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SymbolUploadsPropertiesItemsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SymbolUploadsPropertiesItemsItem",
    modelProperties: {
      symbolId: {
        serializedName: "symbol_id",
        required: true,
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SymbolLocation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SymbolLocation",
    modelProperties: {
      uri: {
        serializedName: "uri",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SymbolUploadLocation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SymbolUploadLocation",
    modelProperties: {
      uri: {
        serializedName: "uri",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SymbolUploadBeginRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SymbolUploadBeginRequest",
    modelProperties: {
      symbolType: {
        serializedName: "symbol_type",
        required: true,
        type: {
          name: "String"
        }
      },
      clientCallback: {
        serializedName: "client_callback",
        type: {
          name: "String"
        }
      },
      fileName: {
        serializedName: "file_name",
        type: {
          name: "String"
        }
      },
      build: {
        serializedName: "build",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SymbolUploadBeginResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SymbolUploadBeginResponse",
    modelProperties: {
      symbolUploadId: {
        serializedName: "symbol_upload_id",
        required: true,
        type: {
          name: "String"
        }
      },
      uploadUrl: {
        serializedName: "upload_url",
        required: true,
        type: {
          name: "String"
        }
      },
      expirationDate: {
        serializedName: "expiration_date",
        required: true,
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const SymbolUploadEndRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SymbolUploadEndRequest",
    modelProperties: {
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SymbolUploadUserInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SymbolUploadUserInfo",
    modelProperties: {
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UploadedSymbolInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UploadedSymbolInfo",
    modelProperties: {
      symbolId: {
        serializedName: "symbol_id",
        required: true,
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SystemVersionNameGroup: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemVersionNameGroup",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      versions: {
        serializedName: "versions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const SystemVersionNameGroupsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemVersionNameGroupsItem",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      versions: {
        serializedName: "versions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AppCrashesInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppCrashesInfo",
    modelProperties: {
      hasCrashes: {
        serializedName: "has_crashes",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      features: {
        serializedName: "features",
        type: {
          name: "Composite",
          className: "AppCrashesInfoFeatures"
        }
      }
    }
  }
};

export const AppCrashesInfoFeatures: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppCrashesInfoFeatures",
    modelProperties: {
      crashgroupModifyStatus: {
        serializedName: "crashgroup_modify_status",
        type: {
          name: "Boolean"
        }
      },
      crashgroupModifyAnnotation: {
        serializedName: "crashgroup_modify_annotation",
        type: {
          name: "Boolean"
        }
      },
      search: {
        serializedName: "search",
        type: {
          name: "Boolean"
        }
      },
      crashgroupAnalyticsCrashfreeusers: {
        serializedName: "crashgroup_analytics_crashfreeusers",
        type: {
          name: "Boolean"
        }
      },
      crashgroupAnalyticsImpactedusers: {
        serializedName: "crashgroup_analytics_impactedusers",
        type: {
          name: "Boolean"
        }
      },
      crashDownloadRaw: {
        serializedName: "crash_download_raw",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AppFeatures: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppFeatures",
    modelProperties: {
      crashgroupModifyStatus: {
        serializedName: "crashgroup_modify_status",
        type: {
          name: "Boolean"
        }
      },
      crashgroupModifyAnnotation: {
        serializedName: "crashgroup_modify_annotation",
        type: {
          name: "Boolean"
        }
      },
      search: {
        serializedName: "search",
        type: {
          name: "Boolean"
        }
      },
      crashgroupAnalyticsCrashfreeusers: {
        serializedName: "crashgroup_analytics_crashfreeusers",
        type: {
          name: "Boolean"
        }
      },
      crashgroupAnalyticsImpactedusers: {
        serializedName: "crashgroup_analytics_impactedusers",
        type: {
          name: "Boolean"
        }
      },
      crashDownloadRaw: {
        serializedName: "crash_download_raw",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AppVersion: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppVersion",
    modelProperties: {
      appVersionId: {
        serializedName: "app_version_id",
        required: true,
        type: {
          name: "String"
        }
      },
      appId: {
        serializedName: "app_id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      buildNumber: {
        serializedName: "build_number",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StackFrame: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StackFrame",
    modelProperties: {
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      className: {
        serializedName: "class_name",
        type: {
          name: "String"
        }
      },
      method: {
        serializedName: "method",
        type: {
          name: "String"
        }
      },
      classMethod: {
        serializedName: "class_method",
        type: {
          name: "Boolean"
        }
      },
      file: {
        serializedName: "file",
        type: {
          name: "String"
        }
      },
      line: {
        serializedName: "line",
        type: {
          name: "Number"
        }
      },
      appCode: {
        serializedName: "app_code",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      frameworkName: {
        serializedName: "framework_name",
        type: {
          name: "String"
        }
      },
      codeRaw: {
        serializedName: "code_raw",
        required: true,
        type: {
          name: "String"
        }
      },
      codeFormatted: {
        serializedName: "code_formatted",
        required: true,
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      relevant: {
        serializedName: "relevant",
        type: {
          name: "Boolean"
        }
      },
      methodParams: {
        serializedName: "method_params",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReasonStackFrame: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReasonStackFrame",
    modelProperties: {
      className: {
        serializedName: "class_name",
        type: {
          name: "String"
        }
      },
      method: {
        serializedName: "method",
        type: {
          name: "String"
        }
      },
      classMethod: {
        serializedName: "class_method",
        type: {
          name: "Boolean"
        }
      },
      file: {
        serializedName: "file",
        type: {
          name: "String"
        }
      },
      line: {
        serializedName: "line",
        type: {
          name: "Number"
        }
      },
      appCode: {
        serializedName: "app_code",
        type: {
          name: "Boolean"
        }
      },
      frameworkName: {
        serializedName: "framework_name",
        type: {
          name: "String"
        }
      },
      codeFormatted: {
        serializedName: "code_formatted",
        type: {
          name: "String"
        }
      },
      codeRaw: {
        serializedName: "code_raw",
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      methodParams: {
        serializedName: "method_params",
        type: {
          name: "String"
        }
      },
      exceptionType: {
        serializedName: "exception_type",
        type: {
          name: "String"
        }
      },
      osExceptionType: {
        serializedName: "os_exception_type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RetentionSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RetentionSettings",
    modelProperties: {
      retentionInDays: {
        serializedName: "retention_in_days",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CrashAttachment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashAttachment",
    modelProperties: {
      appId: {
        serializedName: "app_id",
        required: true,
        type: {
          name: "String"
        }
      },
      attachmentId: {
        serializedName: "attachment_id",
        required: true,
        type: {
          name: "String"
        }
      },
      crashId: {
        serializedName: "crash_id",
        required: true,
        type: {
          name: "String"
        }
      },
      blobLocation: {
        serializedName: "blob_location",
        required: true,
        type: {
          name: "String"
        }
      },
      contentType: {
        serializedName: "content_type",
        required: true,
        type: {
          name: "String"
        }
      },
      fileName: {
        serializedName: "file_name",
        required: true,
        type: {
          name: "String"
        }
      },
      createdTime: {
        serializedName: "created_time",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      size: {
        serializedName: "size",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CrashRawLocation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashRawLocation",
    modelProperties: {
      uri: {
        serializedName: "uri",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CrashAttachmentLocation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashAttachmentLocation",
    modelProperties: {
      uri: {
        serializedName: "uri",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CrashGroupsContainer: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashGroupsContainer",
    modelProperties: {
      limitedResultSet: {
        serializedName: "limited_result_set",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      continuationToken: {
        serializedName: "continuation_token",
        type: {
          name: "String"
        }
      },
      crashGroups: {
        serializedName: "crash_groups",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CrashGroupsContainerCrashGroupsItem"
            }
          }
        }
      }
    }
  }
};

export const CrashGroupsContainerCrashGroupsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashGroupsContainerCrashGroupsItem",
    modelProperties: {
      crashGroupId: {
        serializedName: "crash_group_id",
        required: true,
        type: {
          name: "String"
        }
      },
      newCrashGroupId: {
        serializedName: "new_crash_group_id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayId: {
        serializedName: "display_id",
        required: true,
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      build: {
        serializedName: "build",
        required: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        required: true,
        type: {
          name: "Number"
        }
      },
      impactedUsers: {
        serializedName: "impacted_users",
        type: {
          name: "Number"
        }
      },
      firstOccurrence: {
        serializedName: "first_occurrence",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      lastOccurrence: {
        serializedName: "last_occurrence",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      exception: {
        serializedName: "exception",
        type: {
          name: "String"
        }
      },
      crashReason: {
        serializedName: "crash_reason",
        required: true,
        type: {
          name: "String"
        }
      },
      reasonFrame: {
        serializedName: "reason_frame",
        type: {
          name: "Composite",
          className: "CrashGroupsContainerCrashGroupsItemReasonFrame"
        }
      },
      fatal: {
        serializedName: "fatal",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      annotation: {
        serializedName: "annotation",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CrashGroupsContainerCrashGroupsItemReasonFrame: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashGroupsContainerCrashGroupsItemReasonFrame",
    modelProperties: {
      className: {
        serializedName: "class_name",
        type: {
          name: "String"
        }
      },
      method: {
        serializedName: "method",
        type: {
          name: "String"
        }
      },
      classMethod: {
        serializedName: "class_method",
        type: {
          name: "Boolean"
        }
      },
      file: {
        serializedName: "file",
        type: {
          name: "String"
        }
      },
      line: {
        serializedName: "line",
        type: {
          name: "Number"
        }
      },
      appCode: {
        serializedName: "app_code",
        type: {
          name: "Boolean"
        }
      },
      frameworkName: {
        serializedName: "framework_name",
        type: {
          name: "String"
        }
      },
      codeFormatted: {
        serializedName: "code_formatted",
        type: {
          name: "String"
        }
      },
      codeRaw: {
        serializedName: "code_raw",
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      methodParams: {
        serializedName: "method_params",
        type: {
          name: "String"
        }
      },
      exceptionType: {
        serializedName: "exception_type",
        type: {
          name: "String"
        }
      },
      osExceptionType: {
        serializedName: "os_exception_type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CrashGroup: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashGroup",
    modelProperties: {
      crashGroupId: {
        serializedName: "crash_group_id",
        required: true,
        type: {
          name: "String"
        }
      },
      newCrashGroupId: {
        serializedName: "new_crash_group_id",
        required: true,
        type: {
          name: "String"
        }
      },
      displayId: {
        serializedName: "display_id",
        required: true,
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      build: {
        serializedName: "build",
        required: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        required: true,
        type: {
          name: "Number"
        }
      },
      impactedUsers: {
        serializedName: "impacted_users",
        type: {
          name: "Number"
        }
      },
      firstOccurrence: {
        serializedName: "first_occurrence",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      lastOccurrence: {
        serializedName: "last_occurrence",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      exception: {
        serializedName: "exception",
        type: {
          name: "String"
        }
      },
      crashReason: {
        serializedName: "crash_reason",
        required: true,
        type: {
          name: "String"
        }
      },
      reasonFrame: {
        serializedName: "reason_frame",
        type: {
          name: "Composite",
          className: "CrashGroupReasonFrame"
        }
      },
      fatal: {
        serializedName: "fatal",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      annotation: {
        serializedName: "annotation",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CrashGroupReasonFrame: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashGroupReasonFrame",
    modelProperties: {
      className: {
        serializedName: "class_name",
        type: {
          name: "String"
        }
      },
      method: {
        serializedName: "method",
        type: {
          name: "String"
        }
      },
      classMethod: {
        serializedName: "class_method",
        type: {
          name: "Boolean"
        }
      },
      file: {
        serializedName: "file",
        type: {
          name: "String"
        }
      },
      line: {
        serializedName: "line",
        type: {
          name: "Number"
        }
      },
      appCode: {
        serializedName: "app_code",
        type: {
          name: "Boolean"
        }
      },
      frameworkName: {
        serializedName: "framework_name",
        type: {
          name: "String"
        }
      },
      codeFormatted: {
        serializedName: "code_formatted",
        type: {
          name: "String"
        }
      },
      codeRaw: {
        serializedName: "code_raw",
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      methodParams: {
        serializedName: "method_params",
        type: {
          name: "String"
        }
      },
      exceptionType: {
        serializedName: "exception_type",
        type: {
          name: "String"
        }
      },
      osExceptionType: {
        serializedName: "os_exception_type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CrashGroupChange: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashGroupChange",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      annotation: {
        serializedName: "annotation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertingCrashGroup: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertingCrashGroup",
    modelProperties: {
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      appDisplayName: {
        serializedName: "app_display_name",
        type: {
          name: "String"
        }
      },
      appPlatform: {
        serializedName: "app_platform",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      stackTrace: {
        serializedName: "stack_trace",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const CrashDeleteCounter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashDeleteCounter",
    modelProperties: {
      appId: {
        serializedName: "app_id",
        type: {
          name: "String"
        }
      },
      crashGroupId: {
        serializedName: "crash_group_id",
        type: {
          name: "String"
        }
      },
      crashId: {
        serializedName: "crash_id",
        type: {
          name: "String"
        }
      },
      crashesDeleted: {
        serializedName: "crashes_deleted",
        type: {
          name: "Number"
        }
      },
      attachmentsDeleted: {
        serializedName: "attachments_deleted",
        type: {
          name: "Number"
        }
      },
      blobsSucceeded: {
        serializedName: "blobs_succeeded",
        type: {
          name: "Number"
        }
      },
      blobsFailed: {
        serializedName: "blobs_failed",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const V2MissingSymbol: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "V2MissingSymbol",
    modelProperties: {
      symbolId: {
        serializedName: "symbol_id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V2MissingSymbolsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "V2MissingSymbolsItem",
    modelProperties: {
      symbolId: {
        serializedName: "symbol_id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V2SymbolUpdateInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "V2SymbolUpdateInfo",
    modelProperties: {
      symbolId: {
        serializedName: "symbol_id",
        required: true,
        type: {
          name: "String"
        }
      },
      appId: {
        serializedName: "app_id",
        required: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V2MissingSymbolCrashGroup: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "V2MissingSymbolCrashGroup",
    modelProperties: {
      symbolGroupId: {
        serializedName: "symbol_group_id",
        required: true,
        type: {
          name: "String"
        }
      },
      crashCount: {
        serializedName: "crash_count",
        type: {
          name: "Number"
        }
      },
      errorCount: {
        serializedName: "error_count",
        type: {
          name: "Number"
        }
      },
      appId: {
        serializedName: "app_id",
        required: true,
        type: {
          name: "String"
        }
      },
      appVer: {
        serializedName: "app_ver",
        required: true,
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      lastModified: {
        serializedName: "last_modified",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      missingSymbols: {
        serializedName: "missing_symbols",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V2MissingSymbolCrashGroupMissingSymbolsItem"
            }
          }
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V2MissingSymbolCrashGroupMissingSymbolsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "V2MissingSymbolCrashGroupMissingSymbolsItem",
    modelProperties: {
      symbolId: {
        serializedName: "symbol_id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V2MissingSymbolCrashGroupsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "V2MissingSymbolCrashGroupsItem",
    modelProperties: {
      symbolGroupId: {
        serializedName: "symbol_group_id",
        required: true,
        type: {
          name: "String"
        }
      },
      crashCount: {
        serializedName: "crash_count",
        type: {
          name: "Number"
        }
      },
      errorCount: {
        serializedName: "error_count",
        type: {
          name: "Number"
        }
      },
      appId: {
        serializedName: "app_id",
        required: true,
        type: {
          name: "String"
        }
      },
      appVer: {
        serializedName: "app_ver",
        required: true,
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      lastModified: {
        serializedName: "last_modified",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      missingSymbols: {
        serializedName: "missing_symbols",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V2MissingSymbolCrashGroupsPropertiesItemsItem"
            }
          }
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V2MissingSymbolCrashGroupsPropertiesItemsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "V2MissingSymbolCrashGroupsPropertiesItemsItem",
    modelProperties: {
      symbolId: {
        serializedName: "symbol_id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V2MissingSymbolCrashGroupsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "V2MissingSymbolCrashGroupsResponse",
    modelProperties: {
      totalCrashCount: {
        serializedName: "total_crash_count",
        required: true,
        type: {
          name: "Number"
        }
      },
      groups: {
        serializedName: "groups",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V2MissingSymbolCrashGroupsResponseGroupsItem"
            }
          }
        }
      }
    }
  }
};

export const V2MissingSymbolCrashGroupsResponseGroupsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "V2MissingSymbolCrashGroupsResponseGroupsItem",
    modelProperties: {
      symbolGroupId: {
        serializedName: "symbol_group_id",
        required: true,
        type: {
          name: "String"
        }
      },
      crashCount: {
        serializedName: "crash_count",
        type: {
          name: "Number"
        }
      },
      errorCount: {
        serializedName: "error_count",
        type: {
          name: "Number"
        }
      },
      appId: {
        serializedName: "app_id",
        required: true,
        type: {
          name: "String"
        }
      },
      appVer: {
        serializedName: "app_ver",
        required: true,
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      lastModified: {
        serializedName: "last_modified",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      missingSymbols: {
        serializedName: "missing_symbols",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "V2MissingSymbolCrashGroupsResponseGroupsPropertiesItemsItem"
            }
          }
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V2MissingSymbolCrashGroupsResponseGroupsPropertiesItemsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "V2MissingSymbolCrashGroupsResponseGroupsPropertiesItemsItem",
    modelProperties: {
      symbolId: {
        serializedName: "symbol_id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V2MissingSymbolCrashGroupsInfoResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "V2MissingSymbolCrashGroupsInfoResponse",
    modelProperties: {
      totalCrashCount: {
        serializedName: "total_crash_count",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const V2StatusResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "V2StatusResponse",
    modelProperties: {
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V2FailureResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "V2FailureResponse",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ActiveCrashingAppDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ActiveCrashingAppDetails",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      appsWithCrashes: {
        serializedName: "appsWithCrashes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ActiveCrashingAppDetailsAppsWithCrashesItem"
            }
          }
        }
      }
    }
  }
};

export const ActiveCrashingAppDetailsAppsWithCrashesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ActiveCrashingAppDetailsAppsWithCrashesItem",
    modelProperties: {
      appId: {
        serializedName: "appId",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "appVersion",
        type: {
          name: "String"
        }
      },
      crashGroupId: {
        serializedName: "crashGroupId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LogTraceDefinition: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogTraceDefinition",
    modelProperties: {
      appSecret: {
        serializedName: "app_secret",
        required: true,
        type: {
          name: "String"
        }
      },
      installId: {
        serializedName: "install_id",
        type: {
          name: "String"
        }
      },
      expiration: {
        serializedName: "expiration",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const CrashingAppDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashingAppDetail",
    modelProperties: {
      appId: {
        serializedName: "appId",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "appVersion",
        type: {
          name: "String"
        }
      },
      crashGroupId: {
        serializedName: "crashGroupId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LogContainer: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogContainer",
    modelProperties: {
      exceededMaxLimit: {
        serializedName: "exceeded_max_limit",
        type: {
          name: "Boolean"
        }
      },
      lastReceivedLogTimestamp: {
        serializedName: "last_received_log_timestamp",
        type: {
          name: "DateTime"
        }
      },
      logs: {
        serializedName: "logs",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LogContainerLogsItem"
            }
          }
        }
      }
    }
  }
};

export const LogContainerLogsItem: coreClient.CompositeMapper = {
  serializedName: "LogContainerLogsItem",
  type: {
    name: "Composite",
    className: "LogContainerLogsItem",
    uberParent: "LogContainerLogsItem",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "LogContainerLogsItemDevice"
        }
      }
    }
  }
};

export const LogContainerLogsItemDevice: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogContainerLogsItemDevice",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GenericLogContainer: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GenericLogContainer",
    modelProperties: {
      exceededMaxLimit: {
        serializedName: "exceeded_max_limit",
        type: {
          name: "Boolean"
        }
      },
      lastReceivedLogTimestamp: {
        serializedName: "last_received_log_timestamp",
        type: {
          name: "DateTime"
        }
      },
      logs: {
        serializedName: "logs",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GenericLogContainerLogsItem"
            }
          }
        }
      }
    }
  }
};

export const GenericLogContainerLogsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GenericLogContainerLogsItem",
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      sessionId: {
        serializedName: "session_id",
        type: {
          name: "Uuid"
        }
      },
      eventId: {
        serializedName: "event_id",
        type: {
          name: "String"
        }
      },
      eventName: {
        serializedName: "event_name",
        type: {
          name: "String"
        }
      },
      messageId: {
        serializedName: "message_id",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "GenericLogContainerLogsItemDevice"
        }
      },
      authProvider: {
        serializedName: "auth_provider",
        type: {
          name: "String"
        }
      },
      accountId: {
        serializedName: "account_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GenericLogContainerLogsItemDevice: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GenericLogContainerLogsItemDevice",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GenericLog: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GenericLog",
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      sessionId: {
        serializedName: "session_id",
        type: {
          name: "Uuid"
        }
      },
      eventId: {
        serializedName: "event_id",
        type: {
          name: "String"
        }
      },
      eventName: {
        serializedName: "event_name",
        type: {
          name: "String"
        }
      },
      messageId: {
        serializedName: "message_id",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "GenericLogDevice"
        }
      },
      authProvider: {
        serializedName: "auth_provider",
        type: {
          name: "String"
        }
      },
      accountId: {
        serializedName: "account_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GenericLogDevice: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GenericLogDevice",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Log: coreClient.CompositeMapper = {
  serializedName: "Log",
  type: {
    name: "Composite",
    className: "Log",
    uberParent: "Log",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "LogDevice"
        }
      }
    }
  }
};

export const LogDevice: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogDevice",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1Eosn49SchemasLogwithpropertiesAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1Eosn49SchemasLogwithpropertiesAllof0",
    uberParent: "Components1Eosn49SchemasLogwithpropertiesAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "LogWithProperties0Device"
        }
      }
    }
  }
};

export const LogWithProperties0Device: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogWithProperties0Device",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Device: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Device",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components264NqgSchemasStartsessionlogAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components264NqgSchemasStartsessionlogAllof0",
    uberParent: "Components264NqgSchemasStartsessionlogAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "StartSessionLog0Device"
        }
      }
    }
  }
};

export const StartSessionLog0Device: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StartSessionLog0Device",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsO0SzfoSchemasDistributionstartsessionlogAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsO0SzfoSchemasDistributionstartsessionlogAllof0",
    uberParent: "ComponentsO0SzfoSchemasDistributionstartsessionlogAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "DistributionStartSessionLog0Device"
        }
      }
    }
  }
};

export const DistributionStartSessionLog0Device: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionStartSessionLog0Device",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components84YphlSchemasHandlederrorlogAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components84YphlSchemasHandlederrorlogAllof0",
    uberParent: "Components84YphlSchemasHandlederrorlogAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "HandledErrorLog0Device"
        }
      }
    }
  }
};

export const HandledErrorLog0Device: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HandledErrorLog0Device",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1Vpcf5FSchemasUnhandlederrorlogAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1Vpcf5FSchemasUnhandlederrorlogAllof0",
    uberParent: "Components1Vpcf5FSchemasUnhandlederrorlogAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "UnhandledErrorLog0Device"
        }
      }
    }
  }
};

export const UnhandledErrorLog0Device: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UnhandledErrorLog0Device",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1Rh9N66SchemasStartservicelogAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1Rh9N66SchemasStartservicelogAllof0",
    uberParent: "Components1Rh9N66SchemasStartservicelogAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "StartServiceLog0Device"
        }
      }
    }
  }
};

export const StartServiceLog0Device: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StartServiceLog0Device",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomPropertyLogPropertiesItem: coreClient.CompositeMapper = {
  serializedName: "CustomPropertyLogPropertiesItem",
  type: {
    name: "Composite",
    className: "CustomPropertyLogPropertiesItem",
    uberParent: "CustomPropertyLogPropertiesItem",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        constraints: {
          Pattern: new RegExp("^[a-zA-Z][a-zA-Z0-9\\-_]*$"),
          MaxLength: 128
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsCzhkplSchemasCustompropertylogAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsCzhkplSchemasCustompropertylogAllof0",
    uberParent: "ComponentsCzhkplSchemasCustompropertylogAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "CustomPropertyLog0Device"
        }
      }
    }
  }
};

export const CustomPropertyLog0Device: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomPropertyLog0Device",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomProperty: coreClient.CompositeMapper = {
  serializedName: "CustomProperty",
  type: {
    name: "Composite",
    className: "CustomProperty",
    uberParent: "CustomProperty",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        constraints: {
          Pattern: new RegExp("^[a-zA-Z][a-zA-Z0-9\\-_]*$"),
          MaxLength: 128
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1HtupicSchemasStringpropertyAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1HtupicSchemasStringpropertyAllof0",
    uberParent: "Components1HtupicSchemasStringpropertyAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        constraints: {
          Pattern: new RegExp("^[a-zA-Z][a-zA-Z0-9\\-_]*$"),
          MaxLength: 128
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components3Is1CjSchemasNumberpropertyAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components3Is1CjSchemasNumberpropertyAllof0",
    uberParent: "Components3Is1CjSchemasNumberpropertyAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        constraints: {
          Pattern: new RegExp("^[a-zA-Z][a-zA-Z0-9\\-_]*$"),
          MaxLength: 128
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsIduba0SchemasBooleanpropertyAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsIduba0SchemasBooleanpropertyAllof0",
    uberParent: "ComponentsIduba0SchemasBooleanpropertyAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        constraints: {
          Pattern: new RegExp("^[a-zA-Z][a-zA-Z0-9\\-_]*$"),
          MaxLength: 128
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsLyvfq5SchemasDatetimepropertyAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsLyvfq5SchemasDatetimepropertyAllof0",
    uberParent: "ComponentsLyvfq5SchemasDatetimepropertyAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        constraints: {
          Pattern: new RegExp("^[a-zA-Z][a-zA-Z0-9\\-_]*$"),
          MaxLength: 128
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClearProperty: coreClient.CompositeMapper = {
  serializedName: "clear",
  type: {
    name: "Composite",
    className: "ClearProperty",
    uberParent: "ClearProperty",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        constraints: {
          Pattern: new RegExp("^[a-zA-Z][a-zA-Z0-9\\-_]*$"),
          MaxLength: 128
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1Wno2Z2SchemasPagelogAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1Wno2Z2SchemasPagelogAllof0",
    uberParent: "Components1Wno2Z2SchemasPagelogAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "PageLog0Device"
        }
      }
    }
  }
};

export const PageLog0Device: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PageLog0Device",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsMa5HoxSchemasEventlogAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsMa5HoxSchemasEventlogAllof0",
    uberParent: "ComponentsMa5HoxSchemasEventlogAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "EventLog0Device"
        }
      }
    }
  }
};

export const EventLog0Device: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EventLog0Device",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsNch8AzSchemasPushinstallationlogAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsNch8AzSchemasPushinstallationlogAllof0",
    uberParent: "ComponentsNch8AzSchemasPushinstallationlogAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "PushInstallationLog0Device"
        }
      }
    }
  }
};

export const PushInstallationLog0Device: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PushInstallationLog0Device",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1Aigpj3SchemasErrorlogAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1Aigpj3SchemasErrorlogAllof0",
    uberParent: "Components1Aigpj3SchemasErrorlogAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "ErrorLog0Device"
        }
      }
    }
  }
};

export const ErrorLog0Device: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorLog0Device",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AudienceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AudienceListResult",
    modelProperties: {
      values: {
        serializedName: "values",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AudienceListResultValuesItem"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AudienceListResultValuesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AudienceListResultValuesItem",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      estimatedCount: {
        serializedName: "estimated_count",
        type: {
          name: "Number"
        }
      },
      definition: {
        serializedName: "definition",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "Enum",
          allowedValues: ["Calculating", "Ready", "Disabled"]
        }
      }
    }
  }
};

export const AudienceSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AudienceSummary",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      estimatedCount: {
        serializedName: "estimated_count",
        type: {
          name: "Number"
        }
      },
      definition: {
        serializedName: "definition",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "Enum",
          allowedValues: ["Calculating", "Ready", "Disabled"]
        }
      }
    }
  }
};

export const Components46VdxoSchemasAudienceAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components46VdxoSchemasAudienceAllof0",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      estimatedCount: {
        serializedName: "estimated_count",
        type: {
          name: "Number"
        }
      },
      definition: {
        serializedName: "definition",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "Enum",
          allowedValues: ["Calculating", "Ready", "Disabled"]
        }
      }
    }
  }
};

export const AudienceTestResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AudienceTestResult",
    modelProperties: {
      definition: {
        serializedName: "definition",
        type: {
          name: "String"
        }
      },
      customProperties: {
        serializedName: "custom_properties",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Enum",
              allowedValues: ["string", "number", "boolean", "date_time"]
            }
          }
        }
      },
      estimatedCount: {
        serializedName: "estimated_count",
        type: {
          name: "Number"
        }
      },
      estimatedTotalCount: {
        serializedName: "estimated_total_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const TokenQueryResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TokenQueryResult",
    modelProperties: {
      tokens: {
        serializedName: "tokens",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AudienceDefinition: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AudienceDefinition",
    modelProperties: {
      description: {
        constraints: {
          MaxLength: 128
        },
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      definition: {
        constraints: {
          MaxLength: 2000
        },
        serializedName: "definition",
        required: true,
        type: {
          name: "String"
        }
      },
      enabled: {
        defaultValue: true,
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      customProperties: {
        serializedName: "custom_properties",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Enum",
              allowedValues: ["string", "number", "boolean", "date_time"]
            }
          }
        }
      }
    }
  }
};

export const AudienceQueryDefinition: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AudienceQueryDefinition",
    modelProperties: {
      queryType: {
        serializedName: "queryType",
        required: true,
        type: {
          name: "Enum",
          allowedValues: ["broadcast", "user_ids", "account_ids", "install_ids"]
        }
      },
      identifiers: {
        serializedName: "identifiers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AudienceBlobResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AudienceBlobResult",
    modelProperties: {
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AudienceDevicePropertiesListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AudienceDevicePropertiesListResult",
    modelProperties: {
      values: {
        serializedName: "values",
        required: true,
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Enum",
              allowedValues: ["string", "number", "boolean", "date_time"]
            }
          }
        }
      }
    }
  }
};

export const AudienceDevicePropertyValuesListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AudienceDevicePropertyValuesListResult",
    modelProperties: {
      values: {
        serializedName: "values",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const CrashCounts: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashCounts",
    modelProperties: {
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      crashes: {
        serializedName: "crashes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CrashCountsCrashesItem"
            }
          }
        }
      }
    }
  }
};

export const CrashCountsCrashesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashCountsCrashesItem",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ActiveDeviceCounts: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ActiveDeviceCounts",
    modelProperties: {
      daily: {
        serializedName: "daily",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ActiveDeviceCountsDailyItem"
            }
          }
        }
      },
      weekly: {
        serializedName: "weekly",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ActiveDeviceCountsWeeklyItem"
            }
          }
        }
      },
      monthly: {
        serializedName: "monthly",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ActiveDeviceCountsMonthlyItem"
            }
          }
        }
      }
    }
  }
};

export const ActiveDeviceCountsDailyItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ActiveDeviceCountsDailyItem",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ActiveDeviceCountsWeeklyItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ActiveDeviceCountsWeeklyItem",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ActiveDeviceCountsMonthlyItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ActiveDeviceCountsMonthlyItem",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Places: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Places",
    modelProperties: {
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      },
      places: {
        serializedName: "places",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PlacesItem"
            }
          }
        }
      }
    }
  }
};

export const PlacesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PlacesItem",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      previousCount: {
        serializedName: "previous_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Place: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Place",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      previousCount: {
        serializedName: "previous_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ErrorModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorModel",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorError"
        }
      }
    }
  }
};

export const ErrorError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SessionDurationsDistribution: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SessionDurationsDistribution",
    modelProperties: {
      distribution: {
        serializedName: "distribution",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SessionDurationsDistributionItem"
            }
          }
        }
      },
      previousAverageDuration: {
        serializedName: "previous_average_duration",
        type: {
          name: "String"
        }
      },
      averageDuration: {
        serializedName: "average_duration",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SessionDurationsDistributionItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SessionDurationsDistributionItem",
    modelProperties: {
      bucket: {
        serializedName: "bucket",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Versions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Versions",
    modelProperties: {
      versions: {
        serializedName: "versions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VersionsItem"
            }
          }
        }
      },
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const VersionsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VersionsItem",
    modelProperties: {
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      previousCount: {
        serializedName: "previous_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Version: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Version",
    modelProperties: {
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      previousCount: {
        serializedName: "previous_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const SessionCountsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SessionCountsItem",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const SessionsPerDevice: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SessionsPerDevice",
    modelProperties: {
      averageSessionsPerUser: {
        serializedName: "average_sessions_per_user",
        type: {
          name: "Number"
        }
      },
      previousAverageSessionsPerUser: {
        serializedName: "previous_average_sessions_per_user",
        type: {
          name: "Number"
        }
      },
      totalCount: {
        serializedName: "total_count",
        type: {
          name: "Number"
        }
      },
      previousTotalCount: {
        serializedName: "previous_total_count",
        type: {
          name: "Number"
        }
      },
      sessionsPerUser: {
        serializedName: "sessions_per_user",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SessionsPerDeviceSessionsPerUserItem"
            }
          }
        }
      }
    }
  }
};

export const SessionsPerDeviceSessionsPerUserItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SessionsPerDeviceSessionsPerUserItem",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AnalyticsModels: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AnalyticsModels",
    modelProperties: {
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      },
      models: {
        serializedName: "models",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AnalyticsModelsItem"
            }
          }
        }
      }
    }
  }
};

export const AnalyticsModelsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AnalyticsModelsItem",
    modelProperties: {
      modelName: {
        serializedName: "model_name",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      previousCount: {
        serializedName: "previous_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Model: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Model",
    modelProperties: {
      modelName: {
        serializedName: "model_name",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      previousCount: {
        serializedName: "previous_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Languages: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Languages",
    modelProperties: {
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      },
      languages: {
        serializedName: "languages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LanguagesItem"
            }
          }
        }
      }
    }
  }
};

export const LanguagesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LanguagesItem",
    modelProperties: {
      languageName: {
        serializedName: "language_name",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      previousCount: {
        serializedName: "previous_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Language: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Language",
    modelProperties: {
      languageName: {
        serializedName: "language_name",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      previousCount: {
        serializedName: "previous_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const OSes: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OSes",
    modelProperties: {
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      },
      oses: {
        serializedName: "oses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OSesOsesItem"
            }
          }
        }
      }
    }
  }
};

export const OSesOsesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OSesOsesItem",
    modelProperties: {
      osName: {
        serializedName: "os_name",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      previousCount: {
        serializedName: "previous_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Os: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Os",
    modelProperties: {
      osName: {
        serializedName: "os_name",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      previousCount: {
        serializedName: "previous_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DateTimeCounts: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DateTimeCounts",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DateTimeDecimalCounts: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DateTimeDecimalCounts",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AvailableVersions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvailableVersions",
    modelProperties: {
      versions: {
        serializedName: "versions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      totalCount: {
        serializedName: "total_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AvailableAppBuilds: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvailableAppBuilds",
    modelProperties: {
      appBuilds: {
        serializedName: "app_builds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const CrashFreeDevicePercentages: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashFreeDevicePercentages",
    modelProperties: {
      averagePercentage: {
        serializedName: "average_percentage",
        type: {
          name: "Number"
        }
      },
      dailyPercentages: {
        serializedName: "daily_percentages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CrashFreeDevicePercentagesDailyPercentagesItem"
            }
          }
        }
      }
    }
  }
};

export const CrashFreeDevicePercentagesDailyPercentagesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashFreeDevicePercentagesDailyPercentagesItem",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      percentage: {
        serializedName: "percentage",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Modules: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Modules",
    modelProperties: {
      modules: {
        serializedName: "modules",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "Boolean" } } }
          }
        }
      }
    }
  }
};

export const DateTimePercentages: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DateTimePercentages",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      percentage: {
        serializedName: "percentage",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CrashesOverallItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashesOverallItem",
    modelProperties: {
      crashGroupId: {
        serializedName: "crash_group_id",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        type: {
          name: "String"
        }
      },
      overall: {
        serializedName: "overall",
        type: {
          name: "Composite",
          className: "CrashesOverallItemOverall"
        }
      }
    }
  }
};

export const CrashesOverallItemOverall: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashesOverallItemOverall",
    modelProperties: {
      crashCount: {
        serializedName: "crash_count",
        type: {
          name: "Number"
        }
      },
      deviceCount: {
        serializedName: "device_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CrashOverall: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashOverall",
    modelProperties: {
      crashCount: {
        serializedName: "crash_count",
        type: {
          name: "Number"
        }
      },
      deviceCount: {
        serializedName: "device_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CrashGroupModels: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashGroupModels",
    modelProperties: {
      crashCount: {
        serializedName: "crash_count",
        type: {
          name: "Number"
        }
      },
      models: {
        serializedName: "models",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CrashGroupModelsItem"
            }
          }
        }
      }
    }
  }
};

export const CrashGroupModelsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashGroupModelsItem",
    modelProperties: {
      modelName: {
        serializedName: "model_name",
        type: {
          name: "String"
        }
      },
      crashCount: {
        serializedName: "crash_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CrashGroupModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashGroupModel",
    modelProperties: {
      modelName: {
        serializedName: "model_name",
        type: {
          name: "String"
        }
      },
      crashCount: {
        serializedName: "crash_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CrashGroupOperatingSystems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashGroupOperatingSystems",
    modelProperties: {
      crashCount: {
        serializedName: "crash_count",
        type: {
          name: "Number"
        }
      },
      operatingSystems: {
        serializedName: "operating_systems",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CrashGroupOperatingSystemsItem"
            }
          }
        }
      }
    }
  }
};

export const CrashGroupOperatingSystemsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashGroupOperatingSystemsItem",
    modelProperties: {
      operatingSystemName: {
        serializedName: "operating_system_name",
        type: {
          name: "String"
        }
      },
      crashCount: {
        serializedName: "crash_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CrashGroupOperatingSystem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashGroupOperatingSystem",
    modelProperties: {
      operatingSystemName: {
        serializedName: "operating_system_name",
        type: {
          name: "String"
        }
      },
      crashCount: {
        serializedName: "crash_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CrashGroupPlaces: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashGroupPlaces",
    modelProperties: {
      crashCount: {
        serializedName: "crash_count",
        type: {
          name: "Number"
        }
      },
      places: {
        serializedName: "places",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CrashGroupPlacesItem"
            }
          }
        }
      }
    }
  }
};

export const CrashGroupPlacesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashGroupPlacesItem",
    modelProperties: {
      placeName: {
        serializedName: "place_name",
        type: {
          name: "String"
        }
      },
      crashCount: {
        serializedName: "crash_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CrashGroupPlace: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashGroupPlace",
    modelProperties: {
      placeName: {
        serializedName: "place_name",
        type: {
          name: "String"
        }
      },
      crashCount: {
        serializedName: "crash_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CrashGroupLanguages: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashGroupLanguages",
    modelProperties: {
      crashCount: {
        serializedName: "crash_count",
        type: {
          name: "Number"
        }
      },
      languages: {
        serializedName: "languages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CrashGroupLanguagesItem"
            }
          }
        }
      }
    }
  }
};

export const CrashGroupLanguagesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashGroupLanguagesItem",
    modelProperties: {
      languageName: {
        serializedName: "language_name",
        type: {
          name: "String"
        }
      },
      crashCount: {
        serializedName: "crash_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CrashGroupLanguage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashGroupLanguage",
    modelProperties: {
      languageName: {
        serializedName: "language_name",
        type: {
          name: "String"
        }
      },
      crashCount: {
        serializedName: "crash_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CrashGroupCarriers: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashGroupCarriers",
    modelProperties: {
      crashCount: {
        serializedName: "crash_count",
        type: {
          name: "Number"
        }
      },
      carriers: {
        serializedName: "carriers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CrashGroupCarriersItem"
            }
          }
        }
      }
    }
  }
};

export const CrashGroupCarriersItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashGroupCarriersItem",
    modelProperties: {
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      crashCount: {
        serializedName: "crash_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CrashGroupCarrier: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashGroupCarrier",
    modelProperties: {
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      crashCount: {
        serializedName: "crash_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CrashGroupContainer: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashGroupContainer",
    modelProperties: {
      crashGroups: {
        constraints: {
          MinItems: 1
        },
        serializedName: "crash_groups",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CrashGroupContainerCrashGroupsItem"
            }
          }
        }
      }
    }
  }
};

export const CrashGroupContainerCrashGroupsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashGroupContainerCrashGroupsItem",
    modelProperties: {
      crashGroupId: {
        serializedName: "crash_group_id",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CrashGroupAndVersion: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrashGroupAndVersion",
    modelProperties: {
      crashGroupId: {
        serializedName: "crash_group_id",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Events: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Events",
    modelProperties: {
      events: {
        serializedName: "events",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EventsItem"
            }
          }
        }
      },
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      },
      totalDevices: {
        serializedName: "total_devices",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const EventsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EventsItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      deviceCount: {
        serializedName: "device_count",
        type: {
          name: "Number"
        }
      },
      previousDeviceCount: {
        serializedName: "previous_device_count",
        type: {
          name: "Number"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      previousCount: {
        serializedName: "previous_count",
        type: {
          name: "Number"
        }
      },
      countPerDevice: {
        serializedName: "count_per_device",
        type: {
          name: "Number"
        }
      },
      countPerSession: {
        serializedName: "count_per_session",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Event: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Event",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      deviceCount: {
        serializedName: "device_count",
        type: {
          name: "Number"
        }
      },
      previousDeviceCount: {
        serializedName: "previous_device_count",
        type: {
          name: "Number"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      previousCount: {
        serializedName: "previous_count",
        type: {
          name: "Number"
        }
      },
      countPerDevice: {
        serializedName: "count_per_device",
        type: {
          name: "Number"
        }
      },
      countPerSession: {
        serializedName: "count_per_session",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const EventCount: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EventCount",
    modelProperties: {
      totalCount: {
        serializedName: "total_count",
        type: {
          name: "Number"
        }
      },
      previousTotalCount: {
        serializedName: "previous_total_count",
        type: {
          name: "Number"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EventCountItem"
            }
          }
        }
      }
    }
  }
};

export const EventCountItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EventCountItem",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const EventDeviceCount: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EventDeviceCount",
    modelProperties: {
      totalDevices: {
        serializedName: "total_devices",
        type: {
          name: "Number"
        }
      },
      totalDevicesWithEvent: {
        serializedName: "total_devices_with_event",
        type: {
          name: "Number"
        }
      },
      previousTotalDevicesWithEvent: {
        serializedName: "previous_total_devices_with_event",
        type: {
          name: "Number"
        }
      },
      devicesCount: {
        serializedName: "devices_count",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EventDeviceCountDevicesCountItem"
            }
          }
        }
      }
    }
  }
};

export const EventDeviceCountDevicesCountItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EventDeviceCountDevicesCountItem",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const EventCountPerDevice: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EventCountPerDevice",
    modelProperties: {
      avgCountPerDevice: {
        serializedName: "avg_count_per_device",
        type: {
          name: "Number"
        }
      },
      previousAvgCountPerDevice: {
        serializedName: "previous_avg_count_per_device",
        type: {
          name: "Number"
        }
      },
      countPerDevice: {
        serializedName: "count_per_device",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EventCountPerDeviceCountPerDeviceItem"
            }
          }
        }
      }
    }
  }
};

export const EventCountPerDeviceCountPerDeviceItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EventCountPerDeviceCountPerDeviceItem",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const EventCountPerSession: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EventCountPerSession",
    modelProperties: {
      avgCountPerSession: {
        serializedName: "avg_count_per_session",
        type: {
          name: "Number"
        }
      },
      previousAvgCountPerSession: {
        serializedName: "previous_avg_count_per_session",
        type: {
          name: "Number"
        }
      },
      countPerSession: {
        serializedName: "count_per_session",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EventCountPerSessionCountPerSessionItem"
            }
          }
        }
      }
    }
  }
};

export const EventCountPerSessionCountPerSessionItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EventCountPerSessionCountPerSessionItem",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const EventProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EventProperties",
    modelProperties: {
      eventProperties: {
        serializedName: "event_properties",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const EventPropertyValues: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EventPropertyValues",
    modelProperties: {
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      },
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EventPropertyValuesItem"
            }
          }
        }
      }
    }
  }
};

export const EventPropertyValuesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EventPropertyValuesItem",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      previousCount: {
        serializedName: "previous_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const EventPropertyValue: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EventPropertyValue",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      previousCount: {
        serializedName: "previous_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const NotifyReleasesContainer: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NotifyReleasesContainer",
    modelProperties: {
      releases: {
        constraints: {
          MinItems: 1
        },
        serializedName: "releases",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NotifyReleasesContainerReleasesItem"
            }
          }
        }
      }
    }
  }
};

export const Components1Ynaqb8SchemasNotifyreleasescontainerPropertiesReleasesItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components1Ynaqb8SchemasNotifyreleasescontainerPropertiesReleasesItemsAllof0",
    modelProperties: {
      release: {
        serializedName: "release",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeleteReleasesContainer: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeleteReleasesContainer",
    modelProperties: {
      releases: {
        constraints: {
          MinItems: 1
        },
        serializedName: "releases",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DeleteReleasesContainerReleasesItem"
            }
          }
        }
      }
    }
  }
};

export const DeleteReleasesContainerReleasesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeleteReleasesContainerReleasesItem",
    modelProperties: {
      release: {
        serializedName: "release",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GetReleasesContainer: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetReleasesContainer",
    modelProperties: {
      releases: {
        constraints: {
          MinItems: 1
        },
        serializedName: "releases",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GetReleasesContainerReleasesItem"
            }
          }
        }
      }
    }
  }
};

export const ComponentsOqh4QzSchemasGetreleasescontainerPropertiesReleasesItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsOqh4QzSchemasGetreleasescontainerPropertiesReleasesItemsAllof0",
    modelProperties: {
      release: {
        serializedName: "release",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FilterReleasesContainer: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FilterReleasesContainer",
    modelProperties: {
      releases: {
        serializedName: "releases",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FilterReleasesContainerReleasesItem"
            }
          }
        }
      }
    }
  }
};

export const FilterReleasesContainerReleasesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FilterReleasesContainerReleasesItem",
    modelProperties: {
      release: {
        serializedName: "release",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FilterVersionsContainer: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FilterVersionsContainer",
    modelProperties: {
      versions: {
        serializedName: "versions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FilterVersionsContainerVersionsItem"
            }
          }
        }
      }
    }
  }
};

export const FilterVersionsContainerVersionsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FilterVersionsContainerVersionsItem",
    modelProperties: {
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "String"
        }
      },
      build: {
        serializedName: "build",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Release: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Release",
    modelProperties: {
      release: {
        serializedName: "release",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1Udh21GSchemasReleasewithdistributiongroupAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1Udh21GSchemasReleasewithdistributiongroupAllof0",
    modelProperties: {
      release: {
        serializedName: "release",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1Go150KSchemasReleasewithdistributiongroupanduseridAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components1Go150KSchemasReleasewithdistributiongroupanduseridAllof0",
    modelProperties: {
      release: {
        serializedName: "release",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReleaseCounts: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseCounts",
    modelProperties: {
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      },
      counts: {
        serializedName: "counts",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReleaseCountsItem"
            }
          }
        }
      }
    }
  }
};

export const ReleaseCountsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseCountsItem",
    modelProperties: {
      releaseId: {
        serializedName: "release_id",
        required: true,
        type: {
          name: "String"
        }
      },
      distributionGroup: {
        serializedName: "distribution_group",
        type: {
          name: "String"
        }
      },
      uniqueCount: {
        serializedName: "unique_count",
        required: true,
        type: {
          name: "Number"
        }
      },
      totalCount: {
        serializedName: "total_count",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ReleaseDailySessions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseDailySessions",
    modelProperties: {
      totalSessionCounts: {
        serializedName: "totalSessionCounts",
        type: {
          name: "Number"
        }
      },
      avgSessionsPerDay: {
        serializedName: "avgSessionsPerDay",
        type: {
          name: "Number"
        }
      },
      sessions: {
        serializedName: "sessions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReleaseDailySessionsItem"
            }
          }
        }
      }
    }
  }
};

export const ReleaseDailySessionsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseDailySessionsItem",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DailySession: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DailySession",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DateTimeDownloadReleaseCounts: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DateTimeDownloadReleaseCounts",
    modelProperties: {
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      },
      unique: {
        serializedName: "unique",
        type: {
          name: "Number"
        }
      },
      counts: {
        serializedName: "counts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DateTimeDownloadReleaseCountsItem"
            }
          }
        }
      }
    }
  }
};

export const DateTimeDownloadReleaseCountsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DateTimeDownloadReleaseCountsItem",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      },
      unique: {
        serializedName: "unique",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DateTimeDownloadReleaseCount: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DateTimeDownloadReleaseCount",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      },
      unique: {
        serializedName: "unique",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ReleaseCount: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseCount",
    modelProperties: {
      releaseId: {
        serializedName: "release_id",
        required: true,
        type: {
          name: "String"
        }
      },
      distributionGroup: {
        serializedName: "distribution_group",
        type: {
          name: "String"
        }
      },
      uniqueCount: {
        serializedName: "unique_count",
        required: true,
        type: {
          name: "Number"
        }
      },
      totalCount: {
        serializedName: "total_count",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const LogFlowLogContainer: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogFlowLogContainer",
    modelProperties: {
      exceededMaxLimit: {
        serializedName: "exceeded_max_limit",
        type: {
          name: "Boolean"
        }
      },
      lastReceivedLogTimestamp: {
        serializedName: "last_received_log_timestamp",
        type: {
          name: "DateTime"
        }
      },
      logs: {
        serializedName: "logs",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LogFlowLogContainerLogsItem"
            }
          }
        }
      }
    }
  }
};

export const LogFlowLogContainerLogsItem: coreClient.CompositeMapper = {
  serializedName: "LogFlowLogContainerLogsItem",
  type: {
    name: "Composite",
    className: "LogFlowLogContainerLogsItem",
    uberParent: "LogFlowLogContainerLogsItem",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "LogFlowLogContainerLogsItemDevice"
        }
      }
    }
  }
};

export const LogFlowLogContainerLogsItemDevice: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogFlowLogContainerLogsItemDevice",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LogFlowGenericLogContainer: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogFlowGenericLogContainer",
    modelProperties: {
      exceededMaxLimit: {
        serializedName: "exceeded_max_limit",
        type: {
          name: "Boolean"
        }
      },
      lastReceivedLogTimestamp: {
        serializedName: "last_received_log_timestamp",
        type: {
          name: "DateTime"
        }
      },
      logs: {
        serializedName: "logs",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LogFlowGenericLogContainerLogsItem"
            }
          }
        }
      }
    }
  }
};

export const LogFlowGenericLogContainerLogsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogFlowGenericLogContainerLogsItem",
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      sessionId: {
        serializedName: "session_id",
        type: {
          name: "Uuid"
        }
      },
      eventId: {
        serializedName: "event_id",
        type: {
          name: "String"
        }
      },
      eventName: {
        serializedName: "event_name",
        type: {
          name: "String"
        }
      },
      messageId: {
        serializedName: "message_id",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "LogFlowGenericLogContainerLogsItemDevice"
        }
      },
      authProvider: {
        serializedName: "auth_provider",
        type: {
          name: "String"
        }
      },
      accountId: {
        serializedName: "account_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LogFlowGenericLogContainerLogsItemDevice: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogFlowGenericLogContainerLogsItemDevice",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LogFlowGenericLog: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogFlowGenericLog",
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      sessionId: {
        serializedName: "session_id",
        type: {
          name: "Uuid"
        }
      },
      eventId: {
        serializedName: "event_id",
        type: {
          name: "String"
        }
      },
      eventName: {
        serializedName: "event_name",
        type: {
          name: "String"
        }
      },
      messageId: {
        serializedName: "message_id",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "LogFlowGenericLogDevice"
        }
      },
      authProvider: {
        serializedName: "auth_provider",
        type: {
          name: "String"
        }
      },
      accountId: {
        serializedName: "account_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LogFlowGenericLogDevice: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogFlowGenericLogDevice",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LogFlowLog: coreClient.CompositeMapper = {
  serializedName: "LogFlowLog",
  type: {
    name: "Composite",
    className: "LogFlowLog",
    uberParent: "LogFlowLog",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "LogFlowLogDevice"
        }
      }
    }
  }
};

export const LogFlowLogDevice: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogFlowLogDevice",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsAdvxd9SchemasLogflowlogwithpropertiesAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsAdvxd9SchemasLogflowlogwithpropertiesAllof0",
    uberParent: "ComponentsAdvxd9SchemasLogflowlogwithpropertiesAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "LogFlowLogWithProperties0Device"
        }
      }
    }
  }
};

export const LogFlowLogWithProperties0Device: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogFlowLogWithProperties0Device",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LogFlowDevice: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogFlowDevice",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1F0KdpnSchemasLogflowstartsessionlogAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1F0KdpnSchemasLogflowstartsessionlogAllof0",
    uberParent: "Components1F0KdpnSchemasLogflowstartsessionlogAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "LogFlowStartSessionLog0Device"
        }
      }
    }
  }
};

export const LogFlowStartSessionLog0Device: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogFlowStartSessionLog0Device",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components11CfsbmSchemasLogflowstartservicelogAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components11CfsbmSchemasLogflowstartservicelogAllof0",
    uberParent: "Components11CfsbmSchemasLogflowstartservicelogAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "LogFlowStartServiceLog0Device"
        }
      }
    }
  }
};

export const LogFlowStartServiceLog0Device: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogFlowStartServiceLog0Device",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LogFlowCustomPropertyLogPropertiesItem: coreClient.CompositeMapper = {
  serializedName: "LogFlowCustomPropertyLogPropertiesItem",
  type: {
    name: "Composite",
    className: "LogFlowCustomPropertyLogPropertiesItem",
    uberParent: "LogFlowCustomPropertyLogPropertiesItem",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        constraints: {
          Pattern: new RegExp("^[a-zA-Z][a-zA-Z0-9\\-_]*$"),
          MaxLength: 128
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsXnezrhSchemasLogflowcustompropertylogAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsXnezrhSchemasLogflowcustompropertylogAllof0",
    uberParent: "ComponentsXnezrhSchemasLogflowcustompropertylogAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "LogFlowCustomPropertyLog0Device"
        }
      }
    }
  }
};

export const LogFlowCustomPropertyLog0Device: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogFlowCustomPropertyLog0Device",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LogFlowCustomProperty: coreClient.CompositeMapper = {
  serializedName: "LogFlowCustomProperty",
  type: {
    name: "Composite",
    className: "LogFlowCustomProperty",
    uberParent: "LogFlowCustomProperty",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        constraints: {
          Pattern: new RegExp("^[a-zA-Z][a-zA-Z0-9\\-_]*$"),
          MaxLength: 128
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1G242RdSchemasLogflowstringpropertyAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1G242RdSchemasLogflowstringpropertyAllof0",
    uberParent: "Components1G242RdSchemasLogflowstringpropertyAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        constraints: {
          Pattern: new RegExp("^[a-zA-Z][a-zA-Z0-9\\-_]*$"),
          MaxLength: 128
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsTkf1YnSchemasLogflownumberpropertyAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsTkf1YnSchemasLogflownumberpropertyAllof0",
    uberParent: "ComponentsTkf1YnSchemasLogflownumberpropertyAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        constraints: {
          Pattern: new RegExp("^[a-zA-Z][a-zA-Z0-9\\-_]*$"),
          MaxLength: 128
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsCwosetSchemasLogflowbooleanpropertyAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsCwosetSchemasLogflowbooleanpropertyAllof0",
    uberParent: "ComponentsCwosetSchemasLogflowbooleanpropertyAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        constraints: {
          Pattern: new RegExp("^[a-zA-Z][a-zA-Z0-9\\-_]*$"),
          MaxLength: 128
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components127VkznSchemasLogflowdatetimepropertyAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components127VkznSchemasLogflowdatetimepropertyAllof0",
    uberParent: "Components127VkznSchemasLogflowdatetimepropertyAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        constraints: {
          Pattern: new RegExp("^[a-zA-Z][a-zA-Z0-9\\-_]*$"),
          MaxLength: 128
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LogFlowClearProperty: coreClient.CompositeMapper = {
  serializedName: "clear",
  type: {
    name: "Composite",
    className: "LogFlowClearProperty",
    uberParent: "LogFlowClearProperty",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        constraints: {
          Pattern: new RegExp("^[a-zA-Z][a-zA-Z0-9\\-_]*$"),
          MaxLength: 128
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components10Oj24WSchemasLogflowpagelogAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components10Oj24WSchemasLogflowpagelogAllof0",
    uberParent: "Components10Oj24WSchemasLogflowpagelogAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "LogFlowPageLog0Device"
        }
      }
    }
  }
};

export const LogFlowPageLog0Device: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogFlowPageLog0Device",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1Ctri9VSchemasLogfloweventlogAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1Ctri9VSchemasLogfloweventlogAllof0",
    uberParent: "Components1Ctri9VSchemasLogfloweventlogAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "LogFlowEventLog0Device"
        }
      }
    }
  }
};

export const LogFlowEventLog0Device: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogFlowEventLog0Device",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1Yqphd0SchemasLogflowpushinstallationlogAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1Yqphd0SchemasLogflowpushinstallationlogAllof0",
    uberParent: "Components1Yqphd0SchemasLogflowpushinstallationlogAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "LogFlowPushInstallationLog0Device"
        }
      }
    }
  }
};

export const LogFlowPushInstallationLog0Device: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogFlowPushInstallationLog0Device",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsPcles3SchemasLogflowerrorlogAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsPcles3SchemasLogflowerrorlogAllof0",
    uberParent: "ComponentsPcles3SchemasLogflowerrorlogAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "LogFlowErrorLog0Device"
        }
      }
    }
  }
};

export const LogFlowErrorLog0Device: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogFlowErrorLog0Device",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorGroups: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorGroups",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      errorGroups: {
        serializedName: "errorGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorGroupsItem"
            }
          }
        }
      }
    }
  }
};

export const ErrorGroupsAllOfPropertiesItemsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorGroupsAllOfPropertiesItemsItem",
    modelProperties: {
      className: {
        serializedName: "className",
        type: {
          name: "String"
        }
      },
      method: {
        serializedName: "method",
        type: {
          name: "String"
        }
      },
      classMethod: {
        serializedName: "classMethod",
        type: {
          name: "Boolean"
        }
      },
      file: {
        serializedName: "file",
        type: {
          name: "String"
        }
      },
      line: {
        serializedName: "line",
        type: {
          name: "Number"
        }
      },
      appCode: {
        serializedName: "appCode",
        type: {
          name: "Boolean"
        }
      },
      frameworkName: {
        serializedName: "frameworkName",
        type: {
          name: "String"
        }
      },
      codeFormatted: {
        serializedName: "codeFormatted",
        type: {
          name: "String"
        }
      },
      codeRaw: {
        serializedName: "codeRaw",
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      methodParams: {
        serializedName: "methodParams",
        type: {
          name: "String"
        }
      },
      exceptionType: {
        serializedName: "exceptionType",
        type: {
          name: "String"
        }
      },
      osExceptionType: {
        serializedName: "osExceptionType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components18G140XSchemasErrorgroupsPropertiesErrorgroupsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components18G140XSchemasErrorgroupsPropertiesErrorgroupsItemsAllof0",
    modelProperties: {
      state: {
        serializedName: "state",
        required: true,
        type: {
          name: "String"
        }
      },
      annotation: {
        serializedName: "annotation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorGroupsSearchResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorGroupsSearchResult",
    modelProperties: {
      hasMoreResults: {
        serializedName: "hasMoreResults",
        type: {
          name: "Boolean"
        }
      },
      errorGroups: {
        serializedName: "errorGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorGroupsSearchResultErrorGroupsItem"
            }
          }
        }
      }
    }
  }
};

export const ErrorGroupsSearchResultErrorGroupsAllOfPropertiesItemsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorGroupsSearchResultErrorGroupsAllOfPropertiesItemsItem",
    modelProperties: {
      className: {
        serializedName: "className",
        type: {
          name: "String"
        }
      },
      method: {
        serializedName: "method",
        type: {
          name: "String"
        }
      },
      classMethod: {
        serializedName: "classMethod",
        type: {
          name: "Boolean"
        }
      },
      file: {
        serializedName: "file",
        type: {
          name: "String"
        }
      },
      line: {
        serializedName: "line",
        type: {
          name: "Number"
        }
      },
      appCode: {
        serializedName: "appCode",
        type: {
          name: "Boolean"
        }
      },
      frameworkName: {
        serializedName: "frameworkName",
        type: {
          name: "String"
        }
      },
      codeFormatted: {
        serializedName: "codeFormatted",
        type: {
          name: "String"
        }
      },
      codeRaw: {
        serializedName: "codeRaw",
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      methodParams: {
        serializedName: "methodParams",
        type: {
          name: "String"
        }
      },
      exceptionType: {
        serializedName: "exceptionType",
        type: {
          name: "String"
        }
      },
      osExceptionType: {
        serializedName: "osExceptionType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1Bte8TvSchemasErrorgroupssearchresultPropertiesErrorgroupsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components1Bte8TvSchemasErrorgroupssearchresultPropertiesErrorgroupsItemsAllof0",
    modelProperties: {
      state: {
        serializedName: "state",
        required: true,
        type: {
          name: "String"
        }
      },
      annotation: {
        serializedName: "annotation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorCounts: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorCounts",
    modelProperties: {
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      errors: {
        serializedName: "errors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorCountsErrorsItem"
            }
          }
        }
      }
    }
  }
};

export const ErrorCountsErrorsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorCountsErrorsItem",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ErrorGroupListItem0ReasonFramesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorGroupListItem0ReasonFramesItem",
    modelProperties: {
      className: {
        serializedName: "className",
        type: {
          name: "String"
        }
      },
      method: {
        serializedName: "method",
        type: {
          name: "String"
        }
      },
      classMethod: {
        serializedName: "classMethod",
        type: {
          name: "Boolean"
        }
      },
      file: {
        serializedName: "file",
        type: {
          name: "String"
        }
      },
      line: {
        serializedName: "line",
        type: {
          name: "Number"
        }
      },
      appCode: {
        serializedName: "appCode",
        type: {
          name: "Boolean"
        }
      },
      frameworkName: {
        serializedName: "frameworkName",
        type: {
          name: "String"
        }
      },
      codeFormatted: {
        serializedName: "codeFormatted",
        type: {
          name: "String"
        }
      },
      codeRaw: {
        serializedName: "codeRaw",
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      methodParams: {
        serializedName: "methodParams",
        type: {
          name: "String"
        }
      },
      exceptionType: {
        serializedName: "exceptionType",
        type: {
          name: "String"
        }
      },
      osExceptionType: {
        serializedName: "osExceptionType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components12LbtiSchemasErrorgrouplistitemAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components12LbtiSchemasErrorgrouplistitemAllof0",
    modelProperties: {
      state: {
        serializedName: "state",
        required: true,
        type: {
          name: "String"
        }
      },
      annotation: {
        serializedName: "annotation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorGroupReasonFramesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorGroupReasonFramesItem",
    modelProperties: {
      className: {
        serializedName: "className",
        type: {
          name: "String"
        }
      },
      method: {
        serializedName: "method",
        type: {
          name: "String"
        }
      },
      classMethod: {
        serializedName: "classMethod",
        type: {
          name: "Boolean"
        }
      },
      file: {
        serializedName: "file",
        type: {
          name: "String"
        }
      },
      line: {
        serializedName: "line",
        type: {
          name: "Number"
        }
      },
      appCode: {
        serializedName: "appCode",
        type: {
          name: "Boolean"
        }
      },
      frameworkName: {
        serializedName: "frameworkName",
        type: {
          name: "String"
        }
      },
      codeFormatted: {
        serializedName: "codeFormatted",
        type: {
          name: "String"
        }
      },
      codeRaw: {
        serializedName: "codeRaw",
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      methodParams: {
        serializedName: "methodParams",
        type: {
          name: "String"
        }
      },
      exceptionType: {
        serializedName: "exceptionType",
        type: {
          name: "String"
        }
      },
      osExceptionType: {
        serializedName: "osExceptionType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsHbqu9KSchemasErrorgroupAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsHbqu9KSchemasErrorgroupAllof0",
    modelProperties: {
      state: {
        serializedName: "state",
        required: true,
        type: {
          name: "String"
        }
      },
      annotation: {
        serializedName: "annotation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorDateTimePercentages: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDateTimePercentages",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      percentage: {
        serializedName: "percentage",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ErrorDateTimeCounts: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDateTimeCounts",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ErrorGroupState: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorGroupState",
    modelProperties: {
      state: {
        serializedName: "state",
        required: true,
        type: {
          name: "String"
        }
      },
      annotation: {
        serializedName: "annotation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorDownloadLink: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDownloadLink",
    modelProperties: {
      link: {
        serializedName: "link",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiagnosticsStackFrame: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DiagnosticsStackFrame",
    modelProperties: {
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      className: {
        serializedName: "class_name",
        type: {
          name: "String"
        }
      },
      method: {
        serializedName: "method",
        type: {
          name: "String"
        }
      },
      classMethod: {
        serializedName: "class_method",
        type: {
          name: "Boolean"
        }
      },
      file: {
        serializedName: "file",
        type: {
          name: "String"
        }
      },
      line: {
        serializedName: "line",
        type: {
          name: "Number"
        }
      },
      appCode: {
        serializedName: "app_code",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      frameworkName: {
        serializedName: "framework_name",
        type: {
          name: "String"
        }
      },
      codeRaw: {
        serializedName: "code_raw",
        required: true,
        type: {
          name: "String"
        }
      },
      codeFormatted: {
        serializedName: "code_formatted",
        required: true,
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      relevant: {
        serializedName: "relevant",
        type: {
          name: "Boolean"
        }
      },
      methodParams: {
        serializedName: "method_params",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HandledErrorReasonFrame: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HandledErrorReasonFrame",
    modelProperties: {
      className: {
        serializedName: "className",
        type: {
          name: "String"
        }
      },
      method: {
        serializedName: "method",
        type: {
          name: "String"
        }
      },
      classMethod: {
        serializedName: "classMethod",
        type: {
          name: "Boolean"
        }
      },
      file: {
        serializedName: "file",
        type: {
          name: "String"
        }
      },
      line: {
        serializedName: "line",
        type: {
          name: "Number"
        }
      },
      appCode: {
        serializedName: "appCode",
        type: {
          name: "Boolean"
        }
      },
      frameworkName: {
        serializedName: "frameworkName",
        type: {
          name: "String"
        }
      },
      codeFormatted: {
        serializedName: "codeFormatted",
        type: {
          name: "String"
        }
      },
      codeRaw: {
        serializedName: "codeRaw",
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      methodParams: {
        serializedName: "methodParams",
        type: {
          name: "String"
        }
      },
      exceptionType: {
        serializedName: "exceptionType",
        type: {
          name: "String"
        }
      },
      osExceptionType: {
        serializedName: "osExceptionType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorFreeDevicePercentages: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorFreeDevicePercentages",
    modelProperties: {
      averagePercentage: {
        serializedName: "averagePercentage",
        type: {
          name: "Number"
        }
      },
      dailyPercentages: {
        serializedName: "dailyPercentages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorFreeDevicePercentagesDailyPercentagesItem"
            }
          }
        }
      }
    }
  }
};

export const ErrorFreeDevicePercentagesDailyPercentagesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorFreeDevicePercentagesDailyPercentagesItem",
    modelProperties: {
      datetime: {
        serializedName: "datetime",
        type: {
          name: "String"
        }
      },
      percentage: {
        serializedName: "percentage",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const HandledErrors: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HandledErrors",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      errors: {
        serializedName: "errors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HandledErrorsItem"
            }
          }
        }
      }
    }
  }
};

export const HandledErrorsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HandledErrorsItem",
    modelProperties: {
      errorId: {
        serializedName: "errorId",
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      deviceName: {
        serializedName: "deviceName",
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "osVersion",
        type: {
          name: "String"
        }
      },
      osType: {
        serializedName: "osType",
        type: {
          name: "String"
        }
      },
      country: {
        serializedName: "country",
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "userId",
        type: {
          name: "String"
        }
      },
      hasBreadcrumbs: {
        serializedName: "hasBreadcrumbs",
        type: {
          name: "Boolean"
        }
      },
      hasAttachments: {
        serializedName: "hasAttachments",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ErrorsSearchResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorsSearchResult",
    modelProperties: {
      hasMoreResults: {
        serializedName: "hasMoreResults",
        type: {
          name: "Boolean"
        }
      },
      errors: {
        serializedName: "errors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorsSearchResultErrorsItem"
            }
          }
        }
      }
    }
  }
};

export const ErrorsSearchResultErrorsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorsSearchResultErrorsItem",
    modelProperties: {
      errorId: {
        serializedName: "errorId",
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      deviceName: {
        serializedName: "deviceName",
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "osVersion",
        type: {
          name: "String"
        }
      },
      osType: {
        serializedName: "osType",
        type: {
          name: "String"
        }
      },
      country: {
        serializedName: "country",
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "userId",
        type: {
          name: "String"
        }
      },
      hasBreadcrumbs: {
        serializedName: "hasBreadcrumbs",
        type: {
          name: "Boolean"
        }
      },
      hasAttachments: {
        serializedName: "hasAttachments",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const HandledError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HandledError",
    modelProperties: {
      errorId: {
        serializedName: "errorId",
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      deviceName: {
        serializedName: "deviceName",
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "osVersion",
        type: {
          name: "String"
        }
      },
      osType: {
        serializedName: "osType",
        type: {
          name: "String"
        }
      },
      country: {
        serializedName: "country",
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "userId",
        type: {
          name: "String"
        }
      },
      hasBreadcrumbs: {
        serializedName: "hasBreadcrumbs",
        type: {
          name: "Boolean"
        }
      },
      hasAttachments: {
        serializedName: "hasAttachments",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const HandledErrorDetailsReasonFramesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HandledErrorDetailsReasonFramesItem",
    modelProperties: {
      className: {
        serializedName: "className",
        type: {
          name: "String"
        }
      },
      method: {
        serializedName: "method",
        type: {
          name: "String"
        }
      },
      classMethod: {
        serializedName: "classMethod",
        type: {
          name: "Boolean"
        }
      },
      file: {
        serializedName: "file",
        type: {
          name: "String"
        }
      },
      line: {
        serializedName: "line",
        type: {
          name: "Number"
        }
      },
      appCode: {
        serializedName: "appCode",
        type: {
          name: "Boolean"
        }
      },
      frameworkName: {
        serializedName: "frameworkName",
        type: {
          name: "String"
        }
      },
      codeFormatted: {
        serializedName: "codeFormatted",
        type: {
          name: "String"
        }
      },
      codeRaw: {
        serializedName: "codeRaw",
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      methodParams: {
        serializedName: "methodParams",
        type: {
          name: "String"
        }
      },
      exceptionType: {
        serializedName: "exceptionType",
        type: {
          name: "String"
        }
      },
      osExceptionType: {
        serializedName: "osExceptionType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components16C15OnSchemasHandlederrordetailsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components16C15OnSchemasHandlederrordetailsAllof0",
    modelProperties: {
      errorId: {
        serializedName: "errorId",
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      deviceName: {
        serializedName: "deviceName",
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "osVersion",
        type: {
          name: "String"
        }
      },
      osType: {
        serializedName: "osType",
        type: {
          name: "String"
        }
      },
      country: {
        serializedName: "country",
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "userId",
        type: {
          name: "String"
        }
      },
      hasBreadcrumbs: {
        serializedName: "hasBreadcrumbs",
        type: {
          name: "Boolean"
        }
      },
      hasAttachments: {
        serializedName: "hasAttachments",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ErrorDeleteCounter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDeleteCounter",
    modelProperties: {
      appId: {
        serializedName: "appId",
        type: {
          name: "String"
        }
      },
      errorGroupId: {
        serializedName: "errorGroupId",
        type: {
          name: "String"
        }
      },
      errorId: {
        serializedName: "errorId",
        type: {
          name: "String"
        }
      },
      errorsDeleted: {
        serializedName: "errorsDeleted",
        type: {
          name: "Number"
        }
      },
      attachmentsDeleted: {
        serializedName: "attachmentsDeleted",
        type: {
          name: "Number"
        }
      },
      blobsSucceeded: {
        serializedName: "blobsSucceeded",
        type: {
          name: "Number"
        }
      },
      blobsFailed: {
        serializedName: "blobsFailed",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ErrorLocation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorLocation",
    modelProperties: {
      uri: {
        serializedName: "uri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorAttachmentsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAttachmentsItem",
    modelProperties: {
      appId: {
        serializedName: "appId",
        type: {
          name: "String"
        }
      },
      attachmentId: {
        serializedName: "attachmentId",
        type: {
          name: "String"
        }
      },
      crashId: {
        serializedName: "crashId",
        type: {
          name: "String"
        }
      },
      blobLocation: {
        serializedName: "blobLocation",
        type: {
          name: "String"
        }
      },
      contentType: {
        serializedName: "contentType",
        type: {
          name: "String"
        }
      },
      fileName: {
        serializedName: "fileName",
        type: {
          name: "String"
        }
      },
      createdTime: {
        serializedName: "createdTime",
        type: {
          name: "DateTime"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ErrorAttachment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAttachment",
    modelProperties: {
      appId: {
        serializedName: "appId",
        type: {
          name: "String"
        }
      },
      attachmentId: {
        serializedName: "attachmentId",
        type: {
          name: "String"
        }
      },
      crashId: {
        serializedName: "crashId",
        type: {
          name: "String"
        }
      },
      blobLocation: {
        serializedName: "blobLocation",
        type: {
          name: "String"
        }
      },
      contentType: {
        serializedName: "contentType",
        type: {
          name: "String"
        }
      },
      fileName: {
        serializedName: "fileName",
        type: {
          name: "String"
        }
      },
      createdTime: {
        serializedName: "createdTime",
        type: {
          name: "DateTime"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ErrorAppBuilds: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAppBuilds",
    modelProperties: {
      appBuilds: {
        serializedName: "appBuilds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ErrorAttachmentText: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAttachmentText",
    modelProperties: {
      content: {
        serializedName: "content",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorAttachmentLocation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAttachmentLocation",
    modelProperties: {
      uri: {
        serializedName: "uri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorGroupModels: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorGroupModels",
    modelProperties: {
      errorCount: {
        serializedName: "errorCount",
        type: {
          name: "Number"
        }
      },
      models: {
        serializedName: "models",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorGroupModelsItem"
            }
          }
        }
      }
    }
  }
};

export const ErrorGroupModelsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorGroupModelsItem",
    modelProperties: {
      modelName: {
        serializedName: "modelName",
        type: {
          name: "String"
        }
      },
      modelCode: {
        serializedName: "modelCode",
        type: {
          name: "String"
        }
      },
      errorCount: {
        serializedName: "errorCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ErrorGroupModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorGroupModel",
    modelProperties: {
      modelName: {
        serializedName: "modelName",
        type: {
          name: "String"
        }
      },
      modelCode: {
        serializedName: "modelCode",
        type: {
          name: "String"
        }
      },
      errorCount: {
        serializedName: "errorCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ErrorGroupOperatingSystems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorGroupOperatingSystems",
    modelProperties: {
      errorCount: {
        serializedName: "errorCount",
        type: {
          name: "Number"
        }
      },
      operatingSystems: {
        serializedName: "operatingSystems",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorGroupOperatingSystemsItem"
            }
          }
        }
      }
    }
  }
};

export const ErrorGroupOperatingSystemsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorGroupOperatingSystemsItem",
    modelProperties: {
      operatingSystemName: {
        serializedName: "operatingSystemName",
        type: {
          name: "String"
        }
      },
      errorCount: {
        serializedName: "errorCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ErrorGroupOperatingSystem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorGroupOperatingSystem",
    modelProperties: {
      operatingSystemName: {
        serializedName: "operatingSystemName",
        type: {
          name: "String"
        }
      },
      errorCount: {
        serializedName: "errorCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const GenericLogContainerDiagnostics: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GenericLogContainerDiagnostics",
    modelProperties: {
      exceededMaxLimit: {
        serializedName: "exceeded_max_limit",
        type: {
          name: "Boolean"
        }
      },
      lastReceivedLogTimestamp: {
        serializedName: "last_received_log_timestamp",
        type: {
          name: "DateTime"
        }
      },
      logs: {
        serializedName: "logs",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GenericLogContainerDiagnosticsLogsItem"
            }
          }
        }
      }
    }
  }
};

export const GenericLogContainerDiagnosticsLogsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GenericLogContainerDiagnosticsLogsItem",
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      sessionId: {
        serializedName: "session_id",
        type: {
          name: "Uuid"
        }
      },
      eventId: {
        serializedName: "event_id",
        type: {
          name: "String"
        }
      },
      eventName: {
        serializedName: "event_name",
        type: {
          name: "String"
        }
      },
      messageId: {
        serializedName: "message_id",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "GenericLogContainerDiagnosticsLogsItemDevice"
        }
      }
    }
  }
};

export const GenericLogContainerDiagnosticsLogsItemDevice: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GenericLogContainerDiagnosticsLogsItemDevice",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GenericLogDiagnostics: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GenericLogDiagnostics",
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      sessionId: {
        serializedName: "session_id",
        type: {
          name: "Uuid"
        }
      },
      eventId: {
        serializedName: "event_id",
        type: {
          name: "String"
        }
      },
      eventName: {
        serializedName: "event_name",
        type: {
          name: "String"
        }
      },
      messageId: {
        serializedName: "message_id",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "GenericLogDiagnosticsDevice"
        }
      }
    }
  }
};

export const GenericLogDiagnosticsDevice: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GenericLogDiagnosticsDevice",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LogDiagnostics: coreClient.CompositeMapper = {
  serializedName: "LogDiagnostics",
  type: {
    name: "Composite",
    className: "LogDiagnostics",
    uberParent: "LogDiagnostics",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "LogDiagnosticsDevice"
        }
      }
    }
  }
};

export const LogDiagnosticsDevice: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogDiagnosticsDevice",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components45LjntSchemasLogwithpropertiesDiagnosticsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components45LjntSchemasLogwithpropertiesDiagnosticsAllof0",
    uberParent: "Components45LjntSchemasLogwithpropertiesDiagnosticsAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "LogWithPropertiesDiagnostics0Device"
        }
      }
    }
  }
};

export const LogWithPropertiesDiagnostics0Device: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogWithPropertiesDiagnostics0Device",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceDiagnostics: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceDiagnostics",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsZ650E9SchemasStartsessionlogDiagnosticsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsZ650E9SchemasStartsessionlogDiagnosticsAllof0",
    uberParent: "ComponentsZ650E9SchemasStartsessionlogDiagnosticsAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "StartSessionLogDiagnostics0Device"
        }
      }
    }
  }
};

export const StartSessionLogDiagnostics0Device: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StartSessionLogDiagnostics0Device",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsNa1EysSchemasHanlederrorlogDiagnosticsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsNa1EysSchemasHanlederrorlogDiagnosticsAllof0",
    uberParent: "ComponentsNa1EysSchemasHanlederrorlogDiagnosticsAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "HanledErrorLogDiagnostics0Device"
        }
      }
    }
  }
};

export const HanledErrorLogDiagnostics0Device: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HanledErrorLogDiagnostics0Device",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsL1Kfc1SchemasStartservicelogDiagnosticsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsL1Kfc1SchemasStartservicelogDiagnosticsAllof0",
    uberParent: "ComponentsL1Kfc1SchemasStartservicelogDiagnosticsAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "StartServiceLogDiagnostics0Device"
        }
      }
    }
  }
};

export const StartServiceLogDiagnostics0Device: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StartServiceLogDiagnostics0Device",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomPropertyLogDiagnosticsPropertiesItem: coreClient.CompositeMapper = {
  serializedName: "CustomPropertyLogDiagnosticsPropertiesItem",
  type: {
    name: "Composite",
    className: "CustomPropertyLogDiagnosticsPropertiesItem",
    uberParent: "CustomPropertyLogDiagnosticsPropertiesItem",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        constraints: {
          Pattern: new RegExp("^[a-zA-Z][a-zA-Z0-9\\-_]*$"),
          MaxLength: 128
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1XuemrlSchemasCustompropertylogDiagnosticsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1XuemrlSchemasCustompropertylogDiagnosticsAllof0",
    uberParent: "Components1XuemrlSchemasCustompropertylogDiagnosticsAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "CustomPropertyLogDiagnostics0Device"
        }
      }
    }
  }
};

export const CustomPropertyLogDiagnostics0Device: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomPropertyLogDiagnostics0Device",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomPropertyDiagnostics: coreClient.CompositeMapper = {
  serializedName: "CustomPropertyDiagnostics",
  type: {
    name: "Composite",
    className: "CustomPropertyDiagnostics",
    uberParent: "CustomPropertyDiagnostics",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        constraints: {
          Pattern: new RegExp("^[a-zA-Z][a-zA-Z0-9\\-_]*$"),
          MaxLength: 128
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1MplcxdSchemasStringpropertyDiagnosticsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1MplcxdSchemasStringpropertyDiagnosticsAllof0",
    uberParent: "Components1MplcxdSchemasStringpropertyDiagnosticsAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        constraints: {
          Pattern: new RegExp("^[a-zA-Z][a-zA-Z0-9\\-_]*$"),
          MaxLength: 128
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components15Tz3ErSchemasNumberpropertyDiagnosticsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components15Tz3ErSchemasNumberpropertyDiagnosticsAllof0",
    uberParent: "Components15Tz3ErSchemasNumberpropertyDiagnosticsAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        constraints: {
          Pattern: new RegExp("^[a-zA-Z][a-zA-Z0-9\\-_]*$"),
          MaxLength: 128
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1H9UedtSchemasBooleanpropertyDiagnosticsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1H9UedtSchemasBooleanpropertyDiagnosticsAllof0",
    uberParent: "Components1H9UedtSchemasBooleanpropertyDiagnosticsAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        constraints: {
          Pattern: new RegExp("^[a-zA-Z][a-zA-Z0-9\\-_]*$"),
          MaxLength: 128
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsYx2AaeSchemasDatetimepropertyDiagnosticsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsYx2AaeSchemasDatetimepropertyDiagnosticsAllof0",
    uberParent: "ComponentsYx2AaeSchemasDatetimepropertyDiagnosticsAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        constraints: {
          Pattern: new RegExp("^[a-zA-Z][a-zA-Z0-9\\-_]*$"),
          MaxLength: 128
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClearPropertyDiagnostics: coreClient.CompositeMapper = {
  serializedName: "clear",
  type: {
    name: "Composite",
    className: "ClearPropertyDiagnostics",
    uberParent: "ClearPropertyDiagnostics",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        constraints: {
          Pattern: new RegExp("^[a-zA-Z][a-zA-Z0-9\\-_]*$"),
          MaxLength: 128
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsEffwicSchemasPagelogDiagnosticsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsEffwicSchemasPagelogDiagnosticsAllof0",
    uberParent: "ComponentsEffwicSchemasPagelogDiagnosticsAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "PageLogDiagnostics0Device"
        }
      }
    }
  }
};

export const PageLogDiagnostics0Device: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PageLogDiagnostics0Device",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1Vmj2OdSchemasEventlogDiagnosticsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1Vmj2OdSchemasEventlogDiagnosticsAllof0",
    uberParent: "Components1Vmj2OdSchemasEventlogDiagnosticsAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "EventLogDiagnostics0Device"
        }
      }
    }
  }
};

export const EventLogDiagnostics0Device: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EventLogDiagnostics0Device",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1Pvlx64SchemasPushinstallationlogDiagnosticsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1Pvlx64SchemasPushinstallationlogDiagnosticsAllof0",
    uberParent: "Components1Pvlx64SchemasPushinstallationlogDiagnosticsAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "PushInstallationLogDiagnostics0Device"
        }
      }
    }
  }
};

export const PushInstallationLogDiagnostics0Device: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PushInstallationLogDiagnostics0Device",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1Nf3DuuSchemasErrorlogDiagnosticsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1Nf3DuuSchemasErrorlogDiagnosticsAllof0",
    uberParent: "Components1Nf3DuuSchemasErrorlogDiagnosticsAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      installId: {
        serializedName: "install_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      device: {
        serializedName: "device",
        type: {
          name: "Composite",
          className: "ErrorLogDiagnostics0Device"
        }
      }
    }
  }
};

export const ErrorLogDiagnostics0Device: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorLogDiagnostics0Device",
    modelProperties: {
      sdkName: {
        serializedName: "sdk_name",
        required: true,
        type: {
          name: "String"
        }
      },
      sdkVersion: {
        serializedName: "sdk_version",
        required: true,
        type: {
          name: "String"
        }
      },
      wrapperSdkVersion: {
        serializedName: "wrapper_sdk_version",
        type: {
          name: "String"
        }
      },
      wrapperSdkName: {
        serializedName: "wrapper_sdk_name",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      oemName: {
        serializedName: "oem_name",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "os_name",
        required: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "os_version",
        required: true,
        type: {
          name: "String"
        }
      },
      osBuild: {
        serializedName: "os_build",
        type: {
          name: "String"
        }
      },
      osApiLevel: {
        serializedName: "os_api_level",
        type: {
          name: "Number"
        }
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String"
        }
      },
      timeZoneOffset: {
        constraints: {
          InclusiveMaximum: 840,
          InclusiveMinimum: -840
        },
        serializedName: "time_zone_offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      screenSize: {
        serializedName: "screen_size",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      carrierName: {
        serializedName: "carrier_name",
        type: {
          name: "String"
        }
      },
      carrierCode: {
        serializedName: "carrier_code",
        type: {
          name: "String"
        }
      },
      carrierCountry: {
        serializedName: "carrier_country",
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "app_build",
        required: true,
        type: {
          name: "String"
        }
      },
      appNamespace: {
        serializedName: "app_namespace",
        type: {
          name: "String"
        }
      },
      liveUpdateReleaseLabel: {
        serializedName: "live_update_release_label",
        type: {
          name: "String"
        }
      },
      liveUpdateDeploymentKey: {
        serializedName: "live_update_deployment_key",
        type: {
          name: "String"
        }
      },
      liveUpdatePackageHash: {
        serializedName: "live_update_package_hash",
        type: {
          name: "String"
        }
      },
      wrapperRuntimeVersion: {
        serializedName: "wrapper_runtime_version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VersionsDiagnostics: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VersionsDiagnostics",
    modelProperties: {
      versions: {
        serializedName: "versions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VersionsDiagnosticsVersionsItem"
            }
          }
        }
      },
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const VersionsDiagnosticsVersionsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VersionsDiagnosticsVersionsItem",
    modelProperties: {
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      previousCount: {
        serializedName: "previous_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const VersionDiagnostics: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VersionDiagnostics",
    modelProperties: {
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      previousCount: {
        serializedName: "previous_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AvailableVersionsDiagnostics: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvailableVersionsDiagnostics",
    modelProperties: {
      versions: {
        serializedName: "versions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      totalCount: {
        serializedName: "total_count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ErrorRetentionSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorRetentionSettings",
    modelProperties: {
      retentionInDays: {
        serializedName: "retention_in_days",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ExportConfiguration: coreClient.CompositeMapper = {
  serializedName: "ExportConfiguration",
  type: {
    name: "Composite",
    className: "ExportConfiguration",
    uberParent: "ExportConfiguration",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      exportEntities: {
        serializedName: "export_entities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["crashes", "errors", "attachments", "no_logs"]
            }
          }
        }
      },
      resourceName: {
        serializedName: "resource_name",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resource_group",
        type: {
          name: "String"
        }
      },
      backfill: {
        serializedName: "backfill",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Components130AlsfSchemasExportblobconfigurationAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components130AlsfSchemasExportblobconfigurationAllof0",
    uberParent: "Components130AlsfSchemasExportblobconfigurationAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      exportEntities: {
        serializedName: "export_entities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["crashes", "errors", "attachments", "no_logs"]
            }
          }
        }
      },
      resourceName: {
        serializedName: "resource_name",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resource_group",
        type: {
          name: "String"
        }
      },
      backfill: {
        serializedName: "backfill",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ComponentsQ5DjesSchemasExportconfigurationblobstorageconnectionstringAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsQ5DjesSchemasExportconfigurationblobstorageconnectionstringAllof0",
    uberParent:
      "ComponentsQ5DjesSchemasExportconfigurationblobstorageconnectionstringAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      exportEntities: {
        serializedName: "export_entities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["crashes", "errors", "attachments", "no_logs"]
            }
          }
        }
      },
      resourceName: {
        serializedName: "resource_name",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resource_group",
        type: {
          name: "String"
        }
      },
      backfill: {
        serializedName: "backfill",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Components125ZssSchemasExportconfigurationappinsightskeyAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components125ZssSchemasExportconfigurationappinsightskeyAllof0",
    uberParent:
      "Components125ZssSchemasExportconfigurationappinsightskeyAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      exportEntities: {
        serializedName: "export_entities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["crashes", "errors", "attachments", "no_logs"]
            }
          }
        }
      },
      resourceName: {
        serializedName: "resource_name",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resource_group",
        type: {
          name: "String"
        }
      },
      backfill: {
        serializedName: "backfill",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Components4JcwkhSchemasExportconfigurationblobstoragelinkedsubscriptionAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components4JcwkhSchemasExportconfigurationblobstoragelinkedsubscriptionAllof0",
    uberParent:
      "Components4JcwkhSchemasExportconfigurationblobstoragelinkedsubscriptionAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      exportEntities: {
        serializedName: "export_entities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["crashes", "errors", "attachments", "no_logs"]
            }
          }
        }
      },
      resourceName: {
        serializedName: "resource_name",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resource_group",
        type: {
          name: "String"
        }
      },
      backfill: {
        serializedName: "backfill",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Components1Jvk04KSchemasExportconfigurationappinsightslinkedsubscriptionAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components1Jvk04KSchemasExportconfigurationappinsightslinkedsubscriptionAllof0",
    uberParent:
      "Components1Jvk04KSchemasExportconfigurationappinsightslinkedsubscriptionAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      exportEntities: {
        serializedName: "export_entities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["crashes", "errors", "attachments", "no_logs"]
            }
          }
        }
      },
      resourceName: {
        serializedName: "resource_name",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resource_group",
        type: {
          name: "String"
        }
      },
      backfill: {
        serializedName: "backfill",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ExportConfigurationResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExportConfigurationResult",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      exportType: {
        serializedName: "export_type",
        required: true,
        type: {
          name: "Enum",
          allowedValues: ["BlobStorage", "AppInsights"]
        }
      },
      creationTime: {
        serializedName: "creation_time",
        required: true,
        type: {
          name: "String"
        }
      },
      lastRunTime: {
        serializedName: "last_run_time",
        type: {
          name: "String"
        }
      },
      exportEntities: {
        serializedName: "export_entities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["crashes", "errors", "attachments", "no_logs"]
            }
          }
        }
      },
      state: {
        serializedName: "state",
        required: true,
        type: {
          name: "Enum",
          allowedValues: [
            "Enabled",
            "Disabled",
            "Pending",
            "Deleted",
            "Invalid"
          ]
        }
      },
      stateInfo: {
        serializedName: "state_info",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resource_group",
        type: {
          name: "String"
        }
      },
      resourceName: {
        serializedName: "resource_name",
        type: {
          name: "String"
        }
      },
      exportConfiguration: {
        serializedName: "export_configuration",
        type: {
          name: "Composite",
          className: "ExportConfigurationResultExportConfiguration"
        }
      }
    }
  }
};

export const ExportConfigurationResultExportConfiguration: coreClient.CompositeMapper = {
  serializedName: "ExportConfigurationResultExportConfiguration",
  type: {
    name: "Composite",
    className: "ExportConfigurationResultExportConfiguration",
    uberParent: "ExportConfigurationResultExportConfiguration",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      exportEntities: {
        serializedName: "export_entities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["crashes", "errors", "attachments", "no_logs"]
            }
          }
        }
      },
      resourceName: {
        serializedName: "resource_name",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resource_group",
        type: {
          name: "String"
        }
      },
      backfill: {
        serializedName: "backfill",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ExportConfigurationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExportConfigurationListResult",
    modelProperties: {
      values: {
        serializedName: "values",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ExportConfigurationListResultValuesItem"
            }
          }
        }
      },
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExportConfigurationListResultValuesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExportConfigurationListResultValuesItem",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      exportType: {
        serializedName: "export_type",
        required: true,
        type: {
          name: "Enum",
          allowedValues: ["BlobStorage", "AppInsights"]
        }
      },
      creationTime: {
        serializedName: "creation_time",
        required: true,
        type: {
          name: "String"
        }
      },
      lastRunTime: {
        serializedName: "last_run_time",
        type: {
          name: "String"
        }
      },
      exportEntities: {
        serializedName: "export_entities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["crashes", "errors", "attachments", "no_logs"]
            }
          }
        }
      },
      state: {
        serializedName: "state",
        required: true,
        type: {
          name: "Enum",
          allowedValues: [
            "Enabled",
            "Disabled",
            "Pending",
            "Deleted",
            "Invalid"
          ]
        }
      },
      stateInfo: {
        serializedName: "state_info",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resource_group",
        type: {
          name: "String"
        }
      },
      resourceName: {
        serializedName: "resource_name",
        type: {
          name: "String"
        }
      },
      exportConfiguration: {
        serializedName: "export_configuration",
        type: {
          name: "Composite",
          className:
            "ExportConfigurationListResultValuesItemExportConfiguration"
        }
      }
    }
  }
};

export const ExportConfigurationListResultValuesItemExportConfiguration: coreClient.CompositeMapper = {
  serializedName: "ExportConfigurationListResultValuesItemExportConfiguration",
  type: {
    name: "Composite",
    className: "ExportConfigurationListResultValuesItemExportConfiguration",
    uberParent: "ExportConfigurationListResultValuesItemExportConfiguration",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      exportEntities: {
        serializedName: "export_entities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["crashes", "errors", "attachments", "no_logs"]
            }
          }
        }
      },
      resourceName: {
        serializedName: "resource_name",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resource_group",
        type: {
          name: "String"
        }
      },
      backfill: {
        serializedName: "backfill",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const NotificationsListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NotificationsListResult",
    modelProperties: {
      values: {
        serializedName: "values",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NotificationsListResultValuesItem"
            }
          }
        }
      },
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NotificationsListResultValuesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NotificationsListResultValuesItem",
    modelProperties: {
      notificationId: {
        serializedName: "notification_id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        constraints: {
          MaxLength: 64
        },
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      notificationTarget: {
        serializedName: "notification_target",
        type: {
          name: "Composite",
          className: "NotificationsListResultValuesItemNotificationTarget"
        }
      },
      sendTime: {
        serializedName: "send_time",
        type: {
          name: "DateTime"
        }
      },
      pnsSendFailure: {
        serializedName: "pns_send_failure",
        type: {
          name: "Number"
        }
      },
      pnsSendSuccess: {
        serializedName: "pns_send_success",
        type: {
          name: "Number"
        }
      },
      state: {
        serializedName: "state",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NotificationsListResultValuesItemNotificationTarget: coreClient.CompositeMapper = {
  serializedName: "NotificationsListResultValuesItemNotificationTarget",
  type: {
    name: "Composite",
    className: "NotificationsListResultValuesItemNotificationTarget",
    uberParent: "NotificationsListResultValuesItemNotificationTarget",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NotificationOverviewResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NotificationOverviewResult",
    modelProperties: {
      notificationId: {
        serializedName: "notification_id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        constraints: {
          MaxLength: 64
        },
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      notificationTarget: {
        serializedName: "notification_target",
        type: {
          name: "Composite",
          className: "NotificationOverviewResultNotificationTarget"
        }
      },
      sendTime: {
        serializedName: "send_time",
        type: {
          name: "DateTime"
        }
      },
      pnsSendFailure: {
        serializedName: "pns_send_failure",
        type: {
          name: "Number"
        }
      },
      pnsSendSuccess: {
        serializedName: "pns_send_success",
        type: {
          name: "Number"
        }
      },
      state: {
        serializedName: "state",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NotificationOverviewResultNotificationTarget: coreClient.CompositeMapper = {
  serializedName: "NotificationOverviewResultNotificationTarget",
  type: {
    name: "Composite",
    className: "NotificationOverviewResultNotificationTarget",
    uberParent: "NotificationOverviewResultNotificationTarget",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NotificationDetailsResultNotificationContent: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NotificationDetailsResultNotificationContent",
    modelProperties: {
      name: {
        constraints: {
          MaxLength: 64,
          MinLength: 3
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      title: {
        constraints: {
          MaxLength: 128
        },
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      body: {
        constraints: {
          MaxLength: 4000,
          MinLength: 1
        },
        serializedName: "body",
        type: {
          name: "String"
        }
      },
      customData: {
        serializedName: "custom_data",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const NotificationDetailsResultFailureOutcomesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NotificationDetailsResultFailureOutcomesItem",
    modelProperties: {
      failureReason: {
        serializedName: "failure_reason",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ComponentsZqakt2SchemasNotificationdetailsresultAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsZqakt2SchemasNotificationdetailsresultAllof0",
    modelProperties: {
      notificationId: {
        serializedName: "notification_id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        constraints: {
          MaxLength: 64
        },
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      notificationTarget: {
        serializedName: "notification_target",
        type: {
          name: "Composite",
          className: "NotificationDetailsResult0NotificationTarget"
        }
      },
      sendTime: {
        serializedName: "send_time",
        type: {
          name: "DateTime"
        }
      },
      pnsSendFailure: {
        serializedName: "pns_send_failure",
        type: {
          name: "Number"
        }
      },
      pnsSendSuccess: {
        serializedName: "pns_send_success",
        type: {
          name: "Number"
        }
      },
      state: {
        serializedName: "state",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NotificationDetailsResult0NotificationTarget: coreClient.CompositeMapper = {
  serializedName: "NotificationDetailsResult0NotificationTarget",
  type: {
    name: "Composite",
    className: "NotificationDetailsResult0NotificationTarget",
    uberParent: "NotificationDetailsResult0NotificationTarget",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NotificationIdList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NotificationIdList",
    modelProperties: {
      values: {
        serializedName: "values",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const NotificationDefinition: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NotificationDefinition",
    modelProperties: {
      notificationTarget: {
        serializedName: "notification_target",
        type: {
          name: "Composite",
          className: "NotificationDefinitionNotificationTarget"
        }
      },
      notificationContent: {
        serializedName: "notification_content",
        type: {
          name: "Composite",
          className: "NotificationDefinitionNotificationContent"
        }
      }
    }
  }
};

export const NotificationDefinitionNotificationTarget: coreClient.CompositeMapper = {
  serializedName: "NotificationDefinitionNotificationTarget",
  type: {
    name: "Composite",
    className: "NotificationDefinitionNotificationTarget",
    uberParent: "NotificationDefinitionNotificationTarget",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NotificationDefinitionNotificationContent: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NotificationDefinitionNotificationContent",
    modelProperties: {
      name: {
        constraints: {
          MaxLength: 64,
          MinLength: 3
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      title: {
        constraints: {
          MaxLength: 128
        },
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      body: {
        constraints: {
          MaxLength: 4000,
          MinLength: 1
        },
        serializedName: "body",
        type: {
          name: "String"
        }
      },
      customData: {
        serializedName: "custom_data",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const NotificationContent: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NotificationContent",
    modelProperties: {
      name: {
        constraints: {
          MaxLength: 64,
          MinLength: 3
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      title: {
        constraints: {
          MaxLength: 128
        },
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      body: {
        constraints: {
          MaxLength: 4000,
          MinLength: 1
        },
        serializedName: "body",
        type: {
          name: "String"
        }
      },
      customData: {
        serializedName: "custom_data",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const NotificationSendSucceededResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NotificationSendSucceededResult",
    modelProperties: {
      notificationId: {
        serializedName: "notification_id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NotificationTarget: coreClient.CompositeMapper = {
  serializedName: "NotificationTarget",
  type: {
    name: "Composite",
    className: "NotificationTarget",
    uberParent: "NotificationTarget",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NotificationTargetBroadcast: coreClient.CompositeMapper = {
  serializedName: "broadcast_target",
  type: {
    name: "Composite",
    className: "NotificationTargetBroadcast",
    uberParent: "NotificationTargetBroadcast",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1KhyfnaSchemasNotificationtargetuseridsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1KhyfnaSchemasNotificationtargetuseridsAllof0",
    uberParent: "Components1KhyfnaSchemasNotificationtargetuseridsAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components19Nr381SchemasNotificationtargetaccountidsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components19Nr381SchemasNotificationtargetaccountidsAllof0",
    uberParent: "Components19Nr381SchemasNotificationtargetaccountidsAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components17Ef5OgSchemasNotificationtargetaudiencesAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components17Ef5OgSchemasNotificationtargetaudiencesAllof0",
    uberParent: "Components17Ef5OgSchemasNotificationtargetaudiencesAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components2Yio13SchemasNotificationtargetdevicesAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components2Yio13SchemasNotificationtargetdevicesAllof0",
    uberParent: "Components2Yio13SchemasNotificationtargetdevicesAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NotificationConfig: coreClient.CompositeMapper = {
  serializedName: "NotificationConfig",
  type: {
    name: "Composite",
    className: "NotificationConfig",
    uberParent: "NotificationConfig",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1Ozxbv2SchemasNotificationconfigappleAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1Ozxbv2SchemasNotificationconfigappleAllof0",
    uberParent: "Components1Ozxbv2SchemasNotificationconfigappleAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1PpfareSchemasNotificationconfigappletokenAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1PpfareSchemasNotificationconfigappletokenAllof0",
    uberParent: "Components1PpfareSchemasNotificationconfigappletokenAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsQ2Qee2SchemasNotificationconfiggoogleAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsQ2Qee2SchemasNotificationconfiggoogleAllof0",
    uberParent: "ComponentsQ2Qee2SchemasNotificationconfiggoogleAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsA3A5NfSchemasNotificationconfigwindowsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsA3A5NfSchemasNotificationconfigwindowsAllof0",
    uberParent: "ComponentsA3A5NfSchemasNotificationconfigwindowsAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NotificationConfigResult: coreClient.CompositeMapper = {
  serializedName: "NotificationConfigResult",
  type: {
    name: "Composite",
    className: "NotificationConfigResult",
    uberParent: "NotificationConfigResult",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsF4F1P6SchemasNotificationconfigappleresultAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsF4F1P6SchemasNotificationconfigappleresultAllof0",
    uberParent: "ComponentsF4F1P6SchemasNotificationconfigappleresultAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1Cl3FgbSchemasNotificationconfigappletokenresultAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components1Cl3FgbSchemasNotificationconfigappletokenresultAllof0",
    uberParent:
      "Components1Cl3FgbSchemasNotificationconfigappletokenresultAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1L6Ua1RSchemasNotificationconfiggoogleresultAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1L6Ua1RSchemasNotificationconfiggoogleresultAllof0",
    uberParent: "Components1L6Ua1RSchemasNotificationconfiggoogleresultAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1Rkqr84SchemasNotificationconfigwindowsresultAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1Rkqr84SchemasNotificationconfigwindowsresultAllof0",
    uberParent: "Components1Rkqr84SchemasNotificationconfigwindowsresultAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NotificationFailureOutcomeCount: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NotificationFailureOutcomeCount",
    modelProperties: {
      failureReason: {
        serializedName: "failure_reason",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ExportConfig: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExportConfig",
    modelProperties: {
      blobContainerSasUri: {
        serializedName: "blob_container_sas_uri",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExportStartedResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExportStartedResult",
    modelProperties: {
      exportId: {
        serializedName: "export_id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExportStatusResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExportStatusResult",
    modelProperties: {
      exportId: {
        serializedName: "export_id",
        required: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "Enum",
          allowedValues: ["InProgress", "Completed", "Failed"]
        }
      }
    }
  }
};

export const AppId: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppId",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceConfiguration",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      tier: {
        serializedName: "tier",
        type: {
          name: "Number"
        }
      },
      image: {
        serializedName: "image",
        type: {
          name: "Composite",
          className: "DeviceConfigurationImage"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "Composite",
          className: "DeviceConfigurationModel"
        }
      },
      os: {
        serializedName: "os",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "osName",
        type: {
          name: "String"
        }
      },
      marketShare: {
        serializedName: "marketShare",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DeviceConfigurationImage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceConfigurationImage",
    modelProperties: {
      full: {
        serializedName: "full",
        type: {
          name: "String"
        }
      },
      thumb: {
        serializedName: "thumb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceConfigurationModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceConfigurationModel",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      manufacturer: {
        serializedName: "manufacturer",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      dimensions: {
        serializedName: "dimensions",
        type: {
          name: "Composite",
          className: "DeviceConfigurationModelDimensions"
        }
      },
      resolution: {
        serializedName: "resolution",
        type: {
          name: "Composite",
          className: "DeviceConfigurationModelResolution"
        }
      },
      releaseDate: {
        serializedName: "releaseDate",
        type: {
          name: "String"
        }
      },
      formFactor: {
        serializedName: "formFactor",
        type: {
          name: "String"
        }
      },
      screenSize: {
        serializedName: "screenSize",
        type: {
          name: "Composite",
          className: "DeviceConfigurationModelScreenSize"
        }
      },
      cpu: {
        serializedName: "cpu",
        type: {
          name: "Composite",
          className: "DeviceConfigurationModelCpu"
        }
      },
      memory: {
        serializedName: "memory",
        type: {
          name: "Composite",
          className: "DeviceConfigurationModelMemory"
        }
      },
      screenRotation: {
        serializedName: "screenRotation",
        type: {
          name: "Number"
        }
      },
      deviceFrame: {
        serializedName: "deviceFrame",
        type: {
          name: "Composite",
          className: "DeviceConfigurationModelDeviceFrame"
        }
      },
      availabilityCount: {
        serializedName: "availabilityCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DeviceConfigurationModelDimensions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceConfigurationModelDimensions",
    modelProperties: {
      depth: {
        serializedName: "depth",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      height: {
        serializedName: "height",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      width: {
        serializedName: "width",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const DeviceConfigurationModelResolution: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceConfigurationModelResolution",
    modelProperties: {
      height: {
        serializedName: "height",
        type: {
          name: "String"
        }
      },
      width: {
        serializedName: "width",
        type: {
          name: "String"
        }
      },
      ppi: {
        serializedName: "ppi",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceConfigurationModelScreenSize: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceConfigurationModelScreenSize",
    modelProperties: {
      cm: {
        serializedName: "cm",
        type: {
          name: "String"
        }
      },
      in: {
        serializedName: "in",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceConfigurationModelCpu: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceConfigurationModelCpu",
    modelProperties: {
      frequency: {
        serializedName: "frequency",
        type: {
          name: "String"
        }
      },
      core: {
        serializedName: "core",
        type: {
          name: "String"
        }
      },
      text: {
        serializedName: "text",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceConfigurationModelMemory: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceConfigurationModelMemory",
    modelProperties: {
      formattedSize: {
        serializedName: "formattedSize",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceConfigurationModelDeviceFrame: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceConfigurationModelDeviceFrame",
    modelProperties: {
      grid: {
        serializedName: "grid",
        type: {
          name: "Composite",
          className: "DeviceConfigurationModelDeviceFrameGrid"
        }
      },
      full: {
        serializedName: "full",
        type: {
          name: "Composite",
          className: "DeviceConfigurationModelDeviceFrameFull"
        }
      }
    }
  }
};

export const DeviceConfigurationModelDeviceFrameGrid: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceConfigurationModelDeviceFrameGrid",
    modelProperties: {
      width: {
        serializedName: "width",
        type: {
          name: "Number"
        }
      },
      height: {
        serializedName: "height",
        type: {
          name: "Number"
        }
      },
      frameUrl: {
        serializedName: "frameUrl",
        type: {
          name: "String"
        }
      },
      screen: {
        serializedName: "screen",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      }
    }
  }
};

export const DeviceConfigurationModelDeviceFrameFull: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceConfigurationModelDeviceFrameFull",
    modelProperties: {
      width: {
        serializedName: "width",
        type: {
          name: "Number"
        }
      },
      height: {
        serializedName: "height",
        type: {
          name: "Number"
        }
      },
      frameUrl: {
        serializedName: "frameUrl",
        type: {
          name: "String"
        }
      },
      screen: {
        serializedName: "screen",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      }
    }
  }
};

export const DeviceSetConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceSetConfiguration",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      image: {
        serializedName: "image",
        type: {
          name: "Composite",
          className: "DeviceSetConfigurationImage"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "Composite",
          className: "DeviceSetConfigurationModel"
        }
      },
      os: {
        serializedName: "os",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "osName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceSetConfigurationImage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceSetConfigurationImage",
    modelProperties: {
      thumb: {
        serializedName: "thumb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceSetConfigurationModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceSetConfigurationModel",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      manufacturer: {
        serializedName: "manufacturer",
        type: {
          name: "String"
        }
      },
      releaseDate: {
        serializedName: "releaseDate",
        type: {
          name: "String"
        }
      },
      formFactor: {
        serializedName: "formFactor",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceModel",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      manufacturer: {
        serializedName: "manufacturer",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      dimensions: {
        serializedName: "dimensions",
        type: {
          name: "Composite",
          className: "DeviceModelDimensions"
        }
      },
      resolution: {
        serializedName: "resolution",
        type: {
          name: "Composite",
          className: "DeviceModelResolution"
        }
      },
      releaseDate: {
        serializedName: "releaseDate",
        type: {
          name: "String"
        }
      },
      formFactor: {
        serializedName: "formFactor",
        type: {
          name: "String"
        }
      },
      screenSize: {
        serializedName: "screenSize",
        type: {
          name: "Composite",
          className: "DeviceModelScreenSize"
        }
      },
      cpu: {
        serializedName: "cpu",
        type: {
          name: "Composite",
          className: "DeviceModelCpu"
        }
      },
      memory: {
        serializedName: "memory",
        type: {
          name: "Composite",
          className: "DeviceModelMemory"
        }
      },
      screenRotation: {
        serializedName: "screenRotation",
        type: {
          name: "Number"
        }
      },
      deviceFrame: {
        serializedName: "deviceFrame",
        type: {
          name: "Composite",
          className: "DeviceModelDeviceFrame"
        }
      },
      availabilityCount: {
        serializedName: "availabilityCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DeviceModelDimensions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceModelDimensions",
    modelProperties: {
      depth: {
        serializedName: "depth",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      height: {
        serializedName: "height",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      width: {
        serializedName: "width",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const DeviceModelResolution: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceModelResolution",
    modelProperties: {
      height: {
        serializedName: "height",
        type: {
          name: "String"
        }
      },
      width: {
        serializedName: "width",
        type: {
          name: "String"
        }
      },
      ppi: {
        serializedName: "ppi",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceModelScreenSize: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceModelScreenSize",
    modelProperties: {
      cm: {
        serializedName: "cm",
        type: {
          name: "String"
        }
      },
      in: {
        serializedName: "in",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceModelCpu: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceModelCpu",
    modelProperties: {
      frequency: {
        serializedName: "frequency",
        type: {
          name: "String"
        }
      },
      core: {
        serializedName: "core",
        type: {
          name: "String"
        }
      },
      text: {
        serializedName: "text",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceModelMemory: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceModelMemory",
    modelProperties: {
      formattedSize: {
        serializedName: "formattedSize",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceModelDeviceFrame: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceModelDeviceFrame",
    modelProperties: {
      grid: {
        serializedName: "grid",
        type: {
          name: "Composite",
          className: "DeviceModelDeviceFrameGrid"
        }
      },
      full: {
        serializedName: "full",
        type: {
          name: "Composite",
          className: "DeviceModelDeviceFrameFull"
        }
      }
    }
  }
};

export const DeviceModelDeviceFrameGrid: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceModelDeviceFrameGrid",
    modelProperties: {
      width: {
        serializedName: "width",
        type: {
          name: "Number"
        }
      },
      height: {
        serializedName: "height",
        type: {
          name: "Number"
        }
      },
      frameUrl: {
        serializedName: "frameUrl",
        type: {
          name: "String"
        }
      },
      screen: {
        serializedName: "screen",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      }
    }
  }
};

export const DeviceModelDeviceFrameFull: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceModelDeviceFrameFull",
    modelProperties: {
      width: {
        serializedName: "width",
        type: {
          name: "Number"
        }
      },
      height: {
        serializedName: "height",
        type: {
          name: "Number"
        }
      },
      frameUrl: {
        serializedName: "frameUrl",
        type: {
          name: "String"
        }
      },
      screen: {
        serializedName: "screen",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      }
    }
  }
};

export const DeviceSetModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceSetModel",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      manufacturer: {
        serializedName: "manufacturer",
        type: {
          name: "String"
        }
      },
      releaseDate: {
        serializedName: "releaseDate",
        type: {
          name: "String"
        }
      },
      formFactor: {
        serializedName: "formFactor",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceScreenSize: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceScreenSize",
    modelProperties: {
      cm: {
        serializedName: "cm",
        type: {
          name: "String"
        }
      },
      in: {
        serializedName: "in",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceResolution: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceResolution",
    modelProperties: {
      height: {
        serializedName: "height",
        type: {
          name: "String"
        }
      },
      width: {
        serializedName: "width",
        type: {
          name: "String"
        }
      },
      ppi: {
        serializedName: "ppi",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceDimensions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceDimensions",
    modelProperties: {
      depth: {
        serializedName: "depth",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      height: {
        serializedName: "height",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      width: {
        serializedName: "width",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const DeviceCpu: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceCpu",
    modelProperties: {
      frequency: {
        serializedName: "frequency",
        type: {
          name: "String"
        }
      },
      core: {
        serializedName: "core",
        type: {
          name: "String"
        }
      },
      text: {
        serializedName: "text",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceMemory: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceMemory",
    modelProperties: {
      formattedSize: {
        serializedName: "formattedSize",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceFrame: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceFrame",
    modelProperties: {
      grid: {
        serializedName: "grid",
        type: {
          name: "Composite",
          className: "DeviceFrameGrid"
        }
      },
      full: {
        serializedName: "full",
        type: {
          name: "Composite",
          className: "DeviceFrameFull"
        }
      }
    }
  }
};

export const DeviceFrameGrid: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceFrameGrid",
    modelProperties: {
      width: {
        serializedName: "width",
        type: {
          name: "Number"
        }
      },
      height: {
        serializedName: "height",
        type: {
          name: "Number"
        }
      },
      frameUrl: {
        serializedName: "frameUrl",
        type: {
          name: "String"
        }
      },
      screen: {
        serializedName: "screen",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      }
    }
  }
};

export const DeviceFrameFull: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceFrameFull",
    modelProperties: {
      width: {
        serializedName: "width",
        type: {
          name: "Number"
        }
      },
      height: {
        serializedName: "height",
        type: {
          name: "Number"
        }
      },
      frameUrl: {
        serializedName: "frameUrl",
        type: {
          name: "String"
        }
      },
      screen: {
        serializedName: "screen",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      }
    }
  }
};

export const DeviceFrameDefinition: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceFrameDefinition",
    modelProperties: {
      width: {
        serializedName: "width",
        type: {
          name: "Number"
        }
      },
      height: {
        serializedName: "height",
        type: {
          name: "Number"
        }
      },
      frameUrl: {
        serializedName: "frameUrl",
        type: {
          name: "String"
        }
      },
      screen: {
        serializedName: "screen",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      }
    }
  }
};

export const TestRunStatistics: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestRunStatistics",
    modelProperties: {
      devices: {
        serializedName: "devices",
        type: {
          name: "Number"
        }
      },
      devicesFinished: {
        serializedName: "devicesFinished",
        type: {
          name: "Number"
        }
      },
      devicesFailed: {
        serializedName: "devicesFailed",
        type: {
          name: "Number"
        }
      },
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      },
      passed: {
        serializedName: "passed",
        type: {
          name: "Number"
        }
      },
      failed: {
        serializedName: "failed",
        type: {
          name: "Number"
        }
      },
      skipped: {
        serializedName: "skipped",
        type: {
          name: "Number"
        }
      },
      peakMemory: {
        serializedName: "peakMemory",
        type: {
          name: "Number"
        }
      },
      totalDeviceMinutes: {
        serializedName: "totalDeviceMinutes",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const TestSeriesName: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestSeriesName",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestRunSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestRunSummary",
    modelProperties: {
      date: {
        serializedName: "date",
        type: {
          name: "String"
        }
      },
      statusDescription: {
        serializedName: "statusDescription",
        type: {
          name: "String"
        }
      },
      failed: {
        serializedName: "failed",
        type: {
          name: "Number"
        }
      },
      passed: {
        serializedName: "passed",
        type: {
          name: "Number"
        }
      },
      completed: {
        serializedName: "completed",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const DeviceSetUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceSetUpdate",
    modelProperties: {
      devices: {
        serializedName: "devices",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Subscription: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Subscription",
    modelProperties: {
      startsAt: {
        serializedName: "startsAt",
        type: {
          name: "String"
        }
      },
      endsAt: {
        serializedName: "endsAt",
        type: {
          name: "String"
        }
      },
      daysLeft: {
        serializedName: "daysLeft",
        type: {
          name: "Number"
        }
      },
      tier: {
        serializedName: "tier",
        type: {
          name: "Composite",
          className: "SubscriptionTier"
        }
      },
      active: {
        serializedName: "active",
        type: {
          name: "Boolean"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const SubscriptionTier: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SubscriptionTier",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Tier: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Tier",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestReport: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestReport",
    modelProperties: {
      appUploadId: {
        serializedName: "app_upload_id",
        required: true,
        type: {
          name: "String"
        }
      },
      date: {
        serializedName: "date",
        required: true,
        type: {
          name: "String"
        }
      },
      testType: {
        serializedName: "testType",
        required: true,
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        required: true,
        type: {
          name: "String"
        }
      },
      stats: {
        serializedName: "stats",
        type: {
          name: "Composite",
          className: "TestReportStats"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      schemaVersion: {
        serializedName: "schema_version",
        required: true,
        type: {
          name: "Number"
        }
      },
      revision: {
        serializedName: "revision",
        required: true,
        type: {
          name: "Number"
        }
      },
      features: {
        serializedName: "features",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TestReportFeaturesItem"
            }
          }
        }
      },
      finishedDeviceSnapshots: {
        serializedName: "finished_device_snapshots",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      deviceLogs: {
        serializedName: "device_logs",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TestReportDeviceLogsItem"
            }
          }
        }
      },
      dateFinished: {
        serializedName: "date_finished",
        required: true,
        type: {
          name: "String"
        }
      },
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String"
        }
      },
      snapshotFatalErrors: {
        serializedName: "snapshot_fatal_errors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TestReportSnapshotFatalErrorsItem"
            }
          }
        }
      }
    }
  }
};

export const TestReportStats: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestReportStats",
    modelProperties: {
      os: {
        serializedName: "os",
        required: true,
        type: {
          name: "Number"
        }
      },
      devices: {
        serializedName: "devices",
        required: true,
        type: {
          name: "Number"
        }
      },
      filesize: {
        serializedName: "filesize",
        required: true,
        type: {
          name: "Number"
        }
      },
      totalDeviceMinutes: {
        serializedName: "totalDeviceMinutes",
        required: true,
        type: {
          name: "Number"
        }
      },
      devicesNotRunned: {
        serializedName: "devices_not_runned",
        required: true,
        type: {
          name: "Number"
        }
      },
      failed: {
        serializedName: "failed",
        required: true,
        type: {
          name: "Number"
        }
      },
      skipped: {
        serializedName: "skipped",
        required: true,
        type: {
          name: "Number"
        }
      },
      passed: {
        serializedName: "passed",
        required: true,
        type: {
          name: "Number"
        }
      },
      total: {
        serializedName: "total",
        required: true,
        type: {
          name: "Number"
        }
      },
      devicesFinished: {
        serializedName: "devices_finished",
        required: true,
        type: {
          name: "Number"
        }
      },
      devicesFailed: {
        serializedName: "devices_failed",
        required: true,
        type: {
          name: "Number"
        }
      },
      devicesSkipped: {
        serializedName: "devices_skipped",
        required: true,
        type: {
          name: "Number"
        }
      },
      stepCount: {
        serializedName: "step_count",
        required: true,
        type: {
          name: "Number"
        }
      },
      artifacts: {
        serializedName: "artifacts",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const TestReportFeaturesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestReportFeaturesItem",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      tests: {
        serializedName: "tests",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TestReportFeaturesPropertiesItemsItem"
            }
          }
        }
      },
      failed: {
        serializedName: "failed",
        type: {
          name: "Number"
        }
      },
      skipped: {
        serializedName: "skipped",
        type: {
          name: "Number"
        }
      },
      peakMemory: {
        serializedName: "peakMemory",
        type: {
          name: "Number"
        }
      },
      peakDuration: {
        serializedName: "peakDuration",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const TestReportFeaturesPropertiesItemsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestReportFeaturesPropertiesItemsItem",
    modelProperties: {
      testName: {
        serializedName: "testName",
        type: {
          name: "String"
        }
      },
      runs: {
        serializedName: "runs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TestReportFeaturesPropertiesItemsRunsItem"
            }
          }
        }
      },
      peakMemory: {
        serializedName: "peakMemory",
        type: {
          name: "Number"
        }
      },
      peakDuration: {
        serializedName: "peakDuration",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const TestReportFeaturesPropertiesItemsRunsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestReportFeaturesPropertiesItemsRunsItem",
    modelProperties: {
      number: {
        serializedName: "number",
        type: {
          name: "Number"
        }
      },
      steps: {
        serializedName: "steps",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "TestReportFeaturesPropertiesItemsRunsPropertiesItemsItem"
            }
          }
        }
      },
      failed: {
        serializedName: "failed",
        type: {
          name: "Number"
        }
      },
      skipped: {
        serializedName: "skipped",
        type: {
          name: "Number"
        }
      },
      reportUrl: {
        serializedName: "report_url",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestReportFeaturesPropertiesItemsRunsPropertiesItemsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestReportFeaturesPropertiesItemsRunsPropertiesItemsItem",
    modelProperties: {
      stepName: {
        serializedName: "stepName",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      stepExecutions: {
        serializedName: "stepExecutions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "TestReportFeaturesPropertiesItemsRunsPropertiesItemsStepExecutionsItem"
            }
          }
        }
      },
      failed: {
        serializedName: "failed",
        type: {
          name: "Number"
        }
      },
      skipped: {
        serializedName: "skipped",
        type: {
          name: "Number"
        }
      },
      stepReportUrl: {
        serializedName: "step_report_url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestReportFeaturesPropertiesItemsRunsPropertiesItemsStepExecutionsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "TestReportFeaturesPropertiesItemsRunsPropertiesItemsStepExecutionsItem",
    modelProperties: {
      deviceSnapshotId: {
        serializedName: "device_snapshot_id",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const TestReportDeviceLogsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestReportDeviceLogsItem",
    modelProperties: {
      deviceSnapshotId: {
        serializedName: "device_snapshot_id",
        type: {
          name: "String"
        }
      },
      deviceLog: {
        serializedName: "device_log",
        type: {
          name: "String"
        }
      },
      testLog: {
        serializedName: "test_log",
        type: {
          name: "String"
        }
      },
      appiumLog: {
        serializedName: "appium_log",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestReportSnapshotFatalErrorsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestReportSnapshotFatalErrorsItem",
    modelProperties: {
      deviceSnapshotId: {
        serializedName: "device_snapshot_id",
        type: {
          name: "String"
        }
      },
      errorMessage: {
        serializedName: "error_message",
        type: {
          name: "String"
        }
      },
      errorTitle: {
        serializedName: "error_title",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StepReport: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StepReport",
    modelProperties: {
      finishedSnapshots: {
        serializedName: "finishedSnapshots",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      deviceScreenshots: {
        serializedName: "deviceScreenshots",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StepReportDeviceScreenshotsItem"
            }
          }
        }
      }
    }
  }
};

export const StepReportDeviceScreenshotsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StepReportDeviceScreenshotsItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      deviceSnapshotId: {
        serializedName: "device_snapshot_id",
        type: {
          name: "String"
        }
      },
      stacktrace: {
        serializedName: "stacktrace",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      crashData: {
        serializedName: "crash_data",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      title: {
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      screenshot: {
        serializedName: "screenshot",
        type: {
          name: "Composite",
          className: "StepReportDeviceScreenshotsItemScreenshot"
        }
      },
      logFile: {
        serializedName: "log_file",
        type: {
          name: "String"
        }
      },
      appiumLogFile: {
        serializedName: "appium_log_file",
        type: {
          name: "String"
        }
      },
      rawCrashData: {
        serializedName: "raw_crash_data",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const StepReportDeviceScreenshotsItemScreenshot: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StepReportDeviceScreenshotsItemScreenshot",
    modelProperties: {
      urls: {
        serializedName: "urls",
        type: {
          name: "Composite",
          className: "StepReportDeviceScreenshotsProperties"
        }
      },
      rotation: {
        serializedName: "rotation",
        required: true,
        type: {
          name: "Number"
        }
      },
      landscape: {
        serializedName: "landscape",
        required: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const StepReportDeviceScreenshotsProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StepReportDeviceScreenshotsProperties",
    modelProperties: {
      original: {
        serializedName: "original",
        required: true,
        type: {
          name: "String"
        }
      },
      small: {
        serializedName: "small",
        required: true,
        type: {
          name: "String"
        }
      },
      medium: {
        serializedName: "medium",
        required: true,
        type: {
          name: "String"
        }
      },
      large: {
        serializedName: "large",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestCloudFileHashDeprecated: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestCloudFileHashDeprecated",
    modelProperties: {
      fileType: {
        serializedName: "file_type",
        required: true,
        type: {
          name: "String"
        }
      },
      checksum: {
        serializedName: "checksum",
        required: true,
        type: {
          name: "String"
        }
      },
      relativePath: {
        serializedName: "relative_path",
        required: true,
        type: {
          name: "String"
        }
      },
      byteRange: {
        serializedName: "byte_range",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestCloudFileHashResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestCloudFileHashResponse",
    modelProperties: {
      fileType: {
        serializedName: "fileType",
        required: true,
        type: {
          name: "String"
        }
      },
      checksum: {
        serializedName: "checksum",
        required: true,
        type: {
          name: "String"
        }
      },
      relativePath: {
        serializedName: "relativePath",
        type: {
          name: "String"
        }
      },
      uploadStatus: {
        serializedName: "uploadStatus",
        type: {
          name: "Composite",
          className: "TestCloudFileHashResponseUploadStatus"
        }
      }
    }
  }
};

export const TestCloudFileHashResponseUploadStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestCloudFileHashResponseUploadStatus",
    modelProperties: {
      statusCode: {
        serializedName: "statusCode",
        required: true,
        type: {
          name: "Number"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestCloudHashUploadStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestCloudHashUploadStatus",
    modelProperties: {
      statusCode: {
        serializedName: "statusCode",
        required: true,
        type: {
          name: "Number"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestCloudStartTestRunResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestCloudStartTestRunResult",
    modelProperties: {
      acceptedDevices: {
        serializedName: "accepted_devices",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      rejectedDevices: {
        serializedName: "rejected_devices",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PerformanceReport: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PerformanceReport",
    modelProperties: {
      deviceSnapshotId: {
        serializedName: "device_snapshot_id",
        type: {
          name: "String"
        }
      },
      performanceData: {
        serializedName: "performance_data",
        type: {
          name: "Composite",
          className: "PerformanceReportPerformanceData"
        }
      },
      video: {
        serializedName: "video",
        type: {
          name: "Composite",
          className: "PerformanceReportVideo"
        }
      }
    }
  }
};

export const PerformanceReportPerformanceData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PerformanceReportPerformanceData",
    modelProperties: {
      steps: {
        serializedName: "steps",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PerformanceReportPerformanceDataStepsItem"
            }
          }
        }
      },
      elapsedSecsEnd: {
        serializedName: "elapsed-secs-end",
        required: true,
        type: {
          name: "Number"
        }
      },
      elapsedSecsStart: {
        serializedName: "elapsed-secs-start",
        required: true,
        type: {
          name: "Number"
        }
      },
      elapsedSecs: {
        serializedName: "elapsed-secs",
        required: true,
        type: {
          name: "Number"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PerformanceReportPerformanceDataStepsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PerformanceReportPerformanceDataStepsItem",
    modelProperties: {
      avgCpu: {
        serializedName: "avg-cpu",
        type: {
          name: "Number"
        }
      },
      avgMem: {
        serializedName: "avg-mem",
        type: {
          name: "Number"
        }
      },
      samples: {
        serializedName: "samples",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PerformanceReportPerformanceDataStepsPropertiesItemsItem"
            }
          }
        }
      },
      elapsedSecsEnd: {
        serializedName: "elapsed-secs-end",
        type: {
          name: "Number"
        }
      },
      elapsedSecsStart: {
        serializedName: "elapsed-secs-start",
        type: {
          name: "Number"
        }
      },
      elapsedSecs: {
        serializedName: "elapsed-secs",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PerformanceReportPerformanceDataStepsPropertiesItemsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PerformanceReportPerformanceDataStepsPropertiesItemsItem",
    modelProperties: {
      cpu: {
        serializedName: "cpu",
        type: {
          name: "Number"
        }
      },
      mem: {
        serializedName: "mem",
        type: {
          name: "Number"
        }
      },
      elapsedSecs: {
        serializedName: "elapsed-secs",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PerformanceReportVideo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PerformanceReportVideo",
    modelProperties: {
      videoMetadata: {
        serializedName: "video_metadata",
        type: {
          name: "Composite",
          className: "PerformanceReportVideoMetadata"
        }
      },
      videoUrl: {
        serializedName: "video_url",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PerformanceReportVideoMetadata: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PerformanceReportVideoMetadata",
    modelProperties: {
      events: {
        serializedName: "events",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PerformanceReportVideoMetadataEventsItem"
            }
          }
        }
      }
    }
  }
};

export const PerformanceReportVideoMetadataEventsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PerformanceReportVideoMetadataEventsItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      millis: {
        serializedName: "millis",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SubmitDsrOperationRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SubmitDsrOperationRequest",
    modelProperties: {
      request: {
        serializedName: "request",
        type: {
          name: "String"
        }
      },
      accountId: {
        serializedName: "accountId",
        type: {
          name: "String"
        }
      },
      appId: {
        serializedName: "appId",
        type: {
          name: "String"
        }
      },
      operationId: {
        serializedName: "operationId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SubmitDsrOperationResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SubmitDsrOperationResponse",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CreateGdprTestData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CreateGdprTestData",
    modelProperties: {
      appId: {
        serializedName: "appId",
        type: {
          name: "Uuid"
        }
      },
      accountId: {
        serializedName: "accountId",
        type: {
          name: "Uuid"
        }
      },
      userName: {
        serializedName: "userName",
        type: {
          name: "String"
        }
      },
      userEmail: {
        serializedName: "userEmail",
        type: {
          name: "String"
        }
      },
      appName: {
        serializedName: "appName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestGdprAccount: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestGdprAccount",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const TestGdprFeatureFlag: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestGdprFeatureFlag",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      targetId: {
        serializedName: "target_id",
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const TestGdprResourceList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestGdprResourceList",
    modelProperties: {
      resources: {
        serializedName: "resources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TestGdprResourceListResourcesItem"
            }
          }
        }
      }
    }
  }
};

export const TestGdprResourceListResourcesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestGdprResourceListResourcesItem",
    modelProperties: {
      rel: {
        serializedName: "rel",
        type: {
          name: "String"
        }
      },
      path: {
        serializedName: "path",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestGdprApp: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestGdprApp",
    modelProperties: {
      hashFilesUrl: {
        serializedName: "hash_files_url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestGdprHashFile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestGdprHashFile",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      filename: {
        serializedName: "filename",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestGdprTestRun: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestGdprTestRun",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      appHashFileId: {
        serializedName: "app_hash_file_id",
        type: {
          name: "Uuid"
        }
      },
      locale: {
        serializedName: "locale",
        type: {
          name: "String"
        }
      },
      dsymHashFileId: {
        serializedName: "dsym_hash_file_id",
        type: {
          name: "Uuid"
        }
      },
      appHashFileUrl: {
        serializedName: "app_hash_file_url",
        type: {
          name: "String"
        }
      },
      dsymHashFileUrl: {
        serializedName: "dsym_hash_file_url",
        type: {
          name: "String"
        }
      },
      appIconUrl: {
        serializedName: "app_icon_url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestGdprPipelineTest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestGdprPipelineTest",
    modelProperties: {
      appUploadId: {
        serializedName: "app_upload_id",
        type: {
          name: "Uuid"
        }
      },
      testParameters: {
        serializedName: "test_parameters",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const TestGdprFileSetFile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestGdprFileSetFile",
    modelProperties: {
      path: {
        serializedName: "path",
        type: {
          name: "String"
        }
      },
      hashFileId: {
        serializedName: "hash_file_id",
        type: {
          name: "Uuid"
        }
      },
      appUploadId: {
        serializedName: "app_upload_id",
        type: {
          name: "Uuid"
        }
      },
      hashFileUrl: {
        serializedName: "hash_file_url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CodePushUploadedRelease: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CodePushUploadedRelease",
    modelProperties: {
      releaseUpload: {
        serializedName: "release_upload",
        type: {
          name: "Composite",
          className: "CodePushUploadedReleaseUpload"
        }
      },
      targetBinaryVersion: {
        serializedName: "target_binary_version",
        required: true,
        type: {
          name: "String"
        }
      },
      deploymentName: {
        serializedName: "deployment_name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      disabled: {
        serializedName: "disabled",
        type: {
          name: "Boolean"
        }
      },
      mandatory: {
        serializedName: "mandatory",
        type: {
          name: "Boolean"
        }
      },
      noDuplicateReleaseError: {
        serializedName: "no_duplicate_release_error",
        type: {
          name: "Boolean"
        }
      },
      rollout: {
        serializedName: "rollout",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CodePushUploadedReleaseUpload: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CodePushUploadedReleaseUpload",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      uploadDomain: {
        serializedName: "upload_domain",
        required: true,
        type: {
          name: "String"
        }
      },
      token: {
        serializedName: "token",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CodePushReleaseUpload: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CodePushReleaseUpload",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      uploadDomain: {
        serializedName: "upload_domain",
        required: true,
        type: {
          name: "String"
        }
      },
      token: {
        serializedName: "token",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Deployment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Deployment",
    modelProperties: {
      key: {
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      latestRelease: {
        serializedName: "latest_release",
        type: {
          name: "Composite",
          className: "DeploymentLatestRelease"
        }
      }
    }
  }
};

export const Components1T8CjynSchemasDeploymentPropertiesLatestReleaseAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components1T8CjynSchemasDeploymentPropertiesLatestReleaseAllof0",
    modelProperties: {
      targetBinaryRange: {
        serializedName: "target_binary_range",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      isDisabled: {
        serializedName: "is_disabled",
        type: {
          name: "Boolean"
        }
      },
      isMandatory: {
        serializedName: "is_mandatory",
        type: {
          name: "Boolean"
        }
      },
      rollout: {
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 1
        },
        serializedName: "rollout",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Components6Ap7FdSchemasDeploymentPropertiesLatestReleaseAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components6Ap7FdSchemasDeploymentPropertiesLatestReleaseAllof1",
    modelProperties: {
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      packageHash: {
        serializedName: "package_hash",
        type: {
          name: "String"
        }
      },
      blobUrl: {
        serializedName: "blob_url",
        type: {
          name: "String"
        }
      },
      diffPackageMap: {
        serializedName: "diff_package_map",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className:
                "Components1Fku7OpSchemasDeploymentPropertiesLatestReleaseAllof1PropertiesDiffPackageMapAdditionalproperties"
            }
          }
        }
      },
      originalDeployment: {
        serializedName: "original_deployment",
        type: {
          name: "String"
        }
      },
      originalLabel: {
        serializedName: "original_label",
        type: {
          name: "String"
        }
      },
      releasedBy: {
        serializedName: "released_by",
        type: {
          name: "String"
        }
      },
      releaseMethod: {
        serializedName: "release_method",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      uploadTime: {
        serializedName: "upload_time",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Components1Fku7OpSchemasDeploymentPropertiesLatestReleaseAllof1PropertiesDiffPackageMapAdditionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components1Fku7OpSchemasDeploymentPropertiesLatestReleaseAllof1PropertiesDiffPackageMapAdditionalproperties",
    modelProperties: {
      size: {
        serializedName: "size",
        required: true,
        type: {
          name: "Number"
        }
      },
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsLtrglSchemasDeploymentinternalAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsLtrglSchemasDeploymentinternalAllof0",
    modelProperties: {
      key: {
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      latestRelease: {
        serializedName: "latest_release",
        type: {
          name: "Composite",
          className: "DeploymentInternal0LatestRelease"
        }
      }
    }
  }
};

export const ComponentsLvsishSchemasDeploymentinternalAllof0PropertiesLatestReleaseAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsLvsishSchemasDeploymentinternalAllof0PropertiesLatestReleaseAllof0",
    modelProperties: {
      targetBinaryRange: {
        serializedName: "target_binary_range",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      isDisabled: {
        serializedName: "is_disabled",
        type: {
          name: "Boolean"
        }
      },
      isMandatory: {
        serializedName: "is_mandatory",
        type: {
          name: "Boolean"
        }
      },
      rollout: {
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 1
        },
        serializedName: "rollout",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ComponentsP3Dh42SchemasDeploymentinternalAllof0PropertiesLatestReleaseAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsP3Dh42SchemasDeploymentinternalAllof0PropertiesLatestReleaseAllof1",
    modelProperties: {
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      packageHash: {
        serializedName: "package_hash",
        type: {
          name: "String"
        }
      },
      blobUrl: {
        serializedName: "blob_url",
        type: {
          name: "String"
        }
      },
      diffPackageMap: {
        serializedName: "diff_package_map",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className:
                "Components1Nx8Kb1SchemasDeploymentinternalAllof0PropertiesLatestReleaseAllof1PropertiesDiffPackageMapAdditionalproperties"
            }
          }
        }
      },
      originalDeployment: {
        serializedName: "original_deployment",
        type: {
          name: "String"
        }
      },
      originalLabel: {
        serializedName: "original_label",
        type: {
          name: "String"
        }
      },
      releasedBy: {
        serializedName: "released_by",
        type: {
          name: "String"
        }
      },
      releaseMethod: {
        serializedName: "release_method",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      uploadTime: {
        serializedName: "upload_time",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Components1Nx8Kb1SchemasDeploymentinternalAllof0PropertiesLatestReleaseAllof1PropertiesDiffPackageMapAdditionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components1Nx8Kb1SchemasDeploymentinternalAllof0PropertiesLatestReleaseAllof1PropertiesDiffPackageMapAdditionalproperties",
    modelProperties: {
      size: {
        serializedName: "size",
        required: true,
        type: {
          name: "Number"
        }
      },
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeploymentModification: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeploymentModification",
    modelProperties: {
      name: {
        constraints: {
          MaxLength: 1000,
          MinLength: 1
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CodePushReleaseLabel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CodePushReleaseLabel",
    modelProperties: {
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BlobInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BlobInfo",
    modelProperties: {
      size: {
        serializedName: "size",
        required: true,
        type: {
          name: "Number"
        }
      },
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components11Pd21BSchemasPackagehashtoblobinfomapAdditionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components11Pd21BSchemasPackagehashtoblobinfomapAdditionalproperties",
    modelProperties: {
      size: {
        serializedName: "size",
        required: true,
        type: {
          name: "Number"
        }
      },
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CodePushReleaseInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CodePushReleaseInfo",
    modelProperties: {
      targetBinaryRange: {
        serializedName: "target_binary_range",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      isDisabled: {
        serializedName: "is_disabled",
        type: {
          name: "Boolean"
        }
      },
      isMandatory: {
        serializedName: "is_mandatory",
        type: {
          name: "Boolean"
        }
      },
      rollout: {
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 1
        },
        serializedName: "rollout",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const LegacyCodePushReleaseInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LegacyCodePushReleaseInfo",
    modelProperties: {
      appVersion: {
        serializedName: "appVersion",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      isDisabled: {
        serializedName: "isDisabled",
        type: {
          name: "Boolean"
        }
      },
      isMandatory: {
        serializedName: "isMandatory",
        type: {
          name: "Boolean"
        }
      },
      rollout: {
        serializedName: "rollout",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CodePushRelease: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CodePushRelease",
    modelProperties: {
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      packageHash: {
        serializedName: "package_hash",
        type: {
          name: "String"
        }
      },
      blobUrl: {
        serializedName: "blob_url",
        type: {
          name: "String"
        }
      },
      diffPackageMap: {
        serializedName: "diff_package_map",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className:
                "Components1ElacdoSchemasCodepushreleasePropertiesDiffPackageMapAdditionalproperties"
            }
          }
        }
      },
      originalDeployment: {
        serializedName: "original_deployment",
        type: {
          name: "String"
        }
      },
      originalLabel: {
        serializedName: "original_label",
        type: {
          name: "String"
        }
      },
      releasedBy: {
        serializedName: "released_by",
        type: {
          name: "String"
        }
      },
      releaseMethod: {
        serializedName: "release_method",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      uploadTime: {
        serializedName: "upload_time",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Components1ElacdoSchemasCodepushreleasePropertiesDiffPackageMapAdditionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components1ElacdoSchemasCodepushreleasePropertiesDiffPackageMapAdditionalproperties",
    modelProperties: {
      size: {
        serializedName: "size",
        required: true,
        type: {
          name: "Number"
        }
      },
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CodePushReleaseModification: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CodePushReleaseModification",
    modelProperties: {
      targetBinaryRange: {
        serializedName: "target_binary_range",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      isDisabled: {
        serializedName: "is_disabled",
        type: {
          name: "Boolean"
        }
      },
      isMandatory: {
        serializedName: "is_mandatory",
        type: {
          name: "Boolean"
        }
      },
      rollout: {
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 1
        },
        serializedName: "rollout",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CodePushReleasePromote: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CodePushReleasePromote",
    modelProperties: {
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CodePushReleaseMetric: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CodePushReleaseMetric",
    modelProperties: {
      label: {
        serializedName: "label",
        required: true,
        type: {
          name: "String"
        }
      },
      active: {
        serializedName: "active",
        required: true,
        type: {
          name: "Number"
        }
      },
      downloaded: {
        serializedName: "downloaded",
        type: {
          name: "Number"
        }
      },
      failed: {
        serializedName: "failed",
        type: {
          name: "Number"
        }
      },
      installed: {
        serializedName: "installed",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CodePushStatusMetricMetadata: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CodePushStatusMetricMetadata",
    modelProperties: {
      deploymentKey: {
        serializedName: "deployment_key",
        required: true,
        type: {
          name: "String"
        }
      },
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        type: {
          name: "String"
        }
      },
      previousDeploymentKey: {
        serializedName: "previous_deployment_key",
        type: {
          name: "String"
        }
      },
      previousLabelOrAppVersion: {
        serializedName: "previous_label_or_app_version",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      clientUniqueId: {
        serializedName: "client_unique_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LegacyCodePushStatusMetricMetadata: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LegacyCodePushStatusMetricMetadata",
    modelProperties: {
      deploymentKey: {
        serializedName: "deploymentKey",
        type: {
          name: "String"
        }
      },
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "appVersion",
        type: {
          name: "String"
        }
      },
      previousDeploymentKey: {
        serializedName: "previousDeploymentKey",
        type: {
          name: "String"
        }
      },
      previousLabelOrAppVersion: {
        serializedName: "previousLabelOrAppVersion",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      clientUniqueId: {
        serializedName: "clientUniqueId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UpdateCheckResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UpdateCheckResponse",
    modelProperties: {
      updateInfo: {
        serializedName: "update_info",
        type: {
          name: "Composite",
          className: "UpdateCheckResponseUpdateInfo"
        }
      }
    }
  }
};

export const ComponentsSa59JcSchemasUpdatecheckresponsePropertiesUpdateInfoAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsSa59JcSchemasUpdatecheckresponsePropertiesUpdateInfoAllof0",
    modelProperties: {
      targetBinaryRange: {
        serializedName: "target_binary_range",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      isDisabled: {
        serializedName: "is_disabled",
        type: {
          name: "Boolean"
        }
      },
      isMandatory: {
        serializedName: "is_mandatory",
        type: {
          name: "Boolean"
        }
      },
      rollout: {
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 1
        },
        serializedName: "rollout",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ComponentsWyjzn3SchemasUpdatecheckresponsePropertiesUpdateInfoAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsWyjzn3SchemasUpdatecheckresponsePropertiesUpdateInfoAllof1",
    modelProperties: {
      downloadUrl: {
        serializedName: "download_url",
        type: {
          name: "String"
        }
      },
      isAvailable: {
        serializedName: "is_available",
        type: {
          name: "Boolean"
        }
      },
      packageSize: {
        serializedName: "package_size",
        type: {
          name: "Number"
        }
      },
      shouldRunBinaryVersion: {
        serializedName: "should_run_binary_version",
        type: {
          name: "Boolean"
        }
      },
      updateAppVersion: {
        serializedName: "update_app_version",
        type: {
          name: "Boolean"
        }
      },
      packageHash: {
        serializedName: "package_hash",
        type: {
          name: "String"
        }
      },
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LegacyUpdateCheckResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LegacyUpdateCheckResponse",
    modelProperties: {
      updateInfo: {
        serializedName: "updateInfo",
        type: {
          name: "Composite",
          className: "LegacyUpdateCheckResponseUpdateInfo"
        }
      }
    }
  }
};

export const ComponentsIr4N92SchemasLegacyupdatecheckresponsePropertiesUpdateinfoAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsIr4N92SchemasLegacyupdatecheckresponsePropertiesUpdateinfoAllof0",
    modelProperties: {
      appVersion: {
        serializedName: "appVersion",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      isDisabled: {
        serializedName: "isDisabled",
        type: {
          name: "Boolean"
        }
      },
      isMandatory: {
        serializedName: "isMandatory",
        type: {
          name: "Boolean"
        }
      },
      rollout: {
        serializedName: "rollout",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ComponentsPllys8SchemasLegacyupdatecheckresponsePropertiesUpdateinfoAllof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsPllys8SchemasLegacyupdatecheckresponsePropertiesUpdateinfoAllof1",
    modelProperties: {
      downloadURL: {
        serializedName: "downloadURL",
        type: {
          name: "String"
        }
      },
      isAvailable: {
        serializedName: "isAvailable",
        type: {
          name: "Boolean"
        }
      },
      packageSize: {
        serializedName: "packageSize",
        type: {
          name: "Number"
        }
      },
      shouldRunBinaryVersion: {
        serializedName: "shouldRunBinaryVersion",
        type: {
          name: "Boolean"
        }
      },
      updateAppVersion: {
        serializedName: "updateAppVersion",
        type: {
          name: "Boolean"
        }
      },
      packageHash: {
        serializedName: "packageHash",
        type: {
          name: "String"
        }
      },
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UpdateInfoData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UpdateInfoData",
    modelProperties: {
      downloadUrl: {
        serializedName: "download_url",
        type: {
          name: "String"
        }
      },
      isAvailable: {
        serializedName: "is_available",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      packageSize: {
        serializedName: "package_size",
        type: {
          name: "Number"
        }
      },
      shouldRunBinaryVersion: {
        serializedName: "should_run_binary_version",
        type: {
          name: "Boolean"
        }
      },
      updateAppVersion: {
        serializedName: "update_app_version",
        type: {
          name: "Boolean"
        }
      },
      packageHash: {
        serializedName: "package_hash",
        type: {
          name: "String"
        }
      },
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LegacyUpdateInfoData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LegacyUpdateInfoData",
    modelProperties: {
      downloadURL: {
        serializedName: "downloadURL",
        type: {
          name: "String"
        }
      },
      isAvailable: {
        serializedName: "isAvailable",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      packageSize: {
        serializedName: "packageSize",
        type: {
          name: "Number"
        }
      },
      shouldRunBinaryVersion: {
        serializedName: "shouldRunBinaryVersion",
        type: {
          name: "Boolean"
        }
      },
      updateAppVersion: {
        serializedName: "updateAppVersion",
        type: {
          name: "Boolean"
        }
      },
      packageHash: {
        serializedName: "packageHash",
        type: {
          name: "String"
        }
      },
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppName: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppName",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AcquisitionStatusSuccessResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcquisitionStatusSuccessResponse",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GdprPurgeVerifyRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GdprPurgeVerifyRequest",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      key: {
        serializedName: "key",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GdprPurgeVerifyResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GdprPurgeVerifyResponse",
    modelProperties: {
      success: {
        serializedName: "success",
        required: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const LegacyDeploymentsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LegacyDeploymentsResponse",
    modelProperties: {
      deployments: {
        serializedName: "deployments",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LegacyDeploymentsResponseDeploymentsItem"
            }
          }
        }
      }
    }
  }
};

export const LegacyDeploymentsResponseDeploymentsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LegacyDeploymentsResponseDeploymentsItem",
    modelProperties: {
      createdTime: {
        serializedName: "createdTime",
        type: {
          name: "Number"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      key: {
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      package: {
        serializedName: "package",
        type: {
          name: "Composite",
          className: "LegacyDeploymentsResponseDeploymentsItemPackage"
        }
      }
    }
  }
};

export const LegacyDeploymentsResponseDeploymentsItemPackage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LegacyDeploymentsResponseDeploymentsItemPackage",
    modelProperties: {
      appVersion: {
        serializedName: "appVersion",
        type: {
          name: "String"
        }
      },
      isDisabled: {
        serializedName: "isDisabled",
        type: {
          name: "Boolean"
        }
      },
      isMandatory: {
        serializedName: "isMandatory",
        type: {
          name: "Boolean"
        }
      },
      rollout: {
        serializedName: "rollout",
        type: {
          name: "Number"
        }
      },
      blobUrl: {
        serializedName: "blobUrl",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      releaseMethod: {
        serializedName: "releaseMethod",
        type: {
          name: "String"
        }
      },
      uploadTime: {
        serializedName: "uploadTime",
        type: {
          name: "Number"
        }
      },
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      releasedByUserId: {
        serializedName: "releasedByUserId",
        type: {
          name: "String"
        }
      },
      manifestBlobUrl: {
        serializedName: "manifestBlobUrl",
        type: {
          name: "String"
        }
      },
      diffPackageMap: {
        serializedName: "diffPackageMap",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const LegacyDeploymentResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LegacyDeploymentResponse",
    modelProperties: {
      deployment: {
        serializedName: "deployment",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className:
                "Components1Fo2G15SchemasLegacydeploymentresponsePropertiesDeploymentAdditionalproperties"
            }
          }
        }
      }
    }
  }
};

export const Components1Fo2G15SchemasLegacydeploymentresponsePropertiesDeploymentAdditionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components1Fo2G15SchemasLegacydeploymentresponsePropertiesDeploymentAdditionalproperties",
    modelProperties: {
      createdTime: {
        serializedName: "createdTime",
        type: {
          name: "Number"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      key: {
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      package: {
        serializedName: "package",
        type: {
          name: "Composite",
          className:
            "Components1V99QmiSchemasLegacydeploymentresponsePropertiesDeploymentAdditionalpropertiesPropertiesPackage"
        }
      }
    }
  }
};

export const Components1V99QmiSchemasLegacydeploymentresponsePropertiesDeploymentAdditionalpropertiesPropertiesPackage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components1V99QmiSchemasLegacydeploymentresponsePropertiesDeploymentAdditionalpropertiesPropertiesPackage",
    modelProperties: {
      appVersion: {
        serializedName: "appVersion",
        type: {
          name: "String"
        }
      },
      isDisabled: {
        serializedName: "isDisabled",
        type: {
          name: "Boolean"
        }
      },
      isMandatory: {
        serializedName: "isMandatory",
        type: {
          name: "Boolean"
        }
      },
      rollout: {
        serializedName: "rollout",
        type: {
          name: "Number"
        }
      },
      blobUrl: {
        serializedName: "blobUrl",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      releaseMethod: {
        serializedName: "releaseMethod",
        type: {
          name: "String"
        }
      },
      uploadTime: {
        serializedName: "uploadTime",
        type: {
          name: "Number"
        }
      },
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      releasedByUserId: {
        serializedName: "releasedByUserId",
        type: {
          name: "String"
        }
      },
      manifestBlobUrl: {
        serializedName: "manifestBlobUrl",
        type: {
          name: "String"
        }
      },
      diffPackageMap: {
        serializedName: "diffPackageMap",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const LegacyDeployment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LegacyDeployment",
    modelProperties: {
      createdTime: {
        serializedName: "createdTime",
        type: {
          name: "Number"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      key: {
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      package: {
        serializedName: "package",
        type: {
          name: "Composite",
          className: "LegacyDeploymentPackage"
        }
      }
    }
  }
};

export const LegacyDeploymentPackage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LegacyDeploymentPackage",
    modelProperties: {
      appVersion: {
        serializedName: "appVersion",
        type: {
          name: "String"
        }
      },
      isDisabled: {
        serializedName: "isDisabled",
        type: {
          name: "Boolean"
        }
      },
      isMandatory: {
        serializedName: "isMandatory",
        type: {
          name: "Boolean"
        }
      },
      rollout: {
        serializedName: "rollout",
        type: {
          name: "Number"
        }
      },
      blobUrl: {
        serializedName: "blobUrl",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      releaseMethod: {
        serializedName: "releaseMethod",
        type: {
          name: "String"
        }
      },
      uploadTime: {
        serializedName: "uploadTime",
        type: {
          name: "Number"
        }
      },
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      releasedByUserId: {
        serializedName: "releasedByUserId",
        type: {
          name: "String"
        }
      },
      manifestBlobUrl: {
        serializedName: "manifestBlobUrl",
        type: {
          name: "String"
        }
      },
      diffPackageMap: {
        serializedName: "diffPackageMap",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const LegacyDeploymentHistoryResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LegacyDeploymentHistoryResponse",
    modelProperties: {
      history: {
        serializedName: "history",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LegacyDeploymentHistoryResponseHistoryItem"
            }
          }
        }
      }
    }
  }
};

export const LegacyDeploymentHistoryResponseHistoryItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LegacyDeploymentHistoryResponseHistoryItem",
    modelProperties: {
      allOf: {
        serializedName: "allOf",
        type: {
          name: "Composite",
          className: "LegacyDeploymentHistoryResponseHistoryItemAllOf"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      originalDeployment: {
        serializedName: "originalDeployment",
        type: {
          name: "String"
        }
      },
      originalLabel: {
        serializedName: "originalLabel",
        type: {
          name: "String"
        }
      },
      packageHash: {
        serializedName: "packageHash",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LegacyDeploymentHistoryResponseHistoryItemAllOf: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LegacyDeploymentHistoryResponseHistoryItemAllOf",
    modelProperties: {
      appVersion: {
        serializedName: "appVersion",
        type: {
          name: "String"
        }
      },
      isDisabled: {
        serializedName: "isDisabled",
        type: {
          name: "Boolean"
        }
      },
      isMandatory: {
        serializedName: "isMandatory",
        type: {
          name: "Boolean"
        }
      },
      rollout: {
        serializedName: "rollout",
        type: {
          name: "Number"
        }
      },
      blobUrl: {
        serializedName: "blobUrl",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      releaseMethod: {
        serializedName: "releaseMethod",
        type: {
          name: "String"
        }
      },
      uploadTime: {
        serializedName: "uploadTime",
        type: {
          name: "Number"
        }
      },
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      releasedByUserId: {
        serializedName: "releasedByUserId",
        type: {
          name: "String"
        }
      },
      manifestBlobUrl: {
        serializedName: "manifestBlobUrl",
        type: {
          name: "String"
        }
      },
      diffPackageMap: {
        serializedName: "diffPackageMap",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const LegacyDeploymentHistory: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LegacyDeploymentHistory",
    modelProperties: {
      allOf: {
        serializedName: "allOf",
        type: {
          name: "Composite",
          className: "LegacyDeploymentHistoryAllOf"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      originalDeployment: {
        serializedName: "originalDeployment",
        type: {
          name: "String"
        }
      },
      originalLabel: {
        serializedName: "originalLabel",
        type: {
          name: "String"
        }
      },
      packageHash: {
        serializedName: "packageHash",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LegacyDeploymentHistoryAllOf: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LegacyDeploymentHistoryAllOf",
    modelProperties: {
      appVersion: {
        serializedName: "appVersion",
        type: {
          name: "String"
        }
      },
      isDisabled: {
        serializedName: "isDisabled",
        type: {
          name: "Boolean"
        }
      },
      isMandatory: {
        serializedName: "isMandatory",
        type: {
          name: "Boolean"
        }
      },
      rollout: {
        serializedName: "rollout",
        type: {
          name: "Number"
        }
      },
      blobUrl: {
        serializedName: "blobUrl",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      releaseMethod: {
        serializedName: "releaseMethod",
        type: {
          name: "String"
        }
      },
      uploadTime: {
        serializedName: "uploadTime",
        type: {
          name: "Number"
        }
      },
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      releasedByUserId: {
        serializedName: "releasedByUserId",
        type: {
          name: "String"
        }
      },
      manifestBlobUrl: {
        serializedName: "manifestBlobUrl",
        type: {
          name: "String"
        }
      },
      diffPackageMap: {
        serializedName: "diffPackageMap",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const LegacyDeploymentMetricsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LegacyDeploymentMetricsResponse",
    modelProperties: {
      metrics: {
        serializedName: "metrics",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className:
                "ComponentsNazfawSchemasLegacydeploymentmetricsresponsePropertiesMetricsAdditionalproperties"
            }
          }
        }
      }
    }
  }
};

export const ComponentsNazfawSchemasLegacydeploymentmetricsresponsePropertiesMetricsAdditionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsNazfawSchemasLegacydeploymentmetricsresponsePropertiesMetricsAdditionalproperties",
    modelProperties: {
      active: {
        serializedName: "active",
        required: true,
        type: {
          name: "Number"
        }
      },
      installed: {
        serializedName: "installed",
        type: {
          name: "Number"
        }
      },
      downloaded: {
        serializedName: "downloaded",
        type: {
          name: "Number"
        }
      },
      failed: {
        serializedName: "failed",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const LegacyDeploymentMetric: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LegacyDeploymentMetric",
    modelProperties: {
      active: {
        serializedName: "active",
        required: true,
        type: {
          name: "Number"
        }
      },
      installed: {
        serializedName: "installed",
        type: {
          name: "Number"
        }
      },
      downloaded: {
        serializedName: "downloaded",
        type: {
          name: "Number"
        }
      },
      failed: {
        serializedName: "failed",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const LegacyCodePushRelease: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LegacyCodePushRelease",
    modelProperties: {
      appVersion: {
        serializedName: "appVersion",
        type: {
          name: "String"
        }
      },
      isDisabled: {
        serializedName: "isDisabled",
        type: {
          name: "Boolean"
        }
      },
      isMandatory: {
        serializedName: "isMandatory",
        type: {
          name: "Boolean"
        }
      },
      rollout: {
        serializedName: "rollout",
        type: {
          name: "Number"
        }
      },
      blobUrl: {
        serializedName: "blobUrl",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      releaseMethod: {
        serializedName: "releaseMethod",
        type: {
          name: "String"
        }
      },
      uploadTime: {
        serializedName: "uploadTime",
        type: {
          name: "Number"
        }
      },
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      releasedByUserId: {
        serializedName: "releasedByUserId",
        type: {
          name: "String"
        }
      },
      manifestBlobUrl: {
        serializedName: "manifestBlobUrl",
        type: {
          name: "String"
        }
      },
      diffPackageMap: {
        serializedName: "diffPackageMap",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const LegacyCodePushReleaseModification: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LegacyCodePushReleaseModification",
    modelProperties: {
      packageInfo: {
        serializedName: "packageInfo",
        required: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const LegacyCodePushReleaseResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LegacyCodePushReleaseResponse",
    modelProperties: {
      package: {
        serializedName: "package",
        type: {
          name: "Composite",
          className: "LegacyCodePushReleaseResponsePackage"
        }
      }
    }
  }
};

export const LegacyCodePushReleaseResponsePackage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LegacyCodePushReleaseResponsePackage",
    modelProperties: {
      appVersion: {
        serializedName: "appVersion",
        type: {
          name: "String"
        }
      },
      isDisabled: {
        serializedName: "isDisabled",
        type: {
          name: "Boolean"
        }
      },
      isMandatory: {
        serializedName: "isMandatory",
        type: {
          name: "Boolean"
        }
      },
      rollout: {
        serializedName: "rollout",
        type: {
          name: "Number"
        }
      },
      blobUrl: {
        serializedName: "blobUrl",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      releaseMethod: {
        serializedName: "releaseMethod",
        type: {
          name: "String"
        }
      },
      uploadTime: {
        serializedName: "uploadTime",
        type: {
          name: "Number"
        }
      },
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      releasedByUserId: {
        serializedName: "releasedByUserId",
        type: {
          name: "String"
        }
      },
      manifestBlobUrl: {
        serializedName: "manifestBlobUrl",
        type: {
          name: "String"
        }
      },
      diffPackageMap: {
        serializedName: "diffPackageMap",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const LegacyAuthenticationResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LegacyAuthenticationResponse",
    modelProperties: {
      authenticated: {
        serializedName: "authenticated",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const LegacyAccountResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LegacyAccountResponse",
    modelProperties: {
      account: {
        serializedName: "account",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className:
                "Components750L8USchemasLegacyaccountresponsePropertiesAccountAdditionalproperties"
            }
          }
        }
      }
    }
  }
};

export const Components750L8USchemasLegacyaccountresponsePropertiesAccountAdditionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components750L8USchemasLegacyaccountresponsePropertiesAccountAdditionalproperties",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      linkedProviders: {
        serializedName: "linkedProviders",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const LegacyAccount: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LegacyAccount",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      linkedProviders: {
        serializedName: "linkedProviders",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const LegacyAppListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LegacyAppListResponse",
    modelProperties: {
      apps: {
        serializedName: "apps",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LegacyAppListResponseAppsItem"
            }
          }
        }
      }
    }
  }
};

export const LegacyAppListResponseAppsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LegacyAppListResponseAppsItem",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      collaborators: {
        serializedName: "collaborators",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className:
                "ComponentsZponlvSchemasLegacyapplistresponsePropertiesAppsItemsPropertiesCollaboratorsAdditionalproperties"
            }
          }
        }
      },
      deployments: {
        serializedName: "deployments",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ComponentsZponlvSchemasLegacyapplistresponsePropertiesAppsItemsPropertiesCollaboratorsAdditionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsZponlvSchemasLegacyapplistresponsePropertiesAppsItemsPropertiesCollaboratorsAdditionalproperties",
    modelProperties: {
      isCurrentAccount: {
        serializedName: "isCurrentAccount",
        type: {
          name: "Boolean"
        }
      },
      permission: {
        serializedName: "permission",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LegacyAppResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LegacyAppResponse",
    modelProperties: {
      app: {
        serializedName: "app",
        type: {
          name: "Composite",
          className: "LegacyAppResponseApp"
        }
      }
    }
  }
};

export const LegacyAppResponseApp: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LegacyAppResponseApp",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      collaborators: {
        serializedName: "collaborators",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className:
                "Components1M5T2AvSchemasLegacyappresponsePropertiesAppPropertiesCollaboratorsAdditionalproperties"
            }
          }
        }
      },
      deployments: {
        serializedName: "deployments",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Components1M5T2AvSchemasLegacyappresponsePropertiesAppPropertiesCollaboratorsAdditionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components1M5T2AvSchemasLegacyappresponsePropertiesAppPropertiesCollaboratorsAdditionalproperties",
    modelProperties: {
      isCurrentAccount: {
        serializedName: "isCurrentAccount",
        type: {
          name: "Boolean"
        }
      },
      permission: {
        serializedName: "permission",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LegacyApp: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LegacyApp",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      collaborators: {
        serializedName: "collaborators",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className:
                "ComponentsOyha9FSchemasLegacyappPropertiesCollaboratorsAdditionalproperties"
            }
          }
        }
      },
      deployments: {
        serializedName: "deployments",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ComponentsOyha9FSchemasLegacyappPropertiesCollaboratorsAdditionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsOyha9FSchemasLegacyappPropertiesCollaboratorsAdditionalproperties",
    modelProperties: {
      isCurrentAccount: {
        serializedName: "isCurrentAccount",
        type: {
          name: "Boolean"
        }
      },
      permission: {
        serializedName: "permission",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LegacyCollaborator: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LegacyCollaborator",
    modelProperties: {
      isCurrentAccount: {
        serializedName: "isCurrentAccount",
        type: {
          name: "Boolean"
        }
      },
      permission: {
        serializedName: "permission",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LegacyCollaborators: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LegacyCollaborators",
    modelProperties: {
      collaborators: {
        serializedName: "collaborators",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className:
                "ComponentsNlnkjeSchemasLegacycollaboratorsPropertiesCollaboratorsAdditionalproperties"
            }
          }
        }
      }
    }
  }
};

export const ComponentsNlnkjeSchemasLegacycollaboratorsPropertiesCollaboratorsAdditionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsNlnkjeSchemasLegacycollaboratorsPropertiesCollaboratorsAdditionalproperties",
    modelProperties: {
      isCurrentAccount: {
        serializedName: "isCurrentAccount",
        type: {
          name: "Boolean"
        }
      },
      permission: {
        serializedName: "permission",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LegacyCodePushApp: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LegacyCodePushApp",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      os: {
        serializedName: "os",
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      manuallyProvisionDeployments: {
        serializedName: "manuallyProvisionDeployments",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const CreateAccessKeyRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CreateAccessKeyRequest",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String"
        }
      },
      ttl: {
        serializedName: "ttl",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CreateAccessKeyResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CreateAccessKeyResponse",
    modelProperties: {
      accessKey: {
        serializedName: "accessKey",
        type: {
          name: "Composite",
          className: "CreateAccessKeyResponseAccessKey"
        }
      }
    }
  }
};

export const CreateAccessKeyResponseAccessKey: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CreateAccessKeyResponseAccessKey",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String"
        }
      },
      createdTime: {
        serializedName: "createdTime",
        type: {
          name: "Number"
        }
      },
      expires: {
        serializedName: "expires",
        type: {
          name: "Number"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      isSession: {
        serializedName: "isSession",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AccessKey: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccessKey",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String"
        }
      },
      createdTime: {
        serializedName: "createdTime",
        type: {
          name: "Number"
        }
      },
      expires: {
        serializedName: "expires",
        type: {
          name: "Number"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      isSession: {
        serializedName: "isSession",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AccessKeyListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccessKeyListResponse",
    modelProperties: {
      accessKeys: {
        serializedName: "accessKeys",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessKeyListResponseAccessKeysItem"
            }
          }
        }
      }
    }
  }
};

export const AccessKeyListResponseAccessKeysItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccessKeyListResponseAccessKeysItem",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String"
        }
      },
      createdTime: {
        serializedName: "createdTime",
        type: {
          name: "Number"
        }
      },
      expires: {
        serializedName: "expires",
        type: {
          name: "Number"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      isSession: {
        serializedName: "isSession",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AlertOperationResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertOperationResult",
    modelProperties: {
      requestId: {
        serializedName: "request_id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertWebhook: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertWebhook",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        constraints: {
          MaxLength: 512
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      eventTypes: {
        serializedName: "event_types",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AlertWebhookListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertWebhookListResult",
    modelProperties: {
      values: {
        serializedName: "values",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AlertWebhookListResultValuesItem"
            }
          }
        }
      }
    }
  }
};

export const AlertWebhookListResultValuesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertWebhookListResultValuesItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        constraints: {
          MaxLength: 512
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      eventTypes: {
        serializedName: "event_types",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AlertWebhookPingResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertWebhookPingResult",
    modelProperties: {
      responseStatusCode: {
        serializedName: "response_status_code",
        required: true,
        type: {
          name: "Number"
        }
      },
      responseReason: {
        serializedName: "response_reason",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertEmailSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertEmailSettings",
    modelProperties: {
      settings: {
        serializedName: "settings",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AlertEmailSettingsItem"
            }
          }
        }
      }
    }
  }
};

export const AlertEmailSettingsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertEmailSettingsItem",
    modelProperties: {
      eventType: {
        defaultValue: "crash_newCrashGroupCreated",
        isConstant: true,
        serializedName: "event_type",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "String"
        }
      },
      defaultValue: {
        serializedName: "default_value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertUserEmailSettingsResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertUserEmailSettingsResult",
    modelProperties: {
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "enabled",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      userId: {
        serializedName: "userId",
        type: {
          name: "String"
        }
      },
      settings: {
        serializedName: "settings",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AlertUserEmailSettingsResultSettingsItem"
            }
          }
        }
      }
    }
  }
};

export const AlertUserEmailSettingsResultSettingsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertUserEmailSettingsResultSettingsItem",
    modelProperties: {
      eventType: {
        defaultValue: "crash_newCrashGroupCreated",
        isConstant: true,
        serializedName: "event_type",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "String"
        }
      },
      defaultValue: {
        serializedName: "default_value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsDzu91ISchemasAlertuserappemailsettingsresultAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsDzu91ISchemasAlertuserappemailsettingsresultAllof0",
    modelProperties: {
      requestId: {
        serializedName: "request_id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1Cg98M4SchemasAlertuserappemailsettingsresultAllof0Allof1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components1Cg98M4SchemasAlertuserappemailsettingsresultAllof0Allof1",
    modelProperties: {
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "enabled",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      userId: {
        serializedName: "userId",
        type: {
          name: "String"
        }
      },
      settings: {
        serializedName: "settings",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AlertUserAppEmailSettingsResult01SettingsItem"
            }
          }
        }
      }
    }
  }
};

export const AlertUserAppEmailSettingsResult01SettingsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertUserAppEmailSettingsResult01SettingsItem",
    modelProperties: {
      eventType: {
        defaultValue: "crash_newCrashGroupCreated",
        isConstant: true,
        serializedName: "event_type",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "String"
        }
      },
      defaultValue: {
        serializedName: "default_value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsU99EdzSchemasAlertingvstsbugtrackersettingsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsU99EdzSchemasAlertingvstsbugtrackersettingsAllof0",
    uberParent: "ComponentsU99EdzSchemasAlertingvstsbugtrackersettingsAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      callbackUrl: {
        serializedName: "callback_url",
        type: {
          name: "String"
        }
      },
      ownerName: {
        serializedName: "owner_name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsG0MwtxSchemasAlertinggithubbugtrackersettingsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsG0MwtxSchemasAlertinggithubbugtrackersettingsAllof0",
    uberParent: "ComponentsG0MwtxSchemasAlertinggithubbugtrackersettingsAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      callbackUrl: {
        serializedName: "callback_url",
        type: {
          name: "String"
        }
      },
      ownerName: {
        serializedName: "owner_name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsL2Xf6RSchemasAlertingjirabugtrackersettingsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsL2Xf6RSchemasAlertingjirabugtrackersettingsAllof0",
    uberParent: "ComponentsL2Xf6RSchemasAlertingjirabugtrackersettingsAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      callbackUrl: {
        serializedName: "callback_url",
        type: {
          name: "String"
        }
      },
      ownerName: {
        serializedName: "owner_name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertingBugtracker: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertingBugtracker",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      tokenId: {
        serializedName: "token_id",
        type: {
          name: "String"
        }
      },
      eventTypes: {
        serializedName: "event_types",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      settings: {
        serializedName: "settings",
        type: {
          name: "Composite",
          className: "AlertingBugtrackerSettings"
        }
      }
    }
  }
};

export const AlertingBugtrackerSettings: coreClient.CompositeMapper = {
  serializedName: "AlertingBugtrackerSettings",
  type: {
    name: "Composite",
    className: "AlertingBugtrackerSettings",
    uberParent: "AlertingBugtrackerSettings",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      callbackUrl: {
        serializedName: "callback_url",
        type: {
          name: "String"
        }
      },
      ownerName: {
        serializedName: "owner_name",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BugTrackerTokenId: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BugTrackerTokenId",
    modelProperties: {
      tokenId: {
        serializedName: "token_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertBugTrackerReposResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertBugTrackerReposResult",
    modelProperties: {
      repoType: {
        serializedName: "repo_type",
        type: {
          name: "String"
        }
      },
      repositories: {
        serializedName: "repositories",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AlertBugTrackerReposResultRepositoriesItem"
            }
          }
        }
      }
    }
  }
};

export const AlertBugTrackerReposResultRepositoriesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertBugTrackerReposResultRepositoriesItem",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      private: {
        serializedName: "private",
        type: {
          name: "Boolean"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className: "AlertBugTrackerReposResultRepositoriesItemOwner"
        }
      }
    }
  }
};

export const AlertBugTrackerReposResultRepositoriesItemOwner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertBugTrackerReposResultRepositoriesItemOwner",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      login: {
        serializedName: "login",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertBugTrackerRepo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertBugTrackerRepo",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      private: {
        serializedName: "private",
        type: {
          name: "Boolean"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className: "AlertBugTrackerRepoOwner"
        }
      }
    }
  }
};

export const AlertBugTrackerRepoOwner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertBugTrackerRepoOwner",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      login: {
        serializedName: "login",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertCrashGroupStateChange: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertCrashGroupStateChange",
    modelProperties: {
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertingAccessTokenResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertingAccessTokenResponse",
    modelProperties: {
      accessTokenId: {
        serializedName: "access_token_id",
        required: true,
        type: {
          name: "String"
        }
      },
      externalProviderName: {
        serializedName: "external_provider_name",
        required: true,
        type: {
          name: "String"
        }
      },
      externalUserEmail: {
        serializedName: "external_user_email",
        required: true,
        type: {
          name: "String"
        }
      },
      externalAccountName: {
        serializedName: "external_account_name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EventSetting: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EventSetting",
    modelProperties: {
      eventType: {
        defaultValue: "crash_newCrashGroupCreated",
        isConstant: true,
        serializedName: "event_type",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "String"
        }
      },
      defaultValue: {
        serializedName: "default_value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertingEvent: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertingEvent",
    modelProperties: {
      eventTimestamp: {
        serializedName: "event_timestamp",
        required: true,
        type: {
          name: "String"
        }
      },
      eventId: {
        serializedName: "event_id",
        required: true,
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const NewCrashGroupAlertingEvent: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NewCrashGroupAlertingEvent",
    modelProperties: {
      crashGroupProperties: {
        serializedName: "crash_group_properties",
        type: {
          name: "Composite",
          className: "NewCrashGroupAlertingEventCrashGroupProperties"
        }
      }
    }
  }
};

export const NewCrashGroupAlertingEventCrashGroupProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NewCrashGroupAlertingEventCrashGroupProperties",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        required: true,
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      },
      appDisplayName: {
        serializedName: "app_display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      appPlatform: {
        serializedName: "app_platform",
        required: true,
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "app_version",
        required: true,
        type: {
          name: "String"
        }
      },
      stackTrace: {
        serializedName: "stack_trace",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const NewAppReleaseAlertingEvent: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NewAppReleaseAlertingEvent",
    modelProperties: {
      userIds: {
        serializedName: "user_ids",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      disableWebhook: {
        serializedName: "disable_webhook",
        type: {
          name: "Boolean"
        }
      },
      appReleaseProperties: {
        serializedName: "app_release_properties",
        type: {
          name: "Composite",
          className: "NewAppReleaseAlertingEventAppReleaseProperties"
        }
      }
    }
  }
};

export const NewAppReleaseAlertingEventAppReleaseProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NewAppReleaseAlertingEventAppReleaseProperties",
    modelProperties: {
      appName: {
        serializedName: "app_name",
        required: true,
        type: {
          name: "String"
        }
      },
      appDisplayName: {
        serializedName: "app_display_name",
        required: true,
        type: {
          name: "String"
        }
      },
      releaseId: {
        serializedName: "release_id",
        required: true,
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        required: true,
        type: {
          name: "String"
        }
      },
      uploadedAt: {
        serializedName: "uploaded_at",
        required: true,
        type: {
          name: "String"
        }
      },
      fingerprint: {
        serializedName: "fingerprint",
        type: {
          name: "String"
        }
      },
      releaseNotes: {
        serializedName: "release_notes",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "String"
        }
      },
      shortVersion: {
        serializedName: "short_version",
        required: true,
        type: {
          name: "String"
        }
      },
      minOs: {
        serializedName: "min_os",
        type: {
          name: "String"
        }
      },
      mandatoryUpdate: {
        serializedName: "mandatory_update",
        type: {
          name: "Boolean"
        }
      },
      size: {
        serializedName: "size",
        required: true,
        type: {
          name: "Number"
        }
      },
      provisioningProfileName: {
        serializedName: "provisioning_profile_name",
        type: {
          name: "String"
        }
      },
      provisioningProfileType: {
        serializedName: "provisioning_profile_type",
        type: {
          name: "String"
        }
      },
      bundleIdentifier: {
        serializedName: "bundle_identifier",
        required: true,
        type: {
          name: "String"
        }
      },
      installLink: {
        serializedName: "install_link",
        required: true,
        type: {
          name: "String"
        }
      },
      iconLink: {
        serializedName: "icon_link",
        type: {
          name: "String"
        }
      },
      distributionGroupId: {
        serializedName: "distribution_group_id",
        type: {
          name: "String"
        }
      },
      installable: {
        serializedName: "installable",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const BugTrackerIssuesResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BugTrackerIssuesResult",
    modelProperties: {
      issues: {
        serializedName: "issues",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BugTrackerIssuesResultIssuesItem"
            }
          }
        }
      }
    }
  }
};

export const BugTrackerIssuesResultIssuesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BugTrackerIssuesResultIssuesItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      title: {
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      bugTrackerType: {
        serializedName: "bug_tracker_type",
        type: {
          name: "String"
        }
      },
      repoName: {
        serializedName: "repo_name",
        type: {
          name: "String"
        }
      },
      mobileCenterId: {
        serializedName: "mobile_center_id",
        type: {
          name: "String"
        }
      },
      eventType: {
        serializedName: "event_type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BugTrackerIssueResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BugTrackerIssueResult",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      title: {
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      bugTrackerType: {
        serializedName: "bug_tracker_type",
        type: {
          name: "String"
        }
      },
      repoName: {
        serializedName: "repo_name",
        type: {
          name: "String"
        }
      },
      mobileCenterId: {
        serializedName: "mobile_center_id",
        type: {
          name: "String"
        }
      },
      eventType: {
        serializedName: "event_type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BugTrackerStateResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BugTrackerStateResult",
    modelProperties: {
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EventResponseResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EventResponseResult",
    modelProperties: {
      requestId: {
        serializedName: "request_id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertingError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertingError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AggregatedBillingInformation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AggregatedBillingInformation",
    modelProperties: {
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      billingPlans: {
        serializedName: "billingPlans",
        type: {
          name: "Composite",
          className: "AggregatedBillingInformationBillingPlans"
        }
      },
      usage: {
        serializedName: "usage",
        type: {
          name: "Composite",
          className: "AggregatedBillingInformationUsage"
        }
      },
      azureSubscriptionId: {
        serializedName: "azureSubscriptionId",
        type: {
          name: "String"
        }
      },
      azureSubscriptionState: {
        serializedName: "azureSubscriptionState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AggregatedBillingInformationBillingPlans: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AggregatedBillingInformationBillingPlans",
    modelProperties: {
      buildService: {
        serializedName: "buildService",
        type: {
          name: "Composite",
          className: "AggregatedBillingInformationBillingPlansBuildService"
        }
      },
      testService: {
        serializedName: "testService",
        type: {
          name: "Composite",
          className: "AggregatedBillingInformationBillingPlansTestService"
        }
      }
    }
  }
};

export const AggregatedBillingInformationBillingPlansBuildService: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AggregatedBillingInformationBillingPlansBuildService",
    modelProperties: {
      canSelectTrialPlan: {
        serializedName: "canSelectTrialPlan",
        type: {
          name: "Boolean"
        }
      },
      lastTrialPlanExpirationTime: {
        serializedName: "lastTrialPlanExpirationTime",
        type: {
          name: "String"
        }
      },
      currentBillingPeriod: {
        serializedName: "currentBillingPeriod",
        type: {
          name: "Composite",
          className:
            "AggregatedBillingInformationBillingPlansBuildServiceCurrentBillingPeriod"
        }
      }
    }
  }
};

export const AggregatedBillingInformationBillingPlansBuildServiceCurrentBillingPeriod: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "AggregatedBillingInformationBillingPlansBuildServiceCurrentBillingPeriod",
    modelProperties: {
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "String"
        }
      },
      byAccount: {
        serializedName: "byAccount",
        type: {
          name: "Composite",
          className:
            "AggregatedBillingInformationBillingPlansBuildServiceCurrentBillingPeriodByAccount"
        }
      }
    }
  }
};

export const AggregatedBillingInformationBillingPlansBuildServiceCurrentBillingPeriodByAccount: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "AggregatedBillingInformationBillingPlansBuildServiceCurrentBillingPeriodByAccount",
    modelProperties: {
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      plan: {
        serializedName: "plan",
        type: {
          name: "Composite",
          className:
            "AggregatedBillingInformationBillingPlansBuildServiceCurrentBillingPeriodByAccountPlan"
        }
      }
    }
  }
};

export const AggregatedBillingInformationBillingPlansBuildServiceCurrentBillingPeriodByAccountPlan: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "AggregatedBillingInformationBillingPlansBuildServiceCurrentBillingPeriodByAccountPlan",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      price: {
        serializedName: "price",
        type: {
          name: "Number"
        }
      },
      paymentSource: {
        serializedName: "paymentSource",
        type: {
          name: "String"
        }
      },
      service: {
        serializedName: "service",
        type: {
          name: "String"
        }
      },
      limits: {
        serializedName: "limits",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } }
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } }
          }
        }
      },
      parentId: {
        serializedName: "parentId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AggregatedBillingInformationBillingPlansTestService: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AggregatedBillingInformationBillingPlansTestService",
    modelProperties: {
      canSelectTrialPlan: {
        serializedName: "canSelectTrialPlan",
        type: {
          name: "Boolean"
        }
      },
      lastTrialPlanExpirationTime: {
        serializedName: "lastTrialPlanExpirationTime",
        type: {
          name: "String"
        }
      },
      currentBillingPeriod: {
        serializedName: "currentBillingPeriod",
        type: {
          name: "Composite",
          className:
            "AggregatedBillingInformationBillingPlansTestServiceCurrentBillingPeriod"
        }
      }
    }
  }
};

export const AggregatedBillingInformationBillingPlansTestServiceCurrentBillingPeriod: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "AggregatedBillingInformationBillingPlansTestServiceCurrentBillingPeriod",
    modelProperties: {
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "String"
        }
      },
      byAccount: {
        serializedName: "byAccount",
        type: {
          name: "Composite",
          className:
            "AggregatedBillingInformationBillingPlansTestServiceCurrentBillingPeriodByAccount"
        }
      }
    }
  }
};

export const AggregatedBillingInformationBillingPlansTestServiceCurrentBillingPeriodByAccount: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "AggregatedBillingInformationBillingPlansTestServiceCurrentBillingPeriodByAccount",
    modelProperties: {
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      plan: {
        serializedName: "plan",
        type: {
          name: "Composite",
          className:
            "AggregatedBillingInformationBillingPlansTestServiceCurrentBillingPeriodByAccountPlan"
        }
      }
    }
  }
};

export const AggregatedBillingInformationBillingPlansTestServiceCurrentBillingPeriodByAccountPlan: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "AggregatedBillingInformationBillingPlansTestServiceCurrentBillingPeriodByAccountPlan",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      price: {
        serializedName: "price",
        type: {
          name: "Number"
        }
      },
      paymentSource: {
        serializedName: "paymentSource",
        type: {
          name: "String"
        }
      },
      service: {
        serializedName: "service",
        type: {
          name: "String"
        }
      },
      limits: {
        serializedName: "limits",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } }
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } }
          }
        }
      },
      parentId: {
        serializedName: "parentId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AggregatedBillingInformationUsage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AggregatedBillingInformationUsage",
    modelProperties: {
      buildService: {
        serializedName: "buildService",
        type: {
          name: "Composite",
          className: "AggregatedBillingInformationUsageBuildService"
        }
      },
      testService: {
        serializedName: "testService",
        type: {
          name: "Composite",
          className: "AggregatedBillingInformationUsageTestService"
        }
      }
    }
  }
};

export const AggregatedBillingInformationUsageBuildService: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AggregatedBillingInformationUsageBuildService",
    modelProperties: {
      currentUsagePeriod: {
        serializedName: "currentUsagePeriod",
        type: {
          name: "Composite",
          className:
            "AggregatedBillingInformationUsageBuildServiceCurrentUsagePeriod"
        }
      }
    }
  }
};

export const AggregatedBillingInformationUsageBuildServiceCurrentUsagePeriod: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "AggregatedBillingInformationUsageBuildServiceCurrentUsagePeriod",
    modelProperties: {
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "String"
        }
      },
      byAccount: {
        serializedName: "byAccount",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } }
        }
      },
      byApp: {
        serializedName: "byApp",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "Number" } } }
          }
        }
      }
    }
  }
};

export const AggregatedBillingInformationUsageTestService: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AggregatedBillingInformationUsageTestService",
    modelProperties: {
      currentUsagePeriod: {
        serializedName: "currentUsagePeriod",
        type: {
          name: "Composite",
          className:
            "AggregatedBillingInformationUsageTestServiceCurrentUsagePeriod"
        }
      }
    }
  }
};

export const AggregatedBillingInformationUsageTestServiceCurrentUsagePeriod: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AggregatedBillingInformationUsageTestServiceCurrentUsagePeriod",
    modelProperties: {
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "String"
        }
      },
      byAccount: {
        serializedName: "byAccount",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } }
        }
      },
      byApp: {
        serializedName: "byApp",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "Number" } } }
          }
        }
      }
    }
  }
};

export const AllAccountsAggregatedBillingInformation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AllAccountsAggregatedBillingInformation",
    modelProperties: {
      aggregatedBillings: {
        serializedName: "aggregatedBillings",
        type: {
          name: "Composite",
          className: "AllAccountsAggregatedBillingInformationAggregatedBillings"
        }
      }
    }
  }
};

export const AllAccountsAggregatedBillingInformationAggregatedBillings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AllAccountsAggregatedBillingInformationAggregatedBillings",
    modelProperties: {
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      billingPlans: {
        serializedName: "billingPlans",
        type: {
          name: "Composite",
          className:
            "AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlans"
        }
      },
      usage: {
        serializedName: "usage",
        type: {
          name: "Composite",
          className:
            "AllAccountsAggregatedBillingInformationAggregatedBillingsUsage"
        }
      },
      azureSubscriptionId: {
        serializedName: "azureSubscriptionId",
        type: {
          name: "String"
        }
      },
      azureSubscriptionState: {
        serializedName: "azureSubscriptionState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlans: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlans",
    modelProperties: {
      buildService: {
        serializedName: "buildService",
        type: {
          name: "Composite",
          className:
            "AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildService"
        }
      },
      testService: {
        serializedName: "testService",
        type: {
          name: "Composite",
          className:
            "AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestService"
        }
      }
    }
  }
};

export const AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildService: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildService",
    modelProperties: {
      canSelectTrialPlan: {
        serializedName: "canSelectTrialPlan",
        type: {
          name: "Boolean"
        }
      },
      lastTrialPlanExpirationTime: {
        serializedName: "lastTrialPlanExpirationTime",
        type: {
          name: "String"
        }
      },
      currentBillingPeriod: {
        serializedName: "currentBillingPeriod",
        type: {
          name: "Composite",
          className:
            "AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildServiceCurrentBillingPeriod"
        }
      }
    }
  }
};

export const AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildServiceCurrentBillingPeriod: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildServiceCurrentBillingPeriod",
    modelProperties: {
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "String"
        }
      },
      byAccount: {
        serializedName: "byAccount",
        type: {
          name: "Composite",
          className:
            "AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildServiceCurrentBillingPeriodByAccount"
        }
      }
    }
  }
};

export const AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildServiceCurrentBillingPeriodByAccount: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildServiceCurrentBillingPeriodByAccount",
    modelProperties: {
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      plan: {
        serializedName: "plan",
        type: {
          name: "Composite",
          className:
            "AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildServiceCurrentBillingPeriodByAccountPlan"
        }
      }
    }
  }
};

export const AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildServiceCurrentBillingPeriodByAccountPlan: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansBuildServiceCurrentBillingPeriodByAccountPlan",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      price: {
        serializedName: "price",
        type: {
          name: "Number"
        }
      },
      paymentSource: {
        serializedName: "paymentSource",
        type: {
          name: "String"
        }
      },
      service: {
        serializedName: "service",
        type: {
          name: "String"
        }
      },
      limits: {
        serializedName: "limits",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } }
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } }
          }
        }
      },
      parentId: {
        serializedName: "parentId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestService: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestService",
    modelProperties: {
      canSelectTrialPlan: {
        serializedName: "canSelectTrialPlan",
        type: {
          name: "Boolean"
        }
      },
      lastTrialPlanExpirationTime: {
        serializedName: "lastTrialPlanExpirationTime",
        type: {
          name: "String"
        }
      },
      currentBillingPeriod: {
        serializedName: "currentBillingPeriod",
        type: {
          name: "Composite",
          className:
            "AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestServiceCurrentBillingPeriod"
        }
      }
    }
  }
};

export const AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestServiceCurrentBillingPeriod: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestServiceCurrentBillingPeriod",
    modelProperties: {
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "String"
        }
      },
      byAccount: {
        serializedName: "byAccount",
        type: {
          name: "Composite",
          className:
            "AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestServiceCurrentBillingPeriodByAccount"
        }
      }
    }
  }
};

export const AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestServiceCurrentBillingPeriodByAccount: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestServiceCurrentBillingPeriodByAccount",
    modelProperties: {
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      plan: {
        serializedName: "plan",
        type: {
          name: "Composite",
          className:
            "AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestServiceCurrentBillingPeriodByAccountPlan"
        }
      }
    }
  }
};

export const AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestServiceCurrentBillingPeriodByAccountPlan: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "AllAccountsAggregatedBillingInformationAggregatedBillingsBillingPlansTestServiceCurrentBillingPeriodByAccountPlan",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      price: {
        serializedName: "price",
        type: {
          name: "Number"
        }
      },
      paymentSource: {
        serializedName: "paymentSource",
        type: {
          name: "String"
        }
      },
      service: {
        serializedName: "service",
        type: {
          name: "String"
        }
      },
      limits: {
        serializedName: "limits",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } }
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } }
          }
        }
      },
      parentId: {
        serializedName: "parentId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AllAccountsAggregatedBillingInformationAggregatedBillingsUsage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AllAccountsAggregatedBillingInformationAggregatedBillingsUsage",
    modelProperties: {
      buildService: {
        serializedName: "buildService",
        type: {
          name: "Composite",
          className:
            "AllAccountsAggregatedBillingInformationAggregatedBillingsUsageBuildService"
        }
      },
      testService: {
        serializedName: "testService",
        type: {
          name: "Composite",
          className:
            "AllAccountsAggregatedBillingInformationAggregatedBillingsUsageTestService"
        }
      }
    }
  }
};

export const AllAccountsAggregatedBillingInformationAggregatedBillingsUsageBuildService: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "AllAccountsAggregatedBillingInformationAggregatedBillingsUsageBuildService",
    modelProperties: {
      currentUsagePeriod: {
        serializedName: "currentUsagePeriod",
        type: {
          name: "Composite",
          className:
            "AllAccountsAggregatedBillingInformationAggregatedBillingsUsageBuildServiceCurrentUsagePeriod"
        }
      }
    }
  }
};

export const AllAccountsAggregatedBillingInformationAggregatedBillingsUsageBuildServiceCurrentUsagePeriod: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "AllAccountsAggregatedBillingInformationAggregatedBillingsUsageBuildServiceCurrentUsagePeriod",
    modelProperties: {
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "String"
        }
      },
      byAccount: {
        serializedName: "byAccount",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } }
        }
      },
      byApp: {
        serializedName: "byApp",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "Number" } } }
          }
        }
      }
    }
  }
};

export const AllAccountsAggregatedBillingInformationAggregatedBillingsUsageTestService: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "AllAccountsAggregatedBillingInformationAggregatedBillingsUsageTestService",
    modelProperties: {
      currentUsagePeriod: {
        serializedName: "currentUsagePeriod",
        type: {
          name: "Composite",
          className:
            "AllAccountsAggregatedBillingInformationAggregatedBillingsUsageTestServiceCurrentUsagePeriod"
        }
      }
    }
  }
};

export const AllAccountsAggregatedBillingInformationAggregatedBillingsUsageTestServiceCurrentUsagePeriod: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "AllAccountsAggregatedBillingInformationAggregatedBillingsUsageTestServiceCurrentUsagePeriod",
    modelProperties: {
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "String"
        }
      },
      byAccount: {
        serializedName: "byAccount",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } }
        }
      },
      byApp: {
        serializedName: "byApp",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "Number" } } }
          }
        }
      }
    }
  }
};

export const BillingError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingError",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "BillingErrorError"
        }
      }
    }
  }
};

export const BillingErrorError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingErrorError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BillingInformationPlans: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingInformationPlans",
    modelProperties: {
      buildService: {
        serializedName: "buildService",
        type: {
          name: "Composite",
          className: "BillingInformationPlansBuildService"
        }
      },
      testService: {
        serializedName: "testService",
        type: {
          name: "Composite",
          className: "BillingInformationPlansTestService"
        }
      }
    }
  }
};

export const BillingInformationPlansBuildService: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingInformationPlansBuildService",
    modelProperties: {
      canSelectTrialPlan: {
        serializedName: "canSelectTrialPlan",
        type: {
          name: "Boolean"
        }
      },
      lastTrialPlanExpirationTime: {
        serializedName: "lastTrialPlanExpirationTime",
        type: {
          name: "String"
        }
      },
      currentBillingPeriod: {
        serializedName: "currentBillingPeriod",
        type: {
          name: "Composite",
          className: "BillingInformationPlansBuildServiceCurrentBillingPeriod"
        }
      }
    }
  }
};

export const BillingInformationPlansBuildServiceCurrentBillingPeriod: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingInformationPlansBuildServiceCurrentBillingPeriod",
    modelProperties: {
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "String"
        }
      },
      byAccount: {
        serializedName: "byAccount",
        type: {
          name: "Composite",
          className:
            "BillingInformationPlansBuildServiceCurrentBillingPeriodByAccount"
        }
      }
    }
  }
};

export const BillingInformationPlansBuildServiceCurrentBillingPeriodByAccount: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "BillingInformationPlansBuildServiceCurrentBillingPeriodByAccount",
    modelProperties: {
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      plan: {
        serializedName: "plan",
        type: {
          name: "Composite",
          className:
            "BillingInformationPlansBuildServiceCurrentBillingPeriodByAccountPlan"
        }
      }
    }
  }
};

export const BillingInformationPlansBuildServiceCurrentBillingPeriodByAccountPlan: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "BillingInformationPlansBuildServiceCurrentBillingPeriodByAccountPlan",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      price: {
        serializedName: "price",
        type: {
          name: "Number"
        }
      },
      paymentSource: {
        serializedName: "paymentSource",
        type: {
          name: "String"
        }
      },
      service: {
        serializedName: "service",
        type: {
          name: "String"
        }
      },
      limits: {
        serializedName: "limits",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } }
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } }
          }
        }
      },
      parentId: {
        serializedName: "parentId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BillingInformationPlansTestService: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingInformationPlansTestService",
    modelProperties: {
      canSelectTrialPlan: {
        serializedName: "canSelectTrialPlan",
        type: {
          name: "Boolean"
        }
      },
      lastTrialPlanExpirationTime: {
        serializedName: "lastTrialPlanExpirationTime",
        type: {
          name: "String"
        }
      },
      currentBillingPeriod: {
        serializedName: "currentBillingPeriod",
        type: {
          name: "Composite",
          className: "BillingInformationPlansTestServiceCurrentBillingPeriod"
        }
      }
    }
  }
};

export const BillingInformationPlansTestServiceCurrentBillingPeriod: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingInformationPlansTestServiceCurrentBillingPeriod",
    modelProperties: {
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "String"
        }
      },
      byAccount: {
        serializedName: "byAccount",
        type: {
          name: "Composite",
          className:
            "BillingInformationPlansTestServiceCurrentBillingPeriodByAccount"
        }
      }
    }
  }
};

export const BillingInformationPlansTestServiceCurrentBillingPeriodByAccount: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "BillingInformationPlansTestServiceCurrentBillingPeriodByAccount",
    modelProperties: {
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      plan: {
        serializedName: "plan",
        type: {
          name: "Composite",
          className:
            "BillingInformationPlansTestServiceCurrentBillingPeriodByAccountPlan"
        }
      }
    }
  }
};

export const BillingInformationPlansTestServiceCurrentBillingPeriodByAccountPlan: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "BillingInformationPlansTestServiceCurrentBillingPeriodByAccountPlan",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      price: {
        serializedName: "price",
        type: {
          name: "Number"
        }
      },
      paymentSource: {
        serializedName: "paymentSource",
        type: {
          name: "String"
        }
      },
      service: {
        serializedName: "service",
        type: {
          name: "String"
        }
      },
      limits: {
        serializedName: "limits",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } }
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } }
          }
        }
      },
      parentId: {
        serializedName: "parentId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BillingInformationSearchResultsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingInformationSearchResultsItem",
    modelProperties: {
      accountId: {
        serializedName: "accountId",
        type: {
          name: "String"
        }
      },
      accountName: {
        serializedName: "accountName",
        type: {
          name: "String"
        }
      },
      billingInternalAccountId: {
        serializedName: "billingInternalAccountId",
        type: {
          name: "String"
        }
      },
      buildPlan: {
        serializedName: "buildPlan",
        type: {
          name: "String"
        }
      },
      testPlan: {
        serializedName: "testPlan",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BillingPeriod: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingPeriod",
    modelProperties: {
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "String"
        }
      },
      byAccount: {
        serializedName: "byAccount",
        type: {
          name: "Composite",
          className: "BillingPeriodByAccount"
        }
      }
    }
  }
};

export const BillingPeriodByAccount: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingPeriodByAccount",
    modelProperties: {
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      plan: {
        serializedName: "plan",
        type: {
          name: "Composite",
          className: "BillingPeriodByAccountPlan"
        }
      }
    }
  }
};

export const BillingPeriodByAccountPlan: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingPeriodByAccountPlan",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      price: {
        serializedName: "price",
        type: {
          name: "Number"
        }
      },
      paymentSource: {
        serializedName: "paymentSource",
        type: {
          name: "String"
        }
      },
      service: {
        serializedName: "service",
        type: {
          name: "String"
        }
      },
      limits: {
        serializedName: "limits",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } }
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } }
          }
        }
      },
      parentId: {
        serializedName: "parentId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BillingPlan: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingPlan",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      price: {
        serializedName: "price",
        type: {
          name: "Number"
        }
      },
      paymentSource: {
        serializedName: "paymentSource",
        type: {
          name: "String"
        }
      },
      service: {
        serializedName: "service",
        type: {
          name: "String"
        }
      },
      limits: {
        serializedName: "limits",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } }
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } }
          }
        }
      },
      parentId: {
        serializedName: "parentId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BillingPlansChangeTypeResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingPlansChangeTypeResponse",
    modelProperties: {
      result: {
        serializedName: "result",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BillingPlanSelection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingPlanSelection",
    modelProperties: {
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      plan: {
        serializedName: "plan",
        type: {
          name: "Composite",
          className: "BillingPlanSelectionPlan"
        }
      }
    }
  }
};

export const BillingPlanSelectionPlan: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingPlanSelectionPlan",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      price: {
        serializedName: "price",
        type: {
          name: "Number"
        }
      },
      paymentSource: {
        serializedName: "paymentSource",
        type: {
          name: "String"
        }
      },
      service: {
        serializedName: "service",
        type: {
          name: "String"
        }
      },
      limits: {
        serializedName: "limits",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } }
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } }
          }
        }
      },
      parentId: {
        serializedName: "parentId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BillingPlansSelection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingPlansSelection",
    modelProperties: {
      buildService: {
        serializedName: "buildService",
        type: {
          name: "Composite",
          className: "BillingPlansSelectionBuildService"
        }
      },
      testService: {
        serializedName: "testService",
        type: {
          name: "Composite",
          className: "BillingPlansSelectionTestService"
        }
      }
    }
  }
};

export const BillingPlansSelectionBuildService: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingPlansSelectionBuildService",
    modelProperties: {
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      plan: {
        serializedName: "plan",
        type: {
          name: "Composite",
          className: "BillingPlansSelectionBuildServicePlan"
        }
      }
    }
  }
};

export const BillingPlansSelectionBuildServicePlan: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingPlansSelectionBuildServicePlan",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      price: {
        serializedName: "price",
        type: {
          name: "Number"
        }
      },
      paymentSource: {
        serializedName: "paymentSource",
        type: {
          name: "String"
        }
      },
      service: {
        serializedName: "service",
        type: {
          name: "String"
        }
      },
      limits: {
        serializedName: "limits",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } }
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } }
          }
        }
      },
      parentId: {
        serializedName: "parentId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BillingPlansSelectionTestService: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingPlansSelectionTestService",
    modelProperties: {
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      plan: {
        serializedName: "plan",
        type: {
          name: "Composite",
          className: "BillingPlansSelectionTestServicePlan"
        }
      }
    }
  }
};

export const BillingPlansSelectionTestServicePlan: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingPlansSelectionTestServicePlan",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      price: {
        serializedName: "price",
        type: {
          name: "Number"
        }
      },
      paymentSource: {
        serializedName: "paymentSource",
        type: {
          name: "String"
        }
      },
      service: {
        serializedName: "service",
        type: {
          name: "String"
        }
      },
      limits: {
        serializedName: "limits",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } }
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } }
          }
        }
      },
      parentId: {
        serializedName: "parentId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BillingResourceUsage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingResourceUsage",
    modelProperties: {
      buildService: {
        serializedName: "buildService",
        type: {
          name: "Composite",
          className: "BillingResourceUsageBuildService"
        }
      },
      testService: {
        serializedName: "testService",
        type: {
          name: "Composite",
          className: "BillingResourceUsageTestService"
        }
      }
    }
  }
};

export const BillingResourceUsageBuildService: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingResourceUsageBuildService",
    modelProperties: {
      currentUsagePeriod: {
        serializedName: "currentUsagePeriod",
        type: {
          name: "Composite",
          className: "BillingResourceUsageBuildServiceCurrentUsagePeriod"
        }
      }
    }
  }
};

export const BillingResourceUsageBuildServiceCurrentUsagePeriod: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingResourceUsageBuildServiceCurrentUsagePeriod",
    modelProperties: {
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "String"
        }
      },
      byAccount: {
        serializedName: "byAccount",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } }
        }
      },
      byApp: {
        serializedName: "byApp",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "Number" } } }
          }
        }
      }
    }
  }
};

export const BillingResourceUsageTestService: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingResourceUsageTestService",
    modelProperties: {
      currentUsagePeriod: {
        serializedName: "currentUsagePeriod",
        type: {
          name: "Composite",
          className: "BillingResourceUsageTestServiceCurrentUsagePeriod"
        }
      }
    }
  }
};

export const BillingResourceUsageTestServiceCurrentUsagePeriod: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingResourceUsageTestServiceCurrentUsagePeriod",
    modelProperties: {
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "String"
        }
      },
      byAccount: {
        serializedName: "byAccount",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } }
        }
      },
      byApp: {
        serializedName: "byApp",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "Number" } } }
          }
        }
      }
    }
  }
};

export const GdprVerificationResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GdprVerificationResult",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "Boolean"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GitHubAccount: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitHubAccount",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      accountType: {
        serializedName: "accountType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GitHubMarketplacePlan: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitHubMarketplacePlan",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const GitHubMarketplacePurchase: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitHubMarketplacePurchase",
    modelProperties: {
      account: {
        serializedName: "account",
        type: {
          name: "Composite",
          className: "GitHubMarketplacePurchaseAccount"
        }
      },
      plan: {
        serializedName: "plan",
        type: {
          name: "Composite",
          className: "GitHubMarketplacePurchasePlan"
        }
      }
    }
  }
};

export const GitHubMarketplacePurchaseAccount: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitHubMarketplacePurchaseAccount",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      accountType: {
        serializedName: "accountType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GitHubMarketplacePurchasePlan: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitHubMarketplacePurchasePlan",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ServiceBillingPlans: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceBillingPlans",
    modelProperties: {
      canSelectTrialPlan: {
        serializedName: "canSelectTrialPlan",
        type: {
          name: "Boolean"
        }
      },
      lastTrialPlanExpirationTime: {
        serializedName: "lastTrialPlanExpirationTime",
        type: {
          name: "String"
        }
      },
      currentBillingPeriod: {
        serializedName: "currentBillingPeriod",
        type: {
          name: "Composite",
          className: "ServiceBillingPlansCurrentBillingPeriod"
        }
      }
    }
  }
};

export const ServiceBillingPlansCurrentBillingPeriod: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceBillingPlansCurrentBillingPeriod",
    modelProperties: {
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "String"
        }
      },
      byAccount: {
        serializedName: "byAccount",
        type: {
          name: "Composite",
          className: "ServiceBillingPlansCurrentBillingPeriodByAccount"
        }
      }
    }
  }
};

export const ServiceBillingPlansCurrentBillingPeriodByAccount: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceBillingPlansCurrentBillingPeriodByAccount",
    modelProperties: {
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      plan: {
        serializedName: "plan",
        type: {
          name: "Composite",
          className: "ServiceBillingPlansCurrentBillingPeriodByAccountPlan"
        }
      }
    }
  }
};

export const ServiceBillingPlansCurrentBillingPeriodByAccountPlan: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceBillingPlansCurrentBillingPeriodByAccountPlan",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      price: {
        serializedName: "price",
        type: {
          name: "Number"
        }
      },
      paymentSource: {
        serializedName: "paymentSource",
        type: {
          name: "String"
        }
      },
      service: {
        serializedName: "service",
        type: {
          name: "String"
        }
      },
      limits: {
        serializedName: "limits",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } }
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } }
          }
        }
      },
      parentId: {
        serializedName: "parentId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceResourceUsage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceResourceUsage",
    modelProperties: {
      currentUsagePeriod: {
        serializedName: "currentUsagePeriod",
        type: {
          name: "Composite",
          className: "ServiceResourceUsageCurrentUsagePeriod"
        }
      }
    }
  }
};

export const ServiceResourceUsageCurrentUsagePeriod: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceResourceUsageCurrentUsagePeriod",
    modelProperties: {
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "String"
        }
      },
      byAccount: {
        serializedName: "byAccount",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } }
        }
      },
      byApp: {
        serializedName: "byApp",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "Number" } } }
          }
        }
      }
    }
  }
};

export const UsagePeriod: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UsagePeriod",
    modelProperties: {
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "String"
        }
      },
      byAccount: {
        serializedName: "byAccount",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } }
        }
      },
      byApp: {
        serializedName: "byApp",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "Number" } } }
          }
        }
      }
    }
  }
};

export const UsageRecordStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UsageRecordStatus",
    modelProperties: {
      expectedLatestBuildExists: {
        serializedName: "expectedLatestBuildExists",
        type: {
          name: "Boolean"
        }
      },
      expectedLatestTestExists: {
        serializedName: "expectedLatestTestExists",
        type: {
          name: "Boolean"
        }
      },
      latestBuildUsageRecordTime: {
        serializedName: "latestBuildUsageRecordTime",
        type: {
          name: "String"
        }
      },
      latestTestUsageRecordTime: {
        serializedName: "latestTestUsageRecordTime",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VersionedBillingPlan: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VersionedBillingPlan",
    modelProperties: {
      document: {
        serializedName: "document",
        type: {
          name: "Composite",
          className: "VersionedBillingPlanDocument"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VersionedBillingPlanDocument: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VersionedBillingPlanDocument",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      price: {
        serializedName: "price",
        type: {
          name: "Number"
        }
      },
      paymentSource: {
        serializedName: "paymentSource",
        type: {
          name: "String"
        }
      },
      service: {
        serializedName: "service",
        type: {
          name: "String"
        }
      },
      limits: {
        serializedName: "limits",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } }
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } }
          }
        }
      },
      parentId: {
        serializedName: "parentId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MessageEnvelope: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MessageEnvelope",
    modelProperties: {
      messageId: {
        serializedName: "messageId",
        type: {
          name: "String"
        }
      },
      messageType: {
        serializedName: "messageType",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const DataSubjectRightCustomerIdRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DataSubjectRightCustomerIdRequest",
    modelProperties: {
      dataSubjectIdentifier: {
        serializedName: "dataSubjectIdentifier",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "Enum",
          allowedValues: ["CustomerAccountId", "CustomerUserId"]
        }
      }
    }
  }
};

export const DataSubjectRightEmailRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DataSubjectRightEmailRequest",
    modelProperties: {
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DataSubjectRightResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DataSubjectRightResponse",
    modelProperties: {
      token: {
        serializedName: "token",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        required: true,
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const DataSubjectRightStatusResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DataSubjectRightStatusResponse",
    modelProperties: {
      sasUrl: {
        serializedName: "sasUrl",
        type: {
          name: "String"
        }
      },
      sasUrlExpired: {
        serializedName: "sasUrlExpired",
        type: {
          name: "Boolean"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DataSubjectRightUpdateStatusOperation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DataSubjectRightUpdateStatusOperation",
    modelProperties: {
      requestId: {
        serializedName: "requestId",
        required: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "Created",
            "Queued",
            "InProgress",
            "Completed",
            "Failed"
          ]
        }
      },
      participantData: {
        serializedName: "participantData",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DataSubjectRightOperation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DataSubjectRightOperation",
    modelProperties: {
      requestId: {
        serializedName: "requestId",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      operationId: {
        serializedName: "operationId",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      requestType: {
        serializedName: "requestType",
        required: true,
        type: {
          name: "Enum",
          allowedValues: [
            "Unsupported",
            "Delete",
            "Purge",
            "UndoDelete",
            "Scheduled",
            "AppDelete",
            "AppPurge",
            "AppUndoDelete",
            "Export",
            "CustomerAccountDelete",
            "CustomerAccountExport",
            "CustomerUserDelete",
            "CustomerUserExport"
          ]
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "Created",
            "Queued",
            "InProgress",
            "Completed",
            "Failed"
          ]
        }
      },
      participant: {
        serializedName: "participant",
        required: true,
        type: {
          name: "String"
        }
      },
      context: {
        serializedName: "context",
        required: true,
        type: {
          name: "String"
        }
      },
      appId: {
        serializedName: "appId",
        type: {
          name: "String"
        }
      },
      participantData: {
        serializedName: "participantData",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DataSubjectRightQueueInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DataSubjectRightQueueInfo",
    modelProperties: {
      sasUri: {
        serializedName: "sasUri",
        required: true,
        type: {
          name: "String"
        }
      },
      queueName: {
        serializedName: "queueName",
        required: true,
        type: {
          name: "String"
        }
      },
      expiresAt: {
        serializedName: "expiresAt",
        required: true,
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const DataSubjectRighBlobContainerInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DataSubjectRighBlobContainerInfo",
    modelProperties: {
      sasUri: {
        serializedName: "sasUri",
        required: true,
        type: {
          name: "String"
        }
      },
      blobPath: {
        serializedName: "blobPath",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClientIdResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ClientIdResponse",
    modelProperties: {
      clientId: {
        serializedName: "clientId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InnerError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InnerError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AuthTenantsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AuthTenantsResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AuthTenantsResponseValueItem"
            }
          }
        }
      }
    }
  }
};

export const AuthTenantsResponseValueItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AuthTenantsResponseValueItem",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AuthTenant: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AuthTenant",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationsResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApplicationsResponseValueItem"
            }
          }
        }
      }
    }
  }
};

export const ApplicationsResponseValueItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationsResponseValueItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      signInAudience: {
        serializedName: "signInAudience",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      signInAudience: {
        serializedName: "signInAudience",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ScopesResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScopesResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ScopesResponseValueItem"
            }
          }
        }
      }
    }
  }
};

export const ScopesResponseValueItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScopesResponseValueItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      appName: {
        serializedName: "appName",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ScopeResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScopeResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      appName: {
        serializedName: "appName",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AuthApplicationResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AuthApplicationResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      provider: {
        serializedName: "provider",
        required: true,
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "Uuid"
        }
      },
      tenantName: {
        serializedName: "tenantName",
        type: {
          name: "String"
        }
      },
      policyId: {
        serializedName: "policyId",
        type: {
          name: "String"
        }
      },
      scopeId: {
        serializedName: "scopeId",
        type: {
          name: "Uuid"
        }
      },
      scopeUrl: {
        serializedName: "scopeUrl",
        type: {
          name: "String"
        }
      },
      signInAudience: {
        serializedName: "signInAudience",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AuthApplicationPatchRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AuthApplicationPatchRequest",
    modelProperties: {
      policyId: {
        serializedName: "policyId",
        type: {
          name: "String"
        }
      },
      scopeId: {
        serializedName: "scopeId",
        type: {
          name: "Uuid"
        }
      },
      scopeUrl: {
        serializedName: "scopeUrl",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExistingAuthApplicationPostRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExistingAuthApplicationPostRequest",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "Uuid"
        }
      },
      tenantName: {
        serializedName: "tenantName",
        type: {
          name: "String"
        }
      },
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      policyId: {
        serializedName: "policyId",
        type: {
          name: "String"
        }
      },
      scopeId: {
        serializedName: "scopeId",
        type: {
          name: "Uuid"
        }
      },
      scopeUrl: {
        serializedName: "scopeUrl",
        type: {
          name: "String"
        }
      },
      signInAudience: {
        serializedName: "signInAudience",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrustFrameworkPoliciesResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrustFrameworkPoliciesResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TrustFrameworkPoliciesResponseValueItem"
            }
          }
        }
      }
    }
  }
};

export const TrustFrameworkPoliciesResponseValueItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrustFrameworkPoliciesResponseValueItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrustFrameworkPolicyResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrustFrameworkPolicyResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetricsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetricsResponse",
    modelProperties: {
      databaseLocation: {
        serializedName: "databaseLocation",
        type: {
          name: "String"
        }
      },
      accountName: {
        serializedName: "accountName",
        type: {
          name: "String"
        }
      },
      databaseId: {
        serializedName: "databaseId",
        type: {
          name: "String"
        }
      },
      metrics: {
        serializedName: "metrics",
        type: {
          name: "Composite",
          className: "MetricsResponseMetrics"
        }
      }
    }
  }
};

export const MetricsResponseMetrics: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetricsResponseMetrics",
    modelProperties: {
      interval: {
        serializedName: "interval",
        type: {
          name: "Number"
        }
      },
      totalRequests: {
        serializedName: "totalRequests",
        type: {
          name: "Number"
        }
      },
      totalRequestUnits: {
        serializedName: "totalRequestUnits",
        type: {
          name: "Number"
        }
      },
      dataUsage: {
        serializedName: "dataUsage",
        type: {
          name: "Number"
        }
      },
      indexUsage: {
        serializedName: "indexUsage",
        type: {
          name: "Number"
        }
      },
      latencyMetrics: {
        serializedName: "latencyMetrics",
        type: {
          name: "Composite",
          className: "MetricsResponseMetricsLatencyMetrics"
        }
      }
    }
  }
};

export const MetricsResponseMetricsLatencyMetrics: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetricsResponseMetricsLatencyMetrics",
    modelProperties: {
      readLatencyMetrics: {
        serializedName: "readLatencyMetrics",
        type: {
          name: "Composite",
          className: "MetricsResponseMetricsLatencyMetricsReadLatencyMetrics"
        }
      },
      writeLatencyMetrics: {
        serializedName: "writeLatencyMetrics",
        type: {
          name: "Composite",
          className: "MetricsResponseMetricsLatencyMetricsWriteLatencyMetrics"
        }
      }
    }
  }
};

export const MetricsResponseMetricsLatencyMetricsReadLatencyMetrics: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetricsResponseMetricsLatencyMetricsReadLatencyMetrics",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      },
      metricValues: {
        serializedName: "metricValues",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "MetricsResponseMetricsLatencyMetricsReadLatencyMetricsMetricValuesItem"
            }
          }
        }
      }
    }
  }
};

export const MetricsResponseMetricsLatencyMetricsReadLatencyMetricsMetricValuesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "MetricsResponseMetricsLatencyMetricsReadLatencyMetricsMetricValuesItem",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      average: {
        serializedName: "average",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const MetricsResponseMetricsLatencyMetricsWriteLatencyMetrics: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetricsResponseMetricsLatencyMetricsWriteLatencyMetrics",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      },
      metricValues: {
        serializedName: "metricValues",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "MetricsResponseMetricsLatencyMetricsWriteLatencyMetricsMetricValuesItem"
            }
          }
        }
      }
    }
  }
};

export const MetricsResponseMetricsLatencyMetricsWriteLatencyMetricsMetricValuesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "MetricsResponseMetricsLatencyMetricsWriteLatencyMetricsMetricValuesItem",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      average: {
        serializedName: "average",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DatabaseMetrics: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatabaseMetrics",
    modelProperties: {
      interval: {
        serializedName: "interval",
        type: {
          name: "Number"
        }
      },
      totalRequests: {
        serializedName: "totalRequests",
        type: {
          name: "Number"
        }
      },
      totalRequestUnits: {
        serializedName: "totalRequestUnits",
        type: {
          name: "Number"
        }
      },
      dataUsage: {
        serializedName: "dataUsage",
        type: {
          name: "Number"
        }
      },
      indexUsage: {
        serializedName: "indexUsage",
        type: {
          name: "Number"
        }
      },
      latencyMetrics: {
        serializedName: "latencyMetrics",
        type: {
          name: "Composite",
          className: "DatabaseMetricsLatencyMetrics"
        }
      }
    }
  }
};

export const DatabaseMetricsLatencyMetrics: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatabaseMetricsLatencyMetrics",
    modelProperties: {
      readLatencyMetrics: {
        serializedName: "readLatencyMetrics",
        type: {
          name: "Composite",
          className: "DatabaseMetricsLatencyMetricsReadLatencyMetrics"
        }
      },
      writeLatencyMetrics: {
        serializedName: "writeLatencyMetrics",
        type: {
          name: "Composite",
          className: "DatabaseMetricsLatencyMetricsWriteLatencyMetrics"
        }
      }
    }
  }
};

export const DatabaseMetricsLatencyMetricsReadLatencyMetrics: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatabaseMetricsLatencyMetricsReadLatencyMetrics",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      },
      metricValues: {
        serializedName: "metricValues",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "DatabaseMetricsLatencyMetricsReadLatencyMetricsMetricValuesItem"
            }
          }
        }
      }
    }
  }
};

export const DatabaseMetricsLatencyMetricsReadLatencyMetricsMetricValuesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "DatabaseMetricsLatencyMetricsReadLatencyMetricsMetricValuesItem",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      average: {
        serializedName: "average",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DatabaseMetricsLatencyMetricsWriteLatencyMetrics: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatabaseMetricsLatencyMetricsWriteLatencyMetrics",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      },
      metricValues: {
        serializedName: "metricValues",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "DatabaseMetricsLatencyMetricsWriteLatencyMetricsMetricValuesItem"
            }
          }
        }
      }
    }
  }
};

export const DatabaseMetricsLatencyMetricsWriteLatencyMetricsMetricValuesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "DatabaseMetricsLatencyMetricsWriteLatencyMetricsMetricValuesItem",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      average: {
        serializedName: "average",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const LatencyMetrics: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LatencyMetrics",
    modelProperties: {
      readLatencyMetrics: {
        serializedName: "readLatencyMetrics",
        type: {
          name: "Composite",
          className: "LatencyMetricsReadLatencyMetrics"
        }
      },
      writeLatencyMetrics: {
        serializedName: "writeLatencyMetrics",
        type: {
          name: "Composite",
          className: "LatencyMetricsWriteLatencyMetrics"
        }
      }
    }
  }
};

export const LatencyMetricsReadLatencyMetrics: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LatencyMetricsReadLatencyMetrics",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      },
      metricValues: {
        serializedName: "metricValues",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LatencyMetricsReadLatencyMetricsMetricValuesItem"
            }
          }
        }
      }
    }
  }
};

export const LatencyMetricsReadLatencyMetricsMetricValuesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LatencyMetricsReadLatencyMetricsMetricValuesItem",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      average: {
        serializedName: "average",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const LatencyMetricsWriteLatencyMetrics: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LatencyMetricsWriteLatencyMetrics",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      },
      metricValues: {
        serializedName: "metricValues",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LatencyMetricsWriteLatencyMetricsMetricValuesItem"
            }
          }
        }
      }
    }
  }
};

export const LatencyMetricsWriteLatencyMetricsMetricValuesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LatencyMetricsWriteLatencyMetricsMetricValuesItem",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      average: {
        serializedName: "average",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const LatencyData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LatencyData",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      },
      metricValues: {
        serializedName: "metricValues",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LatencyDataMetricValuesItem"
            }
          }
        }
      }
    }
  }
};

export const LatencyDataMetricValuesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LatencyDataMetricValuesItem",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      average: {
        serializedName: "average",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const MetricsData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetricsData",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      average: {
        serializedName: "average",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const OverviewResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OverviewResponse",
    modelProperties: {
      databaseLocation: {
        serializedName: "databaseLocation",
        type: {
          name: "String"
        }
      },
      accountName: {
        serializedName: "accountName",
        type: {
          name: "String"
        }
      },
      databaseId: {
        serializedName: "databaseId",
        type: {
          name: "String"
        }
      },
      throughput: {
        serializedName: "throughput",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const EstimatedPricingResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EstimatedPricingResponse",
    modelProperties: {
      pricePerHour: {
        serializedName: "pricePerHour",
        type: {
          name: "Number"
        }
      },
      currency: {
        serializedName: "currency",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DataInstancesResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DataInstancesResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DataInstancesResponseValueItem"
            }
          }
        }
      }
    }
  }
};

export const DataInstancesResponseValueItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DataInstancesResponseValueItem",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DataInstance: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DataInstance",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InstanceDatabasesResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InstanceDatabasesResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InstanceDatabasesResponseValueItem"
            }
          }
        }
      }
    }
  }
};

export const InstanceDatabasesResponseValueItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InstanceDatabasesResponseValueItem",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InstanceDatabase: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InstanceDatabase",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DatabaseCollectionsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatabaseCollectionsResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DatabaseCollectionsResponseValueItem"
            }
          }
        }
      }
    }
  }
};

export const DatabaseCollectionsResponseValueItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatabaseCollectionsResponseValueItem",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DatabaseCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatabaseCollection",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NotificationConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NotificationConfiguration",
    modelProperties: {
      appId: {
        serializedName: "appId",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DataResourceTokenResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DataResourceTokenResponse",
    modelProperties: {
      databaseId: {
        serializedName: "databaseId",
        type: {
          name: "String"
        }
      },
      databaseName: {
        serializedName: "databaseName",
        type: {
          name: "String"
        }
      },
      collectionName: {
        serializedName: "collectionName",
        type: {
          name: "String"
        }
      },
      accountName: {
        serializedName: "accountName",
        type: {
          name: "String"
        }
      },
      token: {
        serializedName: "token",
        type: {
          name: "String"
        }
      },
      expiresOn: {
        serializedName: "expiresOn",
        type: {
          name: "DateTime"
        }
      },
      isReadOnlyToken: {
        serializedName: "isReadOnlyToken",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const UsersResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UsersResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UsersResponseValueItem"
            }
          }
        }
      }
    }
  }
};

export const UsersResponseValueItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UsersResponseValueItem",
    modelProperties: {
      accountId: {
        serializedName: "accountId",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      mail: {
        serializedName: "mail",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserResponse",
    modelProperties: {
      accountId: {
        serializedName: "accountId",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      mail: {
        serializedName: "mail",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DataProvisioningParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DataProvisioningParameters",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      databaseConnectionString: {
        serializedName: "databaseConnectionString",
        type: {
          name: "String"
        }
      },
      resourceRegion: {
        serializedName: "resourceRegion",
        type: {
          name: "String"
        }
      },
      database: {
        serializedName: "database",
        type: {
          name: "String"
        }
      },
      collection: {
        serializedName: "collection",
        type: {
          name: "String"
        }
      },
      requestUnits: {
        constraints: {
          InclusiveMaximum: 2147483647,
          InclusiveMinimum: 400
        },
        serializedName: "requestUnits",
        type: {
          name: "Number"
        }
      },
      accountName: {
        serializedName: "accountName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProvisionStatusResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProvisionStatusResponse",
    modelProperties: {
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CosmosDbCorsStatusResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CosmosDbCorsStatusResponse",
    modelProperties: {
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsSn2L3JV01OrgsOrgNameAvatarPostRequestbodyContentApplicationXWwwFormUrlencodedSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsSn2L3JV01OrgsOrgNameAvatarPostRequestbodyContentApplicationXWwwFormUrlencodedSchema",
    modelProperties: {
      avatar: {
        serializedName: "avatar",
        type: {
          name: "Stream"
        }
      }
    }
  }
};

export const Paths1M2YkscV01AppsOwnerNameAppNameAvatarPostRequestbodyContentApplicationXWwwFormUrlencodedSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1M2YkscV01AppsOwnerNameAppNameAvatarPostRequestbodyContentApplicationXWwwFormUrlencodedSchema",
    modelProperties: {
      avatar: {
        serializedName: "avatar",
        type: {
          name: "Stream"
        }
      }
    }
  }
};

export const Paths1GbpowzV01UserNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1GbpowzV01UserNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      ...Paths182SsxvV01UserNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      ...PathsKu8GnbV01UserNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchemaAllof1
        .type.modelProperties
    }
  }
};

export const Paths3OiijqV01UserNotificationsEmailsettingsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths3OiijqV01UserNotificationsEmailsettingsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      ...Paths1O95A70V01UserNotificationsEmailsettingsGetResponsesDefaultContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      ...Paths1E5Yhn2V01UserNotificationsEmailsettingsGetResponsesDefaultContentApplicationJsonSchemaAllof1
        .type.modelProperties
    }
  }
};

export const GetResponses200ContentApplicationJsonSchemaItemRelease: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetResponses200ContentApplicationJsonSchemaItemRelease",
    modelProperties: {
      ...Paths1R53U2ZV01TesterAppsGetResponses200ContentApplicationJsonSchemaItemsPropertiesReleaseAllof0
        .type.modelProperties,
      ...Paths4Gr131V01TesterAppsGetResponses200ContentApplicationJsonSchemaItemsPropertiesReleaseAllof1
        .type.modelProperties
    }
  }
};

export const PathsP0YmppV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsP0YmppV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0",
    modelProperties: {
      ...Paths1PavtpvV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0
        .type.modelProperties,
      ...Paths8M1UckV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0Allof1
        .type.modelProperties
    }
  }
};

export const PathsSelih9V01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsSelih9V01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItems",
    modelProperties: {
      ...PathsP0YmppV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0
        .type.modelProperties,
      ...PathsJ4K1S8V01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof1
        .type.modelProperties,
      ...PathsR7Mx7PV01SdkAppsAppSecretReleasesReleaseHashGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof2
        .type.modelProperties
    }
  }
};

export const PathsAkcpaxV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsAkcpaxV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0",
    modelProperties: {
      ...Paths90FqqhV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0
        .type.modelProperties,
      ...PathsBq45MpV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0Allof1
        .type.modelProperties
    }
  }
};

export const Paths2H2GfhV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths2H2GfhV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItems",
    modelProperties: {
      ...PathsAkcpaxV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0
        .type.modelProperties,
      ...Paths17Mq2NrV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof1
        .type.modelProperties,
      ...Paths7UlnvnV01SdkAppsAppSecretReleasesPrivateLatestGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof2
        .type.modelProperties
    }
  }
};

export const Paths1CionenV01OrgsOrgNameUsersUserNameAppsGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1CionenV01OrgsOrgNameUsersUserNameAppsGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      ...Paths1Cvct4XV01OrgsOrgNameUsersUserNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0
        .type.modelProperties,
      ...Paths4IoilmV01OrgsOrgNameUsersUserNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof1
        .type.modelProperties
    }
  }
};

export const Paths1XazmcgV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1XazmcgV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchemaAllof0",
    modelProperties: {
      ...PathsX6KtmiV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      ...Paths1G7Kvy1V01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchemaAllof0Allof1
        .type.modelProperties
    }
  }
};

export const Paths6Yr3JV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths6Yr3JV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchema",
    modelProperties: {
      ...Paths1XazmcgV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      ...PathsF63NbmV01OrgsOrgNameTeamsTeamNameAppsAppNamePatchResponses200ContentApplicationJsonSchemaAllof1
        .type.modelProperties
    }
  }
};

export const Paths1TnbktoV01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1TnbktoV01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchemaAllof0",
    modelProperties: {
      ...PathsT7Lg34V01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      ...PathsJ34NfmV01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchemaAllof0Allof1
        .type.modelProperties
    }
  }
};

export const PathsQkzmz3V01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsQkzmz3V01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchema",
    modelProperties: {
      ...Paths1TnbktoV01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      ...Paths1H4Oj8KV01OrgsOrgNameTeamsTeamNameAppsPostResponses201ContentApplicationJsonSchemaAllof1
        .type.modelProperties
    }
  }
};

export const Paths14I2OveV01OrgsOrgNameTeamsTeamNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths14I2OveV01OrgsOrgNameTeamsTeamNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0",
    modelProperties: {
      ...PathsV1407RV01OrgsOrgNameTeamsTeamNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0
        .type.modelProperties,
      ...PathsO3Iv87V01OrgsOrgNameTeamsTeamNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0Allof1
        .type.modelProperties
    }
  }
};

export const PathsS2AazoV01OrgsOrgNameTeamsTeamNameAppsGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsS2AazoV01OrgsOrgNameTeamsTeamNameAppsGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      ...Paths14I2OveV01OrgsOrgNameTeamsTeamNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0
        .type.modelProperties,
      ...Paths73QlfV01OrgsOrgNameTeamsTeamNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof1
        .type.modelProperties
    }
  }
};

export const PathsN5ZsaaV01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsN5ZsaaV01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      ...Paths1AbdgaoV01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItemsAllof0
        .type.modelProperties,
      ...Paths128BpnsV01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItemsAllof1
        .type.modelProperties
    }
  }
};

export const Get200ApplicationJsonItems1AppsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonItems1AppsItem",
    modelProperties: {
      ...Paths1Mb8UcrV01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesAppsItemsAllof0
        .type.modelProperties,
      ...Paths1E6JkmgV01OrgsOrgNameDistributionGroupsDetailsGetResponses200ContentApplicationJsonSchemaItemsAllof1PropertiesAppsItemsAllof1
        .type.modelProperties
    }
  }
};

export const Paths1FzizdmV01OrgsOrgNameDistributionGroupsDistributionGroupNameAppsGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1FzizdmV01OrgsOrgNameDistributionGroupsDistributionGroupNameAppsGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      ...PathsK6Tv9V01OrgsOrgNameDistributionGroupsDistributionGroupNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0
        .type.modelProperties,
      ...PathsVbaitqV01OrgsOrgNameDistributionGroupsDistributionGroupNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof1
        .type.modelProperties
    }
  }
};

export const PathsZsi63SV01OrgsOrgNameAppsPostResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsZsi63SV01OrgsOrgNameAppsPostResponses200ContentApplicationJsonSchema",
    modelProperties: {
      ...Paths1Dw0Mx6V01OrgsOrgNameAppsPostResponses200ContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      ...Paths1S1MjxkV01OrgsOrgNameAppsPostResponses200ContentApplicationJsonSchemaAllof1
        .type.modelProperties
    }
  }
};

export const Paths15X4K8OV01OrgsOrgNameAppsPostResponses201ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths15X4K8OV01OrgsOrgNameAppsPostResponses201ContentApplicationJsonSchema",
    modelProperties: {
      ...Paths1Khm1L1V01OrgsOrgNameAppsPostResponses201ContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      ...Paths1RmugtV01OrgsOrgNameAppsPostResponses201ContentApplicationJsonSchemaAllof1
        .type.modelProperties
    }
  }
};

export const PathsPmjc9ZV01OrgsOrgNameAppsGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsPmjc9ZV01OrgsOrgNameAppsGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      ...Paths1H84Up2V01OrgsOrgNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof0
        .type.modelProperties,
      ...Paths9U0PvjV01OrgsOrgNameAppsGetResponses200ContentApplicationJsonSchemaItemsAllof1
        .type.modelProperties
    }
  }
};

export const Paths1Y9EjsmV01LegacyUpdatecheckGetResponses200ContentApplicationJsonSchemaPropertiesUpdateinfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Y9EjsmV01LegacyUpdatecheckGetResponses200ContentApplicationJsonSchemaPropertiesUpdateinfo",
    modelProperties: {
      ...Paths13Ux7UhV01LegacyUpdatecheckGetResponses200ContentApplicationJsonSchemaPropertiesUpdateinfoAllof0
        .type.modelProperties,
      ...Paths1Gf0E4FV01LegacyUpdatecheckGetResponses200ContentApplicationJsonSchemaPropertiesUpdateinfoAllof1
        .type.modelProperties
    }
  }
};

export const GetResponses200ContentApplicationJsonSchemaItemApp: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetResponses200ContentApplicationJsonSchemaItemApp",
    modelProperties: {
      ...PathsC6NjndV01InvitationsSentGetResponses200ContentApplicationJsonSchemaItemsPropertiesAppAllof0
        .type.modelProperties,
      ...PathsGjcam3V01InvitationsSentGetResponses200ContentApplicationJsonSchemaItemsPropertiesAppAllof1
        .type.modelProperties
    }
  }
};

export const PathsYzqp66V01AppsOwnerNameAppNameWebhooksGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsYzqp66V01AppsOwnerNameAppNameWebhooksGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      ...Paths16Kfo10V01AppsOwnerNameAppNameWebhooksGetResponsesDefaultContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      ...PathsIss5SmV01AppsOwnerNameAppNameWebhooksGetResponsesDefaultContentApplicationJsonSchemaAllof1
        .type.modelProperties
    }
  }
};

export const Paths17Wfdp6V01AppsOwnerNameAppNameTransferDestinationOwnerNamePostResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths17Wfdp6V01AppsOwnerNameAppNameTransferDestinationOwnerNamePostResponses200ContentApplicationJsonSchema",
    modelProperties: {
      ...Paths1V9Hz9HV01AppsOwnerNameAppNameTransferDestinationOwnerNamePostResponses200ContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      ...Paths1Uuv6QgV01AppsOwnerNameAppNameTransferDestinationOwnerNamePostResponses200ContentApplicationJsonSchemaAllof1
        .type.modelProperties
    }
  }
};

export const Paths1Sq4J2RV01AppsOwnerNameAppNameTeamsGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Sq4J2RV01AppsOwnerNameAppNameTeamsGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      ...Paths1Sla7TvV01AppsOwnerNameAppNameTeamsGetResponses200ContentApplicationJsonSchemaItemsAllof0
        .type.modelProperties,
      ...Paths1Qevyq4V01AppsOwnerNameAppNameTeamsGetResponses200ContentApplicationJsonSchemaItemsAllof1
        .type.modelProperties
    }
  }
};

export const Paths131DtitV01AppsOwnerNameAppNameRepoConfigGetResponses200ContentApplicationJsonSchemaItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths131DtitV01AppsOwnerNameAppNameRepoConfigGetResponses200ContentApplicationJsonSchemaItemsAllof0",
    modelProperties: {
      ...PathsT02O1YV01AppsOwnerNameAppNameRepoConfigGetResponses200ContentApplicationJsonSchemaItemsAllof0
        .type.modelProperties,
      installationId: {
        serializedName: "installation_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1P54ZxdV01AppsOwnerNameAppNameRepoConfigPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1P54ZxdV01AppsOwnerNameAppNameRepoConfigPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      ...PathsAqvv1UV01AppsOwnerNameAppNameRepoConfigPostRequestbodyContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      installationId: {
        serializedName: "installation_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths5WvwkdV01AppsOwnerNameAppNameReleasesReleaseIdTestersPostResponses201ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths5WvwkdV01AppsOwnerNameAppNameReleasesReleaseIdTestersPostResponses201ContentApplicationJsonSchema",
    modelProperties: {
      ...PathsKdtsm0V01AppsOwnerNameAppNameReleasesReleaseIdTestersPostResponses201ContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      ...Paths12D41JpV01AppsOwnerNameAppNameReleasesReleaseIdTestersPostResponses201ContentApplicationJsonSchemaAllof1
        .type.modelProperties
    }
  }
};

export const Paths1Jif7RyV01AppsOwnerNameAppNameReleasesReleaseIdGroupsPostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Jif7RyV01AppsOwnerNameAppNameReleasesReleaseIdGroupsPostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      ...Paths17Lp2JiV01AppsOwnerNameAppNameReleasesReleaseIdGroupsPostRequestbodyContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      ...Paths17MosqV01AppsOwnerNameAppNameReleasesReleaseIdGroupsPostRequestbodyContentApplicationJsonSchemaAllof1
        .type.modelProperties
    }
  }
};

export const PathsFv6EorV01AppsOwnerNameAppNameReleasesReleaseIdGroupsPostResponses201ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsFv6EorV01AppsOwnerNameAppNameReleasesReleaseIdGroupsPostResponses201ContentApplicationJsonSchema",
    modelProperties: {
      ...Paths14K4HpV01AppsOwnerNameAppNameReleasesReleaseIdGroupsPostResponses201ContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      ...Paths1489G45V01AppsOwnerNameAppNameReleasesReleaseIdGroupsPostResponses201ContentApplicationJsonSchemaAllof1
        .type.modelProperties
    }
  }
};

export const Paths11QpltwV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths11QpltwV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0",
    modelProperties: {
      ...Paths13SftyjV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0
        .type.modelProperties,
      ...PathsWkq29YV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0Allof1
        .type.modelProperties
    }
  }
};

export const PathsEgsmktV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsEgsmktV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItems",
    modelProperties: {
      ...Paths11QpltwV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0
        .type.modelProperties,
      ...Paths13J8DbyV01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof1
        .type.modelProperties,
      ...Paths1Pu9X8V01AppsOwnerNameAppNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof2
        .type.modelProperties
    }
  }
};

export const Paths1Ufxd2QV01AppsOwnerNameAppNameReleasesReleaseIdPutResponses400ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Ufxd2QV01AppsOwnerNameAppNameReleasesReleaseIdPutResponses400ContentApplicationJsonSchema",
    modelProperties: {
      ...Paths17Qi9DpV01AppsOwnerNameAppNameReleasesReleaseIdPutResponses400ContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      ...Paths1Y3IqbjV01AppsOwnerNameAppNameReleasesReleaseIdPutResponses400ContentApplicationJsonSchemaAllof1
        .type.modelProperties
    }
  }
};

export const Paths5XfktV01AppsOwnerNameAppNameReleasesReleaseIdPatchResponses400ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths5XfktV01AppsOwnerNameAppNameReleasesReleaseIdPatchResponses400ContentApplicationJsonSchema",
    modelProperties: {
      ...PathsRtr6U2V01AppsOwnerNameAppNameReleasesReleaseIdPatchResponses400ContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      ...PathsP5E57AV01AppsOwnerNameAppNameReleasesReleaseIdPatchResponses400ContentApplicationJsonSchemaAllof1
        .type.modelProperties
    }
  }
};

export const Get200ApplicationJsonItemsDistributionGroupsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonItemsDistributionGroupsItem",
    modelProperties: {
      ...Paths10J5Pj9V01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItemsAllof0
        .type.modelProperties,
      ...PathsW3XrsbV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItemsAllof1
        .type.modelProperties
    }
  }
};

export const Get200ApplicationJsonItemsDistributionStoresItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonItemsDistributionStoresItem",
    modelProperties: {
      ...PathsP9RqxrV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItemsAllof0
        .type.modelProperties,
      ...Paths7Pkkp8V01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItemsAllof1
        .type.modelProperties
    }
  }
};

export const Paths19JzgxhV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths19JzgxhV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0",
    modelProperties: {
      ...Paths18Irl7JV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0
        .type.modelProperties,
      ...PathsJ60E2EV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0Allof1
        .type.modelProperties
    }
  }
};

export const Get200ApplicationJsonItemsDestinationsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Get200ApplicationJsonItemsDestinationsItem",
    modelProperties: {
      ...Paths19JzgxhV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0
        .type.modelProperties,
      ...PathsLdmfwzV01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof1
        .type.modelProperties,
      ...Paths1F6N8B4V01AppsOwnerNameAppNameReleasesFilterByTesterGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof2
        .type.modelProperties
    }
  }
};

export const PathsQc9WyxV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsQc9WyxV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItems",
    modelProperties: {
      ...Paths1Fwr664V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItemsAllof0
        .type.modelProperties,
      ...PathsOjwcvoV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItemsAllof1
        .type.modelProperties
    }
  }
};

export const Paths15Ddi2KV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths15Ddi2KV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItems",
    modelProperties: {
      ...PathsUii8Z4V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItemsAllof0
        .type.modelProperties,
      ...PathsGd6D92V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItemsAllof1
        .type.modelProperties
    }
  }
};

export const Paths1DmquncV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1DmquncV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0",
    modelProperties: {
      ...Paths1612Hh6V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0
        .type.modelProperties,
      ...Paths12Nyzp4V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0Allof1
        .type.modelProperties
    }
  }
};

export const Paths2S32RgV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths2S32RgV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItems",
    modelProperties: {
      ...Paths1DmquncV01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0
        .type.modelProperties,
      ...Paths16Wfds7V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof1
        .type.modelProperties,
      ...Paths2Wsk71V01AppsOwnerNameAppNameReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof2
        .type.modelProperties
    }
  }
};

export const Paths14BtkccV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths14BtkccV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItems",
    modelProperties: {
      ...Paths1S10KqwV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItemsAllof0
        .type.modelProperties,
      ...PathsWb4NtlV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionGroupsItemsAllof1
        .type.modelProperties
    }
  }
};

export const Paths1Yxm0T8V01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Yxm0T8V01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItems",
    modelProperties: {
      ...Paths1UjvvjlV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItemsAllof0
        .type.modelProperties,
      ...Paths11O5OrcV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDistributionStoresItemsAllof1
        .type.modelProperties
    }
  }
};

export const PathsUhrfh7V01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsUhrfh7V01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0",
    modelProperties: {
      ...PathsG3O3KxV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0
        .type.modelProperties,
      ...Paths1LkdigmV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0Allof1
        .type.modelProperties
    }
  }
};

export const PathsM69GgsV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsM69GgsV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItems",
    modelProperties: {
      ...PathsUhrfh7V01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof0
        .type.modelProperties,
      ...Paths1Os0Y5OV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof1
        .type.modelProperties,
      ...Paths1Qd7R1NV01AppsOwnerNameAppNameRecentReleasesGetResponses200ContentApplicationJsonSchemaItemsPropertiesDestinationsItemsAllof2
        .type.modelProperties
    }
  }
};

export const Paths1NjrudiV01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1NjrudiV01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      ...PathsM85ZfmV01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponses200ContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      notificationContent: {
        serializedName: "notification_content",
        type: {
          name: "Composite",
          className:
            "PathsX4Uqn0V01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponses200ContentApplicationJsonSchemaPropertiesNotificationContent"
        }
      },
      failureOutcomes: {
        serializedName: "failure_outcomes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths1V4Or6MV01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponses200ContentApplicationJsonSchemaPropertiesFailureOutcomesItems"
            }
          }
        }
      }
    }
  }
};

export const PathsTejspdV01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsTejspdV01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchemaAllof0",
    modelProperties: {
      ...Paths1Lv5TgxV01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      ...Paths1Exn54RV01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchemaAllof0Allof1
        .type.modelProperties
    }
  }
};

export const Paths19Z9V3IV01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths19Z9V3IV01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      ...PathsTejspdV01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      ...Paths12H1WryV01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponses200ContentApplicationJsonSchemaAllof1
        .type.modelProperties
    }
  }
};

export const Paths1Jg75I3V01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Jg75I3V01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      ...PathsMyxjuqV01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponsesDefaultContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      ...PathsLinqw9V01AppsOwnerNameAppNameNotificationsEmailsettingsGetResponsesDefaultContentApplicationJsonSchemaAllof1
        .type.modelProperties
    }
  }
};

export const Paths1R5Rn5OV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesApp: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1R5Rn5OV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesApp",
    modelProperties: {
      ...PathsR19UixV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesAppAllof0
        .type.modelProperties,
      ...Paths39Q34WV01AppsOwnerNameAppNameInvitationsGetResponses200ContentApplicationJsonSchemaPropertiesAppAllof1
        .type.modelProperties
    }
  }
};

export const Paths1GvcgvwV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1GvcgvwV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      ...Paths1A0E8RfV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridGetResponses200ContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      reasonFrames: {
        serializedName: "reasonFrames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsIus8TpV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsErroridGetResponses200ContentApplicationJsonSchemaPropertiesReasonframesItems"
            }
          }
        }
      },
      appLaunchTimestamp: {
        serializedName: "appLaunchTimestamp",
        type: {
          name: "DateTime"
        }
      },
      carrierName: {
        serializedName: "carrierName",
        type: {
          name: "String"
        }
      },
      jailbreak: {
        serializedName: "jailbreak",
        type: {
          name: "Boolean"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const Paths134SdxmV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsLatestGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths134SdxmV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsLatestGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      ...Paths1W62YatV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsLatestGetResponses200ContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      reasonFrames: {
        serializedName: "reasonFrames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths4M2P0UV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidErrorsLatestGetResponses200ContentApplicationJsonSchemaPropertiesReasonframesItems"
            }
          }
        }
      },
      appLaunchTimestamp: {
        serializedName: "appLaunchTimestamp",
        type: {
          name: "DateTime"
        }
      },
      carrierName: {
        serializedName: "carrierName",
        type: {
          name: "String"
        }
      },
      jailbreak: {
        serializedName: "jailbreak",
        type: {
          name: "Boolean"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const Paths1Xy5MxmV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Xy5MxmV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      ...PathsUg1W4GV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidGetResponses200ContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      errorGroupId: {
        serializedName: "errorGroupId",
        required: true,
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "appVersion",
        required: true,
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "appBuild",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        required: true,
        type: {
          name: "Number"
        }
      },
      deviceCount: {
        serializedName: "deviceCount",
        required: true,
        type: {
          name: "Number"
        }
      },
      firstOccurrence: {
        serializedName: "firstOccurrence",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      lastOccurrence: {
        serializedName: "lastOccurrence",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      exceptionType: {
        serializedName: "exceptionType",
        type: {
          name: "String"
        }
      },
      exceptionMessage: {
        serializedName: "exceptionMessage",
        type: {
          name: "String"
        }
      },
      exceptionClassName: {
        serializedName: "exceptionClassName",
        type: {
          name: "String"
        }
      },
      exceptionClassMethod: {
        serializedName: "exceptionClassMethod",
        type: {
          name: "Boolean"
        }
      },
      exceptionMethod: {
        serializedName: "exceptionMethod",
        type: {
          name: "String"
        }
      },
      exceptionAppCode: {
        serializedName: "exceptionAppCode",
        type: {
          name: "Boolean"
        }
      },
      exceptionFile: {
        serializedName: "exceptionFile",
        type: {
          name: "String"
        }
      },
      exceptionLine: {
        serializedName: "exceptionLine",
        type: {
          name: "String"
        }
      },
      codeRaw: {
        serializedName: "codeRaw",
        type: {
          name: "String"
        }
      },
      reasonFrames: {
        serializedName: "reasonFrames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsHk1U21V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidGetResponses200ContentApplicationJsonSchemaPropertiesReasonframesItems"
            }
          }
        }
      },
      hidden: {
        serializedName: "hidden",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths1W42Yn6V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidPatchResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1W42Yn6V01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidPatchResponses200ContentApplicationJsonSchema",
    modelProperties: {
      ...Paths13AsklyV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidPatchResponses200ContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      errorGroupId: {
        serializedName: "errorGroupId",
        required: true,
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "appVersion",
        required: true,
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "appBuild",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        required: true,
        type: {
          name: "Number"
        }
      },
      deviceCount: {
        serializedName: "deviceCount",
        required: true,
        type: {
          name: "Number"
        }
      },
      firstOccurrence: {
        serializedName: "firstOccurrence",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      lastOccurrence: {
        serializedName: "lastOccurrence",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      exceptionType: {
        serializedName: "exceptionType",
        type: {
          name: "String"
        }
      },
      exceptionMessage: {
        serializedName: "exceptionMessage",
        type: {
          name: "String"
        }
      },
      exceptionClassName: {
        serializedName: "exceptionClassName",
        type: {
          name: "String"
        }
      },
      exceptionClassMethod: {
        serializedName: "exceptionClassMethod",
        type: {
          name: "Boolean"
        }
      },
      exceptionMethod: {
        serializedName: "exceptionMethod",
        type: {
          name: "String"
        }
      },
      exceptionAppCode: {
        serializedName: "exceptionAppCode",
        type: {
          name: "Boolean"
        }
      },
      exceptionFile: {
        serializedName: "exceptionFile",
        type: {
          name: "String"
        }
      },
      exceptionLine: {
        serializedName: "exceptionLine",
        type: {
          name: "String"
        }
      },
      codeRaw: {
        serializedName: "codeRaw",
        type: {
          name: "String"
        }
      },
      reasonFrames: {
        serializedName: "reasonFrames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsMvkf3KV01AppsOwnerNameAppNameErrorsErrorgroupsErrorgroupidPatchResponses200ContentApplicationJsonSchemaPropertiesReasonframesItems"
            }
          }
        }
      },
      hidden: {
        serializedName: "hidden",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths1HondamV01AppsOwnerNameAppNameErrorsErrorgroupsSearchGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1HondamV01AppsOwnerNameAppNameErrorsErrorgroupsSearchGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItemsAllof0",
    modelProperties: {
      ...PathsGpexkdV01AppsOwnerNameAppNameErrorsErrorgroupsSearchGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItemsAllof0
        .type.modelProperties,
      errorGroupId: {
        serializedName: "errorGroupId",
        required: true,
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "appVersion",
        required: true,
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "appBuild",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        required: true,
        type: {
          name: "Number"
        }
      },
      deviceCount: {
        serializedName: "deviceCount",
        required: true,
        type: {
          name: "Number"
        }
      },
      firstOccurrence: {
        serializedName: "firstOccurrence",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      lastOccurrence: {
        serializedName: "lastOccurrence",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      exceptionType: {
        serializedName: "exceptionType",
        type: {
          name: "String"
        }
      },
      exceptionMessage: {
        serializedName: "exceptionMessage",
        type: {
          name: "String"
        }
      },
      exceptionClassName: {
        serializedName: "exceptionClassName",
        type: {
          name: "String"
        }
      },
      exceptionClassMethod: {
        serializedName: "exceptionClassMethod",
        type: {
          name: "Boolean"
        }
      },
      exceptionMethod: {
        serializedName: "exceptionMethod",
        type: {
          name: "String"
        }
      },
      exceptionAppCode: {
        serializedName: "exceptionAppCode",
        type: {
          name: "Boolean"
        }
      },
      exceptionFile: {
        serializedName: "exceptionFile",
        type: {
          name: "String"
        }
      },
      exceptionLine: {
        serializedName: "exceptionLine",
        type: {
          name: "String"
        }
      },
      codeRaw: {
        serializedName: "codeRaw",
        type: {
          name: "String"
        }
      },
      reasonFrames: {
        serializedName: "reasonFrames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Get200ApplicationJsonPropertiesItems0ReasonFramesItem"
            }
          }
        }
      },
      hidden: {
        serializedName: "hidden",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths73P5FlV01AppsOwnerNameAppNameErrorsErrorgroupsGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths73P5FlV01AppsOwnerNameAppNameErrorsErrorgroupsGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItemsAllof0",
    modelProperties: {
      ...Paths9Zowz3V01AppsOwnerNameAppNameErrorsErrorgroupsGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItemsAllof0
        .type.modelProperties,
      errorGroupId: {
        serializedName: "errorGroupId",
        required: true,
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "appVersion",
        required: true,
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "appBuild",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        required: true,
        type: {
          name: "Number"
        }
      },
      deviceCount: {
        serializedName: "deviceCount",
        required: true,
        type: {
          name: "Number"
        }
      },
      firstOccurrence: {
        serializedName: "firstOccurrence",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      lastOccurrence: {
        serializedName: "lastOccurrence",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      exceptionType: {
        serializedName: "exceptionType",
        type: {
          name: "String"
        }
      },
      exceptionMessage: {
        serializedName: "exceptionMessage",
        type: {
          name: "String"
        }
      },
      exceptionClassName: {
        serializedName: "exceptionClassName",
        type: {
          name: "String"
        }
      },
      exceptionClassMethod: {
        serializedName: "exceptionClassMethod",
        type: {
          name: "Boolean"
        }
      },
      exceptionMethod: {
        serializedName: "exceptionMethod",
        type: {
          name: "String"
        }
      },
      exceptionAppCode: {
        serializedName: "exceptionAppCode",
        type: {
          name: "Boolean"
        }
      },
      exceptionFile: {
        serializedName: "exceptionFile",
        type: {
          name: "String"
        }
      },
      exceptionLine: {
        serializedName: "exceptionLine",
        type: {
          name: "String"
        }
      },
      codeRaw: {
        serializedName: "codeRaw",
        type: {
          name: "String"
        }
      },
      reasonFrames: {
        serializedName: "reasonFrames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "Paths6YokraV01AppsOwnerNameAppNameErrorsErrorgroupsGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItemsAllof0PropertiesReasonframesItems"
            }
          }
        }
      },
      hidden: {
        serializedName: "hidden",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Paths2Uu9MkV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths2Uu9MkV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0",
    modelProperties: {
      ...PathsJ2Qqa3V01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0
        .type.modelProperties,
      ...Paths12P7F7IV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0Allof1
        .type.modelProperties
    }
  }
};

export const Paths141Gsz2V01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths141Gsz2V01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItems",
    modelProperties: {
      ...Paths2Uu9MkV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof0
        .type.modelProperties,
      ...Paths18M4XcxV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof1
        .type.modelProperties,
      ...Paths8Byq2JV01AppsOwnerNameAppNameDistributionGroupsDistributionGroupNameReleasesReleaseIdGetResponses200ContentApplicationJsonSchemaPropertiesDestinationsItemsAllof2
        .type.modelProperties
    }
  }
};

export const PathsCv4Vu0V01AppsOwnerNameAppNameDeploymentsDeploymentNameRollbackReleasePostResponses201ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsCv4Vu0V01AppsOwnerNameAppNameDeploymentsDeploymentNameRollbackReleasePostResponses201ContentApplicationJsonSchema",
    modelProperties: {
      ...PathsQ8034WV01AppsOwnerNameAppNameDeploymentsDeploymentNameRollbackReleasePostResponses201ContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      ...Paths50Kz7V01AppsOwnerNameAppNameDeploymentsDeploymentNameRollbackReleasePostResponses201ContentApplicationJsonSchemaAllof1
        .type.modelProperties
    }
  }
};

export const PathsZjw2F1V01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesReleaseLabelPatchRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsZjw2F1V01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesReleaseLabelPatchRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      ...PathsK12I6HV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesReleaseLabelPatchRequestbodyContentApplicationJsonSchemaAllof0
        .type.modelProperties
    }
  }
};

export const PathsIvaackV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesReleaseLabelPatchResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsIvaackV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesReleaseLabelPatchResponses200ContentApplicationJsonSchema",
    modelProperties: {
      ...Paths1Yea874V01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesReleaseLabelPatchResponses200ContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      ...PathsYibmhkV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesReleaseLabelPatchResponses200ContentApplicationJsonSchemaAllof1
        .type.modelProperties
    }
  }
};

export const PathsJ4L197V01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsJ4L197V01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      ...Paths1FevdlzV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesGetResponses200ContentApplicationJsonSchemaItemsAllof0
        .type.modelProperties,
      ...PathsLr93OtV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesGetResponses200ContentApplicationJsonSchemaItemsAllof1
        .type.modelProperties
    }
  }
};

export const Paths1N68We7V01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesPostResponses201ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1N68We7V01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesPostResponses201ContentApplicationJsonSchema",
    modelProperties: {
      ...Paths1Vd5IukV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesPostResponses201ContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      ...Paths17WmuvlV01AppsOwnerNameAppNameDeploymentsDeploymentNameReleasesPostResponses201ContentApplicationJsonSchemaAllof1
        .type.modelProperties
    }
  }
};

export const PathsOn7Se0V01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostRequestbodyContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsOn7Se0V01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostRequestbodyContentApplicationJsonSchema",
    modelProperties: {
      ...Paths622D52V01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostRequestbodyContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      ...Paths17F39DpV01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostRequestbodyContentApplicationJsonSchemaAllof1
        .type.modelProperties
    }
  }
};

export const Paths1Ou643ZV01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Ou643ZV01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostResponses200ContentApplicationJsonSchema",
    modelProperties: {
      ...Paths1Ublt1UV01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostResponses200ContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      ...Paths17Kc85CV01AppsOwnerNameAppNameDeploymentsDeploymentNamePromoteReleasePromoteDeploymentNamePostResponses200ContentApplicationJsonSchemaAllof1
        .type.modelProperties
    }
  }
};

export const PathsI5Bj4DV01AppsOwnerNameAppNameDeploymentsDeploymentNameGetResponses200ContentApplicationJsonSchemaPropertiesLatestRelease: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsI5Bj4DV01AppsOwnerNameAppNameDeploymentsDeploymentNameGetResponses200ContentApplicationJsonSchemaPropertiesLatestRelease",
    modelProperties: {
      ...PathsCr0BufV01AppsOwnerNameAppNameDeploymentsDeploymentNameGetResponses200ContentApplicationJsonSchemaPropertiesLatestReleaseAllof0
        .type.modelProperties,
      ...PathsGw9MspV01AppsOwnerNameAppNameDeploymentsDeploymentNameGetResponses200ContentApplicationJsonSchemaPropertiesLatestReleaseAllof1
        .type.modelProperties
    }
  }
};

export const GetResponses200ContentApplicationJsonSchemaItemLatestRelease: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetResponses200ContentApplicationJsonSchemaItemLatestRelease",
    modelProperties: {
      ...Paths1Bf3DjfV01AppsOwnerNameAppNameDeploymentsGetResponses200ContentApplicationJsonSchemaItemsPropertiesLatestReleaseAllof0
        .type.modelProperties,
      ...PathsNsdjsyV01AppsOwnerNameAppNameDeploymentsGetResponses200ContentApplicationJsonSchemaItemsPropertiesLatestReleaseAllof1
        .type.modelProperties
    }
  }
};

export const PostContentSchemaLatestRelease: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PostContentSchemaLatestRelease",
    modelProperties: {
      ...PathsZehv0UV01AppsOwnerNameAppNameDeploymentsPostRequestbodyContentApplicationJsonSchemaPropertiesLatestReleaseAllof0
        .type.modelProperties,
      ...Paths9Kw16BV01AppsOwnerNameAppNameDeploymentsPostRequestbodyContentApplicationJsonSchemaPropertiesLatestReleaseAllof1
        .type.modelProperties
    }
  }
};

export const PathsKc6I0MV01AppsOwnerNameAppNameDeploymentsPostResponses201ContentApplicationJsonSchemaPropertiesLatestRelease: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsKc6I0MV01AppsOwnerNameAppNameDeploymentsPostResponses201ContentApplicationJsonSchemaPropertiesLatestRelease",
    modelProperties: {
      ...Paths1Kdzg16V01AppsOwnerNameAppNameDeploymentsPostResponses201ContentApplicationJsonSchemaPropertiesLatestReleaseAllof0
        .type.modelProperties,
      ...PathsX1HeibV01AppsOwnerNameAppNameDeploymentsPostResponses201ContentApplicationJsonSchemaPropertiesLatestReleaseAllof1
        .type.modelProperties
    }
  }
};

export const PathsCbr4BhV01AppsOwnerNameAppNameCommitsBatchGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsCbr4BhV01AppsOwnerNameAppNameCommitsBatchGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      ...PathsCg3UfaV01AppsOwnerNameAppNameCommitsBatchGetResponses200ContentApplicationJsonSchemaItemsAllof0
        .type.modelProperties,
      ...Paths9M4LhgV01AppsOwnerNameAppNameCommitsBatchGetResponses200ContentApplicationJsonSchemaItemsAllof1
        .type.modelProperties
    }
  }
};

export const Paths1F8VktkV01AppsOwnerNameAppNameBugtrackerCrashgroupCrashGroupIdGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1F8VktkV01AppsOwnerNameAppNameBugtrackerCrashgroupCrashGroupIdGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      ...Paths1Xg1Y27V01AppsOwnerNameAppNameBugtrackerCrashgroupCrashGroupIdGetResponsesDefaultContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      ...PathsNmpisgV01AppsOwnerNameAppNameBugtrackerCrashgroupCrashGroupIdGetResponsesDefaultContentApplicationJsonSchemaAllof1
        .type.modelProperties
    }
  }
};

export const Paths3CngdnV01AppsOwnerNameAppNameBugtrackerGetResponsesDefaultContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths3CngdnV01AppsOwnerNameAppNameBugtrackerGetResponsesDefaultContentApplicationJsonSchema",
    modelProperties: {
      ...Paths1Ar0SvjV01AppsOwnerNameAppNameBugtrackerGetResponsesDefaultContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      ...Paths1KnyufoV01AppsOwnerNameAppNameBugtrackerGetResponsesDefaultContentApplicationJsonSchemaAllof1
        .type.modelProperties
    }
  }
};

export const PathsRuhky8V01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsRuhky8V01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchema",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      ...Paths13VettcV01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      ...Paths4Y3LpwV01AppsOwnerNameAppNameBranchesBranchConfigGetResponses200ContentApplicationJsonSchemaAllof1
        .type.modelProperties
    }
  }
};

export const PathsYdemoiV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsYdemoiV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchema",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      ...Paths1Kbv5LpV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      ...Paths1PqezhuV01AppsOwnerNameAppNameBranchesBranchConfigPostResponses200ContentApplicationJsonSchemaAllof1
        .type.modelProperties
    }
  }
};

export const PathsRa6DxlV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsRa6DxlV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchema",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      ...PathsXp75IdV01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      ...Paths1Mp73R1V01AppsOwnerNameAppNameBranchesBranchConfigPutResponses200ContentApplicationJsonSchemaAllof1
        .type.modelProperties
    }
  }
};

export const Paths1X598I8V01AppsOwnerNameAppNameAvatarPostResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1X598I8V01AppsOwnerNameAppNameAvatarPostResponses200ContentApplicationJsonSchema",
    modelProperties: {
      ...Paths1R8EjleV01AppsOwnerNameAppNameAvatarPostResponses200ContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      ...PathsTl8K7SV01AppsOwnerNameAppNameAvatarPostResponses200ContentApplicationJsonSchemaAllof1
        .type.modelProperties
    }
  }
};

export const Paths1Jhcvh4V01AppsOwnerNameAppNameAvatarDeleteResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Jhcvh4V01AppsOwnerNameAppNameAvatarDeleteResponses200ContentApplicationJsonSchema",
    modelProperties: {
      ...Paths1D6EjcuV01AppsOwnerNameAppNameAvatarDeleteResponses200ContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      ...PathsJ1Qwc6V01AppsOwnerNameAppNameAvatarDeleteResponses200ContentApplicationJsonSchemaAllof1
        .type.modelProperties
    }
  }
};

export const PostContentSchemaReleasesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PostContentSchemaReleasesItem",
    modelProperties: {
      ...Paths1D756ChV01AppsOwnerNameAppNameAnalyticsDistributionReleaseCountsPostRequestbodyContentApplicationJsonSchemaPropertiesReleasesItemsAllof0
        .type.modelProperties,
      distributionGroup: {
        serializedName: "distribution_group",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Paths1Tl18ZeV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNameGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Tl18ZeV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNameGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      ...Paths4Tfj7FV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNameGetResponses200ContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      enabled: {
        defaultValue: true,
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      customProperties: {
        serializedName: "custom_properties",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Enum",
              allowedValues: ["string", "number", "boolean", "date_time"]
            }
          }
        }
      },
      estimatedTotalCount: {
        serializedName: "estimated_total_count",
        type: {
          name: "Number"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const PathsAem3LcV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNamePutResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsAem3LcV01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNamePutResponses200ContentApplicationJsonSchema",
    modelProperties: {
      ...PathsIokya3V01AppsOwnerNameAppNameAnalyticsAudiencesAudienceNamePutResponses200ContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      enabled: {
        defaultValue: true,
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      customProperties: {
        serializedName: "custom_properties",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Enum",
              allowedValues: ["string", "number", "boolean", "date_time"]
            }
          }
        }
      },
      estimatedTotalCount: {
        serializedName: "estimated_total_count",
        type: {
          name: "Number"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const PathsRv9AxzV01AppsOwnerNameAppNameGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsRv9AxzV01AppsOwnerNameAppNameGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      ...PathsGwup8BV01AppsOwnerNameAppNameGetResponses200ContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      ...PathsYhp60MV01AppsOwnerNameAppNameGetResponses200ContentApplicationJsonSchemaAllof1
        .type.modelProperties
    }
  }
};

export const PathsPcp6H8V01AppsOwnerNameAppNamePatchResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsPcp6H8V01AppsOwnerNameAppNamePatchResponses200ContentApplicationJsonSchema",
    modelProperties: {
      ...Paths1UogsreV01AppsOwnerNameAppNamePatchResponses200ContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      ...Paths176RmcwV01AppsOwnerNameAppNamePatchResponses200ContentApplicationJsonSchemaAllof1
        .type.modelProperties
    }
  }
};

export const Paths1Xn0TpgV01AppsPostResponses201ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1Xn0TpgV01AppsPostResponses201ContentApplicationJsonSchema",
    modelProperties: {
      ...Paths1Mhfa1V01AppsPostResponses201ContentApplicationJsonSchemaAllof0
        .type.modelProperties,
      ...Paths1KwnvogV01AppsPostResponses201ContentApplicationJsonSchemaAllof1
        .type.modelProperties
    }
  }
};

export const PathsEh92XyV01AppsGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsEh92XyV01AppsGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      ...Paths2I85NV01AppsGetResponses200ContentApplicationJsonSchemaItemsAllof0
        .type.modelProperties,
      ...Paths1Rjy06FV01AppsGetResponses200ContentApplicationJsonSchemaItemsAllof1
        .type.modelProperties
    }
  }
};

export const AppInvitationDetailResponseApp: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppInvitationDetailResponseApp",
    modelProperties: {
      ...ComponentsI5EjcmSchemasAppinvitationdetailresponsePropertiesAppAllof0
        .type.modelProperties,
      ...Components1Fe01MdSchemasAppinvitationdetailresponsePropertiesAppAllof1
        .type.modelProperties
    }
  }
};

export const Components10Yzej3SchemasAppresponseinternalAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components10Yzej3SchemasAppresponseinternalAllof0",
    modelProperties: {
      ...ComponentsXf12WkSchemasAppresponseinternalAllof0.type.modelProperties,
      ...Components1V5My88SchemasAppresponseinternalAllof0Allof1.type
        .modelProperties
    }
  }
};

export const Components1C6VjoySchemasAppwithteampermissionsresponseAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1C6VjoySchemasAppwithteampermissionsresponseAllof0",
    modelProperties: {
      ...Components1QyxhbgSchemasAppwithteampermissionsresponseAllof0.type
        .modelProperties,
      ...Components1Lu2Z3SchemasAppwithteampermissionsresponseAllof0Allof1.type
        .modelProperties
    }
  }
};

export const OrgDistributionGroupDetailsResponseAppsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OrgDistributionGroupDetailsResponseAppsItem",
    modelProperties: {
      ...Components81FkqhSchemasOrgdistributiongroupdetailsresponsePropertiesAppsItemsAllof0
        .type.modelProperties,
      ...ComponentsL6FpkwSchemasOrgdistributiongroupdetailsresponsePropertiesAppsItemsAllof1
        .type.modelProperties
    }
  }
};

export const InvitationDetailResponseApp: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InvitationDetailResponseApp",
    modelProperties: {
      ...Components1Jkno23SchemasInvitationdetailresponsePropertiesAppAllof0
        .type.modelProperties,
      ...Components1SdfznqSchemasInvitationdetailresponsePropertiesAppAllof1
        .type.modelProperties
    }
  }
};

export const GdprInvitationDetailResponseApp: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GdprInvitationDetailResponseApp",
    modelProperties: {
      ...ComponentsJ73B5WSchemasGdprinvitationdetailresponsePropertiesAppAllof0
        .type.modelProperties,
      ...Components116Ns0HSchemasGdprinvitationdetailresponsePropertiesAppAllof1
        .type.modelProperties
    }
  }
};

export const ComponentsR6Bc9OSchemasOrganizationresponsemanagementAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsR6Bc9OSchemasOrganizationresponsemanagementAllof0",
    modelProperties: {
      ...ComponentsG3G8Y3SchemasOrganizationresponsemanagementAllof0.type
        .modelProperties,
      ...Components1Rgq5DkSchemasOrganizationresponsemanagementAllof0Allof1.type
        .modelProperties
    }
  }
};

export const ComponentsAvwdpgSchemasUserprofileresponsemanagementAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentsAvwdpgSchemasUserprofileresponsemanagementAllof0",
    modelProperties: {
      ...Components1AlcexuSchemasUserprofileresponsemanagementAllof0.type
        .modelProperties,
      ...Components42S30FSchemasUserprofileresponsemanagementAllof0Allof1.type
        .modelProperties
    }
  }
};

export const Components3Sb7Y4SchemasApplecredentialsmultifactorsecretrequestAllof0: coreClient.CompositeMapper = {
  serializedName: "apple",
  type: {
    name: "Composite",
    className:
      "Components3Sb7Y4SchemasApplecredentialsmultifactorsecretrequestAllof0",
    uberParent:
      "Components8Iu7RuSchemasApplecredentialsmultifactorsecretrequestAllof0",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      ...Components8Iu7RuSchemasApplecredentialsmultifactorsecretrequestAllof0
        .type.modelProperties
    }
  }
};

export const Components5Dyv8CSchemasApplecredentialssecretrequestAllof0: coreClient.CompositeMapper = {
  serializedName: "apple",
  type: {
    name: "Composite",
    className: "Components5Dyv8CSchemasApplecredentialssecretrequestAllof0",
    uberParent: "Components5A5L2ESchemasApplecredentialssecretrequestAllof0",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      ...Components5A5L2ESchemasApplecredentialssecretrequestAllof0.type
        .modelProperties
    }
  }
};

export const ComponentsKnowtpSchemasApplecertificatesecretrequestAllof0: coreClient.CompositeMapper = {
  serializedName: "apple",
  type: {
    name: "Composite",
    className: "ComponentsKnowtpSchemasApplecertificatesecretrequestAllof0",
    uberParent: "Components13S9A4RSchemasApplecertificatesecretrequestAllof0",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      ...Components13S9A4RSchemasApplecertificatesecretrequestAllof0.type
        .modelProperties
    }
  }
};

export const ComponentsEay2HoSchemasPrivateapplecredentialssecretresponseAllof0: coreClient.CompositeMapper = {
  serializedName: "apple",
  type: {
    name: "Composite",
    className:
      "ComponentsEay2HoSchemasPrivateapplecredentialssecretresponseAllof0",
    uberParent:
      "ComponentsS0Rbt7SchemasPrivateapplecredentialssecretresponseAllof0",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      ...ComponentsS0Rbt7SchemasPrivateapplecredentialssecretresponseAllof0.type
        .modelProperties
    }
  }
};

export const ComponentsZqm0VqSchemasPrivateapplecertificatesecretresponseAllof0: coreClient.CompositeMapper = {
  serializedName: "apple",
  type: {
    name: "Composite",
    className:
      "ComponentsZqm0VqSchemasPrivateapplecertificatesecretresponseAllof0",
    uberParent:
      "ComponentsHw7AncSchemasPrivateapplecertificatesecretresponseAllof0",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      ...ComponentsHw7AncSchemasPrivateapplecertificatesecretresponseAllof0.type
        .modelProperties
    }
  }
};

export const AppleConnectionSecretResponse: coreClient.CompositeMapper = {
  serializedName: "apple",
  type: {
    name: "Composite",
    className: "AppleConnectionSecretResponse",
    uberParent: "Components1Yflo3CSchemasAppleconnectionsecretresponseAllof0",
    polymorphicDiscriminator:
      Components1Yflo3CSchemasAppleconnectionsecretresponseAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components1Yflo3CSchemasAppleconnectionsecretresponseAllof0.type
        .modelProperties,
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "AppleConnectionSecretResponseData"
        }
      }
    }
  }
};

export const Components1BxvcioSchemasApplecredentialnonsecretdetailsresponseAllof0: coreClient.CompositeMapper = {
  serializedName: "apple",
  type: {
    name: "Composite",
    className:
      "Components1BxvcioSchemasApplecredentialnonsecretdetailsresponseAllof0",
    uberParent:
      "Components8D2JkjSchemasApplecredentialnonsecretdetailsresponseAllof0",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      ...Components8D2JkjSchemasApplecredentialnonsecretdetailsresponseAllof0
        .type.modelProperties
    }
  }
};

export const Components18Y2Ef6SchemasApplecertificatenonsecretdetailsresponseAllof0: coreClient.CompositeMapper = {
  serializedName: "apple",
  type: {
    name: "Composite",
    className:
      "Components18Y2Ef6SchemasApplecertificatenonsecretdetailsresponseAllof0",
    uberParent:
      "ComponentsUk3N19SchemasApplecertificatenonsecretdetailsresponseAllof0",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      ...ComponentsUk3N19SchemasApplecertificatenonsecretdetailsresponseAllof0
        .type.modelProperties
    }
  }
};

export const AppleCertificateSecretDetailsResponse: coreClient.CompositeMapper = {
  serializedName: "apple",
  type: {
    name: "Composite",
    className: "AppleCertificateSecretDetailsResponse",
    uberParent:
      "Components1Hfba82SchemasApplecertificatesecretdetailsresponseAllof0",
    polymorphicDiscriminator:
      Components1Hfba82SchemasApplecertificatesecretdetailsresponseAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components1Hfba82SchemasApplecertificatesecretdetailsresponseAllof0
        .type.modelProperties,
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "AppleCertificateSecretDetailsResponseData"
        }
      }
    }
  }
};

export const JiraConnectionSecretRequest: coreClient.CompositeMapper = {
  serializedName: "jira",
  type: {
    name: "Composite",
    className: "JiraConnectionSecretRequest",
    uberParent: "Components1VirfwpSchemasJiraconnectionsecretrequestAllof0",
    polymorphicDiscriminator:
      Components1VirfwpSchemasJiraconnectionsecretrequestAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components1VirfwpSchemasJiraconnectionsecretrequestAllof0.type
        .modelProperties,
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "JiraConnectionSecretRequestData"
        }
      }
    }
  }
};

export const JiraConnectionSecretResponse: coreClient.CompositeMapper = {
  serializedName: "jira",
  type: {
    name: "Composite",
    className: "JiraConnectionSecretResponse",
    uberParent: "Components1TsjhacSchemasJiraconnectionsecretresponseAllof0",
    polymorphicDiscriminator:
      Components1TsjhacSchemasJiraconnectionsecretresponseAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components1TsjhacSchemasJiraconnectionsecretresponseAllof0.type
        .modelProperties,
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "JiraConnectionSecretResponseData"
        }
      }
    }
  }
};

export const PrivateJiraConnectionSecretResponse: coreClient.CompositeMapper = {
  serializedName: "jira",
  type: {
    name: "Composite",
    className: "PrivateJiraConnectionSecretResponse",
    uberParent:
      "Components1Rn2982SchemasPrivatejiraconnectionsecretresponseAllof0",
    polymorphicDiscriminator:
      Components1Rn2982SchemasPrivatejiraconnectionsecretresponseAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components1Rn2982SchemasPrivatejiraconnectionsecretresponseAllof0.type
        .modelProperties,
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "PrivateJiraConnectionSecretResponseData"
        }
      }
    }
  }
};

export const GooglePlayConnectionSecretRequest: coreClient.CompositeMapper = {
  serializedName: "googleplay",
  type: {
    name: "Composite",
    className: "GooglePlayConnectionSecretRequest",
    uberParent:
      "ComponentsDtnm3YSchemasGoogleplayconnectionsecretrequestAllof0",
    polymorphicDiscriminator:
      ComponentsDtnm3YSchemasGoogleplayconnectionsecretrequestAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...ComponentsDtnm3YSchemasGoogleplayconnectionsecretrequestAllof0.type
        .modelProperties,
      data: {
        serializedName: "data",
        required: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const GooglePlayConnectionSecretResponse: coreClient.CompositeMapper = {
  serializedName: "googleplay",
  type: {
    name: "Composite",
    className: "GooglePlayConnectionSecretResponse",
    uberParent:
      "Components1T4OuyrSchemasGoogleplayconnectionsecretresponseAllof0",
    polymorphicDiscriminator:
      Components1T4OuyrSchemasGoogleplayconnectionsecretresponseAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components1T4OuyrSchemasGoogleplayconnectionsecretresponseAllof0.type
        .modelProperties,
      data: {
        serializedName: "data",
        required: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const PrivateGooglePlayConnectionSecretResponse: coreClient.CompositeMapper = {
  serializedName: "googleplay",
  type: {
    name: "Composite",
    className: "PrivateGooglePlayConnectionSecretResponse",
    uberParent:
      "Components8R88R5SchemasPrivategoogleplayconnectionsecretresponseAllof0",
    polymorphicDiscriminator:
      Components8R88R5SchemasPrivategoogleplayconnectionsecretresponseAllof0
        .type.polymorphicDiscriminator,
    modelProperties: {
      ...Components8R88R5SchemasPrivategoogleplayconnectionsecretresponseAllof0
        .type.modelProperties,
      data: {
        serializedName: "data",
        required: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const Components1Qvpk8VSchemasGoogleplaycredentialnonsecretdetailsresponseAllof0: coreClient.CompositeMapper = {
  serializedName: "googleplay",
  type: {
    name: "Composite",
    className:
      "Components1Qvpk8VSchemasGoogleplaycredentialnonsecretdetailsresponseAllof0",
    uberParent:
      "ComponentsH0D4WySchemasGoogleplaycredentialnonsecretdetailsresponseAllof0",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      ...ComponentsH0D4WySchemasGoogleplaycredentialnonsecretdetailsresponseAllof0
        .type.modelProperties
    }
  }
};

export const ComponentsBrcgsgSchemasJiracredentialnonsecretdetailsresponseAllof0: coreClient.CompositeMapper = {
  serializedName: "googleplay",
  type: {
    name: "Composite",
    className:
      "ComponentsBrcgsgSchemasJiracredentialnonsecretdetailsresponseAllof0",
    uberParent:
      "ComponentsOj73MvSchemasJiracredentialnonsecretdetailsresponseAllof0",
    polymorphicDiscriminator: {
      serializedName: "serviceType",
      clientName: "serviceType"
    },
    modelProperties: {
      ...ComponentsOj73MvSchemasJiracredentialnonsecretdetailsresponseAllof0
        .type.modelProperties
    }
  }
};

export const CommitDetailsListItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommitDetailsListItem",
    modelProperties: {
      ...ComponentsAs4RyuSchemasCommitdetailslistItemsAllof0.type
        .modelProperties,
      ...Components1Ivp89ASchemasCommitdetailslistItemsAllof1.type
        .modelProperties
    }
  }
};

export const Components1Wuan9LSchemasRepoconfigAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1Wuan9LSchemasRepoconfigAllof0",
    modelProperties: {
      ...ComponentsTfhuzwSchemasRepoconfigAllof0.type.modelProperties,
      installationId: {
        serializedName: "installation_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RepoConfigPostRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RepoConfigPostRequest",
    modelProperties: {
      ...Components1Lrnp2USchemasRepoconfigpostrequestAllof0.type
        .modelProperties,
      installationId: {
        serializedName: "installation_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components1Uijx7XSchemasRepoconfigsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1Uijx7XSchemasRepoconfigsItemsAllof0",
    modelProperties: {
      ...ComponentsTqa8P8SchemasRepoconfigsItemsAllof0.type.modelProperties,
      installationId: {
        serializedName: "installation_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TesterAppWithReleaseResponseRelease: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TesterAppWithReleaseResponseRelease",
    modelProperties: {
      ...Components14MqnwvSchemasTesterappwithreleaseresponsePropertiesReleaseAllof0
        .type.modelProperties,
      ...ComponentsIemtnqSchemasTesterappwithreleaseresponsePropertiesReleaseAllof1
        .type.modelProperties
    }
  }
};

export const BasicReleaseDetailsResponseDistributionGroupsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BasicReleaseDetailsResponseDistributionGroupsItem",
    modelProperties: {
      ...Components13SebpjSchemasBasicreleasedetailsresponsePropertiesDistributionGroupsItemsAllof0
        .type.modelProperties,
      ...Components7B8Q6ZSchemasBasicreleasedetailsresponsePropertiesDistributionGroupsItemsAllof1
        .type.modelProperties
    }
  }
};

export const BasicReleaseDetailsResponseDistributionStoresItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BasicReleaseDetailsResponseDistributionStoresItem",
    modelProperties: {
      ...ComponentsYvfuboSchemasBasicreleasedetailsresponsePropertiesDistributionStoresItemsAllof0
        .type.modelProperties,
      ...Components1B3DilbSchemasBasicreleasedetailsresponsePropertiesDistributionStoresItemsAllof1
        .type.modelProperties
    }
  }
};

export const Components80KumpSchemasBasicreleasedetailsresponsePropertiesDestinationsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components80KumpSchemasBasicreleasedetailsresponsePropertiesDestinationsItemsAllof0",
    modelProperties: {
      ...Components1Leu8U7SchemasBasicreleasedetailsresponsePropertiesDestinationsItemsAllof0
        .type.modelProperties,
      ...ComponentsV2IcyqSchemasBasicreleasedetailsresponsePropertiesDestinationsItemsAllof0Allof1
        .type.modelProperties
    }
  }
};

export const BasicReleaseDetailsResponseDestinationsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BasicReleaseDetailsResponseDestinationsItem",
    modelProperties: {
      ...Components80KumpSchemasBasicreleasedetailsresponsePropertiesDestinationsItemsAllof0
        .type.modelProperties,
      ...ComponentsNe0Qx0SchemasBasicreleasedetailsresponsePropertiesDestinationsItemsAllof1
        .type.modelProperties,
      ...ComponentsM4TepnSchemasBasicreleasedetailsresponsePropertiesDestinationsItemsAllof2
        .type.modelProperties
    }
  }
};

export const ComponentsX16LppSchemasReleasedetailsresponsePropertiesDestinationsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsX16LppSchemasReleasedetailsresponsePropertiesDestinationsItemsAllof0",
    modelProperties: {
      ...Components1Gq9Sx7SchemasReleasedetailsresponsePropertiesDestinationsItemsAllof0
        .type.modelProperties,
      ...ComponentsQgfcfcSchemasReleasedetailsresponsePropertiesDestinationsItemsAllof0Allof1
        .type.modelProperties
    }
  }
};

export const ReleaseDetailsResponseDestinationsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseDetailsResponseDestinationsItem",
    modelProperties: {
      ...ComponentsX16LppSchemasReleasedetailsresponsePropertiesDestinationsItemsAllof0
        .type.modelProperties,
      ...Components8Xk84RSchemasReleasedetailsresponsePropertiesDestinationsItemsAllof1
        .type.modelProperties,
      ...ComponentsNj5C4HSchemasReleasedetailsresponsePropertiesDestinationsItemsAllof2
        .type.modelProperties
    }
  }
};

export const Components1Elftw1SchemasDestinationAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1Elftw1SchemasDestinationAllof0",
    modelProperties: {
      ...Components5Id7CnSchemasDestinationAllof0.type.modelProperties,
      ...ComponentsE0Rs9SSchemasDestinationAllof0Allof1.type.modelProperties
    }
  }
};

export const LogWithProperties: coreClient.CompositeMapper = {
  serializedName: "LogWithProperties",
  type: {
    name: "Composite",
    className: "LogWithProperties",
    uberParent: "Components1Eosn49SchemasLogwithpropertiesAllof0",
    polymorphicDiscriminator:
      Components1Eosn49SchemasLogwithpropertiesAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components1Eosn49SchemasLogwithpropertiesAllof0.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const StartSessionLog: coreClient.CompositeMapper = {
  serializedName: "start_session",
  type: {
    name: "Composite",
    className: "StartSessionLog",
    uberParent: "Components264NqgSchemasStartsessionlogAllof0",
    polymorphicDiscriminator:
      Components264NqgSchemasStartsessionlogAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components264NqgSchemasStartsessionlogAllof0.type.modelProperties,
      sessionId: {
        serializedName: "session_id",
        required: true,
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const DistributionStartSessionLog: coreClient.CompositeMapper = {
  serializedName: "distribution_start_session",
  type: {
    name: "Composite",
    className: "DistributionStartSessionLog",
    uberParent: "ComponentsO0SzfoSchemasDistributionstartsessionlogAllof0",
    polymorphicDiscriminator:
      ComponentsO0SzfoSchemasDistributionstartsessionlogAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...ComponentsO0SzfoSchemasDistributionstartsessionlogAllof0.type
        .modelProperties,
      distributionGroupId: {
        serializedName: "distribution_group_id",
        required: true,
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const HandledErrorLog: coreClient.CompositeMapper = {
  serializedName: "handled_error",
  type: {
    name: "Composite",
    className: "HandledErrorLog",
    uberParent: "Components84YphlSchemasHandlederrorlogAllof0",
    polymorphicDiscriminator:
      Components84YphlSchemasHandlederrorlogAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components84YphlSchemasHandlederrorlogAllof0.type.modelProperties,
      errorId: {
        serializedName: "error_id",
        required: true,
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const UnhandledErrorLog: coreClient.CompositeMapper = {
  serializedName: "unhandled_error",
  type: {
    name: "Composite",
    className: "UnhandledErrorLog",
    uberParent: "Components1Vpcf5FSchemasUnhandlederrorlogAllof0",
    polymorphicDiscriminator:
      Components1Vpcf5FSchemasUnhandlederrorlogAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components1Vpcf5FSchemasUnhandlederrorlogAllof0.type.modelProperties,
      errorId: {
        serializedName: "error_id",
        required: true,
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const StartServiceLog: coreClient.CompositeMapper = {
  serializedName: "start_service",
  type: {
    name: "Composite",
    className: "StartServiceLog",
    uberParent: "Components1Rh9N66SchemasStartservicelogAllof0",
    polymorphicDiscriminator:
      Components1Rh9N66SchemasStartservicelogAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components1Rh9N66SchemasStartservicelogAllof0.type.modelProperties,
      services: {
        constraints: {
          MinItems: 1
        },
        serializedName: "services",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const CustomPropertyLog: coreClient.CompositeMapper = {
  serializedName: "custom_properties",
  type: {
    name: "Composite",
    className: "CustomPropertyLog",
    uberParent: "ComponentsCzhkplSchemasCustompropertylogAllof0",
    polymorphicDiscriminator:
      ComponentsCzhkplSchemasCustompropertylogAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...ComponentsCzhkplSchemasCustompropertylogAllof0.type.modelProperties,
      properties: {
        constraints: {
          MinItems: 1,
          MaxItems: 60
        },
        serializedName: "properties",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CustomPropertyLogPropertiesItem"
            }
          }
        }
      }
    }
  }
};

export const StringProperty: coreClient.CompositeMapper = {
  serializedName: "string",
  type: {
    name: "Composite",
    className: "StringProperty",
    uberParent: "Components1HtupicSchemasStringpropertyAllof0",
    polymorphicDiscriminator:
      Components1HtupicSchemasStringpropertyAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components1HtupicSchemasStringpropertyAllof0.type.modelProperties,
      value: {
        constraints: {
          MaxLength: 128
        },
        serializedName: "value",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NumberProperty: coreClient.CompositeMapper = {
  serializedName: "number",
  type: {
    name: "Composite",
    className: "NumberProperty",
    uberParent: "Components3Is1CjSchemasNumberpropertyAllof0",
    polymorphicDiscriminator:
      Components3Is1CjSchemasNumberpropertyAllof0.type.polymorphicDiscriminator,
    modelProperties: {
      ...Components3Is1CjSchemasNumberpropertyAllof0.type.modelProperties,
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const BooleanProperty: coreClient.CompositeMapper = {
  serializedName: "boolean",
  type: {
    name: "Composite",
    className: "BooleanProperty",
    uberParent: "ComponentsIduba0SchemasBooleanpropertyAllof0",
    polymorphicDiscriminator:
      ComponentsIduba0SchemasBooleanpropertyAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...ComponentsIduba0SchemasBooleanpropertyAllof0.type.modelProperties,
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const DateTimeProperty: coreClient.CompositeMapper = {
  serializedName: "date_time",
  type: {
    name: "Composite",
    className: "DateTimeProperty",
    uberParent: "ComponentsLyvfq5SchemasDatetimepropertyAllof0",
    polymorphicDiscriminator:
      ComponentsLyvfq5SchemasDatetimepropertyAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...ComponentsLyvfq5SchemasDatetimepropertyAllof0.type.modelProperties,
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Components4Kro3MSchemasPagelogAllof0: coreClient.CompositeMapper = {
  serializedName: "components·4kro3m·schemas·pagelog·allof·0",
  type: {
    name: "Composite",
    className: "Components4Kro3MSchemasPagelogAllof0",
    uberParent: "Components1Wno2Z2SchemasPagelogAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      ...Components1Wno2Z2SchemasPagelogAllof0.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const Components498ZbbSchemasEventlogAllof0: coreClient.CompositeMapper = {
  serializedName: "components·498zbb·schemas·eventlog·allof·0",
  type: {
    name: "Composite",
    className: "Components498ZbbSchemasEventlogAllof0",
    uberParent: "ComponentsMa5HoxSchemasEventlogAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      ...ComponentsMa5HoxSchemasEventlogAllof0.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const PushInstallationLog: coreClient.CompositeMapper = {
  serializedName: "push_installation",
  type: {
    name: "Composite",
    className: "PushInstallationLog",
    uberParent: "ComponentsNch8AzSchemasPushinstallationlogAllof0",
    polymorphicDiscriminator:
      ComponentsNch8AzSchemasPushinstallationlogAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...ComponentsNch8AzSchemasPushinstallationlogAllof0.type.modelProperties,
      pushToken: {
        serializedName: "push_token",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorLog: coreClient.CompositeMapper = {
  serializedName: "error",
  type: {
    name: "Composite",
    className: "ErrorLog",
    uberParent: "Components1Aigpj3SchemasErrorlogAllof0",
    polymorphicDiscriminator:
      Components1Aigpj3SchemasErrorlogAllof0.type.polymorphicDiscriminator,
    modelProperties: {
      ...Components1Aigpj3SchemasErrorlogAllof0.type.modelProperties,
      sessionId: {
        serializedName: "session_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      appLaunchToffset: {
        serializedName: "app_launch_toffset",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Audience: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Audience",
    modelProperties: {
      ...Components46VdxoSchemasAudienceAllof0.type.modelProperties,
      enabled: {
        defaultValue: true,
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      customProperties: {
        serializedName: "custom_properties",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Enum",
              allowedValues: ["string", "number", "boolean", "date_time"]
            }
          }
        }
      },
      estimatedTotalCount: {
        serializedName: "estimated_total_count",
        type: {
          name: "Number"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Components1QhhniqSchemasNotifyreleasescontainerPropertiesReleasesItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components1QhhniqSchemasNotifyreleasescontainerPropertiesReleasesItemsAllof0",
    modelProperties: {
      ...Components1Ynaqb8SchemasNotifyreleasescontainerPropertiesReleasesItemsAllof0
        .type.modelProperties,
      distributionGroup: {
        serializedName: "distribution_group",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GetReleasesContainerReleasesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetReleasesContainerReleasesItem",
    modelProperties: {
      ...ComponentsOqh4QzSchemasGetreleasescontainerPropertiesReleasesItemsAllof0
        .type.modelProperties,
      distributionGroup: {
        serializedName: "distribution_group",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReleaseWithDistributionGroup: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseWithDistributionGroup",
    modelProperties: {
      ...Components1Udh21GSchemasReleasewithdistributiongroupAllof0.type
        .modelProperties,
      distributionGroup: {
        serializedName: "distribution_group",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentsHgeo9DSchemasReleasewithdistributiongroupanduseridAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ComponentsHgeo9DSchemasReleasewithdistributiongroupanduseridAllof0",
    modelProperties: {
      ...Components1Go150KSchemasReleasewithdistributiongroupanduseridAllof0
        .type.modelProperties,
      distributionGroup: {
        serializedName: "distribution_group",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LogFlowLogWithProperties: coreClient.CompositeMapper = {
  serializedName: "LogFlowLogWithProperties",
  type: {
    name: "Composite",
    className: "LogFlowLogWithProperties",
    uberParent: "ComponentsAdvxd9SchemasLogflowlogwithpropertiesAllof0",
    polymorphicDiscriminator:
      ComponentsAdvxd9SchemasLogflowlogwithpropertiesAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...ComponentsAdvxd9SchemasLogflowlogwithpropertiesAllof0.type
        .modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const LogFlowStartSessionLog: coreClient.CompositeMapper = {
  serializedName: "start_session",
  type: {
    name: "Composite",
    className: "LogFlowStartSessionLog",
    uberParent: "Components1F0KdpnSchemasLogflowstartsessionlogAllof0",
    polymorphicDiscriminator:
      Components1F0KdpnSchemasLogflowstartsessionlogAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components1F0KdpnSchemasLogflowstartsessionlogAllof0.type
        .modelProperties,
      sessionId: {
        serializedName: "session_id",
        required: true,
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const LogFlowStartServiceLog: coreClient.CompositeMapper = {
  serializedName: "start_service",
  type: {
    name: "Composite",
    className: "LogFlowStartServiceLog",
    uberParent: "Components11CfsbmSchemasLogflowstartservicelogAllof0",
    polymorphicDiscriminator:
      Components11CfsbmSchemasLogflowstartservicelogAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components11CfsbmSchemasLogflowstartservicelogAllof0.type
        .modelProperties,
      services: {
        constraints: {
          MinItems: 1
        },
        serializedName: "services",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const LogFlowCustomPropertyLog: coreClient.CompositeMapper = {
  serializedName: "custom_properties",
  type: {
    name: "Composite",
    className: "LogFlowCustomPropertyLog",
    uberParent: "ComponentsXnezrhSchemasLogflowcustompropertylogAllof0",
    polymorphicDiscriminator:
      ComponentsXnezrhSchemasLogflowcustompropertylogAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...ComponentsXnezrhSchemasLogflowcustompropertylogAllof0.type
        .modelProperties,
      properties: {
        constraints: {
          MinItems: 1,
          MaxItems: 60
        },
        serializedName: "properties",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LogFlowCustomPropertyLogPropertiesItem"
            }
          }
        }
      }
    }
  }
};

export const LogFlowStringProperty: coreClient.CompositeMapper = {
  serializedName: "string",
  type: {
    name: "Composite",
    className: "LogFlowStringProperty",
    uberParent: "Components1G242RdSchemasLogflowstringpropertyAllof0",
    polymorphicDiscriminator:
      Components1G242RdSchemasLogflowstringpropertyAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components1G242RdSchemasLogflowstringpropertyAllof0.type
        .modelProperties,
      value: {
        constraints: {
          MaxLength: 128
        },
        serializedName: "value",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LogFlowNumberProperty: coreClient.CompositeMapper = {
  serializedName: "number",
  type: {
    name: "Composite",
    className: "LogFlowNumberProperty",
    uberParent: "ComponentsTkf1YnSchemasLogflownumberpropertyAllof0",
    polymorphicDiscriminator:
      ComponentsTkf1YnSchemasLogflownumberpropertyAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...ComponentsTkf1YnSchemasLogflownumberpropertyAllof0.type
        .modelProperties,
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const LogFlowBooleanProperty: coreClient.CompositeMapper = {
  serializedName: "boolean",
  type: {
    name: "Composite",
    className: "LogFlowBooleanProperty",
    uberParent: "ComponentsCwosetSchemasLogflowbooleanpropertyAllof0",
    polymorphicDiscriminator:
      ComponentsCwosetSchemasLogflowbooleanpropertyAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...ComponentsCwosetSchemasLogflowbooleanpropertyAllof0.type
        .modelProperties,
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const LogFlowDateTimeProperty: coreClient.CompositeMapper = {
  serializedName: "date_time",
  type: {
    name: "Composite",
    className: "LogFlowDateTimeProperty",
    uberParent: "Components127VkznSchemasLogflowdatetimepropertyAllof0",
    polymorphicDiscriminator:
      Components127VkznSchemasLogflowdatetimepropertyAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components127VkznSchemasLogflowdatetimepropertyAllof0.type
        .modelProperties,
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Components11Mk7TbSchemasLogflowpagelogAllof0: coreClient.CompositeMapper = {
  serializedName: "components·11mk7tb·schemas·logflowpagelog·allof·0",
  type: {
    name: "Composite",
    className: "Components11Mk7TbSchemasLogflowpagelogAllof0",
    uberParent: "Components10Oj24WSchemasLogflowpagelogAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      ...Components10Oj24WSchemasLogflowpagelogAllof0.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const ComponentsBzcad5SchemasLogfloweventlogAllof0: coreClient.CompositeMapper = {
  serializedName: "components·bzcad5·schemas·logfloweventlog·allof·0",
  type: {
    name: "Composite",
    className: "ComponentsBzcad5SchemasLogfloweventlogAllof0",
    uberParent: "Components1Ctri9VSchemasLogfloweventlogAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      ...Components1Ctri9VSchemasLogfloweventlogAllof0.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const LogFlowPushInstallationLog: coreClient.CompositeMapper = {
  serializedName: "push_installation",
  type: {
    name: "Composite",
    className: "LogFlowPushInstallationLog",
    uberParent: "Components1Yqphd0SchemasLogflowpushinstallationlogAllof0",
    polymorphicDiscriminator:
      Components1Yqphd0SchemasLogflowpushinstallationlogAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components1Yqphd0SchemasLogflowpushinstallationlogAllof0.type
        .modelProperties,
      pushToken: {
        serializedName: "push_token",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LogFlowErrorLog: coreClient.CompositeMapper = {
  serializedName: "error",
  type: {
    name: "Composite",
    className: "LogFlowErrorLog",
    uberParent: "ComponentsPcles3SchemasLogflowerrorlogAllof0",
    polymorphicDiscriminator:
      ComponentsPcles3SchemasLogflowerrorlogAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...ComponentsPcles3SchemasLogflowerrorlogAllof0.type.modelProperties,
      sessionId: {
        serializedName: "session_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      appLaunchToffset: {
        serializedName: "app_launch_toffset",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Components65B2B3SchemasErrorgroupsPropertiesErrorgroupsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components65B2B3SchemasErrorgroupsPropertiesErrorgroupsItemsAllof0",
    modelProperties: {
      ...Components18G140XSchemasErrorgroupsPropertiesErrorgroupsItemsAllof0
        .type.modelProperties,
      errorGroupId: {
        serializedName: "errorGroupId",
        required: true,
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "appVersion",
        required: true,
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "appBuild",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        required: true,
        type: {
          name: "Number"
        }
      },
      deviceCount: {
        serializedName: "deviceCount",
        required: true,
        type: {
          name: "Number"
        }
      },
      firstOccurrence: {
        serializedName: "firstOccurrence",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      lastOccurrence: {
        serializedName: "lastOccurrence",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      exceptionType: {
        serializedName: "exceptionType",
        type: {
          name: "String"
        }
      },
      exceptionMessage: {
        serializedName: "exceptionMessage",
        type: {
          name: "String"
        }
      },
      exceptionClassName: {
        serializedName: "exceptionClassName",
        type: {
          name: "String"
        }
      },
      exceptionClassMethod: {
        serializedName: "exceptionClassMethod",
        type: {
          name: "Boolean"
        }
      },
      exceptionMethod: {
        serializedName: "exceptionMethod",
        type: {
          name: "String"
        }
      },
      exceptionAppCode: {
        serializedName: "exceptionAppCode",
        type: {
          name: "Boolean"
        }
      },
      exceptionFile: {
        serializedName: "exceptionFile",
        type: {
          name: "String"
        }
      },
      exceptionLine: {
        serializedName: "exceptionLine",
        type: {
          name: "String"
        }
      },
      codeRaw: {
        serializedName: "codeRaw",
        type: {
          name: "String"
        }
      },
      reasonFrames: {
        serializedName: "reasonFrames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorGroupsAllOfPropertiesItemsItem"
            }
          }
        }
      },
      hidden: {
        serializedName: "hidden",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Components1Gnwyz6SchemasErrorgroupssearchresultPropertiesErrorgroupsItemsAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components1Gnwyz6SchemasErrorgroupssearchresultPropertiesErrorgroupsItemsAllof0",
    modelProperties: {
      ...Components1Bte8TvSchemasErrorgroupssearchresultPropertiesErrorgroupsItemsAllof0
        .type.modelProperties,
      errorGroupId: {
        serializedName: "errorGroupId",
        required: true,
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "appVersion",
        required: true,
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "appBuild",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        required: true,
        type: {
          name: "Number"
        }
      },
      deviceCount: {
        serializedName: "deviceCount",
        required: true,
        type: {
          name: "Number"
        }
      },
      firstOccurrence: {
        serializedName: "firstOccurrence",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      lastOccurrence: {
        serializedName: "lastOccurrence",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      exceptionType: {
        serializedName: "exceptionType",
        type: {
          name: "String"
        }
      },
      exceptionMessage: {
        serializedName: "exceptionMessage",
        type: {
          name: "String"
        }
      },
      exceptionClassName: {
        serializedName: "exceptionClassName",
        type: {
          name: "String"
        }
      },
      exceptionClassMethod: {
        serializedName: "exceptionClassMethod",
        type: {
          name: "Boolean"
        }
      },
      exceptionMethod: {
        serializedName: "exceptionMethod",
        type: {
          name: "String"
        }
      },
      exceptionAppCode: {
        serializedName: "exceptionAppCode",
        type: {
          name: "Boolean"
        }
      },
      exceptionFile: {
        serializedName: "exceptionFile",
        type: {
          name: "String"
        }
      },
      exceptionLine: {
        serializedName: "exceptionLine",
        type: {
          name: "String"
        }
      },
      codeRaw: {
        serializedName: "codeRaw",
        type: {
          name: "String"
        }
      },
      reasonFrames: {
        serializedName: "reasonFrames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "ErrorGroupsSearchResultErrorGroupsAllOfPropertiesItemsItem"
            }
          }
        }
      },
      hidden: {
        serializedName: "hidden",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Components1Qil18RSchemasErrorgrouplistitemAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components1Qil18RSchemasErrorgrouplistitemAllof0",
    modelProperties: {
      ...Components12LbtiSchemasErrorgrouplistitemAllof0.type.modelProperties,
      errorGroupId: {
        serializedName: "errorGroupId",
        required: true,
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "appVersion",
        required: true,
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "appBuild",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        required: true,
        type: {
          name: "Number"
        }
      },
      deviceCount: {
        serializedName: "deviceCount",
        required: true,
        type: {
          name: "Number"
        }
      },
      firstOccurrence: {
        serializedName: "firstOccurrence",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      lastOccurrence: {
        serializedName: "lastOccurrence",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      exceptionType: {
        serializedName: "exceptionType",
        type: {
          name: "String"
        }
      },
      exceptionMessage: {
        serializedName: "exceptionMessage",
        type: {
          name: "String"
        }
      },
      exceptionClassName: {
        serializedName: "exceptionClassName",
        type: {
          name: "String"
        }
      },
      exceptionClassMethod: {
        serializedName: "exceptionClassMethod",
        type: {
          name: "Boolean"
        }
      },
      exceptionMethod: {
        serializedName: "exceptionMethod",
        type: {
          name: "String"
        }
      },
      exceptionAppCode: {
        serializedName: "exceptionAppCode",
        type: {
          name: "Boolean"
        }
      },
      exceptionFile: {
        serializedName: "exceptionFile",
        type: {
          name: "String"
        }
      },
      exceptionLine: {
        serializedName: "exceptionLine",
        type: {
          name: "String"
        }
      },
      codeRaw: {
        serializedName: "codeRaw",
        type: {
          name: "String"
        }
      },
      reasonFrames: {
        serializedName: "reasonFrames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorGroupListItem0ReasonFramesItem"
            }
          }
        }
      },
      hidden: {
        serializedName: "hidden",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ErrorGroup: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorGroup",
    modelProperties: {
      ...ComponentsHbqu9KSchemasErrorgroupAllof0.type.modelProperties,
      errorGroupId: {
        serializedName: "errorGroupId",
        required: true,
        type: {
          name: "String"
        }
      },
      appVersion: {
        serializedName: "appVersion",
        required: true,
        type: {
          name: "String"
        }
      },
      appBuild: {
        serializedName: "appBuild",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        required: true,
        type: {
          name: "Number"
        }
      },
      deviceCount: {
        serializedName: "deviceCount",
        required: true,
        type: {
          name: "Number"
        }
      },
      firstOccurrence: {
        serializedName: "firstOccurrence",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      lastOccurrence: {
        serializedName: "lastOccurrence",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      exceptionType: {
        serializedName: "exceptionType",
        type: {
          name: "String"
        }
      },
      exceptionMessage: {
        serializedName: "exceptionMessage",
        type: {
          name: "String"
        }
      },
      exceptionClassName: {
        serializedName: "exceptionClassName",
        type: {
          name: "String"
        }
      },
      exceptionClassMethod: {
        serializedName: "exceptionClassMethod",
        type: {
          name: "Boolean"
        }
      },
      exceptionMethod: {
        serializedName: "exceptionMethod",
        type: {
          name: "String"
        }
      },
      exceptionAppCode: {
        serializedName: "exceptionAppCode",
        type: {
          name: "Boolean"
        }
      },
      exceptionFile: {
        serializedName: "exceptionFile",
        type: {
          name: "String"
        }
      },
      exceptionLine: {
        serializedName: "exceptionLine",
        type: {
          name: "String"
        }
      },
      codeRaw: {
        serializedName: "codeRaw",
        type: {
          name: "String"
        }
      },
      reasonFrames: {
        serializedName: "reasonFrames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorGroupReasonFramesItem"
            }
          }
        }
      },
      hidden: {
        serializedName: "hidden",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const HandledErrorDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HandledErrorDetails",
    modelProperties: {
      ...Components16C15OnSchemasHandlederrordetailsAllof0.type.modelProperties,
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      reasonFrames: {
        serializedName: "reasonFrames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HandledErrorDetailsReasonFramesItem"
            }
          }
        }
      },
      appLaunchTimestamp: {
        serializedName: "appLaunchTimestamp",
        type: {
          name: "DateTime"
        }
      },
      carrierName: {
        serializedName: "carrierName",
        type: {
          name: "String"
        }
      },
      jailbreak: {
        serializedName: "jailbreak",
        type: {
          name: "Boolean"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const LogWithPropertiesDiagnostics: coreClient.CompositeMapper = {
  serializedName: "LogWithProperties_Diagnostics",
  type: {
    name: "Composite",
    className: "LogWithPropertiesDiagnostics",
    uberParent: "Components45LjntSchemasLogwithpropertiesDiagnosticsAllof0",
    polymorphicDiscriminator:
      Components45LjntSchemasLogwithpropertiesDiagnosticsAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components45LjntSchemasLogwithpropertiesDiagnosticsAllof0.type
        .modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const StartSessionLogDiagnostics: coreClient.CompositeMapper = {
  serializedName: "start_session",
  type: {
    name: "Composite",
    className: "StartSessionLogDiagnostics",
    uberParent: "ComponentsZ650E9SchemasStartsessionlogDiagnosticsAllof0",
    polymorphicDiscriminator:
      ComponentsZ650E9SchemasStartsessionlogDiagnosticsAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...ComponentsZ650E9SchemasStartsessionlogDiagnosticsAllof0.type
        .modelProperties,
      sessionId: {
        serializedName: "session_id",
        required: true,
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const HanledErrorLogDiagnostics: coreClient.CompositeMapper = {
  serializedName: "handled_error",
  type: {
    name: "Composite",
    className: "HanledErrorLogDiagnostics",
    uberParent: "ComponentsNa1EysSchemasHanlederrorlogDiagnosticsAllof0",
    polymorphicDiscriminator:
      ComponentsNa1EysSchemasHanlederrorlogDiagnosticsAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...ComponentsNa1EysSchemasHanlederrorlogDiagnosticsAllof0.type
        .modelProperties,
      errorId: {
        serializedName: "error_id",
        required: true,
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const StartServiceLogDiagnostics: coreClient.CompositeMapper = {
  serializedName: "start_service",
  type: {
    name: "Composite",
    className: "StartServiceLogDiagnostics",
    uberParent: "ComponentsL1Kfc1SchemasStartservicelogDiagnosticsAllof0",
    polymorphicDiscriminator:
      ComponentsL1Kfc1SchemasStartservicelogDiagnosticsAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...ComponentsL1Kfc1SchemasStartservicelogDiagnosticsAllof0.type
        .modelProperties,
      services: {
        constraints: {
          MinItems: 1
        },
        serializedName: "services",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const CustomPropertyLogDiagnostics: coreClient.CompositeMapper = {
  serializedName: "custom_properties",
  type: {
    name: "Composite",
    className: "CustomPropertyLogDiagnostics",
    uberParent: "Components1XuemrlSchemasCustompropertylogDiagnosticsAllof0",
    polymorphicDiscriminator:
      Components1XuemrlSchemasCustompropertylogDiagnosticsAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components1XuemrlSchemasCustompropertylogDiagnosticsAllof0.type
        .modelProperties,
      properties: {
        constraints: {
          MinItems: 1,
          MaxItems: 60
        },
        serializedName: "properties",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CustomPropertyLogDiagnosticsPropertiesItem"
            }
          }
        }
      }
    }
  }
};

export const StringPropertyDiagnostics: coreClient.CompositeMapper = {
  serializedName: "string",
  type: {
    name: "Composite",
    className: "StringPropertyDiagnostics",
    uberParent: "Components1MplcxdSchemasStringpropertyDiagnosticsAllof0",
    polymorphicDiscriminator:
      Components1MplcxdSchemasStringpropertyDiagnosticsAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components1MplcxdSchemasStringpropertyDiagnosticsAllof0.type
        .modelProperties,
      value: {
        constraints: {
          MaxLength: 128
        },
        serializedName: "value",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NumberPropertyDiagnostics: coreClient.CompositeMapper = {
  serializedName: "number",
  type: {
    name: "Composite",
    className: "NumberPropertyDiagnostics",
    uberParent: "Components15Tz3ErSchemasNumberpropertyDiagnosticsAllof0",
    polymorphicDiscriminator:
      Components15Tz3ErSchemasNumberpropertyDiagnosticsAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components15Tz3ErSchemasNumberpropertyDiagnosticsAllof0.type
        .modelProperties,
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const BooleanPropertyDiagnostics: coreClient.CompositeMapper = {
  serializedName: "boolean",
  type: {
    name: "Composite",
    className: "BooleanPropertyDiagnostics",
    uberParent: "Components1H9UedtSchemasBooleanpropertyDiagnosticsAllof0",
    polymorphicDiscriminator:
      Components1H9UedtSchemasBooleanpropertyDiagnosticsAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components1H9UedtSchemasBooleanpropertyDiagnosticsAllof0.type
        .modelProperties,
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const DateTimePropertyDiagnostics: coreClient.CompositeMapper = {
  serializedName: "date_time",
  type: {
    name: "Composite",
    className: "DateTimePropertyDiagnostics",
    uberParent: "ComponentsYx2AaeSchemasDatetimepropertyDiagnosticsAllof0",
    polymorphicDiscriminator:
      ComponentsYx2AaeSchemasDatetimepropertyDiagnosticsAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...ComponentsYx2AaeSchemasDatetimepropertyDiagnosticsAllof0.type
        .modelProperties,
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Components1121EsfSchemasPagelogDiagnosticsAllof0: coreClient.CompositeMapper = {
  serializedName: "components·1121esf·schemas·pagelog_diagnostics·allof·0",
  type: {
    name: "Composite",
    className: "Components1121EsfSchemasPagelogDiagnosticsAllof0",
    uberParent: "ComponentsEffwicSchemasPagelogDiagnosticsAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      ...ComponentsEffwicSchemasPagelogDiagnosticsAllof0.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const ComponentsWa2CwfSchemasEventlogDiagnosticsAllof0: coreClient.CompositeMapper = {
  serializedName: "components·wa2cwf·schemas·eventlog_diagnostics·allof·0",
  type: {
    name: "Composite",
    className: "ComponentsWa2CwfSchemasEventlogDiagnosticsAllof0",
    uberParent: "Components1Vmj2OdSchemasEventlogDiagnosticsAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      ...Components1Vmj2OdSchemasEventlogDiagnosticsAllof0.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const PushInstallationLogDiagnostics: coreClient.CompositeMapper = {
  serializedName: "push_installation",
  type: {
    name: "Composite",
    className: "PushInstallationLogDiagnostics",
    uberParent: "Components1Pvlx64SchemasPushinstallationlogDiagnosticsAllof0",
    polymorphicDiscriminator:
      Components1Pvlx64SchemasPushinstallationlogDiagnosticsAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components1Pvlx64SchemasPushinstallationlogDiagnosticsAllof0.type
        .modelProperties,
      pushToken: {
        serializedName: "push_token",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorLogDiagnostics: coreClient.CompositeMapper = {
  serializedName: "error",
  type: {
    name: "Composite",
    className: "ErrorLogDiagnostics",
    uberParent: "Components1Nf3DuuSchemasErrorlogDiagnosticsAllof0",
    polymorphicDiscriminator:
      Components1Nf3DuuSchemasErrorlogDiagnosticsAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components1Nf3DuuSchemasErrorlogDiagnosticsAllof0.type.modelProperties,
      sessionId: {
        serializedName: "session_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      appLaunchToffset: {
        serializedName: "app_launch_toffset",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ExportBlobConfiguration: coreClient.CompositeMapper = {
  serializedName: "export_blob_configuration",
  type: {
    name: "Composite",
    className: "ExportBlobConfiguration",
    uberParent: "Components130AlsfSchemasExportblobconfigurationAllof0",
    polymorphicDiscriminator:
      Components130AlsfSchemasExportblobconfigurationAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components130AlsfSchemasExportblobconfigurationAllof0.type
        .modelProperties,
      blobPathFormatKind: {
        serializedName: "blob_path_format_kind",
        type: {
          name: "Enum",
          allowedValues: ["WithoutAppId", "WithAppId"]
        }
      }
    }
  }
};

export const Components16J40DuSchemasExportconfigurationblobstorageconnectionstringAllof0: coreClient.CompositeMapper = {
  serializedName: "export_blob_configuration",
  type: {
    name: "Composite",
    className:
      "Components16J40DuSchemasExportconfigurationblobstorageconnectionstringAllof0",
    uberParent:
      "ComponentsQ5DjesSchemasExportconfigurationblobstorageconnectionstringAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      ...ComponentsQ5DjesSchemasExportconfigurationblobstorageconnectionstringAllof0
        .type.modelProperties,
      blobPathFormatKind: {
        serializedName: "blob_path_format_kind",
        type: {
          name: "Enum",
          allowedValues: ["WithoutAppId", "WithAppId"]
        }
      }
    }
  }
};

export const ExportConfigurationAppInsightsKey: coreClient.CompositeMapper = {
  serializedName: "application_insights_instrumentation_key",
  type: {
    name: "Composite",
    className: "ExportConfigurationAppInsightsKey",
    uberParent:
      "Components125ZssSchemasExportconfigurationappinsightskeyAllof0",
    polymorphicDiscriminator:
      Components125ZssSchemasExportconfigurationappinsightskeyAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components125ZssSchemasExportconfigurationappinsightskeyAllof0.type
        .modelProperties,
      instrumentationKey: {
        serializedName: "instrumentation_key",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Components14Lttg8SchemasExportconfigurationblobstoragelinkedsubscriptionAllof0: coreClient.CompositeMapper = {
  serializedName: "export_blob_configuration",
  type: {
    name: "Composite",
    className:
      "Components14Lttg8SchemasExportconfigurationblobstoragelinkedsubscriptionAllof0",
    uberParent:
      "Components4JcwkhSchemasExportconfigurationblobstoragelinkedsubscriptionAllof0",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      ...Components4JcwkhSchemasExportconfigurationblobstoragelinkedsubscriptionAllof0
        .type.modelProperties,
      blobPathFormatKind: {
        serializedName: "blob_path_format_kind",
        type: {
          name: "Enum",
          allowedValues: ["WithoutAppId", "WithAppId"]
        }
      }
    }
  }
};

export const ExportConfigurationAppInsightsLinkedSubscription: coreClient.CompositeMapper = {
  serializedName: "application_insights_linked_subscription",
  type: {
    name: "Composite",
    className: "ExportConfigurationAppInsightsLinkedSubscription",
    uberParent:
      "Components1Jvk04KSchemasExportconfigurationappinsightslinkedsubscriptionAllof0",
    polymorphicDiscriminator:
      Components1Jvk04KSchemasExportconfigurationappinsightslinkedsubscriptionAllof0
        .type.polymorphicDiscriminator,
    modelProperties: {
      ...Components1Jvk04KSchemasExportconfigurationappinsightslinkedsubscriptionAllof0
        .type.modelProperties,
      subscriptionId: {
        serializedName: "subscription_id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NotificationDetailsResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NotificationDetailsResult",
    modelProperties: {
      ...ComponentsZqakt2SchemasNotificationdetailsresultAllof0.type
        .modelProperties,
      notificationContent: {
        serializedName: "notification_content",
        type: {
          name: "Composite",
          className: "NotificationDetailsResultNotificationContent"
        }
      },
      failureOutcomes: {
        serializedName: "failure_outcomes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NotificationDetailsResultFailureOutcomesItem"
            }
          }
        }
      }
    }
  }
};

export const NotificationTargetUserIds: coreClient.CompositeMapper = {
  serializedName: "user_ids_target",
  type: {
    name: "Composite",
    className: "NotificationTargetUserIds",
    uberParent: "Components1KhyfnaSchemasNotificationtargetuseridsAllof0",
    polymorphicDiscriminator:
      Components1KhyfnaSchemasNotificationtargetuseridsAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components1KhyfnaSchemasNotificationtargetuseridsAllof0.type
        .modelProperties,
      userIds: {
        serializedName: "user_ids",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const NotificationTargetAccountIds: coreClient.CompositeMapper = {
  serializedName: "account_ids_target",
  type: {
    name: "Composite",
    className: "NotificationTargetAccountIds",
    uberParent: "Components19Nr381SchemasNotificationtargetaccountidsAllof0",
    polymorphicDiscriminator:
      Components19Nr381SchemasNotificationtargetaccountidsAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components19Nr381SchemasNotificationtargetaccountidsAllof0.type
        .modelProperties,
      accountIds: {
        serializedName: "account_ids",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const NotificationTargetAudiences: coreClient.CompositeMapper = {
  serializedName: "audiences_target",
  type: {
    name: "Composite",
    className: "NotificationTargetAudiences",
    uberParent: "Components17Ef5OgSchemasNotificationtargetaudiencesAllof0",
    polymorphicDiscriminator:
      Components17Ef5OgSchemasNotificationtargetaudiencesAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components17Ef5OgSchemasNotificationtargetaudiencesAllof0.type
        .modelProperties,
      audiences: {
        serializedName: "audiences",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const NotificationTargetDevices: coreClient.CompositeMapper = {
  serializedName: "devices_target",
  type: {
    name: "Composite",
    className: "NotificationTargetDevices",
    uberParent: "Components2Yio13SchemasNotificationtargetdevicesAllof0",
    polymorphicDiscriminator:
      Components2Yio13SchemasNotificationtargetdevicesAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components2Yio13SchemasNotificationtargetdevicesAllof0.type
        .modelProperties,
      devices: {
        serializedName: "devices",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Uuid"
            }
          }
        }
      }
    }
  }
};

export const NotificationConfigApple: coreClient.CompositeMapper = {
  serializedName: "apns_config",
  type: {
    name: "Composite",
    className: "NotificationConfigApple",
    uberParent: "Components1Ozxbv2SchemasNotificationconfigappleAllof0",
    polymorphicDiscriminator:
      Components1Ozxbv2SchemasNotificationconfigappleAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components1Ozxbv2SchemasNotificationconfigappleAllof0.type
        .modelProperties,
      endpointType: {
        serializedName: "endpoint_type",
        required: true,
        type: {
          name: "String"
        }
      },
      certEncoded: {
        serializedName: "cert_encoded",
        required: true,
        type: {
          name: "String"
        }
      },
      certFilename: {
        serializedName: "cert_filename",
        required: true,
        type: {
          name: "String"
        }
      },
      certKey: {
        serializedName: "cert_key",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NotificationConfigAppleToken: coreClient.CompositeMapper = {
  serializedName: "apns_token_config",
  type: {
    name: "Composite",
    className: "NotificationConfigAppleToken",
    uberParent: "Components1PpfareSchemasNotificationconfigappletokenAllof0",
    polymorphicDiscriminator:
      Components1PpfareSchemasNotificationconfigappletokenAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components1PpfareSchemasNotificationconfigappletokenAllof0.type
        .modelProperties,
      keyId: {
        serializedName: "key_id",
        required: true,
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      prefix: {
        serializedName: "prefix",
        required: true,
        type: {
          name: "String"
        }
      },
      token: {
        serializedName: "token",
        required: true,
        type: {
          name: "String"
        }
      },
      endpointType: {
        serializedName: "endpoint_type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NotificationConfigGoogle: coreClient.CompositeMapper = {
  serializedName: "gcm_config",
  type: {
    name: "Composite",
    className: "NotificationConfigGoogle",
    uberParent: "ComponentsQ2Qee2SchemasNotificationconfiggoogleAllof0",
    polymorphicDiscriminator:
      ComponentsQ2Qee2SchemasNotificationconfiggoogleAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...ComponentsQ2Qee2SchemasNotificationconfiggoogleAllof0.type
        .modelProperties,
      googleApiKey: {
        serializedName: "google_api_key",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NotificationConfigWindows: coreClient.CompositeMapper = {
  serializedName: "wns_config",
  type: {
    name: "Composite",
    className: "NotificationConfigWindows",
    uberParent: "ComponentsA3A5NfSchemasNotificationconfigwindowsAllof0",
    polymorphicDiscriminator:
      ComponentsA3A5NfSchemasNotificationconfigwindowsAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...ComponentsA3A5NfSchemasNotificationconfigwindowsAllof0.type
        .modelProperties,
      packageSid: {
        serializedName: "package_sid",
        required: true,
        type: {
          name: "String"
        }
      },
      secretKey: {
        serializedName: "secret_key",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NotificationConfigAppleResult: coreClient.CompositeMapper = {
  serializedName: "apns_config",
  type: {
    name: "Composite",
    className: "NotificationConfigAppleResult",
    uberParent: "ComponentsF4F1P6SchemasNotificationconfigappleresultAllof0",
    polymorphicDiscriminator:
      ComponentsF4F1P6SchemasNotificationconfigappleresultAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...ComponentsF4F1P6SchemasNotificationconfigappleresultAllof0.type
        .modelProperties,
      endpointType: {
        serializedName: "endpoint_type",
        required: true,
        type: {
          name: "String"
        }
      },
      certExpiration: {
        serializedName: "cert_expiration",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      certFilename: {
        serializedName: "cert_filename",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NotificationConfigAppleTokenResult: coreClient.CompositeMapper = {
  serializedName: "apns_token_config",
  type: {
    name: "Composite",
    className: "NotificationConfigAppleTokenResult",
    uberParent:
      "Components1Cl3FgbSchemasNotificationconfigappletokenresultAllof0",
    polymorphicDiscriminator:
      Components1Cl3FgbSchemasNotificationconfigappletokenresultAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components1Cl3FgbSchemasNotificationconfigappletokenresultAllof0.type
        .modelProperties,
      keyId: {
        serializedName: "key_id",
        required: true,
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      prefix: {
        serializedName: "prefix",
        required: true,
        type: {
          name: "String"
        }
      },
      endpointType: {
        serializedName: "endpoint_type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NotificationConfigGoogleResult: coreClient.CompositeMapper = {
  serializedName: "gcm_config",
  type: {
    name: "Composite",
    className: "NotificationConfigGoogleResult",
    uberParent: "Components1L6Ua1RSchemasNotificationconfiggoogleresultAllof0",
    polymorphicDiscriminator:
      Components1L6Ua1RSchemasNotificationconfiggoogleresultAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components1L6Ua1RSchemasNotificationconfiggoogleresultAllof0.type
        .modelProperties,
      googleApiKey: {
        serializedName: "google_api_key",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NotificationConfigWindowsResult: coreClient.CompositeMapper = {
  serializedName: "wns_config",
  type: {
    name: "Composite",
    className: "NotificationConfigWindowsResult",
    uberParent: "Components1Rkqr84SchemasNotificationconfigwindowsresultAllof0",
    polymorphicDiscriminator:
      Components1Rkqr84SchemasNotificationconfigwindowsresultAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components1Rkqr84SchemasNotificationconfigwindowsresultAllof0.type
        .modelProperties,
      packageSid: {
        serializedName: "package_sid",
        required: true,
        type: {
          name: "String"
        }
      },
      secretKey: {
        serializedName: "secret_key",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeploymentLatestRelease: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeploymentLatestRelease",
    modelProperties: {
      ...Components1T8CjynSchemasDeploymentPropertiesLatestReleaseAllof0.type
        .modelProperties,
      ...Components6Ap7FdSchemasDeploymentPropertiesLatestReleaseAllof1.type
        .modelProperties
    }
  }
};

export const DeploymentInternal: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeploymentInternal",
    modelProperties: {
      ...ComponentsLtrglSchemasDeploymentinternalAllof0.type.modelProperties,
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeploymentInternal0LatestRelease: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeploymentInternal0LatestRelease",
    modelProperties: {
      ...ComponentsLvsishSchemasDeploymentinternalAllof0PropertiesLatestReleaseAllof0
        .type.modelProperties,
      ...ComponentsP3Dh42SchemasDeploymentinternalAllof0PropertiesLatestReleaseAllof1
        .type.modelProperties
    }
  }
};

export const UpdateCheckResponseUpdateInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UpdateCheckResponseUpdateInfo",
    modelProperties: {
      ...ComponentsSa59JcSchemasUpdatecheckresponsePropertiesUpdateInfoAllof0
        .type.modelProperties,
      ...ComponentsWyjzn3SchemasUpdatecheckresponsePropertiesUpdateInfoAllof1
        .type.modelProperties
    }
  }
};

export const LegacyUpdateCheckResponseUpdateInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LegacyUpdateCheckResponseUpdateInfo",
    modelProperties: {
      ...ComponentsIr4N92SchemasLegacyupdatecheckresponsePropertiesUpdateinfoAllof0
        .type.modelProperties,
      ...ComponentsPllys8SchemasLegacyupdatecheckresponsePropertiesUpdateinfoAllof1
        .type.modelProperties
    }
  }
};

export const Components6M09RqSchemasAlertuserappemailsettingsresultAllof0: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Components6M09RqSchemasAlertuserappemailsettingsresultAllof0",
    modelProperties: {
      ...ComponentsDzu91ISchemasAlertuserappemailsettingsresultAllof0.type
        .modelProperties,
      ...Components1Cg98M4SchemasAlertuserappemailsettingsresultAllof0Allof1
        .type.modelProperties
    }
  }
};

export const AlertingVstsBugtrackerSettings: coreClient.CompositeMapper = {
  serializedName: "vsts",
  type: {
    name: "Composite",
    className: "AlertingVstsBugtrackerSettings",
    uberParent: "ComponentsU99EdzSchemasAlertingvstsbugtrackersettingsAllof0",
    polymorphicDiscriminator:
      ComponentsU99EdzSchemasAlertingvstsbugtrackersettingsAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...ComponentsU99EdzSchemasAlertingvstsbugtrackersettingsAllof0.type
        .modelProperties,
      vstsProjectId: {
        serializedName: "vsts_project_id",
        required: true,
        type: {
          name: "String"
        }
      },
      vstsProjectUri: {
        serializedName: "vsts_project_uri",
        required: true,
        type: {
          name: "String"
        }
      },
      vstsProjectName: {
        serializedName: "vsts_project_name",
        type: {
          name: "String"
        }
      },
      vstsAccountName: {
        serializedName: "vsts_account_name",
        type: {
          name: "String"
        }
      },
      vstsAreaPath: {
        serializedName: "vsts_area_path",
        type: {
          name: "String"
        }
      },
      vstsDefaultPayload: {
        serializedName: "vsts_default_payload",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const AlertingGithubBugtrackerSettings: coreClient.CompositeMapper = {
  serializedName: "github",
  type: {
    name: "Composite",
    className: "AlertingGithubBugtrackerSettings",
    uberParent: "ComponentsG0MwtxSchemasAlertinggithubbugtrackersettingsAllof0",
    polymorphicDiscriminator:
      ComponentsG0MwtxSchemasAlertinggithubbugtrackersettingsAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...ComponentsG0MwtxSchemasAlertinggithubbugtrackersettingsAllof0.type
        .modelProperties,
      githubRepoId: {
        serializedName: "github_repo_id",
        required: true,
        type: {
          name: "Number"
        }
      },
      githubRepoName: {
        serializedName: "github_repo_name",
        required: true,
        type: {
          name: "String"
        }
      },
      githubLabel: {
        serializedName: "github_label",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertingJiraBugtrackerSettings: coreClient.CompositeMapper = {
  serializedName: "jira",
  type: {
    name: "Composite",
    className: "AlertingJiraBugtrackerSettings",
    uberParent: "ComponentsL2Xf6RSchemasAlertingjirabugtrackersettingsAllof0",
    polymorphicDiscriminator:
      ComponentsL2Xf6RSchemasAlertingjirabugtrackersettingsAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...ComponentsL2Xf6RSchemasAlertingjirabugtrackersettingsAllof0.type
        .modelProperties,
      jiraProjectId: {
        serializedName: "jira_project_id",
        required: true,
        type: {
          name: "Number"
        }
      },
      jiraProjectName: {
        serializedName: "jira_project_name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsIxrc01V01AppsOwnerNameAppNameRepoConfigGetResponses200ContentApplicationJsonSchemaItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsIxrc01V01AppsOwnerNameAppNameRepoConfigGetResponses200ContentApplicationJsonSchemaItems",
    modelProperties: {
      ...Paths131DtitV01AppsOwnerNameAppNameRepoConfigGetResponses200ContentApplicationJsonSchemaItemsAllof0
        .type.modelProperties,
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        required: true,
        type: {
          name: "String"
        }
      },
      userEmail: {
        serializedName: "user_email",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsDapaw8V01AppsOwnerNameAppNameErrorsErrorgroupsSearchGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsDapaw8V01AppsOwnerNameAppNameErrorsErrorgroupsSearchGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItems",
    modelProperties: {
      ...Paths1HondamV01AppsOwnerNameAppNameErrorsErrorgroupsSearchGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItemsAllof0
        .type.modelProperties
    }
  }
};

export const Paths1X029LnV01AppsOwnerNameAppNameErrorsErrorgroupsGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItems: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths1X029LnV01AppsOwnerNameAppNameErrorsErrorgroupsGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItems",
    modelProperties: {
      ...Paths73P5FlV01AppsOwnerNameAppNameErrorsErrorgroupsGetResponses200ContentApplicationJsonSchemaPropertiesErrorgroupsItemsAllof0
        .type.modelProperties
    }
  }
};

export const AppResponseInternal: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppResponseInternal",
    modelProperties: {
      ...Components10Yzej3SchemasAppresponseinternalAllof0.type.modelProperties,
      featureFlags: {
        serializedName: "feature_flags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      repositories: {
        serializedName: "repositories",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AppResponseInternalRepositoriesItem"
            }
          }
        }
      },
      userPermissions: {
        serializedName: "user_permissions",
        type: {
          name: "Composite",
          className: "AppResponseInternalUserPermissions"
        }
      },
      cutoverFromHockeyappAt: {
        serializedName: "cutover_from_hockeyapp_at",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppWithTeamPermissionsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppWithTeamPermissionsResponse",
    modelProperties: {
      ...Components1C6VjoySchemasAppwithteampermissionsresponseAllof0.type
        .modelProperties,
      teamPermissions: {
        serializedName: "team_permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const OrganizationResponseManagement: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OrganizationResponseManagement",
    modelProperties: {
      ...ComponentsR6Bc9OSchemasOrganizationresponsemanagementAllof0.type
        .modelProperties,
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "created_at",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserProfileResponseManagement: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserProfileResponseManagement",
    modelProperties: {
      ...ComponentsAvwdpgSchemasUserprofileresponsemanagementAllof0.type
        .modelProperties,
      updatedAt: {
        serializedName: "updated_at",
        type: {
          name: "String"
        }
      },
      verified: {
        serializedName: "verified",
        type: {
          name: "Boolean"
        }
      },
      identityProviders: {
        serializedName: "identity_providers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UserProfileResponseManagementIdentityProvidersItem"
            }
          }
        }
      }
    }
  }
};

export const AppleCredentialsMultifactorSecretRequest: coreClient.CompositeMapper = {
  serializedName: "credentials",
  type: {
    name: "Composite",
    className: "AppleCredentialsMultifactorSecretRequest",
    uberParent:
      "Components3Sb7Y4SchemasApplecredentialsmultifactorsecretrequestAllof0",
    polymorphicDiscriminator:
      Components3Sb7Y4SchemasApplecredentialsmultifactorsecretrequestAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components3Sb7Y4SchemasApplecredentialsmultifactorsecretrequestAllof0
        .type.modelProperties,
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "AppleCredentialsMultifactorSecretRequestData"
        }
      }
    }
  }
};

export const AppleCredentialsSecretRequest: coreClient.CompositeMapper = {
  serializedName: "credentials",
  type: {
    name: "Composite",
    className: "AppleCredentialsSecretRequest",
    uberParent: "Components5Dyv8CSchemasApplecredentialssecretrequestAllof0",
    polymorphicDiscriminator:
      Components5Dyv8CSchemasApplecredentialssecretrequestAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components5Dyv8CSchemasApplecredentialssecretrequestAllof0.type
        .modelProperties,
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "AppleCredentialsSecretRequestData"
        }
      }
    }
  }
};

export const AppleCertificateSecretRequest: coreClient.CompositeMapper = {
  serializedName: "certificate",
  type: {
    name: "Composite",
    className: "AppleCertificateSecretRequest",
    uberParent: "ComponentsKnowtpSchemasApplecertificatesecretrequestAllof0",
    polymorphicDiscriminator:
      ComponentsKnowtpSchemasApplecertificatesecretrequestAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...ComponentsKnowtpSchemasApplecertificatesecretrequestAllof0.type
        .modelProperties,
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "AppleCertificateSecretRequestData"
        }
      }
    }
  }
};

export const PrivateAppleCredentialsSecretResponse: coreClient.CompositeMapper = {
  serializedName: "certificate",
  type: {
    name: "Composite",
    className: "PrivateAppleCredentialsSecretResponse",
    uberParent:
      "ComponentsEay2HoSchemasPrivateapplecredentialssecretresponseAllof0",
    polymorphicDiscriminator:
      ComponentsEay2HoSchemasPrivateapplecredentialssecretresponseAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...ComponentsEay2HoSchemasPrivateapplecredentialssecretresponseAllof0.type
        .modelProperties,
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "PrivateAppleCredentialsSecretResponseData"
        }
      }
    }
  }
};

export const PrivateAppleCertificateSecretResponse: coreClient.CompositeMapper = {
  serializedName: "certificate",
  type: {
    name: "Composite",
    className: "PrivateAppleCertificateSecretResponse",
    uberParent:
      "ComponentsZqm0VqSchemasPrivateapplecertificatesecretresponseAllof0",
    polymorphicDiscriminator:
      ComponentsZqm0VqSchemasPrivateapplecertificatesecretresponseAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...ComponentsZqm0VqSchemasPrivateapplecertificatesecretresponseAllof0.type
        .modelProperties,
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "PrivateAppleCertificateSecretResponseData"
        }
      }
    }
  }
};

export const AppleCredentialNonSecretDetailsResponse: coreClient.CompositeMapper = {
  serializedName: "credentials",
  type: {
    name: "Composite",
    className: "AppleCredentialNonSecretDetailsResponse",
    uberParent:
      "Components1BxvcioSchemasApplecredentialnonsecretdetailsresponseAllof0",
    polymorphicDiscriminator:
      Components1BxvcioSchemasApplecredentialnonsecretdetailsresponseAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components1BxvcioSchemasApplecredentialnonsecretdetailsresponseAllof0
        .type.modelProperties,
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "AppleCredentialNonSecretDetailsResponseData"
        }
      }
    }
  }
};

export const AppleCertificateNonSecretDetailsResponse: coreClient.CompositeMapper = {
  serializedName: "certificate",
  type: {
    name: "Composite",
    className: "AppleCertificateNonSecretDetailsResponse",
    uberParent:
      "Components18Y2Ef6SchemasApplecertificatenonsecretdetailsresponseAllof0",
    polymorphicDiscriminator:
      Components18Y2Ef6SchemasApplecertificatenonsecretdetailsresponseAllof0
        .type.polymorphicDiscriminator,
    modelProperties: {
      ...Components18Y2Ef6SchemasApplecertificatenonsecretdetailsresponseAllof0
        .type.modelProperties,
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "AppleCertificateNonSecretDetailsResponseData"
        }
      }
    }
  }
};

export const GooglePlayCredentialNonSecretDetailsResponse: coreClient.CompositeMapper = {
  serializedName: "credentials",
  type: {
    name: "Composite",
    className: "GooglePlayCredentialNonSecretDetailsResponse",
    uberParent:
      "Components1Qvpk8VSchemasGoogleplaycredentialnonsecretdetailsresponseAllof0",
    polymorphicDiscriminator:
      Components1Qvpk8VSchemasGoogleplaycredentialnonsecretdetailsresponseAllof0
        .type.polymorphicDiscriminator,
    modelProperties: {
      ...Components1Qvpk8VSchemasGoogleplaycredentialnonsecretdetailsresponseAllof0
        .type.modelProperties,
      data: {
        serializedName: "data",
        required: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const JiraCredentialNonSecretDetailsResponse: coreClient.CompositeMapper = {
  serializedName: "credentials",
  type: {
    name: "Composite",
    className: "JiraCredentialNonSecretDetailsResponse",
    uberParent:
      "ComponentsBrcgsgSchemasJiracredentialnonsecretdetailsresponseAllof0",
    polymorphicDiscriminator:
      ComponentsBrcgsgSchemasJiracredentialnonsecretdetailsresponseAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...ComponentsBrcgsgSchemasJiracredentialnonsecretdetailsresponseAllof0
        .type.modelProperties,
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "JiraCredentialNonSecretDetailsResponseData"
        }
      }
    }
  }
};

export const RepoConfig: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RepoConfig",
    modelProperties: {
      ...Components1Wuan9LSchemasRepoconfigAllof0.type.modelProperties,
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        required: true,
        type: {
          name: "String"
        }
      },
      userEmail: {
        serializedName: "user_email",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RepoConfigsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RepoConfigsItem",
    modelProperties: {
      ...Components1Uijx7XSchemasRepoconfigsItemsAllof0.type.modelProperties,
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        required: true,
        type: {
          name: "String"
        }
      },
      userEmail: {
        serializedName: "user_email",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Destination: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Destination",
    modelProperties: {
      ...Components1Elftw1SchemasDestinationAllof0.type.modelProperties,
      destinationType: {
        serializedName: "destination_type",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "display_name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PageLog: coreClient.CompositeMapper = {
  serializedName: "page",
  type: {
    name: "Composite",
    className: "PageLog",
    uberParent: "Components4Kro3MSchemasPagelogAllof0",
    polymorphicDiscriminator:
      Components4Kro3MSchemasPagelogAllof0.type.polymorphicDiscriminator,
    modelProperties: {
      ...Components4Kro3MSchemasPagelogAllof0.type.modelProperties,
      sessionId: {
        serializedName: "session_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EventLog: coreClient.CompositeMapper = {
  serializedName: "event",
  type: {
    name: "Composite",
    className: "EventLog",
    uberParent: "Components498ZbbSchemasEventlogAllof0",
    polymorphicDiscriminator:
      Components498ZbbSchemasEventlogAllof0.type.polymorphicDiscriminator,
    modelProperties: {
      ...Components498ZbbSchemasEventlogAllof0.type.modelProperties,
      sessionId: {
        serializedName: "session_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NotifyReleasesContainerReleasesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NotifyReleasesContainerReleasesItem",
    modelProperties: {
      ...Components1QhhniqSchemasNotifyreleasescontainerPropertiesReleasesItemsAllof0
        .type.modelProperties,
      userId: {
        serializedName: "user_id",
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const ReleaseWithDistributionGroupAndUserId: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseWithDistributionGroupAndUserId",
    modelProperties: {
      ...ComponentsHgeo9DSchemasReleasewithdistributiongroupanduseridAllof0.type
        .modelProperties,
      userId: {
        serializedName: "user_id",
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const LogFlowPageLog: coreClient.CompositeMapper = {
  serializedName: "page",
  type: {
    name: "Composite",
    className: "LogFlowPageLog",
    uberParent: "Components11Mk7TbSchemasLogflowpagelogAllof0",
    polymorphicDiscriminator:
      Components11Mk7TbSchemasLogflowpagelogAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components11Mk7TbSchemasLogflowpagelogAllof0.type.modelProperties,
      sessionId: {
        serializedName: "session_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LogFlowEventLog: coreClient.CompositeMapper = {
  serializedName: "event",
  type: {
    name: "Composite",
    className: "LogFlowEventLog",
    uberParent: "ComponentsBzcad5SchemasLogfloweventlogAllof0",
    polymorphicDiscriminator:
      ComponentsBzcad5SchemasLogfloweventlogAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...ComponentsBzcad5SchemasLogfloweventlogAllof0.type.modelProperties,
      sessionId: {
        serializedName: "session_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorGroupsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorGroupsItem",
    modelProperties: {
      ...Components65B2B3SchemasErrorgroupsPropertiesErrorgroupsItemsAllof0.type
        .modelProperties
    }
  }
};

export const ErrorGroupsSearchResultErrorGroupsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorGroupsSearchResultErrorGroupsItem",
    modelProperties: {
      ...Components1Gnwyz6SchemasErrorgroupssearchresultPropertiesErrorgroupsItemsAllof0
        .type.modelProperties
    }
  }
};

export const ErrorGroupListItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorGroupListItem",
    modelProperties: {
      ...Components1Qil18RSchemasErrorgrouplistitemAllof0.type.modelProperties
    }
  }
};

export const PageLogDiagnostics: coreClient.CompositeMapper = {
  serializedName: "page",
  type: {
    name: "Composite",
    className: "PageLogDiagnostics",
    uberParent: "Components1121EsfSchemasPagelogDiagnosticsAllof0",
    polymorphicDiscriminator:
      Components1121EsfSchemasPagelogDiagnosticsAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...Components1121EsfSchemasPagelogDiagnosticsAllof0.type.modelProperties,
      sessionId: {
        serializedName: "session_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EventLogDiagnostics: coreClient.CompositeMapper = {
  serializedName: "event",
  type: {
    name: "Composite",
    className: "EventLogDiagnostics",
    uberParent: "ComponentsWa2CwfSchemasEventlogDiagnosticsAllof0",
    polymorphicDiscriminator:
      ComponentsWa2CwfSchemasEventlogDiagnosticsAllof0.type
        .polymorphicDiscriminator,
    modelProperties: {
      ...ComponentsWa2CwfSchemasEventlogDiagnosticsAllof0.type.modelProperties,
      sessionId: {
        serializedName: "session_id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExportConfigurationBlobStorageConnectionString: coreClient.CompositeMapper = {
  serializedName: "blob_storage_connection_string",
  type: {
    name: "Composite",
    className: "ExportConfigurationBlobStorageConnectionString",
    uberParent:
      "Components16J40DuSchemasExportconfigurationblobstorageconnectionstringAllof0",
    polymorphicDiscriminator:
      Components16J40DuSchemasExportconfigurationblobstorageconnectionstringAllof0
        .type.polymorphicDiscriminator,
    modelProperties: {
      ...Components16J40DuSchemasExportconfigurationblobstorageconnectionstringAllof0
        .type.modelProperties,
      connectionString: {
        serializedName: "connection_string",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExportConfigurationBlobStorageLinkedSubscription: coreClient.CompositeMapper = {
  serializedName: "blob_storage_linked_subscription",
  type: {
    name: "Composite",
    className: "ExportConfigurationBlobStorageLinkedSubscription",
    uberParent:
      "Components14Lttg8SchemasExportconfigurationblobstoragelinkedsubscriptionAllof0",
    polymorphicDiscriminator:
      Components14Lttg8SchemasExportconfigurationblobstoragelinkedsubscriptionAllof0
        .type.polymorphicDiscriminator,
    modelProperties: {
      ...Components14Lttg8SchemasExportconfigurationblobstoragelinkedsubscriptionAllof0
        .type.modelProperties,
      subscriptionId: {
        serializedName: "subscription_id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertUserAppEmailSettingsResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertUserAppEmailSettingsResult",
    modelProperties: {
      ...Components6M09RqSchemasAlertuserappemailsettingsresultAllof0.type
        .modelProperties,
      appId: {
        serializedName: "appId",
        type: {
          name: "String"
        }
      },
      userEnabled: {
        serializedName: "user_enabled",
        required: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const DataSubjectRightCancelExportRequestHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DataSubjectRightCancelExportRequestHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DataSubjectRightExportRequestHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DataSubjectRightExportRequestHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DataSubjectRightCancelDeleteRequestHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DataSubjectRightCancelDeleteRequestHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DataSubjectRightDeleteRequestHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DataSubjectRightDeleteRequestHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestUploadHashHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestUploadHashHeaders",
    modelProperties: {
      xChallengeBytes: {
        serializedName: "x-challenge-bytes",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestStartUploadingFileHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestStartUploadingFileHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestCreateTestRunHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestCreateTestRunHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PushSendHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PushSendHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const discriminators = {
  "Get200ApplicationJsonItemsItem.Get200ApplicationJsonItemsItem": Get200ApplicationJsonItemsItem,
  "Paths1C7Oun7V01AppsOwnerNameAppNamePushNotificationsConfigGetResponses200ContentApplicationJsonSchema.Paths1C7Oun7V01AppsOwnerNameAppNamePushNotificationsConfigGetResponses200ContentApplicationJsonSchema": Paths1C7Oun7V01AppsOwnerNameAppNamePushNotificationsConfigGetResponses200ContentApplicationJsonSchema,
  "Paths1Nw7A47V01AppsOwnerNameAppNamePushNotificationsConfigPutRequestbodyContentApplicationJsonSchema.Paths1Nw7A47V01AppsOwnerNameAppNamePushNotificationsConfigPutRequestbodyContentApplicationJsonSchema": Paths1Nw7A47V01AppsOwnerNameAppNamePushNotificationsConfigPutRequestbodyContentApplicationJsonSchema,
  "Paths176Xq3CV01AppsOwnerNameAppNamePushNotificationsConfigPutResponses200ContentApplicationJsonSchema.Paths176Xq3CV01AppsOwnerNameAppNamePushNotificationsConfigPutResponses200ContentApplicationJsonSchema": Paths176Xq3CV01AppsOwnerNameAppNamePushNotificationsConfigPutResponses200ContentApplicationJsonSchema,
  "Paths1Ym8ZayV01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponses200ContentApplicationJsonSchemaAllof0PropertiesNotificationTarget.Paths1Ym8ZayV01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponses200ContentApplicationJsonSchemaAllof0PropertiesNotificationTarget": Paths1Ym8ZayV01AppsOwnerNameAppNamePushNotificationsNotificationIdGetResponses200ContentApplicationJsonSchemaAllof0PropertiesNotificationTarget,
  "GetResponses200ContentApplicationJsonSchemaValuesItemNotificationTarget.GetResponses200ContentApplicationJsonSchemaValuesItemNotificationTarget": GetResponses200ContentApplicationJsonSchemaValuesItemNotificationTarget,
  "PostContentSchemaNotificationTarget.PostContentSchemaNotificationTarget": PostContentSchemaNotificationTarget,
  "PathsR53S6WV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdGetResponses200ContentApplicationJsonSchemaPropertiesExportConfiguration.PathsR53S6WV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdGetResponses200ContentApplicationJsonSchemaPropertiesExportConfiguration": PathsR53S6WV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdGetResponses200ContentApplicationJsonSchemaPropertiesExportConfiguration,
  "PathsEhcfgaV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdPatchRequestbodyContentApplicationJsonSchema.PathsEhcfgaV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdPatchRequestbodyContentApplicationJsonSchema": PathsEhcfgaV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdPatchRequestbodyContentApplicationJsonSchema,
  "Paths2Az9PjV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdPatchResponses200ContentApplicationJsonSchemaPropertiesExportConfiguration.Paths2Az9PjV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdPatchResponses200ContentApplicationJsonSchemaPropertiesExportConfiguration": Paths2Az9PjV01AppsOwnerNameAppNameExportConfigurationsExportConfigurationIdPatchResponses200ContentApplicationJsonSchemaPropertiesExportConfiguration,
  "GetResponses200ContentApplicationJsonSchemaValuesItemExportConfiguration.GetResponses200ContentApplicationJsonSchemaValuesItemExportConfiguration": GetResponses200ContentApplicationJsonSchemaValuesItemExportConfiguration,
  "Paths1QllskkV01AppsOwnerNameAppNameExportConfigurationsPostRequestbodyContentApplicationJsonSchema.Paths1QllskkV01AppsOwnerNameAppNameExportConfigurationsPostRequestbodyContentApplicationJsonSchema": Paths1QllskkV01AppsOwnerNameAppNameExportConfigurationsPostRequestbodyContentApplicationJsonSchema,
  "Paths3V81N3V01AppsOwnerNameAppNameExportConfigurationsPostResponses202ContentApplicationJsonSchemaPropertiesExportConfiguration.Paths3V81N3V01AppsOwnerNameAppNameExportConfigurationsPostResponses202ContentApplicationJsonSchemaPropertiesExportConfiguration": Paths3V81N3V01AppsOwnerNameAppNameExportConfigurationsPostResponses202ContentApplicationJsonSchemaPropertiesExportConfiguration,
  "Paths11Cmak4V01AppsOwnerNameAppNameBugtrackerGetResponses200ContentApplicationJsonSchemaPropertiesSettings.Paths11Cmak4V01AppsOwnerNameAppNameBugtrackerGetResponses200ContentApplicationJsonSchemaPropertiesSettings": Paths11Cmak4V01AppsOwnerNameAppNameBugtrackerGetResponses200ContentApplicationJsonSchemaPropertiesSettings,
  "Paths16LtczwV01AppsOwnerNameAppNameAnalyticsLogFlowGetResponses200ContentApplicationJsonSchemaPropertiesLogsItems.Paths16LtczwV01AppsOwnerNameAppNameAnalyticsLogFlowGetResponses200ContentApplicationJsonSchemaPropertiesLogsItems": Paths16LtczwV01AppsOwnerNameAppNameAnalyticsLogFlowGetResponses200ContentApplicationJsonSchemaPropertiesLogsItems,
  "SharedConnectionRequest.SharedConnectionRequest": SharedConnectionRequest,
  "SharedConnectionResponse.SharedConnectionResponse": SharedConnectionResponse,
  "PrivateSharedConnectionResponse.PrivateSharedConnectionResponse": PrivateSharedConnectionResponse,
  "AppleConnectionSecretRequest.AppleConnectionSecretRequest": AppleConnectionSecretRequest,
  Components8Iu7RuSchemasApplecredentialsmultifactorsecretrequestAllof0: Components8Iu7RuSchemasApplecredentialsmultifactorsecretrequestAllof0,
  Components5A5L2ESchemasApplecredentialssecretrequestAllof0: Components5A5L2ESchemasApplecredentialssecretrequestAllof0,
  Components13S9A4RSchemasApplecertificatesecretrequestAllof0: Components13S9A4RSchemasApplecertificatesecretrequestAllof0,
  "PrivateAppleSecretResponse.PrivateAppleSecretResponse": PrivateAppleSecretResponse,
  ComponentsS0Rbt7SchemasPrivateapplecredentialssecretresponseAllof0: ComponentsS0Rbt7SchemasPrivateapplecredentialssecretresponseAllof0,
  ComponentsHw7AncSchemasPrivateapplecertificatesecretresponseAllof0: ComponentsHw7AncSchemasPrivateapplecertificatesecretresponseAllof0,
  Components1Yflo3CSchemasAppleconnectionsecretresponseAllof0: Components1Yflo3CSchemasAppleconnectionsecretresponseAllof0,
  "AppleConnectionNonSecretResponse.AppleConnectionNonSecretResponse": AppleConnectionNonSecretResponse,
  Components8D2JkjSchemasApplecredentialnonsecretdetailsresponseAllof0: Components8D2JkjSchemasApplecredentialnonsecretdetailsresponseAllof0,
  ComponentsUk3N19SchemasApplecertificatenonsecretdetailsresponseAllof0: ComponentsUk3N19SchemasApplecertificatenonsecretdetailsresponseAllof0,
  Components1Hfba82SchemasApplecertificatesecretdetailsresponseAllof0: Components1Hfba82SchemasApplecertificatesecretdetailsresponseAllof0,
  Components1VirfwpSchemasJiraconnectionsecretrequestAllof0: Components1VirfwpSchemasJiraconnectionsecretrequestAllof0,
  Components1TsjhacSchemasJiraconnectionsecretresponseAllof0: Components1TsjhacSchemasJiraconnectionsecretresponseAllof0,
  Components1Rn2982SchemasPrivatejiraconnectionsecretresponseAllof0: Components1Rn2982SchemasPrivatejiraconnectionsecretresponseAllof0,
  ComponentsDtnm3YSchemasGoogleplayconnectionsecretrequestAllof0: ComponentsDtnm3YSchemasGoogleplayconnectionsecretrequestAllof0,
  Components1T4OuyrSchemasGoogleplayconnectionsecretresponseAllof0: Components1T4OuyrSchemasGoogleplayconnectionsecretresponseAllof0,
  Components8R88R5SchemasPrivategoogleplayconnectionsecretresponseAllof0: Components8R88R5SchemasPrivategoogleplayconnectionsecretresponseAllof0,
  "GooglePlayConnectionNonSecretResponse.GooglePlayConnectionNonSecretResponse": GooglePlayConnectionNonSecretResponse,
  ComponentsH0D4WySchemasGoogleplaycredentialnonsecretdetailsresponseAllof0: ComponentsH0D4WySchemasGoogleplaycredentialnonsecretdetailsresponseAllof0,
  "JiraConnectionNonSecretResponse.JiraConnectionNonSecretResponse": JiraConnectionNonSecretResponse,
  ComponentsOj73MvSchemasJiracredentialnonsecretdetailsresponseAllof0: ComponentsOj73MvSchemasJiracredentialnonsecretdetailsresponseAllof0,
  "LogContainerLogsItem.LogContainerLogsItem": LogContainerLogsItem,
  "Log.Log": Log,
  Components1Eosn49SchemasLogwithpropertiesAllof0: Components1Eosn49SchemasLogwithpropertiesAllof0,
  Components264NqgSchemasStartsessionlogAllof0: Components264NqgSchemasStartsessionlogAllof0,
  ComponentsO0SzfoSchemasDistributionstartsessionlogAllof0: ComponentsO0SzfoSchemasDistributionstartsessionlogAllof0,
  Components84YphlSchemasHandlederrorlogAllof0: Components84YphlSchemasHandlederrorlogAllof0,
  Components1Vpcf5FSchemasUnhandlederrorlogAllof0: Components1Vpcf5FSchemasUnhandlederrorlogAllof0,
  Components1Rh9N66SchemasStartservicelogAllof0: Components1Rh9N66SchemasStartservicelogAllof0,
  "CustomPropertyLogPropertiesItem.CustomPropertyLogPropertiesItem": CustomPropertyLogPropertiesItem,
  ComponentsCzhkplSchemasCustompropertylogAllof0: ComponentsCzhkplSchemasCustompropertylogAllof0,
  "CustomProperty.CustomProperty": CustomProperty,
  Components1HtupicSchemasStringpropertyAllof0: Components1HtupicSchemasStringpropertyAllof0,
  Components3Is1CjSchemasNumberpropertyAllof0: Components3Is1CjSchemasNumberpropertyAllof0,
  ComponentsIduba0SchemasBooleanpropertyAllof0: ComponentsIduba0SchemasBooleanpropertyAllof0,
  ComponentsLyvfq5SchemasDatetimepropertyAllof0: ComponentsLyvfq5SchemasDatetimepropertyAllof0,
  "ClearProperty.ClearProperty": ClearProperty,
  Components1Wno2Z2SchemasPagelogAllof0: Components1Wno2Z2SchemasPagelogAllof0,
  ComponentsMa5HoxSchemasEventlogAllof0: ComponentsMa5HoxSchemasEventlogAllof0,
  ComponentsNch8AzSchemasPushinstallationlogAllof0: ComponentsNch8AzSchemasPushinstallationlogAllof0,
  Components1Aigpj3SchemasErrorlogAllof0: Components1Aigpj3SchemasErrorlogAllof0,
  "LogFlowLogContainerLogsItem.LogFlowLogContainerLogsItem": LogFlowLogContainerLogsItem,
  "LogFlowLog.LogFlowLog": LogFlowLog,
  ComponentsAdvxd9SchemasLogflowlogwithpropertiesAllof0: ComponentsAdvxd9SchemasLogflowlogwithpropertiesAllof0,
  Components1F0KdpnSchemasLogflowstartsessionlogAllof0: Components1F0KdpnSchemasLogflowstartsessionlogAllof0,
  Components11CfsbmSchemasLogflowstartservicelogAllof0: Components11CfsbmSchemasLogflowstartservicelogAllof0,
  "LogFlowCustomPropertyLogPropertiesItem.LogFlowCustomPropertyLogPropertiesItem": LogFlowCustomPropertyLogPropertiesItem,
  ComponentsXnezrhSchemasLogflowcustompropertylogAllof0: ComponentsXnezrhSchemasLogflowcustompropertylogAllof0,
  "LogFlowCustomProperty.LogFlowCustomProperty": LogFlowCustomProperty,
  Components1G242RdSchemasLogflowstringpropertyAllof0: Components1G242RdSchemasLogflowstringpropertyAllof0,
  ComponentsTkf1YnSchemasLogflownumberpropertyAllof0: ComponentsTkf1YnSchemasLogflownumberpropertyAllof0,
  ComponentsCwosetSchemasLogflowbooleanpropertyAllof0: ComponentsCwosetSchemasLogflowbooleanpropertyAllof0,
  Components127VkznSchemasLogflowdatetimepropertyAllof0: Components127VkznSchemasLogflowdatetimepropertyAllof0,
  "LogFlowClearProperty.LogFlowClearProperty": LogFlowClearProperty,
  Components10Oj24WSchemasLogflowpagelogAllof0: Components10Oj24WSchemasLogflowpagelogAllof0,
  Components1Ctri9VSchemasLogfloweventlogAllof0: Components1Ctri9VSchemasLogfloweventlogAllof0,
  Components1Yqphd0SchemasLogflowpushinstallationlogAllof0: Components1Yqphd0SchemasLogflowpushinstallationlogAllof0,
  ComponentsPcles3SchemasLogflowerrorlogAllof0: ComponentsPcles3SchemasLogflowerrorlogAllof0,
  "LogDiagnostics.LogDiagnostics": LogDiagnostics,
  Components45LjntSchemasLogwithpropertiesDiagnosticsAllof0: Components45LjntSchemasLogwithpropertiesDiagnosticsAllof0,
  ComponentsZ650E9SchemasStartsessionlogDiagnosticsAllof0: ComponentsZ650E9SchemasStartsessionlogDiagnosticsAllof0,
  ComponentsNa1EysSchemasHanlederrorlogDiagnosticsAllof0: ComponentsNa1EysSchemasHanlederrorlogDiagnosticsAllof0,
  ComponentsL1Kfc1SchemasStartservicelogDiagnosticsAllof0: ComponentsL1Kfc1SchemasStartservicelogDiagnosticsAllof0,
  "CustomPropertyLogDiagnosticsPropertiesItem.CustomPropertyLogDiagnosticsPropertiesItem": CustomPropertyLogDiagnosticsPropertiesItem,
  Components1XuemrlSchemasCustompropertylogDiagnosticsAllof0: Components1XuemrlSchemasCustompropertylogDiagnosticsAllof0,
  "CustomPropertyDiagnostics.CustomPropertyDiagnostics": CustomPropertyDiagnostics,
  Components1MplcxdSchemasStringpropertyDiagnosticsAllof0: Components1MplcxdSchemasStringpropertyDiagnosticsAllof0,
  Components15Tz3ErSchemasNumberpropertyDiagnosticsAllof0: Components15Tz3ErSchemasNumberpropertyDiagnosticsAllof0,
  Components1H9UedtSchemasBooleanpropertyDiagnosticsAllof0: Components1H9UedtSchemasBooleanpropertyDiagnosticsAllof0,
  ComponentsYx2AaeSchemasDatetimepropertyDiagnosticsAllof0: ComponentsYx2AaeSchemasDatetimepropertyDiagnosticsAllof0,
  "ClearPropertyDiagnostics.ClearPropertyDiagnostics": ClearPropertyDiagnostics,
  ComponentsEffwicSchemasPagelogDiagnosticsAllof0: ComponentsEffwicSchemasPagelogDiagnosticsAllof0,
  Components1Vmj2OdSchemasEventlogDiagnosticsAllof0: Components1Vmj2OdSchemasEventlogDiagnosticsAllof0,
  Components1Pvlx64SchemasPushinstallationlogDiagnosticsAllof0: Components1Pvlx64SchemasPushinstallationlogDiagnosticsAllof0,
  Components1Nf3DuuSchemasErrorlogDiagnosticsAllof0: Components1Nf3DuuSchemasErrorlogDiagnosticsAllof0,
  "ExportConfiguration.ExportConfiguration": ExportConfiguration,
  Components130AlsfSchemasExportblobconfigurationAllof0: Components130AlsfSchemasExportblobconfigurationAllof0,
  ComponentsQ5DjesSchemasExportconfigurationblobstorageconnectionstringAllof0: ComponentsQ5DjesSchemasExportconfigurationblobstorageconnectionstringAllof0,
  Components125ZssSchemasExportconfigurationappinsightskeyAllof0: Components125ZssSchemasExportconfigurationappinsightskeyAllof0,
  Components4JcwkhSchemasExportconfigurationblobstoragelinkedsubscriptionAllof0: Components4JcwkhSchemasExportconfigurationblobstoragelinkedsubscriptionAllof0,
  Components1Jvk04KSchemasExportconfigurationappinsightslinkedsubscriptionAllof0: Components1Jvk04KSchemasExportconfigurationappinsightslinkedsubscriptionAllof0,
  "ExportConfigurationResultExportConfiguration.ExportConfigurationResultExportConfiguration": ExportConfigurationResultExportConfiguration,
  "ExportConfigurationListResultValuesItemExportConfiguration.ExportConfigurationListResultValuesItemExportConfiguration": ExportConfigurationListResultValuesItemExportConfiguration,
  "NotificationsListResultValuesItemNotificationTarget.NotificationsListResultValuesItemNotificationTarget": NotificationsListResultValuesItemNotificationTarget,
  "NotificationOverviewResultNotificationTarget.NotificationOverviewResultNotificationTarget": NotificationOverviewResultNotificationTarget,
  "NotificationDetailsResult0NotificationTarget.NotificationDetailsResult0NotificationTarget": NotificationDetailsResult0NotificationTarget,
  "NotificationDefinitionNotificationTarget.NotificationDefinitionNotificationTarget": NotificationDefinitionNotificationTarget,
  "NotificationTarget.NotificationTarget": NotificationTarget,
  "NotificationTargetBroadcast.NotificationTargetBroadcast": NotificationTargetBroadcast,
  Components1KhyfnaSchemasNotificationtargetuseridsAllof0: Components1KhyfnaSchemasNotificationtargetuseridsAllof0,
  Components19Nr381SchemasNotificationtargetaccountidsAllof0: Components19Nr381SchemasNotificationtargetaccountidsAllof0,
  Components17Ef5OgSchemasNotificationtargetaudiencesAllof0: Components17Ef5OgSchemasNotificationtargetaudiencesAllof0,
  Components2Yio13SchemasNotificationtargetdevicesAllof0: Components2Yio13SchemasNotificationtargetdevicesAllof0,
  "NotificationConfig.NotificationConfig": NotificationConfig,
  Components1Ozxbv2SchemasNotificationconfigappleAllof0: Components1Ozxbv2SchemasNotificationconfigappleAllof0,
  Components1PpfareSchemasNotificationconfigappletokenAllof0: Components1PpfareSchemasNotificationconfigappletokenAllof0,
  ComponentsQ2Qee2SchemasNotificationconfiggoogleAllof0: ComponentsQ2Qee2SchemasNotificationconfiggoogleAllof0,
  ComponentsA3A5NfSchemasNotificationconfigwindowsAllof0: ComponentsA3A5NfSchemasNotificationconfigwindowsAllof0,
  "NotificationConfigResult.NotificationConfigResult": NotificationConfigResult,
  ComponentsF4F1P6SchemasNotificationconfigappleresultAllof0: ComponentsF4F1P6SchemasNotificationconfigappleresultAllof0,
  Components1Cl3FgbSchemasNotificationconfigappletokenresultAllof0: Components1Cl3FgbSchemasNotificationconfigappletokenresultAllof0,
  Components1L6Ua1RSchemasNotificationconfiggoogleresultAllof0: Components1L6Ua1RSchemasNotificationconfiggoogleresultAllof0,
  Components1Rkqr84SchemasNotificationconfigwindowsresultAllof0: Components1Rkqr84SchemasNotificationconfigwindowsresultAllof0,
  ComponentsU99EdzSchemasAlertingvstsbugtrackersettingsAllof0: ComponentsU99EdzSchemasAlertingvstsbugtrackersettingsAllof0,
  ComponentsG0MwtxSchemasAlertinggithubbugtrackersettingsAllof0: ComponentsG0MwtxSchemasAlertinggithubbugtrackersettingsAllof0,
  ComponentsL2Xf6RSchemasAlertingjirabugtrackersettingsAllof0: ComponentsL2Xf6RSchemasAlertingjirabugtrackersettingsAllof0,
  "AlertingBugtrackerSettings.AlertingBugtrackerSettings": AlertingBugtrackerSettings,
  "Components8Iu7RuSchemasApplecredentialsmultifactorsecretrequestAllof0.apple": Components3Sb7Y4SchemasApplecredentialsmultifactorsecretrequestAllof0,
  "Components5A5L2ESchemasApplecredentialssecretrequestAllof0.apple": Components5Dyv8CSchemasApplecredentialssecretrequestAllof0,
  "Components13S9A4RSchemasApplecertificatesecretrequestAllof0.apple": ComponentsKnowtpSchemasApplecertificatesecretrequestAllof0,
  "ComponentsS0Rbt7SchemasPrivateapplecredentialssecretresponseAllof0.apple": ComponentsEay2HoSchemasPrivateapplecredentialssecretresponseAllof0,
  "ComponentsHw7AncSchemasPrivateapplecertificatesecretresponseAllof0.apple": ComponentsZqm0VqSchemasPrivateapplecertificatesecretresponseAllof0,
  "Components1Yflo3CSchemasAppleconnectionsecretresponseAllof0.apple": AppleConnectionSecretResponse,
  "Components8D2JkjSchemasApplecredentialnonsecretdetailsresponseAllof0.apple": Components1BxvcioSchemasApplecredentialnonsecretdetailsresponseAllof0,
  "ComponentsUk3N19SchemasApplecertificatenonsecretdetailsresponseAllof0.apple": Components18Y2Ef6SchemasApplecertificatenonsecretdetailsresponseAllof0,
  "Components1Hfba82SchemasApplecertificatesecretdetailsresponseAllof0.apple": AppleCertificateSecretDetailsResponse,
  "Components1VirfwpSchemasJiraconnectionsecretrequestAllof0.jira": JiraConnectionSecretRequest,
  "Components1TsjhacSchemasJiraconnectionsecretresponseAllof0.jira": JiraConnectionSecretResponse,
  "Components1Rn2982SchemasPrivatejiraconnectionsecretresponseAllof0.jira": PrivateJiraConnectionSecretResponse,
  "ComponentsDtnm3YSchemasGoogleplayconnectionsecretrequestAllof0.googleplay": GooglePlayConnectionSecretRequest,
  "Components1T4OuyrSchemasGoogleplayconnectionsecretresponseAllof0.googleplay": GooglePlayConnectionSecretResponse,
  "Components8R88R5SchemasPrivategoogleplayconnectionsecretresponseAllof0.googleplay": PrivateGooglePlayConnectionSecretResponse,
  "ComponentsH0D4WySchemasGoogleplaycredentialnonsecretdetailsresponseAllof0.googleplay": Components1Qvpk8VSchemasGoogleplaycredentialnonsecretdetailsresponseAllof0,
  "ComponentsOj73MvSchemasJiracredentialnonsecretdetailsresponseAllof0.googleplay": ComponentsBrcgsgSchemasJiracredentialnonsecretdetailsresponseAllof0,
  "Components1Eosn49SchemasLogwithpropertiesAllof0.LogWithProperties": LogWithProperties,
  "Components264NqgSchemasStartsessionlogAllof0.start_session": StartSessionLog,
  "ComponentsO0SzfoSchemasDistributionstartsessionlogAllof0.distribution_start_session": DistributionStartSessionLog,
  "Components84YphlSchemasHandlederrorlogAllof0.handled_error": HandledErrorLog,
  "Components1Vpcf5FSchemasUnhandlederrorlogAllof0.unhandled_error": UnhandledErrorLog,
  "Components1Rh9N66SchemasStartservicelogAllof0.start_service": StartServiceLog,
  "ComponentsCzhkplSchemasCustompropertylogAllof0.custom_properties": CustomPropertyLog,
  "Components1HtupicSchemasStringpropertyAllof0.string": StringProperty,
  "Components3Is1CjSchemasNumberpropertyAllof0.number": NumberProperty,
  "ComponentsIduba0SchemasBooleanpropertyAllof0.boolean": BooleanProperty,
  "ComponentsLyvfq5SchemasDatetimepropertyAllof0.date_time": DateTimeProperty,
  "Components1Wno2Z2SchemasPagelogAllof0.components·4kro3m·schemas·pagelog·allof·0": Components4Kro3MSchemasPagelogAllof0,
  "ComponentsMa5HoxSchemasEventlogAllof0.components·498zbb·schemas·eventlog·allof·0": Components498ZbbSchemasEventlogAllof0,
  "ComponentsNch8AzSchemasPushinstallationlogAllof0.push_installation": PushInstallationLog,
  "Components1Aigpj3SchemasErrorlogAllof0.error": ErrorLog,
  "ComponentsAdvxd9SchemasLogflowlogwithpropertiesAllof0.LogFlowLogWithProperties": LogFlowLogWithProperties,
  "Components1F0KdpnSchemasLogflowstartsessionlogAllof0.start_session": LogFlowStartSessionLog,
  "Components11CfsbmSchemasLogflowstartservicelogAllof0.start_service": LogFlowStartServiceLog,
  "ComponentsXnezrhSchemasLogflowcustompropertylogAllof0.custom_properties": LogFlowCustomPropertyLog,
  "Components1G242RdSchemasLogflowstringpropertyAllof0.string": LogFlowStringProperty,
  "ComponentsTkf1YnSchemasLogflownumberpropertyAllof0.number": LogFlowNumberProperty,
  "ComponentsCwosetSchemasLogflowbooleanpropertyAllof0.boolean": LogFlowBooleanProperty,
  "Components127VkznSchemasLogflowdatetimepropertyAllof0.date_time": LogFlowDateTimeProperty,
  "Components10Oj24WSchemasLogflowpagelogAllof0.components·11mk7tb·schemas·logflowpagelog·allof·0": Components11Mk7TbSchemasLogflowpagelogAllof0,
  "Components1Ctri9VSchemasLogfloweventlogAllof0.components·bzcad5·schemas·logfloweventlog·allof·0": ComponentsBzcad5SchemasLogfloweventlogAllof0,
  "Components1Yqphd0SchemasLogflowpushinstallationlogAllof0.push_installation": LogFlowPushInstallationLog,
  "ComponentsPcles3SchemasLogflowerrorlogAllof0.error": LogFlowErrorLog,
  "Components45LjntSchemasLogwithpropertiesDiagnosticsAllof0.LogWithProperties_Diagnostics": LogWithPropertiesDiagnostics,
  "ComponentsZ650E9SchemasStartsessionlogDiagnosticsAllof0.start_session": StartSessionLogDiagnostics,
  "ComponentsNa1EysSchemasHanlederrorlogDiagnosticsAllof0.handled_error": HanledErrorLogDiagnostics,
  "ComponentsL1Kfc1SchemasStartservicelogDiagnosticsAllof0.start_service": StartServiceLogDiagnostics,
  "Components1XuemrlSchemasCustompropertylogDiagnosticsAllof0.custom_properties": CustomPropertyLogDiagnostics,
  "Components1MplcxdSchemasStringpropertyDiagnosticsAllof0.string": StringPropertyDiagnostics,
  "Components15Tz3ErSchemasNumberpropertyDiagnosticsAllof0.number": NumberPropertyDiagnostics,
  "Components1H9UedtSchemasBooleanpropertyDiagnosticsAllof0.boolean": BooleanPropertyDiagnostics,
  "ComponentsYx2AaeSchemasDatetimepropertyDiagnosticsAllof0.date_time": DateTimePropertyDiagnostics,
  "ComponentsEffwicSchemasPagelogDiagnosticsAllof0.components·1121esf·schemas·pagelog_diagnostics·allof·0": Components1121EsfSchemasPagelogDiagnosticsAllof0,
  "Components1Vmj2OdSchemasEventlogDiagnosticsAllof0.components·wa2cwf·schemas·eventlog_diagnostics·allof·0": ComponentsWa2CwfSchemasEventlogDiagnosticsAllof0,
  "Components1Pvlx64SchemasPushinstallationlogDiagnosticsAllof0.push_installation": PushInstallationLogDiagnostics,
  "Components1Nf3DuuSchemasErrorlogDiagnosticsAllof0.error": ErrorLogDiagnostics,
  "Components130AlsfSchemasExportblobconfigurationAllof0.export_blob_configuration": ExportBlobConfiguration,
  "ComponentsQ5DjesSchemasExportconfigurationblobstorageconnectionstringAllof0.export_blob_configuration": Components16J40DuSchemasExportconfigurationblobstorageconnectionstringAllof0,
  "Components125ZssSchemasExportconfigurationappinsightskeyAllof0.application_insights_instrumentation_key": ExportConfigurationAppInsightsKey,
  "Components4JcwkhSchemasExportconfigurationblobstoragelinkedsubscriptionAllof0.export_blob_configuration": Components14Lttg8SchemasExportconfigurationblobstoragelinkedsubscriptionAllof0,
  "Components1Jvk04KSchemasExportconfigurationappinsightslinkedsubscriptionAllof0.application_insights_linked_subscription": ExportConfigurationAppInsightsLinkedSubscription,
  "Components1KhyfnaSchemasNotificationtargetuseridsAllof0.user_ids_target": NotificationTargetUserIds,
  "Components19Nr381SchemasNotificationtargetaccountidsAllof0.account_ids_target": NotificationTargetAccountIds,
  "Components17Ef5OgSchemasNotificationtargetaudiencesAllof0.audiences_target": NotificationTargetAudiences,
  "Components2Yio13SchemasNotificationtargetdevicesAllof0.devices_target": NotificationTargetDevices,
  "Components1Ozxbv2SchemasNotificationconfigappleAllof0.apns_config": NotificationConfigApple,
  "Components1PpfareSchemasNotificationconfigappletokenAllof0.apns_token_config": NotificationConfigAppleToken,
  "ComponentsQ2Qee2SchemasNotificationconfiggoogleAllof0.gcm_config": NotificationConfigGoogle,
  "ComponentsA3A5NfSchemasNotificationconfigwindowsAllof0.wns_config": NotificationConfigWindows,
  "ComponentsF4F1P6SchemasNotificationconfigappleresultAllof0.apns_config": NotificationConfigAppleResult,
  "Components1Cl3FgbSchemasNotificationconfigappletokenresultAllof0.apns_token_config": NotificationConfigAppleTokenResult,
  "Components1L6Ua1RSchemasNotificationconfiggoogleresultAllof0.gcm_config": NotificationConfigGoogleResult,
  "Components1Rkqr84SchemasNotificationconfigwindowsresultAllof0.wns_config": NotificationConfigWindowsResult,
  "ComponentsU99EdzSchemasAlertingvstsbugtrackersettingsAllof0.vsts": AlertingVstsBugtrackerSettings,
  "ComponentsG0MwtxSchemasAlertinggithubbugtrackersettingsAllof0.github": AlertingGithubBugtrackerSettings,
  "ComponentsL2Xf6RSchemasAlertingjirabugtrackersettingsAllof0.jira": AlertingJiraBugtrackerSettings,
  "Components3Sb7Y4SchemasApplecredentialsmultifactorsecretrequestAllof0.credentials": AppleCredentialsMultifactorSecretRequest,
  "Components5Dyv8CSchemasApplecredentialssecretrequestAllof0.credentials": AppleCredentialsSecretRequest,
  "ComponentsKnowtpSchemasApplecertificatesecretrequestAllof0.certificate": AppleCertificateSecretRequest,
  "ComponentsEay2HoSchemasPrivateapplecredentialssecretresponseAllof0.certificate": PrivateAppleCredentialsSecretResponse,
  "ComponentsZqm0VqSchemasPrivateapplecertificatesecretresponseAllof0.certificate": PrivateAppleCertificateSecretResponse,
  "Components1BxvcioSchemasApplecredentialnonsecretdetailsresponseAllof0.credentials": AppleCredentialNonSecretDetailsResponse,
  "Components18Y2Ef6SchemasApplecertificatenonsecretdetailsresponseAllof0.certificate": AppleCertificateNonSecretDetailsResponse,
  "Components1Qvpk8VSchemasGoogleplaycredentialnonsecretdetailsresponseAllof0.credentials": GooglePlayCredentialNonSecretDetailsResponse,
  "ComponentsBrcgsgSchemasJiracredentialnonsecretdetailsresponseAllof0.credentials": JiraCredentialNonSecretDetailsResponse,
  "Components4Kro3MSchemasPagelogAllof0.page": PageLog,
  "Components498ZbbSchemasEventlogAllof0.event": EventLog,
  "Components11Mk7TbSchemasLogflowpagelogAllof0.page": LogFlowPageLog,
  "ComponentsBzcad5SchemasLogfloweventlogAllof0.event": LogFlowEventLog,
  "Components1121EsfSchemasPagelogDiagnosticsAllof0.page": PageLogDiagnostics,
  "ComponentsWa2CwfSchemasEventlogDiagnosticsAllof0.event": EventLogDiagnostics,
  "Components16J40DuSchemasExportconfigurationblobstorageconnectionstringAllof0.blob_storage_connection_string": ExportConfigurationBlobStorageConnectionString,
  "Components14Lttg8SchemasExportconfigurationblobstoragelinkedsubscriptionAllof0.blob_storage_linked_subscription": ExportConfigurationBlobStorageLinkedSubscription
};
