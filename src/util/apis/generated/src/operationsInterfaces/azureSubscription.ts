/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  AzureSubscriptionListForOrgOptionalParams,
  AzureSubscriptionListForOrgResponse,
  AzureSubscriptionListForUserOptionalParams,
  AzureSubscriptionListForUserResponse,
  AzureSubscriptionDeleteForAppOptionalParams,
  AzureSubscriptionListForAppOptionalParams,
  AzureSubscriptionListForAppResponse,
  AzureSubscriptionLinkForAppOptionalParams
} from "../models";

/** Interface representing a AzureSubscription. */
export interface AzureSubscription {
  /**
   * Returns a list of azure subscriptions for the organization
   * @param orgName The organization's name
   * @param options The options parameters.
   */
  listForOrg(
    orgName: string,
    options?: AzureSubscriptionListForOrgOptionalParams
  ): Promise<AzureSubscriptionListForOrgResponse>;
  /**
   * Returns a list of azure subscriptions for the user
   * @param options The options parameters.
   */
  listForUser(
    options?: AzureSubscriptionListForUserOptionalParams
  ): Promise<AzureSubscriptionListForUserResponse>;
  /**
   * Delete the azure subscriptions for the app
   * @param azureSubscriptionId The unique ID (UUID) of the azure subscription
   * @param ownerName The name of the owner
   * @param appName The name of the application
   * @param options The options parameters.
   */
  deleteForApp(
    azureSubscriptionId: string,
    ownerName: string,
    appName: string,
    options?: AzureSubscriptionDeleteForAppOptionalParams
  ): Promise<void>;
  /**
   * Returns a list of azure subscriptions for the app
   * @param ownerName The name of the owner
   * @param appName The name of the application
   * @param options The options parameters.
   */
  listForApp(
    ownerName: string,
    appName: string,
    options?: AzureSubscriptionListForAppOptionalParams
  ): Promise<AzureSubscriptionListForAppResponse>;
  /**
   * Link azure subscription to an app
   * @param ownerName The name of the owner
   * @param appName The name of the application
   * @param subscriptionId The azure subscription id
   * @param options The options parameters.
   */
  linkForApp(
    ownerName: string,
    appName: string,
    subscriptionId: string,
    options?: AzureSubscriptionLinkForAppOptionalParams
  ): Promise<void>;
}
