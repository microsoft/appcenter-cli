/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { Repositories } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { AppCenterClient } from "../appCenterClient";
import {
  Enum233,
  RepositoriesListOptionalParams,
  RepositoriesListResponse
} from "../models";

/** Class containing Repositories operations. */
export class RepositoriesImpl implements Repositories {
  private readonly client: AppCenterClient;

  /**
   * Initialize a new instance of the class Repositories class.
   * @param client Reference to the service client
   */
  constructor(client: AppCenterClient) {
    this.client = client;
  }

  /**
   * Gets the repositories available from the source code host
   * @param sourceHost The source host
   * @param ownerName The name of the owner
   * @param appName The name of the application
   * @param options The options parameters.
   */
  list(
    sourceHost: Enum233,
    ownerName: string,
    appName: string,
    options?: RepositoriesListOptionalParams
  ): Promise<RepositoriesListResponse> {
    return this.client.sendOperationRequest(
      { sourceHost, ownerName, appName, options },
      listOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const listOperationSpec: coreClient.OperationSpec = {
  path:
    "/v0.1/apps/{owner_name}/{app_name}/source_hosts/{source_host}/repositories",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: {
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "PathsFt7OwuV01AppsOwnerNameAppNameSourceHostsSourceHostRepositoriesGetResponses200ContentApplicationJsonSchemaItems"
            }
          }
        }
      }
    },
    default: {
      bodyMapper:
        Mappers.Paths19B6FnrV01AppsOwnerNameAppNameSourceHostsSourceHostRepositoriesGetResponsesDefaultContentApplicationJsonSchema
    }
  },
  queryParameters: [
    Parameters.vstsAccountName,
    Parameters.vstsProjectId,
    Parameters.serviceConnectionId,
    Parameters.form
  ],
  urlParameters: [
    Parameters.$host,
    Parameters.ownerName,
    Parameters.appName,
    Parameters.sourceHost
  ],
  headerParameters: [Parameters.accept],
  serializer
};
